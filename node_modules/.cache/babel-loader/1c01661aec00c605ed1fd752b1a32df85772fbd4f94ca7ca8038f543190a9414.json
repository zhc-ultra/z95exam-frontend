{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.int32-array.js\";\nimport \"core-js/modules/es.typed-array.uint32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nexport var PrefixSumComputer = /*#__PURE__*/function () {\n  function PrefixSumComputer(values) {\n    _classCallCheck(this, PrefixSumComputer);\n    this.values = values;\n    this.prefixSum = new Uint32Array(values.length);\n    this.prefixSumValidIndex = new Int32Array(1);\n    this.prefixSumValidIndex[0] = -1;\n  }\n  return _createClass(PrefixSumComputer, [{\n    key: \"insertValues\",\n    value: function insertValues(insertIndex, _insertValues) {\n      insertIndex = toUint32(insertIndex);\n      var oldValues = this.values;\n      var oldPrefixSum = this.prefixSum;\n      var insertValuesLen = _insertValues.length;\n      if (insertValuesLen === 0) {\n        return false;\n      }\n      this.values = new Uint32Array(oldValues.length + insertValuesLen);\n      this.values.set(oldValues.subarray(0, insertIndex), 0);\n      this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n      this.values.set(_insertValues, insertIndex);\n      if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n        this.prefixSumValidIndex[0] = insertIndex - 1;\n      }\n      this.prefixSum = new Uint32Array(this.values.length);\n      if (this.prefixSumValidIndex[0] >= 0) {\n        this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n      }\n      return true;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      index = toUint32(index);\n      value = toUint32(value);\n      if (this.values[index] === value) {\n        return false;\n      }\n      this.values[index] = value;\n      if (index - 1 < this.prefixSumValidIndex[0]) {\n        this.prefixSumValidIndex[0] = index - 1;\n      }\n      return true;\n    }\n  }, {\n    key: \"removeValues\",\n    value: function removeValues(startIndex, count) {\n      startIndex = toUint32(startIndex);\n      count = toUint32(count);\n      var oldValues = this.values;\n      var oldPrefixSum = this.prefixSum;\n      if (startIndex >= oldValues.length) {\n        return false;\n      }\n      var maxCount = oldValues.length - startIndex;\n      if (count >= maxCount) {\n        count = maxCount;\n      }\n      if (count === 0) {\n        return false;\n      }\n      this.values = new Uint32Array(oldValues.length - count);\n      this.values.set(oldValues.subarray(0, startIndex), 0);\n      this.values.set(oldValues.subarray(startIndex + count), startIndex);\n      this.prefixSum = new Uint32Array(this.values.length);\n      if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n        this.prefixSumValidIndex[0] = startIndex - 1;\n      }\n      if (this.prefixSumValidIndex[0] >= 0) {\n        this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n      }\n      return true;\n    }\n  }, {\n    key: \"getTotalSum\",\n    value: function getTotalSum() {\n      if (this.values.length === 0) {\n        return 0;\n      }\n      return this._getPrefixSum(this.values.length - 1);\n    }\n    /**\n     * Returns the sum of the first `index + 1` many items.\n     * @returns `SUM(0 <= j <= index, values[j])`.\n     */\n  }, {\n    key: \"getPrefixSum\",\n    value: function getPrefixSum(index) {\n      if (index < 0) {\n        return 0;\n      }\n      index = toUint32(index);\n      return this._getPrefixSum(index);\n    }\n  }, {\n    key: \"_getPrefixSum\",\n    value: function _getPrefixSum(index) {\n      if (index <= this.prefixSumValidIndex[0]) {\n        return this.prefixSum[index];\n      }\n      var startIndex = this.prefixSumValidIndex[0] + 1;\n      if (startIndex === 0) {\n        this.prefixSum[0] = this.values[0];\n        startIndex++;\n      }\n      if (index >= this.values.length) {\n        index = this.values.length - 1;\n      }\n      for (var i = startIndex; i <= index; i++) {\n        this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n      }\n      this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n      return this.prefixSum[index];\n    }\n  }, {\n    key: \"getIndexOf\",\n    value: function getIndexOf(sum) {\n      sum = Math.floor(sum);\n      // Compute all sums (to get a fully valid prefixSum)\n      this.getTotalSum();\n      var low = 0;\n      var high = this.values.length - 1;\n      var mid = 0;\n      var midStop = 0;\n      var midStart = 0;\n      while (low <= high) {\n        mid = low + (high - low) / 2 | 0;\n        midStop = this.prefixSum[mid];\n        midStart = midStop - this.values[mid];\n        if (sum < midStart) {\n          high = mid - 1;\n        } else if (sum >= midStop) {\n          low = mid + 1;\n        } else {\n          break;\n        }\n      }\n      return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n  }]);\n}();\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport var ConstantTimePrefixSumComputer = /*#__PURE__*/function () {\n  function ConstantTimePrefixSumComputer(values) {\n    _classCallCheck(this, ConstantTimePrefixSumComputer);\n    this._values = values;\n    this._isValid = false;\n    this._validEndIndex = -1;\n    this._prefixSum = [];\n    this._indexBySum = [];\n  }\n  /**\n   * @returns SUM(0 <= j < values.length, values[j])\n   */\n  return _createClass(ConstantTimePrefixSumComputer, [{\n    key: \"getTotalSum\",\n    value: function getTotalSum() {\n      this._ensureValid();\n      return this._indexBySum.length;\n    }\n    /**\n     * Returns the sum of the first `count` many items.\n     * @returns `SUM(0 <= j < count, values[j])`.\n     */\n  }, {\n    key: \"getPrefixSum\",\n    value: function getPrefixSum(count) {\n      this._ensureValid();\n      if (count === 0) {\n        return 0;\n      }\n      return this._prefixSum[count - 1];\n    }\n    /**\n     * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n     */\n  }, {\n    key: \"getIndexOf\",\n    value: function getIndexOf(sum) {\n      this._ensureValid();\n      var idx = this._indexBySum[sum];\n      var viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n      return new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n    }\n  }, {\n    key: \"removeValues\",\n    value: function removeValues(start, deleteCount) {\n      this._values.splice(start, deleteCount);\n      this._invalidate(start);\n    }\n  }, {\n    key: \"insertValues\",\n    value: function insertValues(insertIndex, insertArr) {\n      this._values = arrayInsert(this._values, insertIndex, insertArr);\n      this._invalidate(insertIndex);\n    }\n  }, {\n    key: \"_invalidate\",\n    value: function _invalidate(index) {\n      this._isValid = false;\n      this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n  }, {\n    key: \"_ensureValid\",\n    value: function _ensureValid() {\n      if (this._isValid) {\n        return;\n      }\n      for (var i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n        var value = this._values[i];\n        var sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n        this._prefixSum[i] = sumAbove + value;\n        for (var j = 0; j < value; j++) {\n          this._indexBySum[sumAbove + j] = i;\n        }\n      }\n      // trim things\n      this._prefixSum.length = this._values.length;\n      this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n      // mark as valid\n      this._isValid = true;\n      this._validEndIndex = this._values.length - 1;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      if (this._values[index] === value) {\n        // no change\n        return;\n      }\n      this._values[index] = value;\n      this._invalidate(index);\n    }\n  }]);\n}();\nexport var PrefixSumIndexOfResult = /*#__PURE__*/_createClass(function PrefixSumIndexOfResult(index, remainder) {\n  _classCallCheck(this, PrefixSumIndexOfResult);\n  this.index = index;\n  this.remainder = remainder;\n  this._prefixSumIndexOfResultBrand = undefined;\n  this.index = index;\n  this.remainder = remainder;\n});","map":{"version":3,"names":["arrayInsert","toUint32","PrefixSumComputer","values","_classCallCheck","prefixSum","Uint32Array","length","prefixSumValidIndex","Int32Array","_createClass","key","value","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","set","subarray","setValue","index","removeValues","startIndex","count","maxCount","getTotalSum","_getPrefixSum","getPrefixSum","i","Math","max","getIndexOf","sum","floor","low","high","mid","midStop","midStart","PrefixSumIndexOfResult","ConstantTimePrefixSumComputer","_values","_isValid","_validEndIndex","_prefixSum","_indexBySum","_ensureValid","idx","viewLinesAbove","start","deleteCount","splice","_invalidate","insertArr","min","len","sumAbove","j","remainder","_prefixSumIndexOfResultBrand","undefined"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/model/prefixSumComputer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    /**\n     * Returns the sum of the first `index + 1` many items.\n     * @returns `SUM(0 <= j <= index, values[j])`.\n     */\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    /**\n     * @returns SUM(0 <= j < values.length, values[j])\n     */\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    /**\n     * Returns the sum of the first `count` many items.\n     * @returns `SUM(0 <= j < count, values[j])`.\n     */\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    /**\n     * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n     */\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        // trim things\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        // mark as valid\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            // no change\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}