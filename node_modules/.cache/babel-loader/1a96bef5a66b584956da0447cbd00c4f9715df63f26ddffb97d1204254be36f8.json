{"ast":null,"code":"import _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asArray, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource, TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { FormattingEdit } from './formattingEdit.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ExtensionIdentifierSet } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nexport function getRealAndSyntheticDocumentFormattersOrdered(documentFormattingEditProvider, documentRangeFormattingEditProvider, model) {\n  var result = [];\n  var seen = new ExtensionIdentifierSet();\n  // (1) add all document formatter\n  var docFormatter = documentFormattingEditProvider.ordered(model);\n  var _iterator = _createForOfIteratorHelper(docFormatter),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var formatter = _step.value;\n      result.push(formatter);\n      if (formatter.extensionId) {\n        seen.add(formatter.extensionId);\n      }\n    }\n    // (2) add all range formatter as document formatter (unless the same extension already did that)\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var rangeFormatter = documentRangeFormattingEditProvider.ordered(model);\n  var _iterator2 = _createForOfIteratorHelper(rangeFormatter),\n    _step2;\n  try {\n    var _loop = function _loop() {\n      var formatter = _step2.value;\n      if (formatter.extensionId) {\n        if (seen.has(formatter.extensionId)) {\n          return 1; // continue\n        }\n        seen.add(formatter.extensionId);\n      }\n      result.push({\n        displayName: formatter.displayName,\n        extensionId: formatter.extensionId,\n        provideDocumentFormattingEdits: function provideDocumentFormattingEdits(model, options, token) {\n          return formatter.provideDocumentRangeFormattingEdits(model, model.getFullModelRange(), options, token);\n        }\n      });\n    };\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      if (_loop()) continue;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return result;\n}\nexport var FormattingConflicts = /*#__PURE__*/function () {\n  function FormattingConflicts() {\n    _classCallCheck(this, FormattingConflicts);\n  }\n  return _createClass(FormattingConflicts, null, [{\n    key: \"setFormatterSelector\",\n    value: function setFormatterSelector(selector) {\n      var remove = FormattingConflicts._selectors.unshift(selector);\n      return {\n        dispose: remove\n      };\n    }\n  }, {\n    key: \"select\",\n    value: function () {\n      var _select = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(formatter, document, mode, kind) {\n        var selector;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(formatter.length === 0)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", undefined);\n            case 2:\n              selector = Iterable.first(FormattingConflicts._selectors);\n              if (!selector) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 6;\n              return selector(formatter, document, mode, kind);\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n            case 7:\n              return _context.abrupt(\"return\", undefined);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function select(_x, _x2, _x3, _x4) {\n        return _select.apply(this, arguments);\n      }\n      return select;\n    }()\n  }]);\n}();\nFormattingConflicts._selectors = new LinkedList();\nexport function formatDocumentRangesWithSelectedProvider(_x5, _x6, _x7, _x8, _x9, _x10, _x11) {\n  return _formatDocumentRangesWithSelectedProvider.apply(this, arguments);\n}\nfunction _formatDocumentRangesWithSelectedProvider() {\n  _formatDocumentRangesWithSelectedProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(accessor, editorOrModel, rangeOrRanges, mode, progress, token, userGesture) {\n    var instaService, _accessor$get, documentRangeFormattingEditProviderRegistry, model, provider, selected;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          instaService = accessor.get(IInstantiationService);\n          _accessor$get = accessor.get(ILanguageFeaturesService), documentRangeFormattingEditProviderRegistry = _accessor$get.documentRangeFormattingEditProvider;\n          model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n          provider = documentRangeFormattingEditProviderRegistry.ordered(model);\n          _context5.next = 6;\n          return FormattingConflicts.select(provider, model, mode, 2 /* FormattingKind.Selection */);\n        case 6:\n          selected = _context5.sent;\n          if (!selected) {\n            _context5.next = 11;\n            break;\n          }\n          progress.report(selected);\n          _context5.next = 11;\n          return instaService.invokeFunction(formatDocumentRangesWithProvider, selected, editorOrModel, rangeOrRanges, token, userGesture);\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _formatDocumentRangesWithSelectedProvider.apply(this, arguments);\n}\nexport function formatDocumentRangesWithProvider(_x12, _x13, _x14, _x15, _x16, _x17) {\n  return _formatDocumentRangesWithProvider.apply(this, arguments);\n}\nfunction _formatDocumentRangesWithProvider() {\n  _formatDocumentRangesWithProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(accessor, provider, editorOrModel, rangeOrRanges, token, userGesture) {\n    var _a, _b, workerService, logService, accessibilitySignalService, model, cts, ranges, len, _iterator3, _step3, _range3, computeEdits, hasIntersectingEdit, allEdits, rawEditsList, result, _iterator6, _step6, range, i, j, mergedRange, edits, _i, _rawEditsList, rawEdits, minimalEdits, _range, initialSelection;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          workerService = accessor.get(IEditorWorkerService);\n          logService = accessor.get(ILogService);\n          accessibilitySignalService = accessor.get(IAccessibilitySignalService);\n          if (isCodeEditor(editorOrModel)) {\n            model = editorOrModel.getModel();\n            cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */, undefined, token);\n          } else {\n            model = editorOrModel;\n            cts = new TextModelCancellationTokenSource(editorOrModel, token);\n          }\n          // make sure that ranges don't overlap nor touch each other\n          ranges = [];\n          len = 0;\n          _iterator3 = _createForOfIteratorHelper(asArray(rangeOrRanges).sort(Range.compareRangesUsingStarts));\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              _range3 = _step3.value;\n              if (len > 0 && Range.areIntersectingOrTouching(ranges[len - 1], _range3)) {\n                ranges[len - 1] = Range.fromPositions(ranges[len - 1].getStartPosition(), _range3.getEndPosition());\n              } else {\n                len = ranges.push(_range3);\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n          computeEdits = /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(range) {\n              var _a, _b, result;\n              return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    logService.trace(\"[format][provideDocumentRangeFormattingEdits] (request)\", (_a = provider.extensionId) === null || _a === void 0 ? void 0 : _a.value, range);\n                    _context6.next = 3;\n                    return provider.provideDocumentRangeFormattingEdits(model, range, model.getFormattingOptions(), cts.token);\n                  case 3:\n                    _context6.t0 = _context6.sent;\n                    if (_context6.t0) {\n                      _context6.next = 6;\n                      break;\n                    }\n                    _context6.t0 = [];\n                  case 6:\n                    result = _context6.t0;\n                    logService.trace(\"[format][provideDocumentRangeFormattingEdits] (response)\", (_b = provider.extensionId) === null || _b === void 0 ? void 0 : _b.value, result);\n                    return _context6.abrupt(\"return\", result);\n                  case 9:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6);\n            }));\n            return function computeEdits(_x44) {\n              return _ref4.apply(this, arguments);\n            };\n          }();\n          hasIntersectingEdit = function hasIntersectingEdit(a, b) {\n            if (!a.length || !b.length) {\n              return false;\n            }\n            // quick exit if the list of ranges are completely unrelated [O(n)]\n            var mergedA = a.reduce(function (acc, val) {\n              return Range.plusRange(acc, val.range);\n            }, a[0].range);\n            if (!b.some(function (x) {\n              return Range.intersectRanges(mergedA, x.range);\n            })) {\n              return false;\n            }\n            // fallback to a complete check [O(n^2)]\n            var _iterator4 = _createForOfIteratorHelper(a),\n              _step4;\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var edit = _step4.value;\n                var _iterator5 = _createForOfIteratorHelper(b),\n                  _step5;\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var otherEdit = _step5.value;\n                    if (Range.intersectRanges(edit.range, otherEdit.range)) {\n                      return true;\n                    }\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n            return false;\n          };\n          allEdits = [];\n          rawEditsList = [];\n          _context7.prev = 12;\n          if (!(typeof provider.provideDocumentRangesFormattingEdits === 'function')) {\n            _context7.next = 25;\n            break;\n          }\n          logService.trace(\"[format][provideDocumentRangeFormattingEdits] (request)\", (_a = provider.extensionId) === null || _a === void 0 ? void 0 : _a.value, ranges);\n          _context7.next = 17;\n          return provider.provideDocumentRangesFormattingEdits(model, ranges, model.getFormattingOptions(), cts.token);\n        case 17:\n          _context7.t0 = _context7.sent;\n          if (_context7.t0) {\n            _context7.next = 20;\n            break;\n          }\n          _context7.t0 = [];\n        case 20:\n          result = _context7.t0;\n          logService.trace(\"[format][provideDocumentRangeFormattingEdits] (response)\", (_b = provider.extensionId) === null || _b === void 0 ? void 0 : _b.value, result);\n          rawEditsList.push(result);\n          _context7.next = 72;\n          break;\n        case 25:\n          _iterator6 = _createForOfIteratorHelper(ranges);\n          _context7.prev = 26;\n          _iterator6.s();\n        case 28:\n          if ((_step6 = _iterator6.n()).done) {\n            _context7.next = 39;\n            break;\n          }\n          range = _step6.value;\n          if (!cts.token.isCancellationRequested) {\n            _context7.next = 32;\n            break;\n          }\n          return _context7.abrupt(\"return\", true);\n        case 32:\n          _context7.t1 = rawEditsList;\n          _context7.next = 35;\n          return computeEdits(range);\n        case 35:\n          _context7.t2 = _context7.sent;\n          _context7.t1.push.call(_context7.t1, _context7.t2);\n        case 37:\n          _context7.next = 28;\n          break;\n        case 39:\n          _context7.next = 44;\n          break;\n        case 41:\n          _context7.prev = 41;\n          _context7.t3 = _context7[\"catch\"](26);\n          _iterator6.e(_context7.t3);\n        case 44:\n          _context7.prev = 44;\n          _iterator6.f();\n          return _context7.finish(44);\n        case 47:\n          i = 0;\n        case 48:\n          if (!(i < ranges.length)) {\n            _context7.next = 72;\n            break;\n          }\n          j = i + 1;\n        case 50:\n          if (!(j < ranges.length)) {\n            _context7.next = 69;\n            break;\n          }\n          if (!cts.token.isCancellationRequested) {\n            _context7.next = 53;\n            break;\n          }\n          return _context7.abrupt(\"return\", true);\n        case 53:\n          if (!hasIntersectingEdit(rawEditsList[i], rawEditsList[j])) {\n            _context7.next = 66;\n            break;\n          }\n          // Merge ranges i and j into a single range, recompute the associated edits\n          mergedRange = Range.plusRange(ranges[i], ranges[j]);\n          _context7.next = 57;\n          return computeEdits(mergedRange);\n        case 57:\n          edits = _context7.sent;\n          ranges.splice(j, 1);\n          ranges.splice(i, 1);\n          ranges.push(mergedRange);\n          rawEditsList.splice(j, 1);\n          rawEditsList.splice(i, 1);\n          rawEditsList.push(edits);\n          // Restart scanning\n          i = 0;\n          j = 0;\n        case 66:\n          ++j;\n          _context7.next = 50;\n          break;\n        case 69:\n          ++i;\n          _context7.next = 48;\n          break;\n        case 72:\n          _i = 0, _rawEditsList = rawEditsList;\n        case 73:\n          if (!(_i < _rawEditsList.length)) {\n            _context7.next = 84;\n            break;\n          }\n          rawEdits = _rawEditsList[_i];\n          if (!cts.token.isCancellationRequested) {\n            _context7.next = 77;\n            break;\n          }\n          return _context7.abrupt(\"return\", true);\n        case 77:\n          _context7.next = 79;\n          return workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n        case 79:\n          minimalEdits = _context7.sent;\n          if (minimalEdits) {\n            allEdits.push.apply(allEdits, _toConsumableArray(minimalEdits));\n          }\n        case 81:\n          _i++;\n          _context7.next = 73;\n          break;\n        case 84:\n          _context7.prev = 84;\n          cts.dispose();\n          return _context7.finish(84);\n        case 87:\n          if (!(allEdits.length === 0)) {\n            _context7.next = 89;\n            break;\n          }\n          return _context7.abrupt(\"return\", false);\n        case 89:\n          if (isCodeEditor(editorOrModel)) {\n            // use editor to apply edits\n            FormattingEdit.execute(editorOrModel, allEdits, true);\n            editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* ScrollType.Immediate */);\n          } else {\n            // use model to apply edits\n            _range = allEdits[0].range;\n            initialSelection = new Selection(_range.startLineNumber, _range.startColumn, _range.endLineNumber, _range.endColumn);\n            model.pushEditOperations([initialSelection], allEdits.map(function (edit) {\n              return {\n                text: edit.text,\n                range: Range.lift(edit.range),\n                forceMoveMarkers: true\n              };\n            }), function (undoEdits) {\n              var _iterator7 = _createForOfIteratorHelper(undoEdits),\n                _step7;\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  var _range2 = _step7.value.range;\n                  if (Range.areIntersectingOrTouching(_range2, initialSelection)) {\n                    return [new Selection(_range2.startLineNumber, _range2.startColumn, _range2.endLineNumber, _range2.endColumn)];\n                  }\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n              return null;\n            });\n          }\n          accessibilitySignalService.playSignal(AccessibilitySignal.format, {\n            userGesture: userGesture\n          });\n          return _context7.abrupt(\"return\", true);\n        case 92:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[12,, 84, 87], [26, 41, 44, 47]]);\n  }));\n  return _formatDocumentRangesWithProvider.apply(this, arguments);\n}\nexport function formatDocumentWithSelectedProvider(_x18, _x19, _x20, _x21, _x22, _x23) {\n  return _formatDocumentWithSelectedProvider.apply(this, arguments);\n}\nfunction _formatDocumentWithSelectedProvider() {\n  _formatDocumentWithSelectedProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(accessor, editorOrModel, mode, progress, token, userGesture) {\n    var instaService, languageFeaturesService, model, provider, selected;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          instaService = accessor.get(IInstantiationService);\n          languageFeaturesService = accessor.get(ILanguageFeaturesService);\n          model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n          provider = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n          _context8.next = 6;\n          return FormattingConflicts.select(provider, model, mode, 1 /* FormattingKind.File */);\n        case 6:\n          selected = _context8.sent;\n          if (!selected) {\n            _context8.next = 11;\n            break;\n          }\n          progress.report(selected);\n          _context8.next = 11;\n          return instaService.invokeFunction(formatDocumentWithProvider, selected, editorOrModel, mode, token, userGesture);\n        case 11:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _formatDocumentWithSelectedProvider.apply(this, arguments);\n}\nexport function formatDocumentWithProvider(_x24, _x25, _x26, _x27, _x28, _x29) {\n  return _formatDocumentWithProvider.apply(this, arguments);\n}\nfunction _formatDocumentWithProvider() {\n  _formatDocumentWithProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(accessor, provider, editorOrModel, mode, token, userGesture) {\n    var workerService, accessibilitySignalService, model, cts, edits, rawEdits, _edits, _edits2, range, initialSelection;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          workerService = accessor.get(IEditorWorkerService);\n          accessibilitySignalService = accessor.get(IAccessibilitySignalService);\n          if (isCodeEditor(editorOrModel)) {\n            model = editorOrModel.getModel();\n            cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */, undefined, token);\n          } else {\n            model = editorOrModel;\n            cts = new TextModelCancellationTokenSource(editorOrModel, token);\n          }\n          _context9.prev = 3;\n          _context9.next = 6;\n          return provider.provideDocumentFormattingEdits(model, model.getFormattingOptions(), cts.token);\n        case 6:\n          rawEdits = _context9.sent;\n          _context9.next = 9;\n          return workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n        case 9:\n          edits = _context9.sent;\n          if (!cts.token.isCancellationRequested) {\n            _context9.next = 12;\n            break;\n          }\n          return _context9.abrupt(\"return\", true);\n        case 12:\n          _context9.prev = 12;\n          cts.dispose();\n          return _context9.finish(12);\n        case 15:\n          if (!(!edits || edits.length === 0)) {\n            _context9.next = 17;\n            break;\n          }\n          return _context9.abrupt(\"return\", false);\n        case 17:\n          if (isCodeEditor(editorOrModel)) {\n            // use editor to apply edits\n            FormattingEdit.execute(editorOrModel, edits, mode !== 2 /* FormattingMode.Silent */);\n            if (mode !== 2 /* FormattingMode.Silent */) {\n              editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* ScrollType.Immediate */);\n            }\n          } else {\n            // use model to apply edits\n            _edits = edits, _edits2 = _slicedToArray(_edits, 1), range = _edits2[0].range;\n            initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n            model.pushEditOperations([initialSelection], edits.map(function (edit) {\n              return {\n                text: edit.text,\n                range: Range.lift(edit.range),\n                forceMoveMarkers: true\n              };\n            }), function (undoEdits) {\n              var _iterator8 = _createForOfIteratorHelper(undoEdits),\n                _step8;\n              try {\n                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                  var _range4 = _step8.value.range;\n                  if (Range.areIntersectingOrTouching(_range4, initialSelection)) {\n                    return [new Selection(_range4.startLineNumber, _range4.startColumn, _range4.endLineNumber, _range4.endColumn)];\n                  }\n                }\n              } catch (err) {\n                _iterator8.e(err);\n              } finally {\n                _iterator8.f();\n              }\n              return null;\n            });\n          }\n          accessibilitySignalService.playSignal(AccessibilitySignal.format, {\n            userGesture: userGesture\n          });\n          return _context9.abrupt(\"return\", true);\n        case 20:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[3,, 12, 15]]);\n  }));\n  return _formatDocumentWithProvider.apply(this, arguments);\n}\nexport function getDocumentRangeFormattingEditsUntilResult(_x30, _x31, _x32, _x33, _x34, _x35) {\n  return _getDocumentRangeFormattingEditsUntilResult.apply(this, arguments);\n}\nfunction _getDocumentRangeFormattingEditsUntilResult() {\n  _getDocumentRangeFormattingEditsUntilResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(workerService, languageFeaturesService, model, range, options, token) {\n    var providers, _iterator9, _step9, provider, rawEdits;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          providers = languageFeaturesService.documentRangeFormattingEditProvider.ordered(model);\n          _iterator9 = _createForOfIteratorHelper(providers);\n          _context10.prev = 2;\n          _iterator9.s();\n        case 4:\n          if ((_step9 = _iterator9.n()).done) {\n            _context10.next = 15;\n            break;\n          }\n          provider = _step9.value;\n          _context10.next = 8;\n          return Promise.resolve(provider.provideDocumentRangeFormattingEdits(model, range, options, token))[\"catch\"](onUnexpectedExternalError);\n        case 8:\n          rawEdits = _context10.sent;\n          if (!isNonEmptyArray(rawEdits)) {\n            _context10.next = 13;\n            break;\n          }\n          _context10.next = 12;\n          return workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n        case 12:\n          return _context10.abrupt(\"return\", _context10.sent);\n        case 13:\n          _context10.next = 4;\n          break;\n        case 15:\n          _context10.next = 20;\n          break;\n        case 17:\n          _context10.prev = 17;\n          _context10.t0 = _context10[\"catch\"](2);\n          _iterator9.e(_context10.t0);\n        case 20:\n          _context10.prev = 20;\n          _iterator9.f();\n          return _context10.finish(20);\n        case 23:\n          return _context10.abrupt(\"return\", undefined);\n        case 24:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[2, 17, 20, 23]]);\n  }));\n  return _getDocumentRangeFormattingEditsUntilResult.apply(this, arguments);\n}\nexport function getDocumentFormattingEditsUntilResult(_x36, _x37, _x38, _x39, _x40) {\n  return _getDocumentFormattingEditsUntilResult.apply(this, arguments);\n}\nfunction _getDocumentFormattingEditsUntilResult() {\n  _getDocumentFormattingEditsUntilResult = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(workerService, languageFeaturesService, model, options, token) {\n    var providers, _iterator10, _step10, provider, rawEdits;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          providers = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n          _iterator10 = _createForOfIteratorHelper(providers);\n          _context11.prev = 2;\n          _iterator10.s();\n        case 4:\n          if ((_step10 = _iterator10.n()).done) {\n            _context11.next = 15;\n            break;\n          }\n          provider = _step10.value;\n          _context11.next = 8;\n          return Promise.resolve(provider.provideDocumentFormattingEdits(model, options, token))[\"catch\"](onUnexpectedExternalError);\n        case 8:\n          rawEdits = _context11.sent;\n          if (!isNonEmptyArray(rawEdits)) {\n            _context11.next = 13;\n            break;\n          }\n          _context11.next = 12;\n          return workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n        case 12:\n          return _context11.abrupt(\"return\", _context11.sent);\n        case 13:\n          _context11.next = 4;\n          break;\n        case 15:\n          _context11.next = 20;\n          break;\n        case 17:\n          _context11.prev = 17;\n          _context11.t0 = _context11[\"catch\"](2);\n          _iterator10.e(_context11.t0);\n        case 20:\n          _context11.prev = 20;\n          _iterator10.f();\n          return _context11.finish(20);\n        case 23:\n          return _context11.abrupt(\"return\", undefined);\n        case 24:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11, null, [[2, 17, 20, 23]]);\n  }));\n  return _getDocumentFormattingEditsUntilResult.apply(this, arguments);\n}\nexport function getOnTypeFormattingEdits(workerService, languageFeaturesService, model, position, ch, options, token) {\n  var providers = languageFeaturesService.onTypeFormattingEditProvider.ordered(model);\n  if (providers.length === 0) {\n    return Promise.resolve(undefined);\n  }\n  if (providers[0].autoFormatTriggerCharacters.indexOf(ch) < 0) {\n    return Promise.resolve(undefined);\n  }\n  return Promise.resolve(providers[0].provideOnTypeFormattingEdits(model, position, ch, options, token))[\"catch\"](onUnexpectedExternalError).then(function (edits) {\n    return workerService.computeMoreMinimalEdits(model.uri, edits);\n  });\n}\nCommandsRegistry.registerCommand('_executeFormatRangeProvider', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accessor) {\n    var _len,\n      args,\n      _key,\n      resource,\n      range,\n      options,\n      resolverService,\n      workerService,\n      languageFeaturesService,\n      reference,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          for (_len = _args2.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = _args2[_key];\n          }\n          resource = args[0], range = args[1], options = args[2];\n          assertType(URI.isUri(resource));\n          assertType(Range.isIRange(range));\n          resolverService = accessor.get(ITextModelService);\n          workerService = accessor.get(IEditorWorkerService);\n          languageFeaturesService = accessor.get(ILanguageFeaturesService);\n          _context2.next = 9;\n          return resolverService.createModelReference(resource);\n        case 9:\n          reference = _context2.sent;\n          _context2.prev = 10;\n          return _context2.abrupt(\"return\", getDocumentRangeFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, Range.lift(range), options, CancellationToken.None));\n        case 12:\n          _context2.prev = 12;\n          reference.dispose();\n          return _context2.finish(12);\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[10,, 12, 15]]);\n  }));\n  return function (_x41) {\n    return _ref.apply(this, arguments);\n  };\n}());\nCommandsRegistry.registerCommand('_executeFormatDocumentProvider', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(accessor) {\n    var _len2,\n      args,\n      _key2,\n      resource,\n      options,\n      resolverService,\n      workerService,\n      languageFeaturesService,\n      reference,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          for (_len2 = _args3.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = _args3[_key2];\n          }\n          resource = args[0], options = args[1];\n          assertType(URI.isUri(resource));\n          resolverService = accessor.get(ITextModelService);\n          workerService = accessor.get(IEditorWorkerService);\n          languageFeaturesService = accessor.get(ILanguageFeaturesService);\n          _context3.next = 8;\n          return resolverService.createModelReference(resource);\n        case 8:\n          reference = _context3.sent;\n          _context3.prev = 9;\n          return _context3.abrupt(\"return\", getDocumentFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, options, CancellationToken.None));\n        case 11:\n          _context3.prev = 11;\n          reference.dispose();\n          return _context3.finish(11);\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[9,, 11, 14]]);\n  }));\n  return function (_x42) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nCommandsRegistry.registerCommand('_executeFormatOnTypeProvider', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(accessor) {\n    var _len3,\n      args,\n      _key3,\n      resource,\n      position,\n      ch,\n      options,\n      resolverService,\n      workerService,\n      languageFeaturesService,\n      reference,\n      _args4 = arguments;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          for (_len3 = _args4.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n            args[_key3 - 1] = _args4[_key3];\n          }\n          resource = args[0], position = args[1], ch = args[2], options = args[3];\n          assertType(URI.isUri(resource));\n          assertType(Position.isIPosition(position));\n          assertType(typeof ch === 'string');\n          resolverService = accessor.get(ITextModelService);\n          workerService = accessor.get(IEditorWorkerService);\n          languageFeaturesService = accessor.get(ILanguageFeaturesService);\n          _context4.next = 10;\n          return resolverService.createModelReference(resource);\n        case 10:\n          reference = _context4.sent;\n          _context4.prev = 11;\n          return _context4.abrupt(\"return\", getOnTypeFormattingEdits(workerService, languageFeaturesService, reference.object.textEditorModel, Position.lift(position), ch, options, CancellationToken.None));\n        case 13:\n          _context4.prev = 13;\n          reference.dispose();\n          return _context4.finish(13);\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[11,, 13, 16]]);\n  }));\n  return function (_x43) {\n    return _ref3.apply(this, arguments);\n  };\n}());","map":{"version":3,"names":["asArray","isNonEmptyArray","CancellationToken","onUnexpectedExternalError","Iterable","LinkedList","assertType","URI","EditorStateCancellationTokenSource","TextModelCancellationTokenSource","isCodeEditor","Position","Range","Selection","IEditorWorkerService","ITextModelService","FormattingEdit","CommandsRegistry","ExtensionIdentifierSet","IInstantiationService","ILanguageFeaturesService","ILogService","AccessibilitySignal","IAccessibilitySignalService","getRealAndSyntheticDocumentFormattersOrdered","documentFormattingEditProvider","documentRangeFormattingEditProvider","model","result","seen","docFormatter","ordered","_iterator","_createForOfIteratorHelper","_step","s","n","done","formatter","value","push","extensionId","add","err","e","f","rangeFormatter","_iterator2","_step2","_loop","has","displayName","provideDocumentFormattingEdits","options","token","provideDocumentRangeFormattingEdits","getFullModelRange","FormattingConflicts","_classCallCheck","_createClass","key","setFormatterSelector","selector","remove","_selectors","unshift","dispose","_select","_asyncToGenerator","_regeneratorRuntime","mark","_callee","document","mode","kind","wrap","_callee$","_context","prev","next","length","abrupt","undefined","first","sent","stop","select","_x","_x2","_x3","_x4","apply","arguments","formatDocumentRangesWithSelectedProvider","_x5","_x6","_x7","_x8","_x9","_x10","_x11","_formatDocumentRangesWithSelectedProvider","_callee5","accessor","editorOrModel","rangeOrRanges","progress","userGesture","instaService","_accessor$get","documentRangeFormattingEditProviderRegistry","provider","selected","_callee5$","_context5","get","getModel","report","invokeFunction","formatDocumentRangesWithProvider","_x12","_x13","_x14","_x15","_x16","_x17","_formatDocumentRangesWithProvider","_callee7","_a","_b","workerService","logService","accessibilitySignalService","cts","ranges","len","_iterator3","_step3","_range3","computeEdits","hasIntersectingEdit","allEdits","rawEditsList","_iterator6","_step6","range","i","j","mergedRange","edits","_i","_rawEditsList","rawEdits","minimalEdits","_range","initialSelection","_callee7$","_context7","sort","compareRangesUsingStarts","areIntersectingOrTouching","fromPositions","getStartPosition","getEndPosition","_ref4","_callee6","_callee6$","_context6","trace","getFormattingOptions","t0","_x44","a","b","mergedA","reduce","acc","val","plusRange","some","x","intersectRanges","_iterator4","_step4","edit","_iterator5","_step5","otherEdit","provideDocumentRangesFormattingEdits","isCancellationRequested","t1","t2","call","t3","finish","splice","computeMoreMinimalEdits","uri","_toConsumableArray","execute","revealPositionInCenterIfOutsideViewport","getPosition","startLineNumber","startColumn","endLineNumber","endColumn","pushEditOperations","map","text","lift","forceMoveMarkers","undoEdits","_iterator7","_step7","playSignal","format","formatDocumentWithSelectedProvider","_x18","_x19","_x20","_x21","_x22","_x23","_formatDocumentWithSelectedProvider","_callee8","languageFeaturesService","_callee8$","_context8","formatDocumentWithProvider","_x24","_x25","_x26","_x27","_x28","_x29","_formatDocumentWithProvider","_callee9","_edits","_edits2","_callee9$","_context9","_slicedToArray","_iterator8","_step8","getDocumentRangeFormattingEditsUntilResult","_x30","_x31","_x32","_x33","_x34","_x35","_getDocumentRangeFormattingEditsUntilResult","_callee10","providers","_iterator9","_step9","_callee10$","_context10","Promise","resolve","getDocumentFormattingEditsUntilResult","_x36","_x37","_x38","_x39","_x40","_getDocumentFormattingEditsUntilResult","_callee11","_iterator10","_step10","_callee11$","_context11","getOnTypeFormattingEdits","position","ch","onTypeFormattingEditProvider","autoFormatTriggerCharacters","indexOf","provideOnTypeFormattingEdits","then","registerCommand","_ref","_callee2","_len","args","_key","resource","resolverService","reference","_args2","_callee2$","_context2","Array","isUri","isIRange","createModelReference","object","textEditorModel","None","_x41","_ref2","_callee3","_len2","_key2","_args3","_callee3$","_context3","_x42","_ref3","_callee4","_len3","_key3","_args4","_callee4$","_context4","isIPosition","_x43"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/format/browser/format.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asArray, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource, TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { FormattingEdit } from './formattingEdit.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ExtensionIdentifierSet } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nexport function getRealAndSyntheticDocumentFormattersOrdered(documentFormattingEditProvider, documentRangeFormattingEditProvider, model) {\n    const result = [];\n    const seen = new ExtensionIdentifierSet();\n    // (1) add all document formatter\n    const docFormatter = documentFormattingEditProvider.ordered(model);\n    for (const formatter of docFormatter) {\n        result.push(formatter);\n        if (formatter.extensionId) {\n            seen.add(formatter.extensionId);\n        }\n    }\n    // (2) add all range formatter as document formatter (unless the same extension already did that)\n    const rangeFormatter = documentRangeFormattingEditProvider.ordered(model);\n    for (const formatter of rangeFormatter) {\n        if (formatter.extensionId) {\n            if (seen.has(formatter.extensionId)) {\n                continue;\n            }\n            seen.add(formatter.extensionId);\n        }\n        result.push({\n            displayName: formatter.displayName,\n            extensionId: formatter.extensionId,\n            provideDocumentFormattingEdits(model, options, token) {\n                return formatter.provideDocumentRangeFormattingEdits(model, model.getFullModelRange(), options, token);\n            }\n        });\n    }\n    return result;\n}\nexport class FormattingConflicts {\n    static setFormatterSelector(selector) {\n        const remove = FormattingConflicts._selectors.unshift(selector);\n        return { dispose: remove };\n    }\n    static async select(formatter, document, mode, kind) {\n        if (formatter.length === 0) {\n            return undefined;\n        }\n        const selector = Iterable.first(FormattingConflicts._selectors);\n        if (selector) {\n            return await selector(formatter, document, mode, kind);\n        }\n        return undefined;\n    }\n}\nFormattingConflicts._selectors = new LinkedList();\nexport async function formatDocumentRangesWithSelectedProvider(accessor, editorOrModel, rangeOrRanges, mode, progress, token, userGesture) {\n    const instaService = accessor.get(IInstantiationService);\n    const { documentRangeFormattingEditProvider: documentRangeFormattingEditProviderRegistry } = accessor.get(ILanguageFeaturesService);\n    const model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n    const provider = documentRangeFormattingEditProviderRegistry.ordered(model);\n    const selected = await FormattingConflicts.select(provider, model, mode, 2 /* FormattingKind.Selection */);\n    if (selected) {\n        progress.report(selected);\n        await instaService.invokeFunction(formatDocumentRangesWithProvider, selected, editorOrModel, rangeOrRanges, token, userGesture);\n    }\n}\nexport async function formatDocumentRangesWithProvider(accessor, provider, editorOrModel, rangeOrRanges, token, userGesture) {\n    var _a, _b;\n    const workerService = accessor.get(IEditorWorkerService);\n    const logService = accessor.get(ILogService);\n    const accessibilitySignalService = accessor.get(IAccessibilitySignalService);\n    let model;\n    let cts;\n    if (isCodeEditor(editorOrModel)) {\n        model = editorOrModel.getModel();\n        cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */, undefined, token);\n    }\n    else {\n        model = editorOrModel;\n        cts = new TextModelCancellationTokenSource(editorOrModel, token);\n    }\n    // make sure that ranges don't overlap nor touch each other\n    const ranges = [];\n    let len = 0;\n    for (const range of asArray(rangeOrRanges).sort(Range.compareRangesUsingStarts)) {\n        if (len > 0 && Range.areIntersectingOrTouching(ranges[len - 1], range)) {\n            ranges[len - 1] = Range.fromPositions(ranges[len - 1].getStartPosition(), range.getEndPosition());\n        }\n        else {\n            len = ranges.push(range);\n        }\n    }\n    const computeEdits = async (range) => {\n        var _a, _b;\n        logService.trace(`[format][provideDocumentRangeFormattingEdits] (request)`, (_a = provider.extensionId) === null || _a === void 0 ? void 0 : _a.value, range);\n        const result = (await provider.provideDocumentRangeFormattingEdits(model, range, model.getFormattingOptions(), cts.token)) || [];\n        logService.trace(`[format][provideDocumentRangeFormattingEdits] (response)`, (_b = provider.extensionId) === null || _b === void 0 ? void 0 : _b.value, result);\n        return result;\n    };\n    const hasIntersectingEdit = (a, b) => {\n        if (!a.length || !b.length) {\n            return false;\n        }\n        // quick exit if the list of ranges are completely unrelated [O(n)]\n        const mergedA = a.reduce((acc, val) => { return Range.plusRange(acc, val.range); }, a[0].range);\n        if (!b.some(x => { return Range.intersectRanges(mergedA, x.range); })) {\n            return false;\n        }\n        // fallback to a complete check [O(n^2)]\n        for (const edit of a) {\n            for (const otherEdit of b) {\n                if (Range.intersectRanges(edit.range, otherEdit.range)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    const allEdits = [];\n    const rawEditsList = [];\n    try {\n        if (typeof provider.provideDocumentRangesFormattingEdits === 'function') {\n            logService.trace(`[format][provideDocumentRangeFormattingEdits] (request)`, (_a = provider.extensionId) === null || _a === void 0 ? void 0 : _a.value, ranges);\n            const result = (await provider.provideDocumentRangesFormattingEdits(model, ranges, model.getFormattingOptions(), cts.token)) || [];\n            logService.trace(`[format][provideDocumentRangeFormattingEdits] (response)`, (_b = provider.extensionId) === null || _b === void 0 ? void 0 : _b.value, result);\n            rawEditsList.push(result);\n        }\n        else {\n            for (const range of ranges) {\n                if (cts.token.isCancellationRequested) {\n                    return true;\n                }\n                rawEditsList.push(await computeEdits(range));\n            }\n            for (let i = 0; i < ranges.length; ++i) {\n                for (let j = i + 1; j < ranges.length; ++j) {\n                    if (cts.token.isCancellationRequested) {\n                        return true;\n                    }\n                    if (hasIntersectingEdit(rawEditsList[i], rawEditsList[j])) {\n                        // Merge ranges i and j into a single range, recompute the associated edits\n                        const mergedRange = Range.plusRange(ranges[i], ranges[j]);\n                        const edits = await computeEdits(mergedRange);\n                        ranges.splice(j, 1);\n                        ranges.splice(i, 1);\n                        ranges.push(mergedRange);\n                        rawEditsList.splice(j, 1);\n                        rawEditsList.splice(i, 1);\n                        rawEditsList.push(edits);\n                        // Restart scanning\n                        i = 0;\n                        j = 0;\n                    }\n                }\n            }\n        }\n        for (const rawEdits of rawEditsList) {\n            if (cts.token.isCancellationRequested) {\n                return true;\n            }\n            const minimalEdits = await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n            if (minimalEdits) {\n                allEdits.push(...minimalEdits);\n            }\n        }\n    }\n    finally {\n        cts.dispose();\n    }\n    if (allEdits.length === 0) {\n        return false;\n    }\n    if (isCodeEditor(editorOrModel)) {\n        // use editor to apply edits\n        FormattingEdit.execute(editorOrModel, allEdits, true);\n        editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* ScrollType.Immediate */);\n    }\n    else {\n        // use model to apply edits\n        const [{ range }] = allEdits;\n        const initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        model.pushEditOperations([initialSelection], allEdits.map(edit => {\n            return {\n                text: edit.text,\n                range: Range.lift(edit.range),\n                forceMoveMarkers: true\n            };\n        }), undoEdits => {\n            for (const { range } of undoEdits) {\n                if (Range.areIntersectingOrTouching(range, initialSelection)) {\n                    return [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n                }\n            }\n            return null;\n        });\n    }\n    accessibilitySignalService.playSignal(AccessibilitySignal.format, { userGesture });\n    return true;\n}\nexport async function formatDocumentWithSelectedProvider(accessor, editorOrModel, mode, progress, token, userGesture) {\n    const instaService = accessor.get(IInstantiationService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const model = isCodeEditor(editorOrModel) ? editorOrModel.getModel() : editorOrModel;\n    const provider = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n    const selected = await FormattingConflicts.select(provider, model, mode, 1 /* FormattingKind.File */);\n    if (selected) {\n        progress.report(selected);\n        await instaService.invokeFunction(formatDocumentWithProvider, selected, editorOrModel, mode, token, userGesture);\n    }\n}\nexport async function formatDocumentWithProvider(accessor, provider, editorOrModel, mode, token, userGesture) {\n    const workerService = accessor.get(IEditorWorkerService);\n    const accessibilitySignalService = accessor.get(IAccessibilitySignalService);\n    let model;\n    let cts;\n    if (isCodeEditor(editorOrModel)) {\n        model = editorOrModel.getModel();\n        cts = new EditorStateCancellationTokenSource(editorOrModel, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */, undefined, token);\n    }\n    else {\n        model = editorOrModel;\n        cts = new TextModelCancellationTokenSource(editorOrModel, token);\n    }\n    let edits;\n    try {\n        const rawEdits = await provider.provideDocumentFormattingEdits(model, model.getFormattingOptions(), cts.token);\n        edits = await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n        if (cts.token.isCancellationRequested) {\n            return true;\n        }\n    }\n    finally {\n        cts.dispose();\n    }\n    if (!edits || edits.length === 0) {\n        return false;\n    }\n    if (isCodeEditor(editorOrModel)) {\n        // use editor to apply edits\n        FormattingEdit.execute(editorOrModel, edits, mode !== 2 /* FormattingMode.Silent */);\n        if (mode !== 2 /* FormattingMode.Silent */) {\n            editorOrModel.revealPositionInCenterIfOutsideViewport(editorOrModel.getPosition(), 1 /* ScrollType.Immediate */);\n        }\n    }\n    else {\n        // use model to apply edits\n        const [{ range }] = edits;\n        const initialSelection = new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        model.pushEditOperations([initialSelection], edits.map(edit => {\n            return {\n                text: edit.text,\n                range: Range.lift(edit.range),\n                forceMoveMarkers: true\n            };\n        }), undoEdits => {\n            for (const { range } of undoEdits) {\n                if (Range.areIntersectingOrTouching(range, initialSelection)) {\n                    return [new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn)];\n                }\n            }\n            return null;\n        });\n    }\n    accessibilitySignalService.playSignal(AccessibilitySignal.format, { userGesture });\n    return true;\n}\nexport async function getDocumentRangeFormattingEditsUntilResult(workerService, languageFeaturesService, model, range, options, token) {\n    const providers = languageFeaturesService.documentRangeFormattingEditProvider.ordered(model);\n    for (const provider of providers) {\n        const rawEdits = await Promise.resolve(provider.provideDocumentRangeFormattingEdits(model, range, options, token)).catch(onUnexpectedExternalError);\n        if (isNonEmptyArray(rawEdits)) {\n            return await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n        }\n    }\n    return undefined;\n}\nexport async function getDocumentFormattingEditsUntilResult(workerService, languageFeaturesService, model, options, token) {\n    const providers = getRealAndSyntheticDocumentFormattersOrdered(languageFeaturesService.documentFormattingEditProvider, languageFeaturesService.documentRangeFormattingEditProvider, model);\n    for (const provider of providers) {\n        const rawEdits = await Promise.resolve(provider.provideDocumentFormattingEdits(model, options, token)).catch(onUnexpectedExternalError);\n        if (isNonEmptyArray(rawEdits)) {\n            return await workerService.computeMoreMinimalEdits(model.uri, rawEdits);\n        }\n    }\n    return undefined;\n}\nexport function getOnTypeFormattingEdits(workerService, languageFeaturesService, model, position, ch, options, token) {\n    const providers = languageFeaturesService.onTypeFormattingEditProvider.ordered(model);\n    if (providers.length === 0) {\n        return Promise.resolve(undefined);\n    }\n    if (providers[0].autoFormatTriggerCharacters.indexOf(ch) < 0) {\n        return Promise.resolve(undefined);\n    }\n    return Promise.resolve(providers[0].provideOnTypeFormattingEdits(model, position, ch, options, token)).catch(onUnexpectedExternalError).then(edits => {\n        return workerService.computeMoreMinimalEdits(model.uri, edits);\n    });\n}\nCommandsRegistry.registerCommand('_executeFormatRangeProvider', async function (accessor, ...args) {\n    const [resource, range, options] = args;\n    assertType(URI.isUri(resource));\n    assertType(Range.isIRange(range));\n    const resolverService = accessor.get(ITextModelService);\n    const workerService = accessor.get(IEditorWorkerService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const reference = await resolverService.createModelReference(resource);\n    try {\n        return getDocumentRangeFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, Range.lift(range), options, CancellationToken.None);\n    }\n    finally {\n        reference.dispose();\n    }\n});\nCommandsRegistry.registerCommand('_executeFormatDocumentProvider', async function (accessor, ...args) {\n    const [resource, options] = args;\n    assertType(URI.isUri(resource));\n    const resolverService = accessor.get(ITextModelService);\n    const workerService = accessor.get(IEditorWorkerService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const reference = await resolverService.createModelReference(resource);\n    try {\n        return getDocumentFormattingEditsUntilResult(workerService, languageFeaturesService, reference.object.textEditorModel, options, CancellationToken.None);\n    }\n    finally {\n        reference.dispose();\n    }\n});\nCommandsRegistry.registerCommand('_executeFormatOnTypeProvider', async function (accessor, ...args) {\n    const [resource, position, ch, options] = args;\n    assertType(URI.isUri(resource));\n    assertType(Position.isIPosition(position));\n    assertType(typeof ch === 'string');\n    const resolverService = accessor.get(ITextModelService);\n    const workerService = accessor.get(IEditorWorkerService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const reference = await resolverService.createModelReference(resource);\n    try {\n        return getOnTypeFormattingEdits(workerService, languageFeaturesService, reference.object.textEditorModel, Position.lift(position), ch, options, CancellationToken.None);\n    }\n    finally {\n        reference.dispose();\n    }\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,EAAEC,eAAe,QAAQ,mCAAmC;AAC5E,SAASC,iBAAiB,QAAQ,yCAAyC;AAC3E,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,QAAQ,QAAQ,qCAAqC;AAC9D,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,GAAG,QAAQ,gCAAgC;AACpD,SAASC,kCAAkC,EAAEC,gCAAgC,QAAQ,0CAA0C;AAC/H,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,iBAAiB,QAAQ,6CAA6C;AAC/E,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,gBAAgB,QAAQ,kDAAkD;AACnF,SAASC,sBAAsB,QAAQ,sDAAsD;AAC7F,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,wBAAwB,QAAQ,8CAA8C;AACvF,SAASC,WAAW,QAAQ,wCAAwC;AACpE,SAASC,mBAAmB,EAAEC,2BAA2B,QAAQ,gFAAgF;AACjJ,OAAO,SAASC,4CAA4CA,CAACC,8BAA8B,EAAEC,mCAAmC,EAAEC,KAAK,EAAE;EACrI,IAAMC,MAAM,GAAG,EAAE;EACjB,IAAMC,IAAI,GAAG,IAAIX,sBAAsB,CAAC,CAAC;EACzC;EACA,IAAMY,YAAY,GAAGL,8BAA8B,CAACM,OAAO,CAACJ,KAAK,CAAC;EAAC,IAAAK,SAAA,GAAAC,0BAAA,CAC3CH,YAAY;IAAAI,KAAA;EAAA;IAApC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAsC;MAAA,IAA3BC,SAAS,GAAAJ,KAAA,CAAAK,KAAA;MAChBX,MAAM,CAACY,IAAI,CAACF,SAAS,CAAC;MACtB,IAAIA,SAAS,CAACG,WAAW,EAAE;QACvBZ,IAAI,CAACa,GAAG,CAACJ,SAAS,CAACG,WAAW,CAAC;MACnC;IACJ;IACA;EAAA,SAAAE,GAAA;IAAAX,SAAA,CAAAY,CAAA,CAAAD,GAAA;EAAA;IAAAX,SAAA,CAAAa,CAAA;EAAA;EACA,IAAMC,cAAc,GAAGpB,mCAAmC,CAACK,OAAO,CAACJ,KAAK,CAAC;EAAC,IAAAoB,UAAA,GAAAd,0BAAA,CAClDa,cAAc;IAAAE,MAAA;EAAA;IAAA,IAAAC,KAAA,YAAAA,MAAA,EAAE;MAAA,IAA7BX,SAAS,GAAAU,MAAA,CAAAT,KAAA;MAChB,IAAID,SAAS,CAACG,WAAW,EAAE;QACvB,IAAIZ,IAAI,CAACqB,GAAG,CAACZ,SAAS,CAACG,WAAW,CAAC,EAAE;UAAA;QAErC;QACAZ,IAAI,CAACa,GAAG,CAACJ,SAAS,CAACG,WAAW,CAAC;MACnC;MACAb,MAAM,CAACY,IAAI,CAAC;QACRW,WAAW,EAAEb,SAAS,CAACa,WAAW;QAClCV,WAAW,EAAEH,SAAS,CAACG,WAAW;QAClCW,8BAA8B,WAAAA,+BAACzB,KAAK,EAAE0B,OAAO,EAAEC,KAAK,EAAE;UAClD,OAAOhB,SAAS,CAACiB,mCAAmC,CAAC5B,KAAK,EAAEA,KAAK,CAAC6B,iBAAiB,CAAC,CAAC,EAAEH,OAAO,EAAEC,KAAK,CAAC;QAC1G;MACJ,CAAC,CAAC;IACN,CAAC;IAdD,KAAAP,UAAA,CAAAZ,CAAA,MAAAa,MAAA,GAAAD,UAAA,CAAAX,CAAA,IAAAC,IAAA;MAAA,IAAAY,KAAA,IAGY;IAAS;EAWpB,SAAAN,GAAA;IAAAI,UAAA,CAAAH,CAAA,CAAAD,GAAA;EAAA;IAAAI,UAAA,CAAAF,CAAA;EAAA;EACD,OAAOjB,MAAM;AACjB;AACA,WAAa6B,mBAAmB;EAAA,SAAAA,oBAAA;IAAAC,eAAA,OAAAD,mBAAA;EAAA;EAAA,OAAAE,YAAA,CAAAF,mBAAA;IAAAG,GAAA;IAAArB,KAAA,EAC5B,SAAAsB,qBAA4BC,QAAQ,EAAE;MAClC,IAAMC,MAAM,GAAGN,mBAAmB,CAACO,UAAU,CAACC,OAAO,CAACH,QAAQ,CAAC;MAC/D,OAAO;QAAEI,OAAO,EAAEH;MAAO,CAAC;IAC9B;EAAC;IAAAH,GAAA;IAAArB,KAAA;MAAA,IAAA4B,OAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAC,QAAoBjC,SAAS,EAAEkC,QAAQ,EAAEC,IAAI,EAAEC,IAAI;QAAA,IAAAZ,QAAA;QAAA,OAAAO,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,MAC3CzC,SAAS,CAAC0C,MAAM,KAAK,CAAC;gBAAAH,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAI,MAAA,WACfC,SAAS;YAAA;cAEdpB,QAAQ,GAAG1D,QAAQ,CAAC+E,KAAK,CAAC1B,mBAAmB,CAACO,UAAU,CAAC;cAAA,KAC3DF,QAAQ;gBAAAe,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACKjB,QAAQ,CAACxB,SAAS,EAAEkC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,CAAC;YAAA;cAAA,OAAAG,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAO,IAAA;YAAA;cAAA,OAAAP,QAAA,CAAAI,MAAA,WAEnDC,SAAS;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA,CACnB;MAAA,SAAAe,OAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAvB,OAAA,CAAAwB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAN,MAAA;IAAA;EAAA;AAAA;AAEL7B,mBAAmB,CAACO,UAAU,GAAG,IAAI3D,UAAU,CAAC,CAAC;AACjD,gBAAsBwF,wCAAwCA,CAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,yCAAA,CAAAV,KAAA,OAAAC,SAAA;AAAA;AAU7D,SAAAS,0CAAA;EAAAA,yCAAA,GAAAjC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAVM,SAAAgC,SAAwDC,QAAQ,EAAEC,aAAa,EAAEC,aAAa,EAAEhC,IAAI,EAAEiC,QAAQ,EAAEpD,KAAK,EAAEqD,WAAW;IAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,2CAAA,EAAAnF,KAAA,EAAAoF,QAAA,EAAAC,QAAA;IAAA,OAAA3C,mBAAA,GAAAM,IAAA,UAAAsC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApC,IAAA,GAAAoC,SAAA,CAAAnC,IAAA;QAAA;UAC/H6B,YAAY,GAAGL,QAAQ,CAACY,GAAG,CAAChG,qBAAqB,CAAC;UAAA0F,aAAA,GACqCN,QAAQ,CAACY,GAAG,CAAC/F,wBAAwB,CAAC,EAAtF0F,2CAA2C,GAAAD,aAAA,CAAhFnF,mCAAmC;UACrCC,KAAK,GAAGjB,YAAY,CAAC8F,aAAa,CAAC,GAAGA,aAAa,CAACY,QAAQ,CAAC,CAAC,GAAGZ,aAAa;UAC9EO,QAAQ,GAAGD,2CAA2C,CAAC/E,OAAO,CAACJ,KAAK,CAAC;UAAAuF,SAAA,CAAAnC,IAAA;UAAA,OACpDtB,mBAAmB,CAAC6B,MAAM,CAACyB,QAAQ,EAAEpF,KAAK,EAAE8C,IAAI,EAAE,CAAC,CAAC,8BAA8B,CAAC;QAAA;UAApGuC,QAAQ,GAAAE,SAAA,CAAA9B,IAAA;UAAA,KACV4B,QAAQ;YAAAE,SAAA,CAAAnC,IAAA;YAAA;UAAA;UACR2B,QAAQ,CAACW,MAAM,CAACL,QAAQ,CAAC;UAACE,SAAA,CAAAnC,IAAA;UAAA,OACpB6B,YAAY,CAACU,cAAc,CAACC,gCAAgC,EAAEP,QAAQ,EAAER,aAAa,EAAEC,aAAa,EAAEnD,KAAK,EAAEqD,WAAW,CAAC;QAAA;QAAA;UAAA,OAAAO,SAAA,CAAA7B,IAAA;MAAA;IAAA,GAAAiB,QAAA;EAAA,CAEtI;EAAA,OAAAD,yCAAA,CAAAV,KAAA,OAAAC,SAAA;AAAA;AACD,gBAAsB2B,gCAAgCA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,iCAAA,CAAAnC,KAAA,OAAAC,SAAA;AAAA;AAoIrD,SAAAkC,kCAAA;EAAAA,iCAAA,GAAA1D,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CApIM,SAAAyD,SAAgDxB,QAAQ,EAAEQ,QAAQ,EAAEP,aAAa,EAAEC,aAAa,EAAEnD,KAAK,EAAEqD,WAAW;IAAA,IAAAqB,EAAA,EAAAC,EAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,0BAAA,EAAAzG,KAAA,EAAA0G,GAAA,EAAAC,MAAA,EAAAC,GAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,mBAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAlH,MAAA,EAAAmH,UAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,WAAA,EAAAC,KAAA,EAAAC,EAAA,EAAAC,aAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,MAAA,EAAAC,gBAAA;IAAA,OAAAtF,mBAAA,GAAAM,IAAA,UAAAiF,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/E,IAAA,GAAA+E,SAAA,CAAA9E,IAAA;QAAA;UAEjHmD,aAAa,GAAG3B,QAAQ,CAACY,GAAG,CAACrG,oBAAoB,CAAC;UAClDqH,UAAU,GAAG5B,QAAQ,CAACY,GAAG,CAAC9F,WAAW,CAAC;UACtC+G,0BAA0B,GAAG7B,QAAQ,CAACY,GAAG,CAAC5F,2BAA2B,CAAC;UAG5E,IAAIb,YAAY,CAAC8F,aAAa,CAAC,EAAE;YAC7B7E,KAAK,GAAG6E,aAAa,CAACY,QAAQ,CAAC,CAAC;YAChCiB,GAAG,GAAG,IAAI7H,kCAAkC,CAACgG,aAAa,EAAE,CAAC,CAAC,kCAAkC,CAAC,CAAC,oCAAoCtB,SAAS,EAAE5B,KAAK,CAAC;UAC3J,CAAC,MACI;YACD3B,KAAK,GAAG6E,aAAa;YACrB6B,GAAG,GAAG,IAAI5H,gCAAgC,CAAC+F,aAAa,EAAElD,KAAK,CAAC;UACpE;UACA;UACMgF,MAAM,GAAG,EAAE;UACbC,GAAG,GAAG,CAAC;UAAAC,UAAA,GAAAvG,0BAAA,CACSjC,OAAO,CAACyG,aAAa,CAAC,CAACqD,IAAI,CAAClJ,KAAK,CAACmJ,wBAAwB,CAAC;UAAA;YAA/E,KAAAvB,UAAA,CAAArG,CAAA,MAAAsG,MAAA,GAAAD,UAAA,CAAApG,CAAA,IAAAC,IAAA,GAAiF;cAAtE4G,OAAK,GAAAR,MAAA,CAAAlG,KAAA;cACZ,IAAIgG,GAAG,GAAG,CAAC,IAAI3H,KAAK,CAACoJ,yBAAyB,CAAC1B,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,EAAEU,OAAK,CAAC,EAAE;gBACpEX,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,GAAG3H,KAAK,CAACqJ,aAAa,CAAC3B,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,CAAC2B,gBAAgB,CAAC,CAAC,EAAEjB,OAAK,CAACkB,cAAc,CAAC,CAAC,CAAC;cACrG,CAAC,MACI;gBACD5B,GAAG,GAAGD,MAAM,CAAC9F,IAAI,CAACyG,OAAK,CAAC;cAC5B;YACJ;UAAC,SAAAtG,GAAA;YAAA6F,UAAA,CAAA5F,CAAA,CAAAD,GAAA;UAAA;YAAA6F,UAAA,CAAA3F,CAAA;UAAA;UACK8F,YAAY;YAAA,IAAAyB,KAAA,GAAAhG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA+F,SAAOpB,KAAK;cAAA,IAAAjB,EAAA,EAAAC,EAAA,EAAArG,MAAA;cAAA,OAAAyC,mBAAA,GAAAM,IAAA,UAAA2F,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAzF,IAAA,GAAAyF,SAAA,CAAAxF,IAAA;kBAAA;oBAE7BoD,UAAU,CAACqC,KAAK,4DAA4D,CAACxC,EAAE,GAAGjB,QAAQ,CAACtE,WAAW,MAAM,IAAI,IAAIuF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACzF,KAAK,EAAE0G,KAAK,CAAC;oBAACsB,SAAA,CAAAxF,IAAA;oBAAA,OACxIgC,QAAQ,CAACxD,mCAAmC,CAAC5B,KAAK,EAAEsH,KAAK,EAAEtH,KAAK,CAAC8I,oBAAoB,CAAC,CAAC,EAAEpC,GAAG,CAAC/E,KAAK,CAAC;kBAAA;oBAAAiH,SAAA,CAAAG,EAAA,GAAAH,SAAA,CAAAnF,IAAA;oBAAA,IAAAmF,SAAA,CAAAG,EAAA;sBAAAH,SAAA,CAAAxF,IAAA;sBAAA;oBAAA;oBAAAwF,SAAA,CAAAG,EAAA,GAAK,EAAE;kBAAA;oBAA1H9I,MAAM,GAAA2I,SAAA,CAAAG,EAAA;oBACZvC,UAAU,CAACqC,KAAK,6DAA6D,CAACvC,EAAE,GAAGlB,QAAQ,CAACtE,WAAW,MAAM,IAAI,IAAIwF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC1F,KAAK,EAAEX,MAAM,CAAC;oBAAC,OAAA2I,SAAA,CAAAtF,MAAA,WACzJrD,MAAM;kBAAA;kBAAA;oBAAA,OAAA2I,SAAA,CAAAlF,IAAA;gBAAA;cAAA,GAAAgF,QAAA;YAAA,CAChB;YAAA,gBANK1B,YAAYA,CAAAgC,IAAA;cAAA,OAAAP,KAAA,CAAAzE,KAAA,OAAAC,SAAA;YAAA;UAAA;UAOZgD,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIgC,CAAC,EAAEC,CAAC,EAAK;YAClC,IAAI,CAACD,CAAC,CAAC5F,MAAM,IAAI,CAAC6F,CAAC,CAAC7F,MAAM,EAAE;cACxB,OAAO,KAAK;YAChB;YACA;YACA,IAAM8F,OAAO,GAAGF,CAAC,CAACG,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG,EAAK;cAAE,OAAOrK,KAAK,CAACsK,SAAS,CAACF,GAAG,EAAEC,GAAG,CAAChC,KAAK,CAAC;YAAE,CAAC,EAAE2B,CAAC,CAAC,CAAC,CAAC,CAAC3B,KAAK,CAAC;YAC/F,IAAI,CAAC4B,CAAC,CAACM,IAAI,CAAC,UAAAC,CAAC,EAAI;cAAE,OAAOxK,KAAK,CAACyK,eAAe,CAACP,OAAO,EAAEM,CAAC,CAACnC,KAAK,CAAC;YAAE,CAAC,CAAC,EAAE;cACnE,OAAO,KAAK;YAChB;YACA;YAAA,IAAAqC,UAAA,GAAArJ,0BAAA,CACmB2I,CAAC;cAAAW,MAAA;YAAA;cAApB,KAAAD,UAAA,CAAAnJ,CAAA,MAAAoJ,MAAA,GAAAD,UAAA,CAAAlJ,CAAA,IAAAC,IAAA,GAAsB;gBAAA,IAAXmJ,IAAI,GAAAD,MAAA,CAAAhJ,KAAA;gBAAA,IAAAkJ,UAAA,GAAAxJ,0BAAA,CACa4I,CAAC;kBAAAa,MAAA;gBAAA;kBAAzB,KAAAD,UAAA,CAAAtJ,CAAA,MAAAuJ,MAAA,GAAAD,UAAA,CAAArJ,CAAA,IAAAC,IAAA,GAA2B;oBAAA,IAAhBsJ,SAAS,GAAAD,MAAA,CAAAnJ,KAAA;oBAChB,IAAI3B,KAAK,CAACyK,eAAe,CAACG,IAAI,CAACvC,KAAK,EAAE0C,SAAS,CAAC1C,KAAK,CAAC,EAAE;sBACpD,OAAO,IAAI;oBACf;kBACJ;gBAAC,SAAAtG,GAAA;kBAAA8I,UAAA,CAAA7I,CAAA,CAAAD,GAAA;gBAAA;kBAAA8I,UAAA,CAAA5I,CAAA;gBAAA;cACL;YAAC,SAAAF,GAAA;cAAA2I,UAAA,CAAA1I,CAAA,CAAAD,GAAA;YAAA;cAAA2I,UAAA,CAAAzI,CAAA;YAAA;YACD,OAAO,KAAK;UAChB,CAAC;UACKgG,QAAQ,GAAG,EAAE;UACbC,YAAY,GAAG,EAAE;UAAAe,SAAA,CAAA/E,IAAA;UAAA,MAEf,OAAOiC,QAAQ,CAAC6E,oCAAoC,KAAK,UAAU;YAAA/B,SAAA,CAAA9E,IAAA;YAAA;UAAA;UACnEoD,UAAU,CAACqC,KAAK,4DAA4D,CAACxC,EAAE,GAAGjB,QAAQ,CAACtE,WAAW,MAAM,IAAI,IAAIuF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACzF,KAAK,EAAE+F,MAAM,CAAC;UAACuB,SAAA,CAAA9E,IAAA;UAAA,OACzIgC,QAAQ,CAAC6E,oCAAoC,CAACjK,KAAK,EAAE2G,MAAM,EAAE3G,KAAK,CAAC8I,oBAAoB,CAAC,CAAC,EAAEpC,GAAG,CAAC/E,KAAK,CAAC;QAAA;UAAAuG,SAAA,CAAAa,EAAA,GAAAb,SAAA,CAAAzE,IAAA;UAAA,IAAAyE,SAAA,CAAAa,EAAA;YAAAb,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAA8E,SAAA,CAAAa,EAAA,GAAK,EAAE;QAAA;UAA5H9I,MAAM,GAAAiI,SAAA,CAAAa,EAAA;UACZvC,UAAU,CAACqC,KAAK,6DAA6D,CAACvC,EAAE,GAAGlB,QAAQ,CAACtE,WAAW,MAAM,IAAI,IAAIwF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC1F,KAAK,EAAEX,MAAM,CAAC;UAC/JkH,YAAY,CAACtG,IAAI,CAACZ,MAAM,CAAC;UAACiI,SAAA,CAAA9E,IAAA;UAAA;QAAA;UAAAgE,UAAA,GAAA9G,0BAAA,CAGNqG,MAAM;UAAAuB,SAAA,CAAA/E,IAAA;UAAAiE,UAAA,CAAA5G,CAAA;QAAA;UAAA,KAAA6G,MAAA,GAAAD,UAAA,CAAA3G,CAAA,IAAAC,IAAA;YAAAwH,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAfkE,KAAK,GAAAD,MAAA,CAAAzG,KAAA;UAAA,KACR8F,GAAG,CAAC/E,KAAK,CAACuI,uBAAuB;YAAAhC,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAA,OAAA8E,SAAA,CAAA5E,MAAA,WAC1B,IAAI;QAAA;UAAA4E,SAAA,CAAAiC,EAAA,GAEfhD,YAAY;UAAAe,SAAA,CAAA9E,IAAA;UAAA,OAAY4D,YAAY,CAACM,KAAK,CAAC;QAAA;UAAAY,SAAA,CAAAkC,EAAA,GAAAlC,SAAA,CAAAzE,IAAA;UAAAyE,SAAA,CAAAiC,EAAA,CAA9BtJ,IAAI,CAAAwJ,IAAA,CAAAnC,SAAA,CAAAiC,EAAA,EAAAjC,SAAA,CAAAkC,EAAA;QAAA;UAAAlC,SAAA,CAAA9E,IAAA;UAAA;QAAA;UAAA8E,SAAA,CAAA9E,IAAA;UAAA;QAAA;UAAA8E,SAAA,CAAA/E,IAAA;UAAA+E,SAAA,CAAAoC,EAAA,GAAApC,SAAA;UAAAd,UAAA,CAAAnG,CAAA,CAAAiH,SAAA,CAAAoC,EAAA;QAAA;UAAApC,SAAA,CAAA/E,IAAA;UAAAiE,UAAA,CAAAlG,CAAA;UAAA,OAAAgH,SAAA,CAAAqC,MAAA;QAAA;UAEZhD,CAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,CAAC,GAAGZ,MAAM,CAACtD,MAAM;YAAA6E,SAAA,CAAA9E,IAAA;YAAA;UAAA;UACpBoE,CAAC,GAAGD,CAAC,GAAG,CAAC;QAAA;UAAA,MAAEC,CAAC,GAAGb,MAAM,CAACtD,MAAM;YAAA6E,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAA,KAC7BsD,GAAG,CAAC/E,KAAK,CAACuI,uBAAuB;YAAAhC,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAA,OAAA8E,SAAA,CAAA5E,MAAA,WAC1B,IAAI;QAAA;UAAA,KAEX2D,mBAAmB,CAACE,YAAY,CAACI,CAAC,CAAC,EAAEJ,YAAY,CAACK,CAAC,CAAC,CAAC;YAAAU,SAAA,CAAA9E,IAAA;YAAA;UAAA;UACrD;UACMqE,WAAW,GAAGxI,KAAK,CAACsK,SAAS,CAAC5C,MAAM,CAACY,CAAC,CAAC,EAAEZ,MAAM,CAACa,CAAC,CAAC,CAAC;UAAAU,SAAA,CAAA9E,IAAA;UAAA,OACrC4D,YAAY,CAACS,WAAW,CAAC;QAAA;UAAvCC,KAAK,GAAAQ,SAAA,CAAAzE,IAAA;UACXkD,MAAM,CAAC6D,MAAM,CAAChD,CAAC,EAAE,CAAC,CAAC;UACnBb,MAAM,CAAC6D,MAAM,CAACjD,CAAC,EAAE,CAAC,CAAC;UACnBZ,MAAM,CAAC9F,IAAI,CAAC4G,WAAW,CAAC;UACxBN,YAAY,CAACqD,MAAM,CAAChD,CAAC,EAAE,CAAC,CAAC;UACzBL,YAAY,CAACqD,MAAM,CAACjD,CAAC,EAAE,CAAC,CAAC;UACzBJ,YAAY,CAACtG,IAAI,CAAC6G,KAAK,CAAC;UACxB;UACAH,CAAC,GAAG,CAAC;UACLC,CAAC,GAAG,CAAC;QAAC;UAhByB,EAAEA,CAAC;UAAAU,SAAA,CAAA9E,IAAA;UAAA;QAAA;UADX,EAAEmE,CAAC;UAAAW,SAAA,CAAA9E,IAAA;UAAA;QAAA;UAAAuE,EAAA,MAAAC,aAAA,GAsBnBT,YAAY;QAAA;UAAA,MAAAQ,EAAA,GAAAC,aAAA,CAAAvE,MAAA;YAAA6E,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAxByE,QAAQ,GAAAD,aAAA,CAAAD,EAAA;UAAA,KACXjB,GAAG,CAAC/E,KAAK,CAACuI,uBAAuB;YAAAhC,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAA,OAAA8E,SAAA,CAAA5E,MAAA,WAC1B,IAAI;QAAA;UAAA4E,SAAA,CAAA9E,IAAA;UAAA,OAEYmD,aAAa,CAACkE,uBAAuB,CAACzK,KAAK,CAAC0K,GAAG,EAAE7C,QAAQ,CAAC;QAAA;UAA/EC,YAAY,GAAAI,SAAA,CAAAzE,IAAA;UAClB,IAAIqE,YAAY,EAAE;YACdZ,QAAQ,CAACrG,IAAI,CAAAmD,KAAA,CAAbkD,QAAQ,EAAAyD,kBAAA,CAAS7C,YAAY,EAAC;UAClC;QAAC;UAAAH,EAAA;UAAAO,SAAA,CAAA9E,IAAA;UAAA;QAAA;UAAA8E,SAAA,CAAA/E,IAAA;UAILuD,GAAG,CAACnE,OAAO,CAAC,CAAC;UAAC,OAAA2F,SAAA,CAAAqC,MAAA;QAAA;UAAA,MAEdrD,QAAQ,CAAC7D,MAAM,KAAK,CAAC;YAAA6E,SAAA,CAAA9E,IAAA;YAAA;UAAA;UAAA,OAAA8E,SAAA,CAAA5E,MAAA,WACd,KAAK;QAAA;UAEhB,IAAIvE,YAAY,CAAC8F,aAAa,CAAC,EAAE;YAC7B;YACAxF,cAAc,CAACuL,OAAO,CAAC/F,aAAa,EAAEqC,QAAQ,EAAE,IAAI,CAAC;YACrDrC,aAAa,CAACgG,uCAAuC,CAAChG,aAAa,CAACiG,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,0BAA0B,CAAC;UACpH,CAAC,MACI;YACD;YACSxD,MAAK,GAAMJ,QAAQ,IAAnBI,KAAK;YACRU,gBAAgB,GAAG,IAAI9I,SAAS,CAACoI,MAAK,CAACyD,eAAe,EAAEzD,MAAK,CAAC0D,WAAW,EAAE1D,MAAK,CAAC2D,aAAa,EAAE3D,MAAK,CAAC4D,SAAS,CAAC;YACtHlL,KAAK,CAACmL,kBAAkB,CAAC,CAACnD,gBAAgB,CAAC,EAAEd,QAAQ,CAACkE,GAAG,CAAC,UAAAvB,IAAI,EAAI;cAC9D,OAAO;gBACHwB,IAAI,EAAExB,IAAI,CAACwB,IAAI;gBACf/D,KAAK,EAAErI,KAAK,CAACqM,IAAI,CAACzB,IAAI,CAACvC,KAAK,CAAC;gBAC7BiE,gBAAgB,EAAE;cACtB,CAAC;YACL,CAAC,CAAC,EAAE,UAAAC,SAAS,EAAI;cAAA,IAAAC,UAAA,GAAAnL,0BAAA,CACWkL,SAAS;gBAAAE,MAAA;cAAA;gBAAjC,KAAAD,UAAA,CAAAjL,CAAA,MAAAkL,MAAA,GAAAD,UAAA,CAAAhL,CAAA,IAAAC,IAAA,GAAmC;kBAAA,IAAtB4G,OAAK,GAAAoE,MAAA,CAAA9K,KAAA,CAAL0G,KAAK;kBACd,IAAIrI,KAAK,CAACoJ,yBAAyB,CAACf,OAAK,EAAEU,gBAAgB,CAAC,EAAE;oBAC1D,OAAO,CAAC,IAAI9I,SAAS,CAACoI,OAAK,CAACyD,eAAe,EAAEzD,OAAK,CAAC0D,WAAW,EAAE1D,OAAK,CAAC2D,aAAa,EAAE3D,OAAK,CAAC4D,SAAS,CAAC,CAAC;kBAC1G;gBACJ;cAAC,SAAAlK,GAAA;gBAAAyK,UAAA,CAAAxK,CAAA,CAAAD,GAAA;cAAA;gBAAAyK,UAAA,CAAAvK,CAAA;cAAA;cACD,OAAO,IAAI;YACf,CAAC,CAAC;UACN;UACAuF,0BAA0B,CAACkF,UAAU,CAAChM,mBAAmB,CAACiM,MAAM,EAAE;YAAE5G,WAAW,EAAXA;UAAY,CAAC,CAAC;UAAC,OAAAkD,SAAA,CAAA5E,MAAA,WAC5E,IAAI;QAAA;QAAA;UAAA,OAAA4E,SAAA,CAAAxE,IAAA;MAAA;IAAA,GAAA0C,QAAA;EAAA,CACd;EAAA,OAAAD,iCAAA,CAAAnC,KAAA,OAAAC,SAAA;AAAA;AACD,gBAAsB4H,kCAAkCA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,mCAAA,CAAApI,KAAA,OAAAC,SAAA;AAAA;AAUvD,SAAAmI,oCAAA;EAAAA,mCAAA,GAAA3J,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAVM,SAAA0J,SAAkDzH,QAAQ,EAAEC,aAAa,EAAE/B,IAAI,EAAEiC,QAAQ,EAAEpD,KAAK,EAAEqD,WAAW;IAAA,IAAAC,YAAA,EAAAqH,uBAAA,EAAAtM,KAAA,EAAAoF,QAAA,EAAAC,QAAA;IAAA,OAAA3C,mBAAA,GAAAM,IAAA,UAAAuJ,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArJ,IAAA,GAAAqJ,SAAA,CAAApJ,IAAA;QAAA;UAC1G6B,YAAY,GAAGL,QAAQ,CAACY,GAAG,CAAChG,qBAAqB,CAAC;UAClD8M,uBAAuB,GAAG1H,QAAQ,CAACY,GAAG,CAAC/F,wBAAwB,CAAC;UAChEO,KAAK,GAAGjB,YAAY,CAAC8F,aAAa,CAAC,GAAGA,aAAa,CAACY,QAAQ,CAAC,CAAC,GAAGZ,aAAa;UAC9EO,QAAQ,GAAGvF,4CAA4C,CAACyM,uBAAuB,CAACxM,8BAA8B,EAAEwM,uBAAuB,CAACvM,mCAAmC,EAAEC,KAAK,CAAC;UAAAwM,SAAA,CAAApJ,IAAA;UAAA,OAClKtB,mBAAmB,CAAC6B,MAAM,CAACyB,QAAQ,EAAEpF,KAAK,EAAE8C,IAAI,EAAE,CAAC,CAAC,yBAAyB,CAAC;QAAA;UAA/FuC,QAAQ,GAAAmH,SAAA,CAAA/I,IAAA;UAAA,KACV4B,QAAQ;YAAAmH,SAAA,CAAApJ,IAAA;YAAA;UAAA;UACR2B,QAAQ,CAACW,MAAM,CAACL,QAAQ,CAAC;UAACmH,SAAA,CAAApJ,IAAA;UAAA,OACpB6B,YAAY,CAACU,cAAc,CAAC8G,0BAA0B,EAAEpH,QAAQ,EAAER,aAAa,EAAE/B,IAAI,EAAEnB,KAAK,EAAEqD,WAAW,CAAC;QAAA;QAAA;UAAA,OAAAwH,SAAA,CAAA9I,IAAA;MAAA;IAAA,GAAA2I,QAAA;EAAA,CAEvH;EAAA,OAAAD,mCAAA,CAAApI,KAAA,OAAAC,SAAA;AAAA;AACD,gBAAsBwI,0BAA0BA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,2BAAA,CAAAhJ,KAAA,OAAAC,SAAA;AAAA;AAuD/C,SAAA+I,4BAAA;EAAAA,2BAAA,GAAAvK,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAvDM,SAAAsK,SAA0CrI,QAAQ,EAAEQ,QAAQ,EAAEP,aAAa,EAAE/B,IAAI,EAAEnB,KAAK,EAAEqD,WAAW;IAAA,IAAAuB,aAAA,EAAAE,0BAAA,EAAAzG,KAAA,EAAA0G,GAAA,EAAAgB,KAAA,EAAAG,QAAA,EAAAqF,MAAA,EAAAC,OAAA,EAAA7F,KAAA,EAAAU,gBAAA;IAAA,OAAAtF,mBAAA,GAAAM,IAAA,UAAAoK,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAlK,IAAA,GAAAkK,SAAA,CAAAjK,IAAA;QAAA;UAClGmD,aAAa,GAAG3B,QAAQ,CAACY,GAAG,CAACrG,oBAAoB,CAAC;UAClDsH,0BAA0B,GAAG7B,QAAQ,CAACY,GAAG,CAAC5F,2BAA2B,CAAC;UAG5E,IAAIb,YAAY,CAAC8F,aAAa,CAAC,EAAE;YAC7B7E,KAAK,GAAG6E,aAAa,CAACY,QAAQ,CAAC,CAAC;YAChCiB,GAAG,GAAG,IAAI7H,kCAAkC,CAACgG,aAAa,EAAE,CAAC,CAAC,kCAAkC,CAAC,CAAC,oCAAoCtB,SAAS,EAAE5B,KAAK,CAAC;UAC3J,CAAC,MACI;YACD3B,KAAK,GAAG6E,aAAa;YACrB6B,GAAG,GAAG,IAAI5H,gCAAgC,CAAC+F,aAAa,EAAElD,KAAK,CAAC;UACpE;UAAC0L,SAAA,CAAAlK,IAAA;UAAAkK,SAAA,CAAAjK,IAAA;UAAA,OAG0BgC,QAAQ,CAAC3D,8BAA8B,CAACzB,KAAK,EAAEA,KAAK,CAAC8I,oBAAoB,CAAC,CAAC,EAAEpC,GAAG,CAAC/E,KAAK,CAAC;QAAA;UAAxGkG,QAAQ,GAAAwF,SAAA,CAAA5J,IAAA;UAAA4J,SAAA,CAAAjK,IAAA;UAAA,OACAmD,aAAa,CAACkE,uBAAuB,CAACzK,KAAK,CAAC0K,GAAG,EAAE7C,QAAQ,CAAC;QAAA;UAAxEH,KAAK,GAAA2F,SAAA,CAAA5J,IAAA;UAAA,KACDiD,GAAG,CAAC/E,KAAK,CAACuI,uBAAuB;YAAAmD,SAAA,CAAAjK,IAAA;YAAA;UAAA;UAAA,OAAAiK,SAAA,CAAA/J,MAAA,WAC1B,IAAI;QAAA;UAAA+J,SAAA,CAAAlK,IAAA;UAIfuD,GAAG,CAACnE,OAAO,CAAC,CAAC;UAAC,OAAA8K,SAAA,CAAA9C,MAAA;QAAA;UAAA,MAEd,CAAC7C,KAAK,IAAIA,KAAK,CAACrE,MAAM,KAAK,CAAC;YAAAgK,SAAA,CAAAjK,IAAA;YAAA;UAAA;UAAA,OAAAiK,SAAA,CAAA/J,MAAA,WACrB,KAAK;QAAA;UAEhB,IAAIvE,YAAY,CAAC8F,aAAa,CAAC,EAAE;YAC7B;YACAxF,cAAc,CAACuL,OAAO,CAAC/F,aAAa,EAAE6C,KAAK,EAAE5E,IAAI,KAAK,CAAC,CAAC,2BAA2B,CAAC;YACpF,IAAIA,IAAI,KAAK,CAAC,CAAC,6BAA6B;cACxC+B,aAAa,CAACgG,uCAAuC,CAAChG,aAAa,CAACiG,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,0BAA0B,CAAC;YACpH;UACJ,CAAC,MACI;YACD;YAAAoC,MAAA,GACoBxF,KAAK,EAAAyF,OAAA,GAAAG,cAAA,CAAAJ,MAAA,MAAhB5F,KAAK,GAAA6F,OAAA,IAAL7F,KAAK;YACRU,gBAAgB,GAAG,IAAI9I,SAAS,CAACoI,KAAK,CAACyD,eAAe,EAAEzD,KAAK,CAAC0D,WAAW,EAAE1D,KAAK,CAAC2D,aAAa,EAAE3D,KAAK,CAAC4D,SAAS,CAAC;YACtHlL,KAAK,CAACmL,kBAAkB,CAAC,CAACnD,gBAAgB,CAAC,EAAEN,KAAK,CAAC0D,GAAG,CAAC,UAAAvB,IAAI,EAAI;cAC3D,OAAO;gBACHwB,IAAI,EAAExB,IAAI,CAACwB,IAAI;gBACf/D,KAAK,EAAErI,KAAK,CAACqM,IAAI,CAACzB,IAAI,CAACvC,KAAK,CAAC;gBAC7BiE,gBAAgB,EAAE;cACtB,CAAC;YACL,CAAC,CAAC,EAAE,UAAAC,SAAS,EAAI;cAAA,IAAA+B,UAAA,GAAAjN,0BAAA,CACWkL,SAAS;gBAAAgC,MAAA;cAAA;gBAAjC,KAAAD,UAAA,CAAA/M,CAAA,MAAAgN,MAAA,GAAAD,UAAA,CAAA9M,CAAA,IAAAC,IAAA,GAAmC;kBAAA,IAAtB4G,OAAK,GAAAkG,MAAA,CAAA5M,KAAA,CAAL0G,KAAK;kBACd,IAAIrI,KAAK,CAACoJ,yBAAyB,CAACf,OAAK,EAAEU,gBAAgB,CAAC,EAAE;oBAC1D,OAAO,CAAC,IAAI9I,SAAS,CAACoI,OAAK,CAACyD,eAAe,EAAEzD,OAAK,CAAC0D,WAAW,EAAE1D,OAAK,CAAC2D,aAAa,EAAE3D,OAAK,CAAC4D,SAAS,CAAC,CAAC;kBAC1G;gBACJ;cAAC,SAAAlK,GAAA;gBAAAuM,UAAA,CAAAtM,CAAA,CAAAD,GAAA;cAAA;gBAAAuM,UAAA,CAAArM,CAAA;cAAA;cACD,OAAO,IAAI;YACf,CAAC,CAAC;UACN;UACAuF,0BAA0B,CAACkF,UAAU,CAAChM,mBAAmB,CAACiM,MAAM,EAAE;YAAE5G,WAAW,EAAXA;UAAY,CAAC,CAAC;UAAC,OAAAqI,SAAA,CAAA/J,MAAA,WAC5E,IAAI;QAAA;QAAA;UAAA,OAAA+J,SAAA,CAAA3J,IAAA;MAAA;IAAA,GAAAuJ,QAAA;EAAA,CACd;EAAA,OAAAD,2BAAA,CAAAhJ,KAAA,OAAAC,SAAA;AAAA;AACD,gBAAsBwJ,0CAA0CA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,2CAAA,CAAAhK,KAAA,OAAAC,SAAA;AAAA;AAS/D,SAAA+J,4CAAA;EAAAA,2CAAA,GAAAvL,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CATM,SAAAsL,UAA0D1H,aAAa,EAAE+F,uBAAuB,EAAEtM,KAAK,EAAEsH,KAAK,EAAE5F,OAAO,EAAEC,KAAK;IAAA,IAAAuM,SAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAhJ,QAAA,EAAAyC,QAAA;IAAA,OAAAnF,mBAAA,GAAAM,IAAA,UAAAqL,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAnL,IAAA,GAAAmL,UAAA,CAAAlL,IAAA;QAAA;UAC3H8K,SAAS,GAAG5B,uBAAuB,CAACvM,mCAAmC,CAACK,OAAO,CAACJ,KAAK,CAAC;UAAAmO,UAAA,GAAA7N,0BAAA,CACrE4N,SAAS;UAAAI,UAAA,CAAAnL,IAAA;UAAAgL,UAAA,CAAA3N,CAAA;QAAA;UAAA,KAAA4N,MAAA,GAAAD,UAAA,CAAA1N,CAAA,IAAAC,IAAA;YAAA4N,UAAA,CAAAlL,IAAA;YAAA;UAAA;UAArBgC,QAAQ,GAAAgJ,MAAA,CAAAxN,KAAA;UAAA0N,UAAA,CAAAlL,IAAA;UAAA,OACQmL,OAAO,CAACC,OAAO,CAACpJ,QAAQ,CAACxD,mCAAmC,CAAC5B,KAAK,EAAEsH,KAAK,EAAE5F,OAAO,EAAEC,KAAK,CAAC,CAAC,SAAM,CAACnD,yBAAyB,CAAC;QAAA;UAA7IqJ,QAAQ,GAAAyG,UAAA,CAAA7K,IAAA;UAAA,KACVnF,eAAe,CAACuJ,QAAQ,CAAC;YAAAyG,UAAA,CAAAlL,IAAA;YAAA;UAAA;UAAAkL,UAAA,CAAAlL,IAAA;UAAA,OACZmD,aAAa,CAACkE,uBAAuB,CAACzK,KAAK,CAAC0K,GAAG,EAAE7C,QAAQ,CAAC;QAAA;UAAA,OAAAyG,UAAA,CAAAhL,MAAA,WAAAgL,UAAA,CAAA7K,IAAA;QAAA;UAAA6K,UAAA,CAAAlL,IAAA;UAAA;QAAA;UAAAkL,UAAA,CAAAlL,IAAA;UAAA;QAAA;UAAAkL,UAAA,CAAAnL,IAAA;UAAAmL,UAAA,CAAAvF,EAAA,GAAAuF,UAAA;UAAAH,UAAA,CAAAlN,CAAA,CAAAqN,UAAA,CAAAvF,EAAA;QAAA;UAAAuF,UAAA,CAAAnL,IAAA;UAAAgL,UAAA,CAAAjN,CAAA;UAAA,OAAAoN,UAAA,CAAA/D,MAAA;QAAA;UAAA,OAAA+D,UAAA,CAAAhL,MAAA,WAGxEC,SAAS;QAAA;QAAA;UAAA,OAAA+K,UAAA,CAAA5K,IAAA;MAAA;IAAA,GAAAuK,SAAA;EAAA,CACnB;EAAA,OAAAD,2CAAA,CAAAhK,KAAA,OAAAC,SAAA;AAAA;AACD,gBAAsBwK,qCAAqCA,CAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;EAAA,OAAAC,sCAAA,CAAA/K,KAAA,OAAAC,SAAA;AAAA;AAS1D,SAAA8K,uCAAA;EAAAA,sCAAA,GAAAtM,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CATM,SAAAqM,UAAqDzI,aAAa,EAAE+F,uBAAuB,EAAEtM,KAAK,EAAE0B,OAAO,EAAEC,KAAK;IAAA,IAAAuM,SAAA,EAAAe,WAAA,EAAAC,OAAA,EAAA9J,QAAA,EAAAyC,QAAA;IAAA,OAAAnF,mBAAA,GAAAM,IAAA,UAAAmM,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAjM,IAAA,GAAAiM,UAAA,CAAAhM,IAAA;QAAA;UAC/G8K,SAAS,GAAGrO,4CAA4C,CAACyM,uBAAuB,CAACxM,8BAA8B,EAAEwM,uBAAuB,CAACvM,mCAAmC,EAAEC,KAAK,CAAC;UAAAiP,WAAA,GAAA3O,0BAAA,CACnK4N,SAAS;UAAAkB,UAAA,CAAAjM,IAAA;UAAA8L,WAAA,CAAAzO,CAAA;QAAA;UAAA,KAAA0O,OAAA,GAAAD,WAAA,CAAAxO,CAAA,IAAAC,IAAA;YAAA0O,UAAA,CAAAhM,IAAA;YAAA;UAAA;UAArBgC,QAAQ,GAAA8J,OAAA,CAAAtO,KAAA;UAAAwO,UAAA,CAAAhM,IAAA;UAAA,OACQmL,OAAO,CAACC,OAAO,CAACpJ,QAAQ,CAAC3D,8BAA8B,CAACzB,KAAK,EAAE0B,OAAO,EAAEC,KAAK,CAAC,CAAC,SAAM,CAACnD,yBAAyB,CAAC;QAAA;UAAjIqJ,QAAQ,GAAAuH,UAAA,CAAA3L,IAAA;UAAA,KACVnF,eAAe,CAACuJ,QAAQ,CAAC;YAAAuH,UAAA,CAAAhM,IAAA;YAAA;UAAA;UAAAgM,UAAA,CAAAhM,IAAA;UAAA,OACZmD,aAAa,CAACkE,uBAAuB,CAACzK,KAAK,CAAC0K,GAAG,EAAE7C,QAAQ,CAAC;QAAA;UAAA,OAAAuH,UAAA,CAAA9L,MAAA,WAAA8L,UAAA,CAAA3L,IAAA;QAAA;UAAA2L,UAAA,CAAAhM,IAAA;UAAA;QAAA;UAAAgM,UAAA,CAAAhM,IAAA;UAAA;QAAA;UAAAgM,UAAA,CAAAjM,IAAA;UAAAiM,UAAA,CAAArG,EAAA,GAAAqG,UAAA;UAAAH,WAAA,CAAAhO,CAAA,CAAAmO,UAAA,CAAArG,EAAA;QAAA;UAAAqG,UAAA,CAAAjM,IAAA;UAAA8L,WAAA,CAAA/N,CAAA;UAAA,OAAAkO,UAAA,CAAA7E,MAAA;QAAA;UAAA,OAAA6E,UAAA,CAAA9L,MAAA,WAGxEC,SAAS;QAAA;QAAA;UAAA,OAAA6L,UAAA,CAAA1L,IAAA;MAAA;IAAA,GAAAsL,SAAA;EAAA,CACnB;EAAA,OAAAD,sCAAA,CAAA/K,KAAA,OAAAC,SAAA;AAAA;AACD,OAAO,SAASoL,wBAAwBA,CAAC9I,aAAa,EAAE+F,uBAAuB,EAAEtM,KAAK,EAAEsP,QAAQ,EAAEC,EAAE,EAAE7N,OAAO,EAAEC,KAAK,EAAE;EAClH,IAAMuM,SAAS,GAAG5B,uBAAuB,CAACkD,4BAA4B,CAACpP,OAAO,CAACJ,KAAK,CAAC;EACrF,IAAIkO,SAAS,CAAC7K,MAAM,KAAK,CAAC,EAAE;IACxB,OAAOkL,OAAO,CAACC,OAAO,CAACjL,SAAS,CAAC;EACrC;EACA,IAAI2K,SAAS,CAAC,CAAC,CAAC,CAACuB,2BAA2B,CAACC,OAAO,CAACH,EAAE,CAAC,GAAG,CAAC,EAAE;IAC1D,OAAOhB,OAAO,CAACC,OAAO,CAACjL,SAAS,CAAC;EACrC;EACA,OAAOgL,OAAO,CAACC,OAAO,CAACN,SAAS,CAAC,CAAC,CAAC,CAACyB,4BAA4B,CAAC3P,KAAK,EAAEsP,QAAQ,EAAEC,EAAE,EAAE7N,OAAO,EAAEC,KAAK,CAAC,CAAC,SAAM,CAACnD,yBAAyB,CAAC,CAACoR,IAAI,CAAC,UAAAlI,KAAK,EAAI;IAClJ,OAAOnB,aAAa,CAACkE,uBAAuB,CAACzK,KAAK,CAAC0K,GAAG,EAAEhD,KAAK,CAAC;EAClE,CAAC,CAAC;AACN;AACApI,gBAAgB,CAACuQ,eAAe,CAAC,6BAA6B;EAAA,IAAAC,IAAA,GAAArN,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAoN,SAAgBnL,QAAQ;IAAA,IAAAoL,IAAA;MAAAC,IAAA;MAAAC,IAAA;MAAAC,QAAA;MAAA7I,KAAA;MAAA5F,OAAA;MAAA0O,eAAA;MAAA7J,aAAA;MAAA+F,uBAAA;MAAA+D,SAAA;MAAAC,MAAA,GAAArM,SAAA;IAAA,OAAAvB,mBAAA,GAAAM,IAAA,UAAAuN,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArN,IAAA,GAAAqN,SAAA,CAAApN,IAAA;QAAA;UAAA,KAAA4M,IAAA,GAAAM,MAAA,CAAAjN,MAAA,EAAK4M,IAAI,OAAAQ,KAAA,CAAAT,IAAA,OAAAA,IAAA,WAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;YAAJD,IAAI,CAAAC,IAAA,QAAAI,MAAA,CAAAJ,IAAA;UAAA;UACtFC,QAAQ,GAAoBF,IAAI,KAAtB3I,KAAK,GAAa2I,IAAI,KAAfvO,OAAO,GAAIuO,IAAI;UACvCtR,UAAU,CAACC,GAAG,CAAC8R,KAAK,CAACP,QAAQ,CAAC,CAAC;UAC/BxR,UAAU,CAACM,KAAK,CAAC0R,QAAQ,CAACrJ,KAAK,CAAC,CAAC;UAC3B8I,eAAe,GAAGxL,QAAQ,CAACY,GAAG,CAACpG,iBAAiB,CAAC;UACjDmH,aAAa,GAAG3B,QAAQ,CAACY,GAAG,CAACrG,oBAAoB,CAAC;UAClDmN,uBAAuB,GAAG1H,QAAQ,CAACY,GAAG,CAAC/F,wBAAwB,CAAC;UAAA+Q,SAAA,CAAApN,IAAA;UAAA,OAC9CgN,eAAe,CAACQ,oBAAoB,CAACT,QAAQ,CAAC;QAAA;UAAhEE,SAAS,GAAAG,SAAA,CAAA/M,IAAA;UAAA+M,SAAA,CAAArN,IAAA;UAAA,OAAAqN,SAAA,CAAAlN,MAAA,WAEJmK,0CAA0C,CAAClH,aAAa,EAAE+F,uBAAuB,EAAE+D,SAAS,CAACQ,MAAM,CAACC,eAAe,EAAE7R,KAAK,CAACqM,IAAI,CAAChE,KAAK,CAAC,EAAE5F,OAAO,EAAEnD,iBAAiB,CAACwS,IAAI,CAAC;QAAA;UAAAP,SAAA,CAAArN,IAAA;UAG/KkN,SAAS,CAAC9N,OAAO,CAAC,CAAC;UAAC,OAAAiO,SAAA,CAAAjG,MAAA;QAAA;QAAA;UAAA,OAAAiG,SAAA,CAAA9M,IAAA;MAAA;IAAA,GAAAqM,QAAA;EAAA,CAE3B;EAAA,iBAAAiB,IAAA;IAAA,OAAAlB,IAAA,CAAA9L,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AACF3E,gBAAgB,CAACuQ,eAAe,CAAC,gCAAgC;EAAA,IAAAoB,KAAA,GAAAxO,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAuO,SAAgBtM,QAAQ;IAAA,IAAAuM,KAAA;MAAAlB,IAAA;MAAAmB,KAAA;MAAAjB,QAAA;MAAAzO,OAAA;MAAA0O,eAAA;MAAA7J,aAAA;MAAA+F,uBAAA;MAAA+D,SAAA;MAAAgB,MAAA,GAAApN,SAAA;IAAA,OAAAvB,mBAAA,GAAAM,IAAA,UAAAsO,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApO,IAAA,GAAAoO,SAAA,CAAAnO,IAAA;QAAA;UAAA,KAAA+N,KAAA,GAAAE,MAAA,CAAAhO,MAAA,EAAK4M,IAAI,OAAAQ,KAAA,CAAAU,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;YAAJnB,IAAI,CAAAmB,KAAA,QAAAC,MAAA,CAAAD,KAAA;UAAA;UACzFjB,QAAQ,GAAaF,IAAI,KAAfvO,OAAO,GAAIuO,IAAI;UAChCtR,UAAU,CAACC,GAAG,CAAC8R,KAAK,CAACP,QAAQ,CAAC,CAAC;UACzBC,eAAe,GAAGxL,QAAQ,CAACY,GAAG,CAACpG,iBAAiB,CAAC;UACjDmH,aAAa,GAAG3B,QAAQ,CAACY,GAAG,CAACrG,oBAAoB,CAAC;UAClDmN,uBAAuB,GAAG1H,QAAQ,CAACY,GAAG,CAAC/F,wBAAwB,CAAC;UAAA8R,SAAA,CAAAnO,IAAA;UAAA,OAC9CgN,eAAe,CAACQ,oBAAoB,CAACT,QAAQ,CAAC;QAAA;UAAhEE,SAAS,GAAAkB,SAAA,CAAA9N,IAAA;UAAA8N,SAAA,CAAApO,IAAA;UAAA,OAAAoO,SAAA,CAAAjO,MAAA,WAEJmL,qCAAqC,CAAClI,aAAa,EAAE+F,uBAAuB,EAAE+D,SAAS,CAACQ,MAAM,CAACC,eAAe,EAAEpP,OAAO,EAAEnD,iBAAiB,CAACwS,IAAI,CAAC;QAAA;UAAAQ,SAAA,CAAApO,IAAA;UAGvJkN,SAAS,CAAC9N,OAAO,CAAC,CAAC;UAAC,OAAAgP,SAAA,CAAAhH,MAAA;QAAA;QAAA;UAAA,OAAAgH,SAAA,CAAA7N,IAAA;MAAA;IAAA,GAAAwN,QAAA;EAAA,CAE3B;EAAA,iBAAAM,IAAA;IAAA,OAAAP,KAAA,CAAAjN,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC;AACF3E,gBAAgB,CAACuQ,eAAe,CAAC,8BAA8B;EAAA,IAAA4B,KAAA,GAAAhP,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAA+O,SAAgB9M,QAAQ;IAAA,IAAA+M,KAAA;MAAA1B,IAAA;MAAA2B,KAAA;MAAAzB,QAAA;MAAAb,QAAA;MAAAC,EAAA;MAAA7N,OAAA;MAAA0O,eAAA;MAAA7J,aAAA;MAAA+F,uBAAA;MAAA+D,SAAA;MAAAwB,MAAA,GAAA5N,SAAA;IAAA,OAAAvB,mBAAA,GAAAM,IAAA,UAAA8O,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA5O,IAAA,GAAA4O,SAAA,CAAA3O,IAAA;QAAA;UAAA,KAAAuO,KAAA,GAAAE,MAAA,CAAAxO,MAAA,EAAK4M,IAAI,OAAAQ,KAAA,CAAAkB,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;YAAJ3B,IAAI,CAAA2B,KAAA,QAAAC,MAAA,CAAAD,KAAA;UAAA;UACvFzB,QAAQ,GAA2BF,IAAI,KAA7BX,QAAQ,GAAiBW,IAAI,KAAnBV,EAAE,GAAaU,IAAI,KAAfvO,OAAO,GAAIuO,IAAI;UAC9CtR,UAAU,CAACC,GAAG,CAAC8R,KAAK,CAACP,QAAQ,CAAC,CAAC;UAC/BxR,UAAU,CAACK,QAAQ,CAACgT,WAAW,CAAC1C,QAAQ,CAAC,CAAC;UAC1C3Q,UAAU,CAAC,OAAO4Q,EAAE,KAAK,QAAQ,CAAC;UAC5Ba,eAAe,GAAGxL,QAAQ,CAACY,GAAG,CAACpG,iBAAiB,CAAC;UACjDmH,aAAa,GAAG3B,QAAQ,CAACY,GAAG,CAACrG,oBAAoB,CAAC;UAClDmN,uBAAuB,GAAG1H,QAAQ,CAACY,GAAG,CAAC/F,wBAAwB,CAAC;UAAAsS,SAAA,CAAA3O,IAAA;UAAA,OAC9CgN,eAAe,CAACQ,oBAAoB,CAACT,QAAQ,CAAC;QAAA;UAAhEE,SAAS,GAAA0B,SAAA,CAAAtO,IAAA;UAAAsO,SAAA,CAAA5O,IAAA;UAAA,OAAA4O,SAAA,CAAAzO,MAAA,WAEJ+L,wBAAwB,CAAC9I,aAAa,EAAE+F,uBAAuB,EAAE+D,SAAS,CAACQ,MAAM,CAACC,eAAe,EAAE9R,QAAQ,CAACsM,IAAI,CAACgE,QAAQ,CAAC,EAAEC,EAAE,EAAE7N,OAAO,EAAEnD,iBAAiB,CAACwS,IAAI,CAAC;QAAA;UAAAgB,SAAA,CAAA5O,IAAA;UAGvKkN,SAAS,CAAC9N,OAAO,CAAC,CAAC;UAAC,OAAAwP,SAAA,CAAAxH,MAAA;QAAA;QAAA;UAAA,OAAAwH,SAAA,CAAArO,IAAA;MAAA;IAAA,GAAAgO,QAAA;EAAA,CAE3B;EAAA,iBAAAO,IAAA;IAAA,OAAAR,KAAA,CAAAzN,KAAA,OAAAC,SAAA;EAAA;AAAA,IAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}