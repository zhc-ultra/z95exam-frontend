{"ast":null,"code":"import _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport var FindDecorations = /*#__PURE__*/function () {\n  function FindDecorations(editor) {\n    _classCallCheck(this, FindDecorations);\n    this._editor = editor;\n    this._decorations = [];\n    this._overviewRulerApproximateDecorations = [];\n    this._findScopeDecorationIds = [];\n    this._rangeHighlightDecorationId = null;\n    this._highlightedDecorationId = null;\n    this._startPosition = this._editor.getPosition();\n  }\n  return _createClass(FindDecorations, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._editor.removeDecorations(this._allDecorations());\n      this._decorations = [];\n      this._overviewRulerApproximateDecorations = [];\n      this._findScopeDecorationIds = [];\n      this._rangeHighlightDecorationId = null;\n      this._highlightedDecorationId = null;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._decorations = [];\n      this._overviewRulerApproximateDecorations = [];\n      this._findScopeDecorationIds = [];\n      this._rangeHighlightDecorationId = null;\n      this._highlightedDecorationId = null;\n    }\n  }, {\n    key: \"getCount\",\n    value: function getCount() {\n      return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n  }, {\n    key: \"getFindScope\",\n    value: function getFindScope() {\n      if (this._findScopeDecorationIds[0]) {\n        return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n      }\n      return null;\n    }\n  }, {\n    key: \"getFindScopes\",\n    value: function getFindScopes() {\n      var _this = this;\n      if (this._findScopeDecorationIds.length) {\n        var scopes = this._findScopeDecorationIds.map(function (findScopeDecorationId) {\n          return _this._editor.getModel().getDecorationRange(findScopeDecorationId);\n        }).filter(function (element) {\n          return !!element;\n        });\n        if (scopes.length) {\n          return scopes;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getStartPosition\",\n    value: function getStartPosition() {\n      return this._startPosition;\n    }\n  }, {\n    key: \"setStartPosition\",\n    value: function setStartPosition(newStartPosition) {\n      this._startPosition = newStartPosition;\n      this.setCurrentFindMatch(null);\n    }\n  }, {\n    key: \"_getDecorationIndex\",\n    value: function _getDecorationIndex(decorationId) {\n      var index = this._decorations.indexOf(decorationId);\n      if (index >= 0) {\n        return index + 1;\n      }\n      return 1;\n    }\n  }, {\n    key: \"getDecorationRangeAt\",\n    value: function getDecorationRangeAt(index) {\n      var decorationId = index < this._decorations.length ? this._decorations[index] : null;\n      if (decorationId) {\n        return this._editor.getModel().getDecorationRange(decorationId);\n      }\n      return null;\n    }\n  }, {\n    key: \"getCurrentMatchesPosition\",\n    value: function getCurrentMatchesPosition(desiredRange) {\n      var candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n      var _iterator = _createForOfIteratorHelper(candidates),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var candidate = _step.value;\n          var candidateOpts = candidate.options;\n          if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n            return this._getDecorationIndex(candidate.id);\n          }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return 0;\n    }\n  }, {\n    key: \"setCurrentFindMatch\",\n    value: function setCurrentFindMatch(nextMatch) {\n      var _this2 = this;\n      var newCurrentDecorationId = null;\n      var matchPosition = 0;\n      if (nextMatch) {\n        for (var i = 0, len = this._decorations.length; i < len; i++) {\n          var range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n          if (nextMatch.equalsRange(range)) {\n            newCurrentDecorationId = this._decorations[i];\n            matchPosition = i + 1;\n            break;\n          }\n        }\n      }\n      if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n        this._editor.changeDecorations(function (changeAccessor) {\n          if (_this2._highlightedDecorationId !== null) {\n            changeAccessor.changeDecorationOptions(_this2._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n            _this2._highlightedDecorationId = null;\n          }\n          if (newCurrentDecorationId !== null) {\n            _this2._highlightedDecorationId = newCurrentDecorationId;\n            changeAccessor.changeDecorationOptions(_this2._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n          }\n          if (_this2._rangeHighlightDecorationId !== null) {\n            changeAccessor.removeDecoration(_this2._rangeHighlightDecorationId);\n            _this2._rangeHighlightDecorationId = null;\n          }\n          if (newCurrentDecorationId !== null) {\n            var rng = _this2._editor.getModel().getDecorationRange(newCurrentDecorationId);\n            if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n              var lineBeforeEnd = rng.endLineNumber - 1;\n              var lineBeforeEndMaxColumn = _this2._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n              rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n            }\n            _this2._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n          }\n        });\n      }\n      return matchPosition;\n    }\n  }, {\n    key: \"set\",\n    value: function set(findMatches, findScopes) {\n      var _this3 = this;\n      this._editor.changeDecorations(function (accessor) {\n        var findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n        var newOverviewRulerApproximateDecorations = [];\n        if (findMatches.length > 1000) {\n          // we go into a mode where the overview ruler gets \"approximate\" decorations\n          // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n          findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n          // approximate a distance in lines where matches should be merged\n          var lineCount = _this3._editor.getModel().getLineCount();\n          var height = _this3._editor.getLayoutInfo().height;\n          var approxPixelsPerLine = height / lineCount;\n          var mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n          // merge decorations as much as possible\n          var prevStartLineNumber = findMatches[0].range.startLineNumber;\n          var prevEndLineNumber = findMatches[0].range.endLineNumber;\n          for (var i = 1, len = findMatches.length; i < len; i++) {\n            var range = findMatches[i].range;\n            if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n              if (range.endLineNumber > prevEndLineNumber) {\n                prevEndLineNumber = range.endLineNumber;\n              }\n            } else {\n              newOverviewRulerApproximateDecorations.push({\n                range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n              });\n              prevStartLineNumber = range.startLineNumber;\n              prevEndLineNumber = range.endLineNumber;\n            }\n          }\n          newOverviewRulerApproximateDecorations.push({\n            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n          });\n        }\n        // Find matches\n        var newFindMatchesDecorations = new Array(findMatches.length);\n        for (var _i = 0, _len = findMatches.length; _i < _len; _i++) {\n          newFindMatchesDecorations[_i] = {\n            range: findMatches[_i].range,\n            options: findMatchesOptions\n          };\n        }\n        _this3._decorations = accessor.deltaDecorations(_this3._decorations, newFindMatchesDecorations);\n        // Overview ruler approximate decorations\n        _this3._overviewRulerApproximateDecorations = accessor.deltaDecorations(_this3._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n        // Range highlight\n        if (_this3._rangeHighlightDecorationId) {\n          accessor.removeDecoration(_this3._rangeHighlightDecorationId);\n          _this3._rangeHighlightDecorationId = null;\n        }\n        // Find scope\n        if (_this3._findScopeDecorationIds.length) {\n          _this3._findScopeDecorationIds.forEach(function (findScopeDecorationId) {\n            return accessor.removeDecoration(findScopeDecorationId);\n          });\n          _this3._findScopeDecorationIds = [];\n        }\n        if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n          _this3._findScopeDecorationIds = findScopes.map(function (findScope) {\n            return accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"matchBeforePosition\",\n    value: function matchBeforePosition(position) {\n      if (this._decorations.length === 0) {\n        return null;\n      }\n      for (var i = this._decorations.length - 1; i >= 0; i--) {\n        var decorationId = this._decorations[i];\n        var r = this._editor.getModel().getDecorationRange(decorationId);\n        if (!r || r.endLineNumber > position.lineNumber) {\n          continue;\n        }\n        if (r.endLineNumber < position.lineNumber) {\n          return r;\n        }\n        if (r.endColumn > position.column) {\n          continue;\n        }\n        return r;\n      }\n      return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n  }, {\n    key: \"matchAfterPosition\",\n    value: function matchAfterPosition(position) {\n      if (this._decorations.length === 0) {\n        return null;\n      }\n      for (var i = 0, len = this._decorations.length; i < len; i++) {\n        var decorationId = this._decorations[i];\n        var r = this._editor.getModel().getDecorationRange(decorationId);\n        if (!r || r.startLineNumber < position.lineNumber) {\n          continue;\n        }\n        if (r.startLineNumber > position.lineNumber) {\n          return r;\n        }\n        if (r.startColumn < position.column) {\n          continue;\n        }\n        return r;\n      }\n      return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n  }, {\n    key: \"_allDecorations\",\n    value: function _allDecorations() {\n      var result = [];\n      result = result.concat(this._decorations);\n      result = result.concat(this._overviewRulerApproximateDecorations);\n      if (this._findScopeDecorationIds.length) {\n        var _result;\n        (_result = result).push.apply(_result, _toConsumableArray(this._findScopeDecorationIds));\n      }\n      if (this._rangeHighlightDecorationId) {\n        result.push(this._rangeHighlightDecorationId);\n      }\n      return result;\n    }\n  }]);\n}();\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n  description: 'current-find-match',\n  stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n  zIndex: 13,\n  className: 'currentFindMatch',\n  showIfCollapsed: true,\n  overviewRuler: {\n    color: themeColorFromId(overviewRulerFindMatchForeground),\n    position: OverviewRulerLane.Center\n  },\n  minimap: {\n    color: themeColorFromId(minimapFindMatch),\n    position: 1 /* MinimapPosition.Inline */\n  }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n  description: 'find-match',\n  stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n  zIndex: 10,\n  className: 'findMatch',\n  showIfCollapsed: true,\n  overviewRuler: {\n    color: themeColorFromId(overviewRulerFindMatchForeground),\n    position: OverviewRulerLane.Center\n  },\n  minimap: {\n    color: themeColorFromId(minimapFindMatch),\n    position: 1 /* MinimapPosition.Inline */\n  }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n  description: 'find-match-no-overview',\n  stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n  className: 'findMatch',\n  showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n  description: 'find-match-only-overview',\n  stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n  overviewRuler: {\n    color: themeColorFromId(overviewRulerFindMatchForeground),\n    position: OverviewRulerLane.Center\n  }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n  description: 'find-range-highlight',\n  stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n  className: 'rangeHighlight',\n  isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n  description: 'find-scope',\n  className: 'findScope',\n  isWholeLine: true\n});","map":{"version":3,"names":["Range","OverviewRulerLane","ModelDecorationOptions","minimapFindMatch","overviewRulerFindMatchForeground","themeColorFromId","FindDecorations","editor","_classCallCheck","_editor","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","getPosition","_createClass","key","value","dispose","removeDecorations","_allDecorations","reset","getCount","length","getFindScope","getModel","getDecorationRange","getFindScopes","_this","scopes","map","findScopeDecorationId","filter","element","getStartPosition","setStartPosition","newStartPosition","setCurrentFindMatch","_getDecorationIndex","decorationId","index","indexOf","getDecorationRangeAt","getCurrentMatchesPosition","desiredRange","candidates","getDecorationsInRange","_iterator","_createForOfIteratorHelper","_step","s","n","done","candidate","candidateOpts","options","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","id","err","e","f","nextMatch","_this2","newCurrentDecorationId","matchPosition","i","len","range","equalsRange","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","startLineNumber","endLineNumber","endColumn","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","startColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","set","findMatches","findScopes","_this3","accessor","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","height","getLayoutInfo","approxPixelsPerLine","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","push","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","Array","deltaDecorations","forEach","findScope","_FIND_SCOPE_DECORATION","matchBeforePosition","position","r","lineNumber","column","matchAfterPosition","result","concat","_result","apply","_toConsumableArray","register","description","stickiness","zIndex","className","showIfCollapsed","overviewRuler","color","Center","minimap","isWholeLine"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.removeDecorations(this._allDecorations());\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getDecorationRangeAt(index) {\n        const decorationId = index < this._decorations.length ? this._decorations[index] : null;\n        if (decorationId) {\n            return this._editor.getModel().getDecorationRange(decorationId);\n        }\n        return null;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        const candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                const range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        const lineBeforeEnd = rng.endLineNumber - 1;\n                        const lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            const newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            const newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: 1 /* MinimapPosition.Inline */\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: 1 /* MinimapPosition.Inline */\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}