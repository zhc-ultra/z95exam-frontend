{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nexport var foreground = registerColor('foreground', {\n  dark: '#CCCCCC',\n  light: '#616161',\n  hcDark: '#FFFFFF',\n  hcLight: '#292929'\n}, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport var disabledForeground = registerColor('disabledForeground', {\n  dark: '#CCCCCC80',\n  light: '#61616180',\n  hcDark: '#A5A5A5',\n  hcLight: '#7F7F7F'\n}, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport var errorForeground = registerColor('errorForeground', {\n  dark: '#F48771',\n  light: '#A1260D',\n  hcDark: '#F48771',\n  hcLight: '#B5200D'\n}, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport var descriptionForeground = registerColor('descriptionForeground', {\n  light: '#717171',\n  dark: transparent(foreground, 0.7),\n  hcDark: transparent(foreground, 0.7),\n  hcLight: transparent(foreground, 0.7)\n}, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport var iconForeground = registerColor('icon.foreground', {\n  dark: '#C5C5C5',\n  light: '#424242',\n  hcDark: '#FFFFFF',\n  hcLight: '#292929'\n}, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport var focusBorder = registerColor('focusBorder', {\n  dark: '#007FD4',\n  light: '#0090F1',\n  hcDark: '#F38518',\n  hcLight: '#006BBD'\n}, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport var contrastBorder = registerColor('contrastBorder', {\n  light: null,\n  dark: null,\n  hcDark: '#6FC3DF',\n  hcLight: '#0F4A85'\n}, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport var activeContrastBorder = registerColor('contrastActiveBorder', {\n  light: null,\n  dark: null,\n  hcDark: focusBorder,\n  hcLight: focusBorder\n}, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport var selectionBackground = registerColor('selection.background', {\n  light: null,\n  dark: null,\n  hcDark: null,\n  hcLight: null\n}, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text link\nexport var textLinkForeground = registerColor('textLink.foreground', {\n  light: '#006AB1',\n  dark: '#3794FF',\n  hcDark: '#21A6FF',\n  hcLight: '#0F4A85'\n}, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport var textLinkActiveForeground = registerColor('textLink.activeForeground', {\n  light: '#006AB1',\n  dark: '#3794FF',\n  hcDark: '#21A6FF',\n  hcLight: '#0F4A85'\n}, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport var textSeparatorForeground = registerColor('textSeparator.foreground', {\n  light: '#0000002e',\n  dark: '#ffffff2e',\n  hcDark: Color.black,\n  hcLight: '#292929'\n}, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\n// ------ text preformat\nexport var textPreformatForeground = registerColor('textPreformat.foreground', {\n  light: '#A31515',\n  dark: '#D7BA7D',\n  hcDark: '#000000',\n  hcLight: '#FFFFFF'\n}, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport var textPreformatBackground = registerColor('textPreformat.background', {\n  light: '#0000001A',\n  dark: '#FFFFFF1A',\n  hcDark: '#FFFFFF',\n  hcLight: '#09345f'\n}, nls.localize('textPreformatBackground', \"Background color for preformatted text segments.\"));\n// ------ text block quote\nexport var textBlockQuoteBackground = registerColor('textBlockQuote.background', {\n  light: '#f2f2f2',\n  dark: '#222222',\n  hcDark: null,\n  hcLight: '#F2F2F2'\n}, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport var textBlockQuoteBorder = registerColor('textBlockQuote.border', {\n  light: '#007acc80',\n  dark: '#007acc80',\n  hcDark: Color.white,\n  hcLight: '#292929'\n}, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\n// ------ text code block\nexport var textCodeBlockBackground = registerColor('textCodeBlock.background', {\n  light: '#dcdcdc66',\n  dark: '#0a0a0a66',\n  hcDark: Color.black,\n  hcLight: '#F2F2F2'\n}, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));","map":{"version":3,"names":["nls","Color","registerColor","transparent","foreground","dark","light","hcDark","hcLight","localize","disabledForeground","errorForeground","descriptionForeground","iconForeground","focusBorder","contrastBorder","activeContrastBorder","selectionBackground","textLinkForeground","textLinkActiveForeground","textSeparatorForeground","black","textPreformatForeground","textPreformatBackground","textBlockQuoteBackground","textBlockQuoteBorder","white","textCodeBlockBackground"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/platform/theme/common/colors/baseColors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text link\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#21A6FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\n// ------ text preformat\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#000000', hcLight: '#FFFFFF' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textPreformatBackground = registerColor('textPreformat.background', { light: '#0000001A', dark: '#FFFFFF1A', hcDark: '#FFFFFF', hcLight: '#09345f' }, nls.localize('textPreformatBackground', \"Background color for preformatted text segments.\"));\n// ------ text block quote\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#f2f2f2', dark: '#222222', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\n// ------ text code block\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}