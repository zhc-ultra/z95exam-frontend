{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport var DragAndDropCommand = /*#__PURE__*/function () {\n  function DragAndDropCommand(selection, targetPosition, copy) {\n    _classCallCheck(this, DragAndDropCommand);\n    this.selection = selection;\n    this.targetPosition = targetPosition;\n    this.copy = copy;\n    this.targetSelection = null;\n  }\n  return _createClass(DragAndDropCommand, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      var text = model.getValueInRange(this.selection);\n      if (!this.copy) {\n        builder.addEditOperation(this.selection, null);\n      }\n      builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n      if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n      )) {\n        this.targetSelection = this.selection;\n        return;\n      }\n      if (this.copy) {\n        this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n        return;\n      }\n      if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n        // Drag the selection downwards\n        this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n        return;\n      }\n      if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n        // Drag the selection upwards\n        this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);\n        return;\n      }\n      // The target position is at the same line as the selection's end position.\n      if (this.selection.endColumn <= this.targetPosition.column) {\n        // The target position is after the selection's end position\n        this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column - this.selection.endColumn + this.selection.startColumn : this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column : this.selection.endColumn);\n      } else {\n        // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n        this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n      }\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      return this.targetSelection;\n    }\n  }]);\n}();","map":{"version":3,"names":["Range","Selection","DragAndDropCommand","selection","targetPosition","copy","_classCallCheck","targetSelection","_createClass","key","value","getEditOperations","model","builder","text","getValueInRange","addEditOperation","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","endLineNumber","startLineNumber","endColumn","startColumn","computeCursorState","helper"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}