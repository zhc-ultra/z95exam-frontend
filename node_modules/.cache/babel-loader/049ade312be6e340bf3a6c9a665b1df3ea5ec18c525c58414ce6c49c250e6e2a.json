{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport var Selection = /*#__PURE__*/function (_Range) {\n  function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n    var _this;\n    _classCallCheck(this, Selection);\n    _this = _callSuper(this, Selection, [selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn]);\n    _this.selectionStartLineNumber = selectionStartLineNumber;\n    _this.selectionStartColumn = selectionStartColumn;\n    _this.positionLineNumber = positionLineNumber;\n    _this.positionColumn = positionColumn;\n    return _this;\n  }\n  /**\n   * Transform to a human-readable representation.\n   */\n  _inherits(Selection, _Range);\n  return _createClass(Selection, [{\n    key: \"toString\",\n    value: function toString() {\n      return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n  }, {\n    key: \"equalsSelection\",\n    value: function equalsSelection(other) {\n      return Selection.selectionsEqual(this, other);\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n  }, {\n    key: \"getDirection\",\n    value:\n    /**\n     * Get directions (LTR or RTL).\n     */\n    function getDirection() {\n      if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n        return 0 /* SelectionDirection.LTR */;\n      }\n      return 1 /* SelectionDirection.RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n  }, {\n    key: \"setEndPosition\",\n    value: function setEndPosition(endLineNumber, endColumn) {\n      if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n        return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n      }\n      return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n  }, {\n    key: \"getSelectionStart\",\n    value: function getSelectionStart() {\n      return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n  }, {\n    key: \"setStartPosition\",\n    value: function setStartPosition(startLineNumber, startColumn) {\n      if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n        return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n      }\n      return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n  }], [{\n    key: \"selectionsEqual\",\n    value: function selectionsEqual(a, b) {\n      return a.selectionStartLineNumber === b.selectionStartLineNumber && a.selectionStartColumn === b.selectionStartColumn && a.positionLineNumber === b.positionLineNumber && a.positionColumn === b.positionColumn;\n    }\n  }, {\n    key: \"fromPositions\",\n    value: function fromPositions(start) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n      return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n  }, {\n    key: \"fromRange\",\n    value: function fromRange(range, direction) {\n      if (direction === 0 /* SelectionDirection.LTR */) {\n        return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n      } else {\n        return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n      }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n  }, {\n    key: \"liftSelection\",\n    value: function liftSelection(sel) {\n      return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n  }, {\n    key: \"selectionsArrEqual\",\n    value: function selectionsArrEqual(a, b) {\n      if (a && !b || !a && b) {\n        return false;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (var i = 0, len = a.length; i < len; i++) {\n        if (!this.selectionsEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n  }, {\n    key: \"isISelection\",\n    value: function isISelection(obj) {\n      return obj && typeof obj.selectionStartLineNumber === 'number' && typeof obj.selectionStartColumn === 'number' && typeof obj.positionLineNumber === 'number' && typeof obj.positionColumn === 'number';\n    }\n    /**\n     * Create with a direction.\n     */\n  }, {\n    key: \"createWithDirection\",\n    value: function createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n      if (direction === 0 /* SelectionDirection.LTR */) {\n        return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n      }\n      return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n  }]);\n}(Range);","map":{"version":3,"names":["Position","Range","Selection","_Range","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","_this","_classCallCheck","_callSuper","_inherits","_createClass","key","value","toString","equalsSelection","other","selectionsEqual","getDirection","startLineNumber","startColumn","setEndPosition","endLineNumber","endColumn","getPosition","getSelectionStart","setStartPosition","a","b","fromPositions","start","end","arguments","length","undefined","lineNumber","column","fromRange","range","direction","liftSelection","sel","selectionsArrEqual","i","len","isISelection","obj","createWithDirection"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/core/selection.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* SelectionDirection.LTR */;\n        }\n        return 1 /* SelectionDirection.RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n    getSelectionStart() {\n        return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n    static fromRange(range, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        }\n        else {\n            return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n        }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}