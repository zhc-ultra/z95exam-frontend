{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { addMatchMediaChangeListener } from '../../../base/browser/browser.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { TokenMetadata } from '../../common/encodedTokenAttributes.js';\nimport { TokenTheme, generateTokensCSSForColorMap } from '../../common/languages/supports/tokenization.js';\nimport { hc_black, hc_light, vs, vs_dark } from '../common/themes.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { asCssVariableName, Extensions } from '../../../platform/theme/common/colorRegistry.js';\nimport { Extensions as ThemingExtensions } from '../../../platform/theme/common/themeService.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ColorScheme, isDark, isHighContrast } from '../../../platform/theme/common/theme.js';\nimport { getIconsStyleSheet, UnthemedProductIconTheme } from '../../../platform/theme/browser/iconsStyleSheet.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nexport var VS_LIGHT_THEME_NAME = 'vs';\nexport var VS_DARK_THEME_NAME = 'vs-dark';\nexport var HC_BLACK_THEME_NAME = 'hc-black';\nexport var HC_LIGHT_THEME_NAME = 'hc-light';\nvar colorRegistry = Registry.as(Extensions.ColorContribution);\nvar themingRegistry = Registry.as(ThemingExtensions.ThemingContribution);\nvar StandaloneTheme = /*#__PURE__*/function () {\n  function StandaloneTheme(name, standaloneThemeData) {\n    _classCallCheck(this, StandaloneTheme);\n    this.semanticHighlighting = false;\n    this.themeData = standaloneThemeData;\n    var base = standaloneThemeData.base;\n    if (name.length > 0) {\n      if (isBuiltinTheme(name)) {\n        this.id = name;\n      } else {\n        this.id = base + ' ' + name;\n      }\n      this.themeName = name;\n    } else {\n      this.id = base;\n      this.themeName = base;\n    }\n    this.colors = null;\n    this.defaultColors = Object.create(null);\n    this._tokenTheme = null;\n  }\n  return _createClass(StandaloneTheme, [{\n    key: \"base\",\n    get: function get() {\n      return this.themeData.base;\n    }\n  }, {\n    key: \"notifyBaseUpdated\",\n    value: function notifyBaseUpdated() {\n      if (this.themeData.inherit) {\n        this.colors = null;\n        this._tokenTheme = null;\n      }\n    }\n  }, {\n    key: \"getColors\",\n    value: function getColors() {\n      if (!this.colors) {\n        var colors = new Map();\n        for (var id in this.themeData.colors) {\n          colors.set(id, Color.fromHex(this.themeData.colors[id]));\n        }\n        if (this.themeData.inherit) {\n          var baseData = getBuiltinRules(this.themeData.base);\n          for (var _id in baseData.colors) {\n            if (!colors.has(_id)) {\n              colors.set(_id, Color.fromHex(baseData.colors[_id]));\n            }\n          }\n        }\n        this.colors = colors;\n      }\n      return this.colors;\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor(colorId, useDefault) {\n      var color = this.getColors().get(colorId);\n      if (color) {\n        return color;\n      }\n      if (useDefault !== false) {\n        return this.getDefault(colorId);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"getDefault\",\n    value: function getDefault(colorId) {\n      var color = this.defaultColors[colorId];\n      if (color) {\n        return color;\n      }\n      color = colorRegistry.resolveDefaultColor(colorId, this);\n      this.defaultColors[colorId] = color;\n      return color;\n    }\n  }, {\n    key: \"defines\",\n    value: function defines(colorId) {\n      return this.getColors().has(colorId);\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      switch (this.base) {\n        case VS_LIGHT_THEME_NAME:\n          return ColorScheme.LIGHT;\n        case HC_BLACK_THEME_NAME:\n          return ColorScheme.HIGH_CONTRAST_DARK;\n        case HC_LIGHT_THEME_NAME:\n          return ColorScheme.HIGH_CONTRAST_LIGHT;\n        default:\n          return ColorScheme.DARK;\n      }\n    }\n  }, {\n    key: \"tokenTheme\",\n    get: function get() {\n      if (!this._tokenTheme) {\n        var rules = [];\n        var encodedTokensColors = [];\n        if (this.themeData.inherit) {\n          var baseData = getBuiltinRules(this.themeData.base);\n          rules = baseData.rules;\n          if (baseData.encodedTokensColors) {\n            encodedTokensColors = baseData.encodedTokensColors;\n          }\n        }\n        // Pick up default colors from `editor.foreground` and `editor.background` if available\n        var editorForeground = this.themeData.colors['editor.foreground'];\n        var editorBackground = this.themeData.colors['editor.background'];\n        if (editorForeground || editorBackground) {\n          var rule = {\n            token: ''\n          };\n          if (editorForeground) {\n            rule.foreground = editorForeground;\n          }\n          if (editorBackground) {\n            rule.background = editorBackground;\n          }\n          rules.push(rule);\n        }\n        rules = rules.concat(this.themeData.rules);\n        if (this.themeData.encodedTokensColors) {\n          encodedTokensColors = this.themeData.encodedTokensColors;\n        }\n        this._tokenTheme = TokenTheme.createFromRawTokenTheme(rules, encodedTokensColors);\n      }\n      return this._tokenTheme;\n    }\n  }, {\n    key: \"getTokenStyleMetadata\",\n    value: function getTokenStyleMetadata(type, modifiers, modelLanguage) {\n      // use theme rules match\n      var style = this.tokenTheme._match([type].concat(modifiers).join('.'));\n      var metadata = style.metadata;\n      var foreground = TokenMetadata.getForeground(metadata);\n      var fontStyle = TokenMetadata.getFontStyle(metadata);\n      return {\n        foreground: foreground,\n        italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n        bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n        underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n        strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */)\n      };\n    }\n  }]);\n}();\nfunction isBuiltinTheme(themeName) {\n  return themeName === VS_LIGHT_THEME_NAME || themeName === VS_DARK_THEME_NAME || themeName === HC_BLACK_THEME_NAME || themeName === HC_LIGHT_THEME_NAME;\n}\nfunction getBuiltinRules(builtinTheme) {\n  switch (builtinTheme) {\n    case VS_LIGHT_THEME_NAME:\n      return vs;\n    case VS_DARK_THEME_NAME:\n      return vs_dark;\n    case HC_BLACK_THEME_NAME:\n      return hc_black;\n    case HC_LIGHT_THEME_NAME:\n      return hc_light;\n  }\n}\nfunction newBuiltInTheme(builtinTheme) {\n  var themeData = getBuiltinRules(builtinTheme);\n  return new StandaloneTheme(builtinTheme, themeData);\n}\nexport var StandaloneThemeService = /*#__PURE__*/function (_Disposable) {\n  function StandaloneThemeService() {\n    var _this;\n    _classCallCheck(this, StandaloneThemeService);\n    _this = _callSuper(this, StandaloneThemeService);\n    _this._onColorThemeChange = _this._register(new Emitter());\n    _this.onDidColorThemeChange = _this._onColorThemeChange.event;\n    _this._onProductIconThemeChange = _this._register(new Emitter());\n    _this.onDidProductIconThemeChange = _this._onProductIconThemeChange.event;\n    _this._environment = Object.create(null);\n    _this._builtInProductIconTheme = new UnthemedProductIconTheme();\n    _this._autoDetectHighContrast = true;\n    _this._knownThemes = new Map();\n    _this._knownThemes.set(VS_LIGHT_THEME_NAME, newBuiltInTheme(VS_LIGHT_THEME_NAME));\n    _this._knownThemes.set(VS_DARK_THEME_NAME, newBuiltInTheme(VS_DARK_THEME_NAME));\n    _this._knownThemes.set(HC_BLACK_THEME_NAME, newBuiltInTheme(HC_BLACK_THEME_NAME));\n    _this._knownThemes.set(HC_LIGHT_THEME_NAME, newBuiltInTheme(HC_LIGHT_THEME_NAME));\n    var iconsStyleSheet = _this._register(getIconsStyleSheet(_this));\n    _this._codiconCSS = iconsStyleSheet.getCSS();\n    _this._themeCSS = '';\n    _this._allCSS = \"\".concat(_this._codiconCSS, \"\\n\").concat(_this._themeCSS);\n    _this._globalStyleElement = null;\n    _this._styleElements = [];\n    _this._colorMapOverride = null;\n    _this.setTheme(VS_LIGHT_THEME_NAME);\n    _this._onOSSchemeChanged();\n    _this._register(iconsStyleSheet.onDidChange(function () {\n      _this._codiconCSS = iconsStyleSheet.getCSS();\n      _this._updateCSS();\n    }));\n    addMatchMediaChangeListener(mainWindow, '(forced-colors: active)', function () {\n      _this._onOSSchemeChanged();\n    });\n    return _this;\n  }\n  _inherits(StandaloneThemeService, _Disposable);\n  return _createClass(StandaloneThemeService, [{\n    key: \"registerEditorContainer\",\n    value: function registerEditorContainer(domNode) {\n      if (dom.isInShadowDOM(domNode)) {\n        return this._registerShadowDomContainer(domNode);\n      }\n      return this._registerRegularEditorContainer();\n    }\n  }, {\n    key: \"_registerRegularEditorContainer\",\n    value: function _registerRegularEditorContainer() {\n      var _this2 = this;\n      if (!this._globalStyleElement) {\n        this._globalStyleElement = dom.createStyleSheet(undefined, function (style) {\n          style.className = 'monaco-colors';\n          style.textContent = _this2._allCSS;\n        });\n        this._styleElements.push(this._globalStyleElement);\n      }\n      return Disposable.None;\n    }\n  }, {\n    key: \"_registerShadowDomContainer\",\n    value: function _registerShadowDomContainer(domNode) {\n      var _this3 = this;\n      var styleElement = dom.createStyleSheet(domNode, function (style) {\n        style.className = 'monaco-colors';\n        style.textContent = _this3._allCSS;\n      });\n      this._styleElements.push(styleElement);\n      return {\n        dispose: function dispose() {\n          for (var i = 0; i < _this3._styleElements.length; i++) {\n            if (_this3._styleElements[i] === styleElement) {\n              _this3._styleElements.splice(i, 1);\n              return;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"defineTheme\",\n    value: function defineTheme(themeName, themeData) {\n      if (!/^[a-z0-9\\-]+$/i.test(themeName)) {\n        throw new Error('Illegal theme name!');\n      }\n      if (!isBuiltinTheme(themeData.base) && !isBuiltinTheme(themeName)) {\n        throw new Error('Illegal theme base!');\n      }\n      // set or replace theme\n      this._knownThemes.set(themeName, new StandaloneTheme(themeName, themeData));\n      if (isBuiltinTheme(themeName)) {\n        this._knownThemes.forEach(function (theme) {\n          if (theme.base === themeName) {\n            theme.notifyBaseUpdated();\n          }\n        });\n      }\n      if (this._theme.themeName === themeName) {\n        this.setTheme(themeName); // refresh theme\n      }\n    }\n  }, {\n    key: \"getColorTheme\",\n    value: function getColorTheme() {\n      return this._theme;\n    }\n  }, {\n    key: \"setColorMapOverride\",\n    value: function setColorMapOverride(colorMapOverride) {\n      this._colorMapOverride = colorMapOverride;\n      this._updateThemeOrColorMap();\n    }\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(themeName) {\n      var theme;\n      if (this._knownThemes.has(themeName)) {\n        theme = this._knownThemes.get(themeName);\n      } else {\n        theme = this._knownThemes.get(VS_LIGHT_THEME_NAME);\n      }\n      this._updateActualTheme(theme);\n    }\n  }, {\n    key: \"_updateActualTheme\",\n    value: function _updateActualTheme(desiredTheme) {\n      if (!desiredTheme || this._theme === desiredTheme) {\n        // Nothing to do\n        return;\n      }\n      this._theme = desiredTheme;\n      this._updateThemeOrColorMap();\n    }\n  }, {\n    key: \"_onOSSchemeChanged\",\n    value: function _onOSSchemeChanged() {\n      if (this._autoDetectHighContrast) {\n        var wantsHighContrast = mainWindow.matchMedia(\"(forced-colors: active)\").matches;\n        if (wantsHighContrast !== isHighContrast(this._theme.type)) {\n          // switch to high contrast or non-high contrast but stick to dark or light\n          var newThemeName;\n          if (isDark(this._theme.type)) {\n            newThemeName = wantsHighContrast ? HC_BLACK_THEME_NAME : VS_DARK_THEME_NAME;\n          } else {\n            newThemeName = wantsHighContrast ? HC_LIGHT_THEME_NAME : VS_LIGHT_THEME_NAME;\n          }\n          this._updateActualTheme(this._knownThemes.get(newThemeName));\n        }\n      }\n    }\n  }, {\n    key: \"setAutoDetectHighContrast\",\n    value: function setAutoDetectHighContrast(autoDetectHighContrast) {\n      this._autoDetectHighContrast = autoDetectHighContrast;\n      this._onOSSchemeChanged();\n    }\n  }, {\n    key: \"_updateThemeOrColorMap\",\n    value: function _updateThemeOrColorMap() {\n      var _this4 = this;\n      var cssRules = [];\n      var hasRule = {};\n      var ruleCollector = {\n        addRule: function addRule(rule) {\n          if (!hasRule[rule]) {\n            cssRules.push(rule);\n            hasRule[rule] = true;\n          }\n        }\n      };\n      themingRegistry.getThemingParticipants().forEach(function (p) {\n        return p(_this4._theme, ruleCollector, _this4._environment);\n      });\n      var colorVariables = [];\n      var _iterator = _createForOfIteratorHelper(colorRegistry.getColors()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          var color = this._theme.getColor(item.id, true);\n          if (color) {\n            colorVariables.push(\"\".concat(asCssVariableName(item.id), \": \").concat(color.toString(), \";\"));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      ruleCollector.addRule(\".monaco-editor, .monaco-diff-editor, .monaco-component { \".concat(colorVariables.join('\\n'), \" }\"));\n      var colorMap = this._colorMapOverride || this._theme.tokenTheme.getColorMap();\n      ruleCollector.addRule(generateTokensCSSForColorMap(colorMap));\n      this._themeCSS = cssRules.join('\\n');\n      this._updateCSS();\n      TokenizationRegistry.setColorMap(colorMap);\n      this._onColorThemeChange.fire(this._theme);\n    }\n  }, {\n    key: \"_updateCSS\",\n    value: function _updateCSS() {\n      var _this5 = this;\n      this._allCSS = \"\".concat(this._codiconCSS, \"\\n\").concat(this._themeCSS);\n      this._styleElements.forEach(function (styleElement) {\n        return styleElement.textContent = _this5._allCSS;\n      });\n    }\n  }, {\n    key: \"getFileIconTheme\",\n    value: function getFileIconTheme() {\n      return {\n        hasFileIcons: false,\n        hasFolderIcons: false,\n        hidesExplorerArrows: false\n      };\n    }\n  }, {\n    key: \"getProductIconTheme\",\n    value: function getProductIconTheme() {\n      return this._builtInProductIconTheme;\n    }\n  }]);\n}(Disposable);","map":{"version":3,"names":["dom","addMatchMediaChangeListener","Color","Emitter","TokenizationRegistry","TokenMetadata","TokenTheme","generateTokensCSSForColorMap","hc_black","hc_light","vs","vs_dark","Registry","asCssVariableName","Extensions","ThemingExtensions","Disposable","ColorScheme","isDark","isHighContrast","getIconsStyleSheet","UnthemedProductIconTheme","mainWindow","VS_LIGHT_THEME_NAME","VS_DARK_THEME_NAME","HC_BLACK_THEME_NAME","HC_LIGHT_THEME_NAME","colorRegistry","as","ColorContribution","themingRegistry","ThemingContribution","StandaloneTheme","name","standaloneThemeData","_classCallCheck","semanticHighlighting","themeData","base","length","isBuiltinTheme","id","themeName","colors","defaultColors","Object","create","_tokenTheme","_createClass","key","get","value","notifyBaseUpdated","inherit","getColors","Map","set","fromHex","baseData","getBuiltinRules","has","getColor","colorId","useDefault","color","getDefault","undefined","resolveDefaultColor","defines","LIGHT","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","DARK","rules","encodedTokensColors","editorForeground","editorBackground","rule","token","foreground","background","push","concat","createFromRawTokenTheme","getTokenStyleMetadata","type","modifiers","modelLanguage","style","tokenTheme","_match","join","metadata","getForeground","fontStyle","getFontStyle","italic","Boolean","bold","underline","strikethrough","builtinTheme","newBuiltInTheme","StandaloneThemeService","_Disposable","_this","_callSuper","_onColorThemeChange","_register","onDidColorThemeChange","event","_onProductIconThemeChange","onDidProductIconThemeChange","_environment","_builtInProductIconTheme","_autoDetectHighContrast","_knownThemes","iconsStyleSheet","_codiconCSS","getCSS","_themeCSS","_allCSS","_globalStyleElement","_styleElements","_colorMapOverride","setTheme","_onOSSchemeChanged","onDidChange","_updateCSS","_inherits","registerEditorContainer","domNode","isInShadowDOM","_registerShadowDomContainer","_registerRegularEditorContainer","_this2","createStyleSheet","className","textContent","None","_this3","styleElement","dispose","i","splice","defineTheme","test","Error","forEach","theme","_theme","getColorTheme","setColorMapOverride","colorMapOverride","_updateThemeOrColorMap","_updateActualTheme","desiredTheme","wantsHighContrast","matchMedia","matches","newThemeName","setAutoDetectHighContrast","autoDetectHighContrast","_this4","cssRules","hasRule","ruleCollector","addRule","getThemingParticipants","p","colorVariables","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","toString","err","e","f","colorMap","getColorMap","setColorMap","fire","_this5","getFileIconTheme","hasFileIcons","hasFolderIcons","hidesExplorerArrows","getProductIconTheme"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneThemeService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { addMatchMediaChangeListener } from '../../../base/browser/browser.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { TokenMetadata } from '../../common/encodedTokenAttributes.js';\nimport { TokenTheme, generateTokensCSSForColorMap } from '../../common/languages/supports/tokenization.js';\nimport { hc_black, hc_light, vs, vs_dark } from '../common/themes.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { asCssVariableName, Extensions } from '../../../platform/theme/common/colorRegistry.js';\nimport { Extensions as ThemingExtensions } from '../../../platform/theme/common/themeService.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ColorScheme, isDark, isHighContrast } from '../../../platform/theme/common/theme.js';\nimport { getIconsStyleSheet, UnthemedProductIconTheme } from '../../../platform/theme/browser/iconsStyleSheet.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nexport const VS_LIGHT_THEME_NAME = 'vs';\nexport const VS_DARK_THEME_NAME = 'vs-dark';\nexport const HC_BLACK_THEME_NAME = 'hc-black';\nexport const HC_LIGHT_THEME_NAME = 'hc-light';\nconst colorRegistry = Registry.as(Extensions.ColorContribution);\nconst themingRegistry = Registry.as(ThemingExtensions.ThemingContribution);\nclass StandaloneTheme {\n    constructor(name, standaloneThemeData) {\n        this.semanticHighlighting = false;\n        this.themeData = standaloneThemeData;\n        const base = standaloneThemeData.base;\n        if (name.length > 0) {\n            if (isBuiltinTheme(name)) {\n                this.id = name;\n            }\n            else {\n                this.id = base + ' ' + name;\n            }\n            this.themeName = name;\n        }\n        else {\n            this.id = base;\n            this.themeName = base;\n        }\n        this.colors = null;\n        this.defaultColors = Object.create(null);\n        this._tokenTheme = null;\n    }\n    get base() {\n        return this.themeData.base;\n    }\n    notifyBaseUpdated() {\n        if (this.themeData.inherit) {\n            this.colors = null;\n            this._tokenTheme = null;\n        }\n    }\n    getColors() {\n        if (!this.colors) {\n            const colors = new Map();\n            for (const id in this.themeData.colors) {\n                colors.set(id, Color.fromHex(this.themeData.colors[id]));\n            }\n            if (this.themeData.inherit) {\n                const baseData = getBuiltinRules(this.themeData.base);\n                for (const id in baseData.colors) {\n                    if (!colors.has(id)) {\n                        colors.set(id, Color.fromHex(baseData.colors[id]));\n                    }\n                }\n            }\n            this.colors = colors;\n        }\n        return this.colors;\n    }\n    getColor(colorId, useDefault) {\n        const color = this.getColors().get(colorId);\n        if (color) {\n            return color;\n        }\n        if (useDefault !== false) {\n            return this.getDefault(colorId);\n        }\n        return undefined;\n    }\n    getDefault(colorId) {\n        let color = this.defaultColors[colorId];\n        if (color) {\n            return color;\n        }\n        color = colorRegistry.resolveDefaultColor(colorId, this);\n        this.defaultColors[colorId] = color;\n        return color;\n    }\n    defines(colorId) {\n        return this.getColors().has(colorId);\n    }\n    get type() {\n        switch (this.base) {\n            case VS_LIGHT_THEME_NAME: return ColorScheme.LIGHT;\n            case HC_BLACK_THEME_NAME: return ColorScheme.HIGH_CONTRAST_DARK;\n            case HC_LIGHT_THEME_NAME: return ColorScheme.HIGH_CONTRAST_LIGHT;\n            default: return ColorScheme.DARK;\n        }\n    }\n    get tokenTheme() {\n        if (!this._tokenTheme) {\n            let rules = [];\n            let encodedTokensColors = [];\n            if (this.themeData.inherit) {\n                const baseData = getBuiltinRules(this.themeData.base);\n                rules = baseData.rules;\n                if (baseData.encodedTokensColors) {\n                    encodedTokensColors = baseData.encodedTokensColors;\n                }\n            }\n            // Pick up default colors from `editor.foreground` and `editor.background` if available\n            const editorForeground = this.themeData.colors['editor.foreground'];\n            const editorBackground = this.themeData.colors['editor.background'];\n            if (editorForeground || editorBackground) {\n                const rule = { token: '' };\n                if (editorForeground) {\n                    rule.foreground = editorForeground;\n                }\n                if (editorBackground) {\n                    rule.background = editorBackground;\n                }\n                rules.push(rule);\n            }\n            rules = rules.concat(this.themeData.rules);\n            if (this.themeData.encodedTokensColors) {\n                encodedTokensColors = this.themeData.encodedTokensColors;\n            }\n            this._tokenTheme = TokenTheme.createFromRawTokenTheme(rules, encodedTokensColors);\n        }\n        return this._tokenTheme;\n    }\n    getTokenStyleMetadata(type, modifiers, modelLanguage) {\n        // use theme rules match\n        const style = this.tokenTheme._match([type].concat(modifiers).join('.'));\n        const metadata = style.metadata;\n        const foreground = TokenMetadata.getForeground(metadata);\n        const fontStyle = TokenMetadata.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n            bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n            underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */)\n        };\n    }\n}\nfunction isBuiltinTheme(themeName) {\n    return (themeName === VS_LIGHT_THEME_NAME\n        || themeName === VS_DARK_THEME_NAME\n        || themeName === HC_BLACK_THEME_NAME\n        || themeName === HC_LIGHT_THEME_NAME);\n}\nfunction getBuiltinRules(builtinTheme) {\n    switch (builtinTheme) {\n        case VS_LIGHT_THEME_NAME:\n            return vs;\n        case VS_DARK_THEME_NAME:\n            return vs_dark;\n        case HC_BLACK_THEME_NAME:\n            return hc_black;\n        case HC_LIGHT_THEME_NAME:\n            return hc_light;\n    }\n}\nfunction newBuiltInTheme(builtinTheme) {\n    const themeData = getBuiltinRules(builtinTheme);\n    return new StandaloneTheme(builtinTheme, themeData);\n}\nexport class StandaloneThemeService extends Disposable {\n    constructor() {\n        super();\n        this._onColorThemeChange = this._register(new Emitter());\n        this.onDidColorThemeChange = this._onColorThemeChange.event;\n        this._onProductIconThemeChange = this._register(new Emitter());\n        this.onDidProductIconThemeChange = this._onProductIconThemeChange.event;\n        this._environment = Object.create(null);\n        this._builtInProductIconTheme = new UnthemedProductIconTheme();\n        this._autoDetectHighContrast = true;\n        this._knownThemes = new Map();\n        this._knownThemes.set(VS_LIGHT_THEME_NAME, newBuiltInTheme(VS_LIGHT_THEME_NAME));\n        this._knownThemes.set(VS_DARK_THEME_NAME, newBuiltInTheme(VS_DARK_THEME_NAME));\n        this._knownThemes.set(HC_BLACK_THEME_NAME, newBuiltInTheme(HC_BLACK_THEME_NAME));\n        this._knownThemes.set(HC_LIGHT_THEME_NAME, newBuiltInTheme(HC_LIGHT_THEME_NAME));\n        const iconsStyleSheet = this._register(getIconsStyleSheet(this));\n        this._codiconCSS = iconsStyleSheet.getCSS();\n        this._themeCSS = '';\n        this._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n        this._globalStyleElement = null;\n        this._styleElements = [];\n        this._colorMapOverride = null;\n        this.setTheme(VS_LIGHT_THEME_NAME);\n        this._onOSSchemeChanged();\n        this._register(iconsStyleSheet.onDidChange(() => {\n            this._codiconCSS = iconsStyleSheet.getCSS();\n            this._updateCSS();\n        }));\n        addMatchMediaChangeListener(mainWindow, '(forced-colors: active)', () => {\n            this._onOSSchemeChanged();\n        });\n    }\n    registerEditorContainer(domNode) {\n        if (dom.isInShadowDOM(domNode)) {\n            return this._registerShadowDomContainer(domNode);\n        }\n        return this._registerRegularEditorContainer();\n    }\n    _registerRegularEditorContainer() {\n        if (!this._globalStyleElement) {\n            this._globalStyleElement = dom.createStyleSheet(undefined, style => {\n                style.className = 'monaco-colors';\n                style.textContent = this._allCSS;\n            });\n            this._styleElements.push(this._globalStyleElement);\n        }\n        return Disposable.None;\n    }\n    _registerShadowDomContainer(domNode) {\n        const styleElement = dom.createStyleSheet(domNode, style => {\n            style.className = 'monaco-colors';\n            style.textContent = this._allCSS;\n        });\n        this._styleElements.push(styleElement);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._styleElements.length; i++) {\n                    if (this._styleElements[i] === styleElement) {\n                        this._styleElements.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    defineTheme(themeName, themeData) {\n        if (!/^[a-z0-9\\-]+$/i.test(themeName)) {\n            throw new Error('Illegal theme name!');\n        }\n        if (!isBuiltinTheme(themeData.base) && !isBuiltinTheme(themeName)) {\n            throw new Error('Illegal theme base!');\n        }\n        // set or replace theme\n        this._knownThemes.set(themeName, new StandaloneTheme(themeName, themeData));\n        if (isBuiltinTheme(themeName)) {\n            this._knownThemes.forEach(theme => {\n                if (theme.base === themeName) {\n                    theme.notifyBaseUpdated();\n                }\n            });\n        }\n        if (this._theme.themeName === themeName) {\n            this.setTheme(themeName); // refresh theme\n        }\n    }\n    getColorTheme() {\n        return this._theme;\n    }\n    setColorMapOverride(colorMapOverride) {\n        this._colorMapOverride = colorMapOverride;\n        this._updateThemeOrColorMap();\n    }\n    setTheme(themeName) {\n        let theme;\n        if (this._knownThemes.has(themeName)) {\n            theme = this._knownThemes.get(themeName);\n        }\n        else {\n            theme = this._knownThemes.get(VS_LIGHT_THEME_NAME);\n        }\n        this._updateActualTheme(theme);\n    }\n    _updateActualTheme(desiredTheme) {\n        if (!desiredTheme || this._theme === desiredTheme) {\n            // Nothing to do\n            return;\n        }\n        this._theme = desiredTheme;\n        this._updateThemeOrColorMap();\n    }\n    _onOSSchemeChanged() {\n        if (this._autoDetectHighContrast) {\n            const wantsHighContrast = mainWindow.matchMedia(`(forced-colors: active)`).matches;\n            if (wantsHighContrast !== isHighContrast(this._theme.type)) {\n                // switch to high contrast or non-high contrast but stick to dark or light\n                let newThemeName;\n                if (isDark(this._theme.type)) {\n                    newThemeName = wantsHighContrast ? HC_BLACK_THEME_NAME : VS_DARK_THEME_NAME;\n                }\n                else {\n                    newThemeName = wantsHighContrast ? HC_LIGHT_THEME_NAME : VS_LIGHT_THEME_NAME;\n                }\n                this._updateActualTheme(this._knownThemes.get(newThemeName));\n            }\n        }\n    }\n    setAutoDetectHighContrast(autoDetectHighContrast) {\n        this._autoDetectHighContrast = autoDetectHighContrast;\n        this._onOSSchemeChanged();\n    }\n    _updateThemeOrColorMap() {\n        const cssRules = [];\n        const hasRule = {};\n        const ruleCollector = {\n            addRule: (rule) => {\n                if (!hasRule[rule]) {\n                    cssRules.push(rule);\n                    hasRule[rule] = true;\n                }\n            }\n        };\n        themingRegistry.getThemingParticipants().forEach(p => p(this._theme, ruleCollector, this._environment));\n        const colorVariables = [];\n        for (const item of colorRegistry.getColors()) {\n            const color = this._theme.getColor(item.id, true);\n            if (color) {\n                colorVariables.push(`${asCssVariableName(item.id)}: ${color.toString()};`);\n            }\n        }\n        ruleCollector.addRule(`.monaco-editor, .monaco-diff-editor, .monaco-component { ${colorVariables.join('\\n')} }`);\n        const colorMap = this._colorMapOverride || this._theme.tokenTheme.getColorMap();\n        ruleCollector.addRule(generateTokensCSSForColorMap(colorMap));\n        this._themeCSS = cssRules.join('\\n');\n        this._updateCSS();\n        TokenizationRegistry.setColorMap(colorMap);\n        this._onColorThemeChange.fire(this._theme);\n    }\n    _updateCSS() {\n        this._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n        this._styleElements.forEach(styleElement => styleElement.textContent = this._allCSS);\n    }\n    getFileIconTheme() {\n        return {\n            hasFileIcons: false,\n            hasFolderIcons: false,\n            hidesExplorerArrows: false\n        };\n    }\n    getProductIconTheme() {\n        return this._builtInProductIconTheme;\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,8BAA8B;AACnD,SAASC,2BAA2B,QAAQ,kCAAkC;AAC9E,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,UAAU,EAAEC,4BAA4B,QAAQ,iDAAiD;AAC1G,SAASC,QAAQ,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,OAAO,QAAQ,qBAAqB;AACrE,SAASC,QAAQ,QAAQ,+CAA+C;AACxE,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,iDAAiD;AAC/F,SAASA,UAAU,IAAIC,iBAAiB,QAAQ,gDAAgD;AAChG,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,WAAW,EAAEC,MAAM,EAAEC,cAAc,QAAQ,yCAAyC;AAC7F,SAASC,kBAAkB,EAAEC,wBAAwB,QAAQ,oDAAoD;AACjH,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,OAAO,IAAMC,mBAAmB,GAAG,IAAI;AACvC,OAAO,IAAMC,kBAAkB,GAAG,SAAS;AAC3C,OAAO,IAAMC,mBAAmB,GAAG,UAAU;AAC7C,OAAO,IAAMC,mBAAmB,GAAG,UAAU;AAC7C,IAAMC,aAAa,GAAGf,QAAQ,CAACgB,EAAE,CAACd,UAAU,CAACe,iBAAiB,CAAC;AAC/D,IAAMC,eAAe,GAAGlB,QAAQ,CAACgB,EAAE,CAACb,iBAAiB,CAACgB,mBAAmB,CAAC;AAAC,IACrEC,eAAe;EACjB,SAAAA,gBAAYC,IAAI,EAAEC,mBAAmB,EAAE;IAAAC,eAAA,OAAAH,eAAA;IACnC,IAAI,CAACI,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,SAAS,GAAGH,mBAAmB;IACpC,IAAMI,IAAI,GAAGJ,mBAAmB,CAACI,IAAI;IACrC,IAAIL,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MACjB,IAAIC,cAAc,CAACP,IAAI,CAAC,EAAE;QACtB,IAAI,CAACQ,EAAE,GAAGR,IAAI;MAClB,CAAC,MACI;QACD,IAAI,CAACQ,EAAE,GAAGH,IAAI,GAAG,GAAG,GAAGL,IAAI;MAC/B;MACA,IAAI,CAACS,SAAS,GAAGT,IAAI;IACzB,CAAC,MACI;MACD,IAAI,CAACQ,EAAE,GAAGH,IAAI;MACd,IAAI,CAACI,SAAS,GAAGJ,IAAI;IACzB;IACA,IAAI,CAACK,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IACxC,IAAI,CAACC,WAAW,GAAG,IAAI;EAC3B;EAAC,OAAAC,YAAA,CAAAhB,eAAA;IAAAiB,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAW;MACP,OAAO,IAAI,CAACb,SAAS,CAACC,IAAI;IAC9B;EAAC;IAAAW,GAAA;IAAAE,KAAA,EACD,SAAAC,kBAAA,EAAoB;MAChB,IAAI,IAAI,CAACf,SAAS,CAACgB,OAAO,EAAE;QACxB,IAAI,CAACV,MAAM,GAAG,IAAI;QAClB,IAAI,CAACI,WAAW,GAAG,IAAI;MAC3B;IACJ;EAAC;IAAAE,GAAA;IAAAE,KAAA,EACD,SAAAG,UAAA,EAAY;MACR,IAAI,CAAC,IAAI,CAACX,MAAM,EAAE;QACd,IAAMA,MAAM,GAAG,IAAIY,GAAG,CAAC,CAAC;QACxB,KAAK,IAAMd,EAAE,IAAI,IAAI,CAACJ,SAAS,CAACM,MAAM,EAAE;UACpCA,MAAM,CAACa,GAAG,CAACf,EAAE,EAAEvC,KAAK,CAACuD,OAAO,CAAC,IAAI,CAACpB,SAAS,CAACM,MAAM,CAACF,EAAE,CAAC,CAAC,CAAC;QAC5D;QACA,IAAI,IAAI,CAACJ,SAAS,CAACgB,OAAO,EAAE;UACxB,IAAMK,QAAQ,GAAGC,eAAe,CAAC,IAAI,CAACtB,SAAS,CAACC,IAAI,CAAC;UACrD,KAAK,IAAMG,GAAE,IAAIiB,QAAQ,CAACf,MAAM,EAAE;YAC9B,IAAI,CAACA,MAAM,CAACiB,GAAG,CAACnB,GAAE,CAAC,EAAE;cACjBE,MAAM,CAACa,GAAG,CAACf,GAAE,EAAEvC,KAAK,CAACuD,OAAO,CAACC,QAAQ,CAACf,MAAM,CAACF,GAAE,CAAC,CAAC,CAAC;YACtD;UACJ;QACJ;QACA,IAAI,CAACE,MAAM,GAAGA,MAAM;MACxB;MACA,OAAO,IAAI,CAACA,MAAM;IACtB;EAAC;IAAAM,GAAA;IAAAE,KAAA,EACD,SAAAU,SAASC,OAAO,EAAEC,UAAU,EAAE;MAC1B,IAAMC,KAAK,GAAG,IAAI,CAACV,SAAS,CAAC,CAAC,CAACJ,GAAG,CAACY,OAAO,CAAC;MAC3C,IAAIE,KAAK,EAAE;QACP,OAAOA,KAAK;MAChB;MACA,IAAID,UAAU,KAAK,KAAK,EAAE;QACtB,OAAO,IAAI,CAACE,UAAU,CAACH,OAAO,CAAC;MACnC;MACA,OAAOI,SAAS;IACpB;EAAC;IAAAjB,GAAA;IAAAE,KAAA,EACD,SAAAc,WAAWH,OAAO,EAAE;MAChB,IAAIE,KAAK,GAAG,IAAI,CAACpB,aAAa,CAACkB,OAAO,CAAC;MACvC,IAAIE,KAAK,EAAE;QACP,OAAOA,KAAK;MAChB;MACAA,KAAK,GAAGrC,aAAa,CAACwC,mBAAmB,CAACL,OAAO,EAAE,IAAI,CAAC;MACxD,IAAI,CAAClB,aAAa,CAACkB,OAAO,CAAC,GAAGE,KAAK;MACnC,OAAOA,KAAK;IAChB;EAAC;IAAAf,GAAA;IAAAE,KAAA,EACD,SAAAiB,QAAQN,OAAO,EAAE;MACb,OAAO,IAAI,CAACR,SAAS,CAAC,CAAC,CAACM,GAAG,CAACE,OAAO,CAAC;IACxC;EAAC;IAAAb,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAW;MACP,QAAQ,IAAI,CAACZ,IAAI;QACb,KAAKf,mBAAmB;UAAE,OAAON,WAAW,CAACoD,KAAK;QAClD,KAAK5C,mBAAmB;UAAE,OAAOR,WAAW,CAACqD,kBAAkB;QAC/D,KAAK5C,mBAAmB;UAAE,OAAOT,WAAW,CAACsD,mBAAmB;QAChE;UAAS,OAAOtD,WAAW,CAACuD,IAAI;MACpC;IACJ;EAAC;IAAAvB,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAiB;MACb,IAAI,CAAC,IAAI,CAACH,WAAW,EAAE;QACnB,IAAI0B,KAAK,GAAG,EAAE;QACd,IAAIC,mBAAmB,GAAG,EAAE;QAC5B,IAAI,IAAI,CAACrC,SAAS,CAACgB,OAAO,EAAE;UACxB,IAAMK,QAAQ,GAAGC,eAAe,CAAC,IAAI,CAACtB,SAAS,CAACC,IAAI,CAAC;UACrDmC,KAAK,GAAGf,QAAQ,CAACe,KAAK;UACtB,IAAIf,QAAQ,CAACgB,mBAAmB,EAAE;YAC9BA,mBAAmB,GAAGhB,QAAQ,CAACgB,mBAAmB;UACtD;QACJ;QACA;QACA,IAAMC,gBAAgB,GAAG,IAAI,CAACtC,SAAS,CAACM,MAAM,CAAC,mBAAmB,CAAC;QACnE,IAAMiC,gBAAgB,GAAG,IAAI,CAACvC,SAAS,CAACM,MAAM,CAAC,mBAAmB,CAAC;QACnE,IAAIgC,gBAAgB,IAAIC,gBAAgB,EAAE;UACtC,IAAMC,IAAI,GAAG;YAAEC,KAAK,EAAE;UAAG,CAAC;UAC1B,IAAIH,gBAAgB,EAAE;YAClBE,IAAI,CAACE,UAAU,GAAGJ,gBAAgB;UACtC;UACA,IAAIC,gBAAgB,EAAE;YAClBC,IAAI,CAACG,UAAU,GAAGJ,gBAAgB;UACtC;UACAH,KAAK,CAACQ,IAAI,CAACJ,IAAI,CAAC;QACpB;QACAJ,KAAK,GAAGA,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC7C,SAAS,CAACoC,KAAK,CAAC;QAC1C,IAAI,IAAI,CAACpC,SAAS,CAACqC,mBAAmB,EAAE;UACpCA,mBAAmB,GAAG,IAAI,CAACrC,SAAS,CAACqC,mBAAmB;QAC5D;QACA,IAAI,CAAC3B,WAAW,GAAGzC,UAAU,CAAC6E,uBAAuB,CAACV,KAAK,EAAEC,mBAAmB,CAAC;MACrF;MACA,OAAO,IAAI,CAAC3B,WAAW;IAC3B;EAAC;IAAAE,GAAA;IAAAE,KAAA,EACD,SAAAiC,sBAAsBC,IAAI,EAAEC,SAAS,EAAEC,aAAa,EAAE;MAClD;MACA,IAAMC,KAAK,GAAG,IAAI,CAACC,UAAU,CAACC,MAAM,CAAC,CAACL,IAAI,CAAC,CAACH,MAAM,CAACI,SAAS,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC;MACxE,IAAMC,QAAQ,GAAGJ,KAAK,CAACI,QAAQ;MAC/B,IAAMb,UAAU,GAAG1E,aAAa,CAACwF,aAAa,CAACD,QAAQ,CAAC;MACxD,IAAME,SAAS,GAAGzF,aAAa,CAAC0F,YAAY,CAACH,QAAQ,CAAC;MACtD,OAAO;QACHb,UAAU,EAAEA,UAAU;QACtBiB,MAAM,EAAEC,OAAO,CAACH,SAAS,GAAG,CAAC,CAAC,sBAAsB,CAAC;QACrDI,IAAI,EAAED,OAAO,CAACH,SAAS,GAAG,CAAC,CAAC,oBAAoB,CAAC;QACjDK,SAAS,EAAEF,OAAO,CAACH,SAAS,GAAG,CAAC,CAAC,yBAAyB,CAAC;QAC3DM,aAAa,EAAEH,OAAO,CAACH,SAAS,GAAG,CAAC,CAAC,6BAA6B;MACtE,CAAC;IACL;EAAC;AAAA;AAEL,SAAStD,cAAcA,CAACE,SAAS,EAAE;EAC/B,OAAQA,SAAS,KAAKnB,mBAAmB,IAClCmB,SAAS,KAAKlB,kBAAkB,IAChCkB,SAAS,KAAKjB,mBAAmB,IACjCiB,SAAS,KAAKhB,mBAAmB;AAC5C;AACA,SAASiC,eAAeA,CAAC0C,YAAY,EAAE;EACnC,QAAQA,YAAY;IAChB,KAAK9E,mBAAmB;MACpB,OAAOb,EAAE;IACb,KAAKc,kBAAkB;MACnB,OAAOb,OAAO;IAClB,KAAKc,mBAAmB;MACpB,OAAOjB,QAAQ;IACnB,KAAKkB,mBAAmB;MACpB,OAAOjB,QAAQ;EACvB;AACJ;AACA,SAAS6F,eAAeA,CAACD,YAAY,EAAE;EACnC,IAAMhE,SAAS,GAAGsB,eAAe,CAAC0C,YAAY,CAAC;EAC/C,OAAO,IAAIrE,eAAe,CAACqE,YAAY,EAAEhE,SAAS,CAAC;AACvD;AACA,WAAakE,sBAAsB,0BAAAC,WAAA;EAC/B,SAAAD,uBAAA,EAAc;IAAA,IAAAE,KAAA;IAAAtE,eAAA,OAAAoE,sBAAA;IACVE,KAAA,GAAAC,UAAA,OAAAH,sBAAA;IACAE,KAAA,CAAKE,mBAAmB,GAAGF,KAAA,CAAKG,SAAS,CAAC,IAAIzG,OAAO,CAAC,CAAC,CAAC;IACxDsG,KAAA,CAAKI,qBAAqB,GAAGJ,KAAA,CAAKE,mBAAmB,CAACG,KAAK;IAC3DL,KAAA,CAAKM,yBAAyB,GAAGN,KAAA,CAAKG,SAAS,CAAC,IAAIzG,OAAO,CAAC,CAAC,CAAC;IAC9DsG,KAAA,CAAKO,2BAA2B,GAAGP,KAAA,CAAKM,yBAAyB,CAACD,KAAK;IACvEL,KAAA,CAAKQ,YAAY,GAAGpE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IACvC2D,KAAA,CAAKS,wBAAwB,GAAG,IAAI7F,wBAAwB,CAAC,CAAC;IAC9DoF,KAAA,CAAKU,uBAAuB,GAAG,IAAI;IACnCV,KAAA,CAAKW,YAAY,GAAG,IAAI7D,GAAG,CAAC,CAAC;IAC7BkD,KAAA,CAAKW,YAAY,CAAC5D,GAAG,CAACjC,mBAAmB,EAAE+E,eAAe,CAAC/E,mBAAmB,CAAC,CAAC;IAChFkF,KAAA,CAAKW,YAAY,CAAC5D,GAAG,CAAChC,kBAAkB,EAAE8E,eAAe,CAAC9E,kBAAkB,CAAC,CAAC;IAC9EiF,KAAA,CAAKW,YAAY,CAAC5D,GAAG,CAAC/B,mBAAmB,EAAE6E,eAAe,CAAC7E,mBAAmB,CAAC,CAAC;IAChFgF,KAAA,CAAKW,YAAY,CAAC5D,GAAG,CAAC9B,mBAAmB,EAAE4E,eAAe,CAAC5E,mBAAmB,CAAC,CAAC;IAChF,IAAM2F,eAAe,GAAGZ,KAAA,CAAKG,SAAS,CAACxF,kBAAkB,CAAAqF,KAAK,CAAC,CAAC;IAChEA,KAAA,CAAKa,WAAW,GAAGD,eAAe,CAACE,MAAM,CAAC,CAAC;IAC3Cd,KAAA,CAAKe,SAAS,GAAG,EAAE;IACnBf,KAAA,CAAKgB,OAAO,MAAAvC,MAAA,CAAMuB,KAAA,CAAKa,WAAW,QAAApC,MAAA,CAAKuB,KAAA,CAAKe,SAAS,CAAE;IACvDf,KAAA,CAAKiB,mBAAmB,GAAG,IAAI;IAC/BjB,KAAA,CAAKkB,cAAc,GAAG,EAAE;IACxBlB,KAAA,CAAKmB,iBAAiB,GAAG,IAAI;IAC7BnB,KAAA,CAAKoB,QAAQ,CAACtG,mBAAmB,CAAC;IAClCkF,KAAA,CAAKqB,kBAAkB,CAAC,CAAC;IACzBrB,KAAA,CAAKG,SAAS,CAACS,eAAe,CAACU,WAAW,CAAC,YAAM;MAC7CtB,KAAA,CAAKa,WAAW,GAAGD,eAAe,CAACE,MAAM,CAAC,CAAC;MAC3Cd,KAAA,CAAKuB,UAAU,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IACH/H,2BAA2B,CAACqB,UAAU,EAAE,yBAAyB,EAAE,YAAM;MACrEmF,KAAA,CAAKqB,kBAAkB,CAAC,CAAC;IAC7B,CAAC,CAAC;IAAC,OAAArB,KAAA;EACP;EAACwB,SAAA,CAAA1B,sBAAA,EAAAC,WAAA;EAAA,OAAAxD,YAAA,CAAAuD,sBAAA;IAAAtD,GAAA;IAAAE,KAAA,EACD,SAAA+E,wBAAwBC,OAAO,EAAE;MAC7B,IAAInI,GAAG,CAACoI,aAAa,CAACD,OAAO,CAAC,EAAE;QAC5B,OAAO,IAAI,CAACE,2BAA2B,CAACF,OAAO,CAAC;MACpD;MACA,OAAO,IAAI,CAACG,+BAA+B,CAAC,CAAC;IACjD;EAAC;IAAArF,GAAA;IAAAE,KAAA,EACD,SAAAmF,gCAAA,EAAkC;MAAA,IAAAC,MAAA;MAC9B,IAAI,CAAC,IAAI,CAACb,mBAAmB,EAAE;QAC3B,IAAI,CAACA,mBAAmB,GAAG1H,GAAG,CAACwI,gBAAgB,CAACtE,SAAS,EAAE,UAAAsB,KAAK,EAAI;UAChEA,KAAK,CAACiD,SAAS,GAAG,eAAe;UACjCjD,KAAK,CAACkD,WAAW,GAAGH,MAAI,CAACd,OAAO;QACpC,CAAC,CAAC;QACF,IAAI,CAACE,cAAc,CAAC1C,IAAI,CAAC,IAAI,CAACyC,mBAAmB,CAAC;MACtD;MACA,OAAO1G,UAAU,CAAC2H,IAAI;IAC1B;EAAC;IAAA1F,GAAA;IAAAE,KAAA,EACD,SAAAkF,4BAA4BF,OAAO,EAAE;MAAA,IAAAS,MAAA;MACjC,IAAMC,YAAY,GAAG7I,GAAG,CAACwI,gBAAgB,CAACL,OAAO,EAAE,UAAA3C,KAAK,EAAI;QACxDA,KAAK,CAACiD,SAAS,GAAG,eAAe;QACjCjD,KAAK,CAACkD,WAAW,GAAGE,MAAI,CAACnB,OAAO;MACpC,CAAC,CAAC;MACF,IAAI,CAACE,cAAc,CAAC1C,IAAI,CAAC4D,YAAY,CAAC;MACtC,OAAO;QACHC,OAAO,EAAE,SAAAA,QAAA,EAAM;UACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAI,CAACjB,cAAc,CAACpF,MAAM,EAAEwG,CAAC,EAAE,EAAE;YACjD,IAAIH,MAAI,CAACjB,cAAc,CAACoB,CAAC,CAAC,KAAKF,YAAY,EAAE;cACzCD,MAAI,CAACjB,cAAc,CAACqB,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;cAChC;YACJ;UACJ;QACJ;MACJ,CAAC;IACL;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EACD,SAAA8F,YAAYvG,SAAS,EAAEL,SAAS,EAAE;MAC9B,IAAI,CAAC,gBAAgB,CAAC6G,IAAI,CAACxG,SAAS,CAAC,EAAE;QACnC,MAAM,IAAIyG,KAAK,CAAC,qBAAqB,CAAC;MAC1C;MACA,IAAI,CAAC3G,cAAc,CAACH,SAAS,CAACC,IAAI,CAAC,IAAI,CAACE,cAAc,CAACE,SAAS,CAAC,EAAE;QAC/D,MAAM,IAAIyG,KAAK,CAAC,qBAAqB,CAAC;MAC1C;MACA;MACA,IAAI,CAAC/B,YAAY,CAAC5D,GAAG,CAACd,SAAS,EAAE,IAAIV,eAAe,CAACU,SAAS,EAAEL,SAAS,CAAC,CAAC;MAC3E,IAAIG,cAAc,CAACE,SAAS,CAAC,EAAE;QAC3B,IAAI,CAAC0E,YAAY,CAACgC,OAAO,CAAC,UAAAC,KAAK,EAAI;UAC/B,IAAIA,KAAK,CAAC/G,IAAI,KAAKI,SAAS,EAAE;YAC1B2G,KAAK,CAACjG,iBAAiB,CAAC,CAAC;UAC7B;QACJ,CAAC,CAAC;MACN;MACA,IAAI,IAAI,CAACkG,MAAM,CAAC5G,SAAS,KAAKA,SAAS,EAAE;QACrC,IAAI,CAACmF,QAAQ,CAACnF,SAAS,CAAC,CAAC,CAAC;MAC9B;IACJ;EAAC;IAAAO,GAAA;IAAAE,KAAA,EACD,SAAAoG,cAAA,EAAgB;MACZ,OAAO,IAAI,CAACD,MAAM;IACtB;EAAC;IAAArG,GAAA;IAAAE,KAAA,EACD,SAAAqG,oBAAoBC,gBAAgB,EAAE;MAClC,IAAI,CAAC7B,iBAAiB,GAAG6B,gBAAgB;MACzC,IAAI,CAACC,sBAAsB,CAAC,CAAC;IACjC;EAAC;IAAAzG,GAAA;IAAAE,KAAA,EACD,SAAA0E,SAASnF,SAAS,EAAE;MAChB,IAAI2G,KAAK;MACT,IAAI,IAAI,CAACjC,YAAY,CAACxD,GAAG,CAAClB,SAAS,CAAC,EAAE;QAClC2G,KAAK,GAAG,IAAI,CAACjC,YAAY,CAAClE,GAAG,CAACR,SAAS,CAAC;MAC5C,CAAC,MACI;QACD2G,KAAK,GAAG,IAAI,CAACjC,YAAY,CAAClE,GAAG,CAAC3B,mBAAmB,CAAC;MACtD;MACA,IAAI,CAACoI,kBAAkB,CAACN,KAAK,CAAC;IAClC;EAAC;IAAApG,GAAA;IAAAE,KAAA,EACD,SAAAwG,mBAAmBC,YAAY,EAAE;MAC7B,IAAI,CAACA,YAAY,IAAI,IAAI,CAACN,MAAM,KAAKM,YAAY,EAAE;QAC/C;QACA;MACJ;MACA,IAAI,CAACN,MAAM,GAAGM,YAAY;MAC1B,IAAI,CAACF,sBAAsB,CAAC,CAAC;IACjC;EAAC;IAAAzG,GAAA;IAAAE,KAAA,EACD,SAAA2E,mBAAA,EAAqB;MACjB,IAAI,IAAI,CAACX,uBAAuB,EAAE;QAC9B,IAAM0C,iBAAiB,GAAGvI,UAAU,CAACwI,UAAU,0BAA0B,CAAC,CAACC,OAAO;QAClF,IAAIF,iBAAiB,KAAK1I,cAAc,CAAC,IAAI,CAACmI,MAAM,CAACjE,IAAI,CAAC,EAAE;UACxD;UACA,IAAI2E,YAAY;UAChB,IAAI9I,MAAM,CAAC,IAAI,CAACoI,MAAM,CAACjE,IAAI,CAAC,EAAE;YAC1B2E,YAAY,GAAGH,iBAAiB,GAAGpI,mBAAmB,GAAGD,kBAAkB;UAC/E,CAAC,MACI;YACDwI,YAAY,GAAGH,iBAAiB,GAAGnI,mBAAmB,GAAGH,mBAAmB;UAChF;UACA,IAAI,CAACoI,kBAAkB,CAAC,IAAI,CAACvC,YAAY,CAAClE,GAAG,CAAC8G,YAAY,CAAC,CAAC;QAChE;MACJ;IACJ;EAAC;IAAA/G,GAAA;IAAAE,KAAA,EACD,SAAA8G,0BAA0BC,sBAAsB,EAAE;MAC9C,IAAI,CAAC/C,uBAAuB,GAAG+C,sBAAsB;MACrD,IAAI,CAACpC,kBAAkB,CAAC,CAAC;IAC7B;EAAC;IAAA7E,GAAA;IAAAE,KAAA,EACD,SAAAuG,uBAAA,EAAyB;MAAA,IAAAS,MAAA;MACrB,IAAMC,QAAQ,GAAG,EAAE;MACnB,IAAMC,OAAO,GAAG,CAAC,CAAC;MAClB,IAAMC,aAAa,GAAG;QAClBC,OAAO,EAAE,SAAAA,QAAC1F,IAAI,EAAK;UACf,IAAI,CAACwF,OAAO,CAACxF,IAAI,CAAC,EAAE;YAChBuF,QAAQ,CAACnF,IAAI,CAACJ,IAAI,CAAC;YACnBwF,OAAO,CAACxF,IAAI,CAAC,GAAG,IAAI;UACxB;QACJ;MACJ,CAAC;MACD/C,eAAe,CAAC0I,sBAAsB,CAAC,CAAC,CAACpB,OAAO,CAAC,UAAAqB,CAAC;QAAA,OAAIA,CAAC,CAACN,MAAI,CAACb,MAAM,EAAEgB,aAAa,EAAEH,MAAI,CAAClD,YAAY,CAAC;MAAA,EAAC;MACvG,IAAMyD,cAAc,GAAG,EAAE;MAAC,IAAAC,SAAA,GAAAC,0BAAA,CACPjJ,aAAa,CAAC2B,SAAS,CAAC,CAAC;QAAAuH,KAAA;MAAA;QAA5C,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8C;UAAA,IAAnCC,IAAI,GAAAJ,KAAA,CAAA1H,KAAA;UACX,IAAMa,KAAK,GAAG,IAAI,CAACsF,MAAM,CAACzF,QAAQ,CAACoH,IAAI,CAACxI,EAAE,EAAE,IAAI,CAAC;UACjD,IAAIuB,KAAK,EAAE;YACP0G,cAAc,CAACzF,IAAI,IAAAC,MAAA,CAAIrE,iBAAiB,CAACoK,IAAI,CAACxI,EAAE,CAAC,QAAAyC,MAAA,CAAKlB,KAAK,CAACkH,QAAQ,CAAC,CAAC,MAAG,CAAC;UAC9E;QACJ;MAAC,SAAAC,GAAA;QAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;MAAA;QAAAR,SAAA,CAAAU,CAAA;MAAA;MACDf,aAAa,CAACC,OAAO,6DAAArF,MAAA,CAA6DwF,cAAc,CAAC/E,IAAI,CAAC,IAAI,CAAC,OAAI,CAAC;MAChH,IAAM2F,QAAQ,GAAG,IAAI,CAAC1D,iBAAiB,IAAI,IAAI,CAAC0B,MAAM,CAAC7D,UAAU,CAAC8F,WAAW,CAAC,CAAC;MAC/EjB,aAAa,CAACC,OAAO,CAAChK,4BAA4B,CAAC+K,QAAQ,CAAC,CAAC;MAC7D,IAAI,CAAC9D,SAAS,GAAG4C,QAAQ,CAACzE,IAAI,CAAC,IAAI,CAAC;MACpC,IAAI,CAACqC,UAAU,CAAC,CAAC;MACjB5H,oBAAoB,CAACoL,WAAW,CAACF,QAAQ,CAAC;MAC1C,IAAI,CAAC3E,mBAAmB,CAAC8E,IAAI,CAAC,IAAI,CAACnC,MAAM,CAAC;IAC9C;EAAC;IAAArG,GAAA;IAAAE,KAAA,EACD,SAAA6E,WAAA,EAAa;MAAA,IAAA0D,MAAA;MACT,IAAI,CAACjE,OAAO,MAAAvC,MAAA,CAAM,IAAI,CAACoC,WAAW,QAAApC,MAAA,CAAK,IAAI,CAACsC,SAAS,CAAE;MACvD,IAAI,CAACG,cAAc,CAACyB,OAAO,CAAC,UAAAP,YAAY;QAAA,OAAIA,YAAY,CAACH,WAAW,GAAGgD,MAAI,CAACjE,OAAO;MAAA,EAAC;IACxF;EAAC;IAAAxE,GAAA;IAAAE,KAAA,EACD,SAAAwI,iBAAA,EAAmB;MACf,OAAO;QACHC,YAAY,EAAE,KAAK;QACnBC,cAAc,EAAE,KAAK;QACrBC,mBAAmB,EAAE;MACzB,CAAC;IACL;EAAC;IAAA7I,GAAA;IAAAE,KAAA,EACD,SAAA4I,oBAAA,EAAsB;MAClB,OAAO,IAAI,CAAC7E,wBAAwB;IACxC;EAAC;AAAA,EA1KuClG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}