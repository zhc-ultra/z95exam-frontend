{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { applyFontInfo } from './domFontInfo.js';\nexport var CharWidthRequest = /*#__PURE__*/function () {\n  function CharWidthRequest(chr, type) {\n    _classCallCheck(this, CharWidthRequest);\n    this.chr = chr;\n    this.type = type;\n    this.width = 0;\n  }\n  return _createClass(CharWidthRequest, [{\n    key: \"fulfill\",\n    value: function fulfill(width) {\n      this.width = width;\n    }\n  }]);\n}();\nvar DomCharWidthReader = /*#__PURE__*/function () {\n  function DomCharWidthReader(bareFontInfo, requests) {\n    _classCallCheck(this, DomCharWidthReader);\n    this._bareFontInfo = bareFontInfo;\n    this._requests = requests;\n    this._container = null;\n    this._testElements = null;\n  }\n  return _createClass(DomCharWidthReader, [{\n    key: \"read\",\n    value: function read(targetWindow) {\n      // Create a test container with all these test elements\n      this._createDomElements();\n      // Add the container to the DOM\n      targetWindow.document.body.appendChild(this._container);\n      // Read character widths\n      this._readFromDomElements();\n      // Remove the container from the DOM\n      targetWindow.document.body.removeChild(this._container);\n      this._container = null;\n      this._testElements = null;\n    }\n  }, {\n    key: \"_createDomElements\",\n    value: function _createDomElements() {\n      var container = document.createElement('div');\n      container.style.position = 'absolute';\n      container.style.top = '-50000px';\n      container.style.width = '50000px';\n      var regularDomNode = document.createElement('div');\n      applyFontInfo(regularDomNode, this._bareFontInfo);\n      container.appendChild(regularDomNode);\n      var boldDomNode = document.createElement('div');\n      applyFontInfo(boldDomNode, this._bareFontInfo);\n      boldDomNode.style.fontWeight = 'bold';\n      container.appendChild(boldDomNode);\n      var italicDomNode = document.createElement('div');\n      applyFontInfo(italicDomNode, this._bareFontInfo);\n      italicDomNode.style.fontStyle = 'italic';\n      container.appendChild(italicDomNode);\n      var testElements = [];\n      var _iterator = _createForOfIteratorHelper(this._requests),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var request = _step.value;\n          var parent = void 0;\n          if (request.type === 0 /* CharWidthRequestType.Regular */) {\n            parent = regularDomNode;\n          }\n          if (request.type === 2 /* CharWidthRequestType.Bold */) {\n            parent = boldDomNode;\n          }\n          if (request.type === 1 /* CharWidthRequestType.Italic */) {\n            parent = italicDomNode;\n          }\n          parent.appendChild(document.createElement('br'));\n          var testElement = document.createElement('span');\n          DomCharWidthReader._render(testElement, request);\n          parent.appendChild(testElement);\n          testElements.push(testElement);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._container = container;\n      this._testElements = testElements;\n    }\n  }, {\n    key: \"_readFromDomElements\",\n    value: function _readFromDomElements() {\n      for (var i = 0, len = this._requests.length; i < len; i++) {\n        var request = this._requests[i];\n        var testElement = this._testElements[i];\n        request.fulfill(testElement.offsetWidth / 256);\n      }\n    }\n  }], [{\n    key: \"_render\",\n    value: function _render(testElement, request) {\n      if (request.chr === ' ') {\n        var htmlString = \"\\xA0\";\n        // Repeat character 256 (2^8) times\n        for (var i = 0; i < 8; i++) {\n          htmlString += htmlString;\n        }\n        testElement.innerText = htmlString;\n      } else {\n        var testString = request.chr;\n        // Repeat character 256 (2^8) times\n        for (var _i = 0; _i < 8; _i++) {\n          testString += testString;\n        }\n        testElement.textContent = testString;\n      }\n    }\n  }]);\n}();\nexport function readCharWidths(targetWindow, bareFontInfo, requests) {\n  var reader = new DomCharWidthReader(bareFontInfo, requests);\n  reader.read(targetWindow);\n}","map":{"version":3,"names":["applyFontInfo","CharWidthRequest","chr","type","_classCallCheck","width","_createClass","key","value","fulfill","DomCharWidthReader","bareFontInfo","requests","_bareFontInfo","_requests","_container","_testElements","read","targetWindow","_createDomElements","document","body","appendChild","_readFromDomElements","removeChild","container","createElement","style","position","top","regularDomNode","boldDomNode","fontWeight","italicDomNode","fontStyle","testElements","_iterator","_createForOfIteratorHelper","_step","s","n","done","request","parent","testElement","_render","push","err","e","f","i","len","length","offsetWidth","htmlString","innerText","testString","textContent","readCharWidths","reader"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/config/charWidthReader.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { applyFontInfo } from './domFontInfo.js';\nexport class CharWidthRequest {\n    constructor(chr, type) {\n        this.chr = chr;\n        this.type = type;\n        this.width = 0;\n    }\n    fulfill(width) {\n        this.width = width;\n    }\n}\nclass DomCharWidthReader {\n    constructor(bareFontInfo, requests) {\n        this._bareFontInfo = bareFontInfo;\n        this._requests = requests;\n        this._container = null;\n        this._testElements = null;\n    }\n    read(targetWindow) {\n        // Create a test container with all these test elements\n        this._createDomElements();\n        // Add the container to the DOM\n        targetWindow.document.body.appendChild(this._container);\n        // Read character widths\n        this._readFromDomElements();\n        // Remove the container from the DOM\n        targetWindow.document.body.removeChild(this._container);\n        this._container = null;\n        this._testElements = null;\n    }\n    _createDomElements() {\n        const container = document.createElement('div');\n        container.style.position = 'absolute';\n        container.style.top = '-50000px';\n        container.style.width = '50000px';\n        const regularDomNode = document.createElement('div');\n        applyFontInfo(regularDomNode, this._bareFontInfo);\n        container.appendChild(regularDomNode);\n        const boldDomNode = document.createElement('div');\n        applyFontInfo(boldDomNode, this._bareFontInfo);\n        boldDomNode.style.fontWeight = 'bold';\n        container.appendChild(boldDomNode);\n        const italicDomNode = document.createElement('div');\n        applyFontInfo(italicDomNode, this._bareFontInfo);\n        italicDomNode.style.fontStyle = 'italic';\n        container.appendChild(italicDomNode);\n        const testElements = [];\n        for (const request of this._requests) {\n            let parent;\n            if (request.type === 0 /* CharWidthRequestType.Regular */) {\n                parent = regularDomNode;\n            }\n            if (request.type === 2 /* CharWidthRequestType.Bold */) {\n                parent = boldDomNode;\n            }\n            if (request.type === 1 /* CharWidthRequestType.Italic */) {\n                parent = italicDomNode;\n            }\n            parent.appendChild(document.createElement('br'));\n            const testElement = document.createElement('span');\n            DomCharWidthReader._render(testElement, request);\n            parent.appendChild(testElement);\n            testElements.push(testElement);\n        }\n        this._container = container;\n        this._testElements = testElements;\n    }\n    static _render(testElement, request) {\n        if (request.chr === ' ') {\n            let htmlString = '\\u00a0';\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                htmlString += htmlString;\n            }\n            testElement.innerText = htmlString;\n        }\n        else {\n            let testString = request.chr;\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                testString += testString;\n            }\n            testElement.textContent = testString;\n        }\n    }\n    _readFromDomElements() {\n        for (let i = 0, len = this._requests.length; i < len; i++) {\n            const request = this._requests[i];\n            const testElement = this._testElements[i];\n            request.fulfill(testElement.offsetWidth / 256);\n        }\n    }\n}\nexport function readCharWidths(targetWindow, bareFontInfo, requests) {\n    const reader = new DomCharWidthReader(bareFontInfo, requests);\n    reader.read(targetWindow);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}