{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { encodeSemanticTokensDto } from '../../../common/services/semanticTokensDto.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport function isSemanticTokens(v) {\n  return v && !!v.data;\n}\nexport function isSemanticTokensEdits(v) {\n  return v && Array.isArray(v.edits);\n}\nexport var DocumentSemanticTokensResult = /*#__PURE__*/_createClass(function DocumentSemanticTokensResult(provider, tokens, error) {\n  _classCallCheck(this, DocumentSemanticTokensResult);\n  this.provider = provider;\n  this.tokens = tokens;\n  this.error = error;\n});\nexport function hasDocumentSemanticTokensProvider(registry, model) {\n  return registry.has(model);\n}\nfunction getDocumentSemanticTokensProviders(registry, model) {\n  var groups = registry.orderedGroups(model);\n  return groups.length > 0 ? groups[0] : [];\n}\nexport function getDocumentSemanticTokens(_x, _x2, _x3, _x4, _x5) {\n  return _getDocumentSemanticTokens.apply(this, arguments);\n}\nfunction _getDocumentSemanticTokens() {\n  _getDocumentSemanticTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(registry, model, lastProvider, lastResultId, token) {\n    var providers, results, _iterator, _step, result;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          providers = getDocumentSemanticTokensProviders(registry, model); // Get tokens from all providers at the same time.\n          _context6.next = 3;\n          return Promise.all(providers.map( /*#__PURE__*/function () {\n            var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(provider) {\n              var result, error;\n              return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    error = null;\n                    _context5.prev = 1;\n                    _context5.next = 4;\n                    return provider.provideDocumentSemanticTokens(model, provider === lastProvider ? lastResultId : null, token);\n                  case 4:\n                    result = _context5.sent;\n                    _context5.next = 11;\n                    break;\n                  case 7:\n                    _context5.prev = 7;\n                    _context5.t0 = _context5[\"catch\"](1);\n                    error = _context5.t0;\n                    result = null;\n                  case 11:\n                    if (!result || !isSemanticTokens(result) && !isSemanticTokensEdits(result)) {\n                      result = null;\n                    }\n                    return _context5.abrupt(\"return\", new DocumentSemanticTokensResult(provider, result, error));\n                  case 13:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5, null, [[1, 7]]);\n            }));\n            return function (_x14) {\n              return _ref5.apply(this, arguments);\n            };\n          }()));\n        case 3:\n          results = _context6.sent;\n          // Try to return the first result with actual tokens or\n          // the first result which threw an error (!!)\n          _iterator = _createForOfIteratorHelper(results);\n          _context6.prev = 5;\n          _iterator.s();\n        case 7:\n          if ((_step = _iterator.n()).done) {\n            _context6.next = 15;\n            break;\n          }\n          result = _step.value;\n          if (!result.error) {\n            _context6.next = 11;\n            break;\n          }\n          throw result.error;\n        case 11:\n          if (!result.tokens) {\n            _context6.next = 13;\n            break;\n          }\n          return _context6.abrupt(\"return\", result);\n        case 13:\n          _context6.next = 7;\n          break;\n        case 15:\n          _context6.next = 20;\n          break;\n        case 17:\n          _context6.prev = 17;\n          _context6.t0 = _context6[\"catch\"](5);\n          _iterator.e(_context6.t0);\n        case 20:\n          _context6.prev = 20;\n          _iterator.f();\n          return _context6.finish(20);\n        case 23:\n          if (!(results.length > 0)) {\n            _context6.next = 25;\n            break;\n          }\n          return _context6.abrupt(\"return\", results[0]);\n        case 25:\n          return _context6.abrupt(\"return\", null);\n        case 26:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[5, 17, 20, 23]]);\n  }));\n  return _getDocumentSemanticTokens.apply(this, arguments);\n}\nfunction _getDocumentSemanticTokensProviderHighestGroup(registry, model) {\n  var result = registry.orderedGroups(model);\n  return result.length > 0 ? result[0] : null;\n}\nvar DocumentRangeSemanticTokensResult = /*#__PURE__*/_createClass(function DocumentRangeSemanticTokensResult(provider, tokens) {\n  _classCallCheck(this, DocumentRangeSemanticTokensResult);\n  this.provider = provider;\n  this.tokens = tokens;\n});\nexport function hasDocumentRangeSemanticTokensProvider(providers, model) {\n  return providers.has(model);\n}\nfunction getDocumentRangeSemanticTokensProviders(providers, model) {\n  var groups = providers.orderedGroups(model);\n  return groups.length > 0 ? groups[0] : [];\n}\nexport function getDocumentRangeSemanticTokens(_x6, _x7, _x8, _x9) {\n  return _getDocumentRangeSemanticTokens.apply(this, arguments);\n}\nfunction _getDocumentRangeSemanticTokens() {\n  _getDocumentRangeSemanticTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(registry, model, range, token) {\n    var providers, results, _iterator2, _step2, result;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          providers = getDocumentRangeSemanticTokensProviders(registry, model); // Get tokens from all providers at the same time.\n          _context8.next = 3;\n          return Promise.all(providers.map( /*#__PURE__*/function () {\n            var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(provider) {\n              var result;\n              return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.prev = 0;\n                    _context7.next = 3;\n                    return provider.provideDocumentRangeSemanticTokens(model, range, token);\n                  case 3:\n                    result = _context7.sent;\n                    _context7.next = 10;\n                    break;\n                  case 6:\n                    _context7.prev = 6;\n                    _context7.t0 = _context7[\"catch\"](0);\n                    onUnexpectedExternalError(_context7.t0);\n                    result = null;\n                  case 10:\n                    if (!result || !isSemanticTokens(result)) {\n                      result = null;\n                    }\n                    return _context7.abrupt(\"return\", new DocumentRangeSemanticTokensResult(provider, result));\n                  case 12:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7, null, [[0, 6]]);\n            }));\n            return function (_x15) {\n              return _ref6.apply(this, arguments);\n            };\n          }()));\n        case 3:\n          results = _context8.sent;\n          // Try to return the first result with actual tokens\n          _iterator2 = _createForOfIteratorHelper(results);\n          _context8.prev = 5;\n          _iterator2.s();\n        case 7:\n          if ((_step2 = _iterator2.n()).done) {\n            _context8.next = 13;\n            break;\n          }\n          result = _step2.value;\n          if (!result.tokens) {\n            _context8.next = 11;\n            break;\n          }\n          return _context8.abrupt(\"return\", result);\n        case 11:\n          _context8.next = 7;\n          break;\n        case 13:\n          _context8.next = 18;\n          break;\n        case 15:\n          _context8.prev = 15;\n          _context8.t0 = _context8[\"catch\"](5);\n          _iterator2.e(_context8.t0);\n        case 18:\n          _context8.prev = 18;\n          _iterator2.f();\n          return _context8.finish(18);\n        case 21:\n          if (!(results.length > 0)) {\n            _context8.next = 23;\n            break;\n          }\n          return _context8.abrupt(\"return\", results[0]);\n        case 23:\n          return _context8.abrupt(\"return\", null);\n        case 24:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[5, 15, 18, 21]]);\n  }));\n  return _getDocumentRangeSemanticTokens.apply(this, arguments);\n}\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokensLegend', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(accessor) {\n    var _len,\n      args,\n      _key,\n      uri,\n      model,\n      _accessor$get,\n      documentSemanticTokensProvider,\n      providers,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = _args[_key];\n          }\n          uri = args[0];\n          assertType(uri instanceof URI);\n          model = accessor.get(IModelService).getModel(uri);\n          if (model) {\n            _context.next = 6;\n            break;\n          }\n          return _context.abrupt(\"return\", undefined);\n        case 6:\n          _accessor$get = accessor.get(ILanguageFeaturesService), documentSemanticTokensProvider = _accessor$get.documentSemanticTokensProvider;\n          providers = _getDocumentSemanticTokensProviderHighestGroup(documentSemanticTokensProvider, model);\n          if (providers) {\n            _context.next = 10;\n            break;\n          }\n          return _context.abrupt(\"return\", accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokensLegend', uri));\n        case 10:\n          return _context.abrupt(\"return\", providers[0].getLegend());\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x10) {\n    return _ref.apply(this, arguments);\n  };\n}());\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokens', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accessor) {\n    var _len2,\n      args,\n      _key2,\n      uri,\n      model,\n      _accessor$get2,\n      documentSemanticTokensProvider,\n      r,\n      provider,\n      tokens,\n      buff,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          for (_len2 = _args2.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = _args2[_key2];\n          }\n          uri = args[0];\n          assertType(uri instanceof URI);\n          model = accessor.get(IModelService).getModel(uri);\n          if (model) {\n            _context2.next = 6;\n            break;\n          }\n          return _context2.abrupt(\"return\", undefined);\n        case 6:\n          _accessor$get2 = accessor.get(ILanguageFeaturesService), documentSemanticTokensProvider = _accessor$get2.documentSemanticTokensProvider;\n          if (hasDocumentSemanticTokensProvider(documentSemanticTokensProvider, model)) {\n            _context2.next = 9;\n            break;\n          }\n          return _context2.abrupt(\"return\", accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokens', uri, model.getFullModelRange()));\n        case 9:\n          _context2.next = 11;\n          return getDocumentSemanticTokens(documentSemanticTokensProvider, model, null, null, CancellationToken.None);\n        case 11:\n          r = _context2.sent;\n          if (r) {\n            _context2.next = 14;\n            break;\n          }\n          return _context2.abrupt(\"return\", undefined);\n        case 14:\n          provider = r.provider, tokens = r.tokens;\n          if (!(!tokens || !isSemanticTokens(tokens))) {\n            _context2.next = 17;\n            break;\n          }\n          return _context2.abrupt(\"return\", undefined);\n        case 17:\n          buff = encodeSemanticTokensDto({\n            id: 0,\n            type: 'full',\n            data: tokens.data\n          });\n          if (tokens.resultId) {\n            provider.releaseDocumentSemanticTokens(tokens.resultId);\n          }\n          return _context2.abrupt(\"return\", buff);\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function (_x11) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokensLegend', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(accessor) {\n    var _len3,\n      args,\n      _key3,\n      uri,\n      range,\n      model,\n      _accessor$get3,\n      documentRangeSemanticTokensProvider,\n      providers,\n      result,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          for (_len3 = _args3.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n            args[_key3 - 1] = _args3[_key3];\n          }\n          uri = args[0], range = args[1];\n          assertType(uri instanceof URI);\n          model = accessor.get(IModelService).getModel(uri);\n          if (model) {\n            _context3.next = 6;\n            break;\n          }\n          return _context3.abrupt(\"return\", undefined);\n        case 6:\n          _accessor$get3 = accessor.get(ILanguageFeaturesService), documentRangeSemanticTokensProvider = _accessor$get3.documentRangeSemanticTokensProvider;\n          providers = getDocumentRangeSemanticTokensProviders(documentRangeSemanticTokensProvider, model);\n          if (!(providers.length === 0)) {\n            _context3.next = 10;\n            break;\n          }\n          return _context3.abrupt(\"return\", undefined);\n        case 10:\n          if (!(providers.length === 1)) {\n            _context3.next = 12;\n            break;\n          }\n          return _context3.abrupt(\"return\", providers[0].getLegend());\n        case 12:\n          if (!(!range || !Range.isIRange(range))) {\n            _context3.next = 15;\n            break;\n          }\n          // if no range is provided, we cannot support multiple providers\n          // as we cannot fall back to the one which would give results\n          // => return the first legend for backwards compatibility and print a warning\n          console.warn(\"provideDocumentRangeSemanticTokensLegend might be out-of-sync with provideDocumentRangeSemanticTokens unless a range argument is passed in\");\n          return _context3.abrupt(\"return\", providers[0].getLegend());\n        case 15:\n          _context3.next = 17;\n          return getDocumentRangeSemanticTokens(documentRangeSemanticTokensProvider, model, Range.lift(range), CancellationToken.None);\n        case 17:\n          result = _context3.sent;\n          if (result) {\n            _context3.next = 20;\n            break;\n          }\n          return _context3.abrupt(\"return\", undefined);\n        case 20:\n          return _context3.abrupt(\"return\", result.provider.getLegend());\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function (_x12) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokens', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(accessor) {\n    var _len4,\n      args,\n      _key4,\n      uri,\n      range,\n      model,\n      _accessor$get4,\n      documentRangeSemanticTokensProvider,\n      result,\n      _args4 = arguments;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          for (_len4 = _args4.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n            args[_key4 - 1] = _args4[_key4];\n          }\n          uri = args[0], range = args[1];\n          assertType(uri instanceof URI);\n          assertType(Range.isIRange(range));\n          model = accessor.get(IModelService).getModel(uri);\n          if (model) {\n            _context4.next = 7;\n            break;\n          }\n          return _context4.abrupt(\"return\", undefined);\n        case 7:\n          _accessor$get4 = accessor.get(ILanguageFeaturesService), documentRangeSemanticTokensProvider = _accessor$get4.documentRangeSemanticTokensProvider;\n          _context4.next = 10;\n          return getDocumentRangeSemanticTokens(documentRangeSemanticTokensProvider, model, Range.lift(range), CancellationToken.None);\n        case 10:\n          result = _context4.sent;\n          if (!(!result || !result.tokens)) {\n            _context4.next = 13;\n            break;\n          }\n          return _context4.abrupt(\"return\", undefined);\n        case 13:\n          return _context4.abrupt(\"return\", encodeSemanticTokensDto({\n            id: 0,\n            type: 'full',\n            data: result.tokens.data\n          }));\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function (_x13) {\n    return _ref4.apply(this, arguments);\n  };\n}());","map":{"version":3,"names":["CancellationToken","onUnexpectedExternalError","URI","IModelService","CommandsRegistry","ICommandService","assertType","encodeSemanticTokensDto","Range","ILanguageFeaturesService","isSemanticTokens","v","data","isSemanticTokensEdits","Array","isArray","edits","DocumentSemanticTokensResult","_createClass","provider","tokens","error","_classCallCheck","hasDocumentSemanticTokensProvider","registry","model","has","getDocumentSemanticTokensProviders","groups","orderedGroups","length","getDocumentSemanticTokens","_x","_x2","_x3","_x4","_x5","_getDocumentSemanticTokens","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee6","lastProvider","lastResultId","token","providers","results","_iterator","_step","result","wrap","_callee6$","_context6","prev","next","Promise","all","map","_ref5","_callee5","_callee5$","_context5","provideDocumentSemanticTokens","sent","t0","abrupt","stop","_x14","_createForOfIteratorHelper","s","n","done","value","e","f","finish","_getDocumentSemanticTokensProviderHighestGroup","DocumentRangeSemanticTokensResult","hasDocumentRangeSemanticTokensProvider","getDocumentRangeSemanticTokensProviders","getDocumentRangeSemanticTokens","_x6","_x7","_x8","_x9","_getDocumentRangeSemanticTokens","_callee8","range","_iterator2","_step2","_callee8$","_context8","_ref6","_callee7","_callee7$","_context7","provideDocumentRangeSemanticTokens","_x15","registerCommand","_ref","_callee","accessor","_len","args","_key","uri","_accessor$get","documentSemanticTokensProvider","_args","_callee$","_context","get","getModel","undefined","executeCommand","getLegend","_x10","_ref2","_callee2","_len2","_key2","_accessor$get2","r","buff","_args2","_callee2$","_context2","getFullModelRange","None","id","type","resultId","releaseDocumentSemanticTokens","_x11","_ref3","_callee3","_len3","_key3","_accessor$get3","documentRangeSemanticTokensProvider","_args3","_callee3$","_context3","isIRange","console","warn","lift","_x12","_ref4","_callee4","_len4","_key4","_accessor$get4","_args4","_callee4$","_context4","_x13"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/semanticTokens/common/getSemanticTokens.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { encodeSemanticTokensDto } from '../../../common/services/semanticTokensDto.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport function isSemanticTokens(v) {\n    return v && !!(v.data);\n}\nexport function isSemanticTokensEdits(v) {\n    return v && Array.isArray(v.edits);\n}\nexport class DocumentSemanticTokensResult {\n    constructor(provider, tokens, error) {\n        this.provider = provider;\n        this.tokens = tokens;\n        this.error = error;\n    }\n}\nexport function hasDocumentSemanticTokensProvider(registry, model) {\n    return registry.has(model);\n}\nfunction getDocumentSemanticTokensProviders(registry, model) {\n    const groups = registry.orderedGroups(model);\n    return (groups.length > 0 ? groups[0] : []);\n}\nexport async function getDocumentSemanticTokens(registry, model, lastProvider, lastResultId, token) {\n    const providers = getDocumentSemanticTokensProviders(registry, model);\n    // Get tokens from all providers at the same time.\n    const results = await Promise.all(providers.map(async (provider) => {\n        let result;\n        let error = null;\n        try {\n            result = await provider.provideDocumentSemanticTokens(model, (provider === lastProvider ? lastResultId : null), token);\n        }\n        catch (err) {\n            error = err;\n            result = null;\n        }\n        if (!result || (!isSemanticTokens(result) && !isSemanticTokensEdits(result))) {\n            result = null;\n        }\n        return new DocumentSemanticTokensResult(provider, result, error);\n    }));\n    // Try to return the first result with actual tokens or\n    // the first result which threw an error (!!)\n    for (const result of results) {\n        if (result.error) {\n            throw result.error;\n        }\n        if (result.tokens) {\n            return result;\n        }\n    }\n    // Return the first result, even if it doesn't have tokens\n    if (results.length > 0) {\n        return results[0];\n    }\n    return null;\n}\nfunction _getDocumentSemanticTokensProviderHighestGroup(registry, model) {\n    const result = registry.orderedGroups(model);\n    return (result.length > 0 ? result[0] : null);\n}\nclass DocumentRangeSemanticTokensResult {\n    constructor(provider, tokens) {\n        this.provider = provider;\n        this.tokens = tokens;\n    }\n}\nexport function hasDocumentRangeSemanticTokensProvider(providers, model) {\n    return providers.has(model);\n}\nfunction getDocumentRangeSemanticTokensProviders(providers, model) {\n    const groups = providers.orderedGroups(model);\n    return (groups.length > 0 ? groups[0] : []);\n}\nexport async function getDocumentRangeSemanticTokens(registry, model, range, token) {\n    const providers = getDocumentRangeSemanticTokensProviders(registry, model);\n    // Get tokens from all providers at the same time.\n    const results = await Promise.all(providers.map(async (provider) => {\n        let result;\n        try {\n            result = await provider.provideDocumentRangeSemanticTokens(model, range, token);\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n            result = null;\n        }\n        if (!result || !isSemanticTokens(result)) {\n            result = null;\n        }\n        return new DocumentRangeSemanticTokensResult(provider, result);\n    }));\n    // Try to return the first result with actual tokens\n    for (const result of results) {\n        if (result.tokens) {\n            return result;\n        }\n    }\n    // Return the first result, even if it doesn't have tokens\n    if (results.length > 0) {\n        return results[0];\n    }\n    return null;\n}\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokensLegend', async (accessor, ...args) => {\n    const [uri] = args;\n    assertType(uri instanceof URI);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    const providers = _getDocumentSemanticTokensProviderHighestGroup(documentSemanticTokensProvider, model);\n    if (!providers) {\n        // there is no provider => fall back to a document range semantic tokens provider\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokensLegend', uri);\n    }\n    return providers[0].getLegend();\n});\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokens', async (accessor, ...args) => {\n    const [uri] = args;\n    assertType(uri instanceof URI);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    if (!hasDocumentSemanticTokensProvider(documentSemanticTokensProvider, model)) {\n        // there is no provider => fall back to a document range semantic tokens provider\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokens', uri, model.getFullModelRange());\n    }\n    const r = await getDocumentSemanticTokens(documentSemanticTokensProvider, model, null, null, CancellationToken.None);\n    if (!r) {\n        return undefined;\n    }\n    const { provider, tokens } = r;\n    if (!tokens || !isSemanticTokens(tokens)) {\n        return undefined;\n    }\n    const buff = encodeSemanticTokensDto({\n        id: 0,\n        type: 'full',\n        data: tokens.data\n    });\n    if (tokens.resultId) {\n        provider.releaseDocumentSemanticTokens(tokens.resultId);\n    }\n    return buff;\n});\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokensLegend', async (accessor, ...args) => {\n    const [uri, range] = args;\n    assertType(uri instanceof URI);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentRangeSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    const providers = getDocumentRangeSemanticTokensProviders(documentRangeSemanticTokensProvider, model);\n    if (providers.length === 0) {\n        // no providers\n        return undefined;\n    }\n    if (providers.length === 1) {\n        // straight forward case, just a single provider\n        return providers[0].getLegend();\n    }\n    if (!range || !Range.isIRange(range)) {\n        // if no range is provided, we cannot support multiple providers\n        // as we cannot fall back to the one which would give results\n        // => return the first legend for backwards compatibility and print a warning\n        console.warn(`provideDocumentRangeSemanticTokensLegend might be out-of-sync with provideDocumentRangeSemanticTokens unless a range argument is passed in`);\n        return providers[0].getLegend();\n    }\n    const result = await getDocumentRangeSemanticTokens(documentRangeSemanticTokensProvider, model, Range.lift(range), CancellationToken.None);\n    if (!result) {\n        return undefined;\n    }\n    return result.provider.getLegend();\n});\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokens', async (accessor, ...args) => {\n    const [uri, range] = args;\n    assertType(uri instanceof URI);\n    assertType(Range.isIRange(range));\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentRangeSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    const result = await getDocumentRangeSemanticTokens(documentRangeSemanticTokensProvider, model, Range.lift(range), CancellationToken.None);\n    if (!result || !result.tokens) {\n        // there is no provider or it didn't return tokens\n        return undefined;\n    }\n    return encodeSemanticTokensDto({\n        id: 0,\n        type: 'full',\n        data: result.tokens.data\n    });\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}