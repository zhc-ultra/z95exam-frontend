{"ast":null,"code":"import _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../common/contextkey.js';\nvar KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport var Context = /*#__PURE__*/function () {\n  function Context(id, parent) {\n    _classCallCheck(this, Context);\n    this._id = id;\n    this._parent = parent;\n    this._value = Object.create(null);\n    this._value['_contextId'] = id;\n  }\n  return _createClass(Context, [{\n    key: \"value\",\n    get: function get() {\n      return _objectSpread({}, this._value);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n      if (this._value[key] !== value) {\n        this._value[key] = value;\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"removeValue\",\n    value: function removeValue(key) {\n      // console.log('REMOVE ' + key + ' FROM ' + this._id);\n      if (key in this._value) {\n        delete this._value[key];\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(key) {\n      var ret = this._value[key];\n      if (typeof ret === 'undefined' && this._parent) {\n        return this._parent.getValue(key);\n      }\n      return ret;\n    }\n  }]);\n}();\nvar NullContext = /*#__PURE__*/function (_Context) {\n  function NullContext() {\n    _classCallCheck(this, NullContext);\n    return _callSuper(this, NullContext, [-1, null]);\n  }\n  _inherits(NullContext, _Context);\n  return _createClass(NullContext, [{\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      return false;\n    }\n  }, {\n    key: \"removeValue\",\n    value: function removeValue(key) {\n      return false;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(key) {\n      return undefined;\n    }\n  }]);\n}(Context);\nNullContext.INSTANCE = new NullContext();\nvar ConfigAwareContextValuesContainer = /*#__PURE__*/function (_Context2) {\n  function ConfigAwareContextValuesContainer(id, _configurationService, emitter) {\n    var _this;\n    _classCallCheck(this, ConfigAwareContextValuesContainer);\n    _this = _callSuper(this, ConfigAwareContextValuesContainer, [id, null]);\n    _this._configurationService = _configurationService;\n    _this._values = TernarySearchTree.forConfigKeys();\n    _this._listener = _this._configurationService.onDidChangeConfiguration(function (event) {\n      if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n        // new setting, reset everything\n        var allKeys = Array.from(_this._values, function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 1),\n            k = _ref2[0];\n          return k;\n        });\n        _this._values.clear();\n        emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n      } else {\n        var changedKeys = [];\n        var _iterator = _createForOfIteratorHelper(event.affectedKeys),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var configKey = _step.value;\n            var contextKey = \"config.\".concat(configKey);\n            var cachedItems = _this._values.findSuperstr(contextKey);\n            if (cachedItems !== undefined) {\n              changedKeys.push.apply(changedKeys, _toConsumableArray(Iterable.map(cachedItems, function (_ref3) {\n                var _ref4 = _slicedToArray(_ref3, 1),\n                  key = _ref4[0];\n                return key;\n              })));\n              _this._values.deleteSuperstr(contextKey);\n            }\n            if (_this._values.has(contextKey)) {\n              changedKeys.push(contextKey);\n              _this._values[\"delete\"](contextKey);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n      }\n    });\n    return _this;\n  }\n  _inherits(ConfigAwareContextValuesContainer, _Context2);\n  return _createClass(ConfigAwareContextValuesContainer, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._listener.dispose();\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(key) {\n      if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n        return _get(_getPrototypeOf(ConfigAwareContextValuesContainer.prototype), \"getValue\", this).call(this, key);\n      }\n      if (this._values.has(key)) {\n        return this._values.get(key);\n      }\n      var configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n      var configValue = this._configurationService.getValue(configKey);\n      var value = undefined;\n      switch (_typeof(configValue)) {\n        case 'number':\n        case 'boolean':\n        case 'string':\n          value = configValue;\n          break;\n        default:\n          if (Array.isArray(configValue)) {\n            value = JSON.stringify(configValue);\n          } else {\n            value = configValue;\n          }\n      }\n      this._values.set(key, value);\n      return value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(key, value) {\n      return _get(_getPrototypeOf(ConfigAwareContextValuesContainer.prototype), \"setValue\", this).call(this, key, value);\n    }\n  }, {\n    key: \"removeValue\",\n    value: function removeValue(key) {\n      return _get(_getPrototypeOf(ConfigAwareContextValuesContainer.prototype), \"removeValue\", this).call(this, key);\n    }\n  }]);\n}(Context);\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nvar ContextKey = /*#__PURE__*/function () {\n  function ContextKey(service, key, defaultValue) {\n    _classCallCheck(this, ContextKey);\n    this._service = service;\n    this._key = key;\n    this._defaultValue = defaultValue;\n    this.reset();\n  }\n  return _createClass(ContextKey, [{\n    key: \"set\",\n    value: function set(value) {\n      this._service.setContext(this._key, value);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (typeof this._defaultValue === 'undefined') {\n        this._service.removeContext(this._key);\n      } else {\n        this._service.setContext(this._key, this._defaultValue);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this._service.getContextKeyValue(this._key);\n    }\n  }]);\n}();\nvar SimpleContextKeyChangeEvent = /*#__PURE__*/function () {\n  function SimpleContextKeyChangeEvent(key) {\n    _classCallCheck(this, SimpleContextKeyChangeEvent);\n    this.key = key;\n  }\n  return _createClass(SimpleContextKeyChangeEvent, [{\n    key: \"affectsSome\",\n    value: function affectsSome(keys) {\n      return keys.has(this.key);\n    }\n  }, {\n    key: \"allKeysContainedIn\",\n    value: function allKeysContainedIn(keys) {\n      return this.affectsSome(keys);\n    }\n  }]);\n}();\nvar ArrayContextKeyChangeEvent = /*#__PURE__*/function () {\n  function ArrayContextKeyChangeEvent(keys) {\n    _classCallCheck(this, ArrayContextKeyChangeEvent);\n    this.keys = keys;\n  }\n  return _createClass(ArrayContextKeyChangeEvent, [{\n    key: \"affectsSome\",\n    value: function affectsSome(keys) {\n      var _iterator2 = _createForOfIteratorHelper(this.keys),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          if (keys.has(key)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return false;\n    }\n  }, {\n    key: \"allKeysContainedIn\",\n    value: function allKeysContainedIn(keys) {\n      return this.keys.every(function (key) {\n        return keys.has(key);\n      });\n    }\n  }]);\n}();\nvar CompositeContextKeyChangeEvent = /*#__PURE__*/function () {\n  function CompositeContextKeyChangeEvent(events) {\n    _classCallCheck(this, CompositeContextKeyChangeEvent);\n    this.events = events;\n  }\n  return _createClass(CompositeContextKeyChangeEvent, [{\n    key: \"affectsSome\",\n    value: function affectsSome(keys) {\n      var _iterator3 = _createForOfIteratorHelper(this.events),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          if (e.affectsSome(keys)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return false;\n    }\n  }, {\n    key: \"allKeysContainedIn\",\n    value: function allKeysContainedIn(keys) {\n      return this.events.every(function (evt) {\n        return evt.allKeysContainedIn(keys);\n      });\n    }\n  }]);\n}();\nfunction allEventKeysInContext(event, context) {\n  return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport var AbstractContextKeyService = /*#__PURE__*/function (_Disposable) {\n  function AbstractContextKeyService(myContextId) {\n    var _this2;\n    _classCallCheck(this, AbstractContextKeyService);\n    _this2 = _callSuper(this, AbstractContextKeyService);\n    _this2._onDidChangeContext = _this2._register(new PauseableEmitter({\n      merge: function merge(input) {\n        return new CompositeContextKeyChangeEvent(input);\n      }\n    }));\n    _this2.onDidChangeContext = _this2._onDidChangeContext.event;\n    _this2._isDisposed = false;\n    _this2._myContextId = myContextId;\n    return _this2;\n  }\n  _inherits(AbstractContextKeyService, _Disposable);\n  return _createClass(AbstractContextKeyService, [{\n    key: \"createKey\",\n    value: function createKey(key, defaultValue) {\n      if (this._isDisposed) {\n        throw new Error(\"AbstractContextKeyService has been disposed\");\n      }\n      return new ContextKey(this, key, defaultValue);\n    }\n  }, {\n    key: \"bufferChangeEvents\",\n    value: function bufferChangeEvents(callback) {\n      this._onDidChangeContext.pause();\n      try {\n        callback();\n      } finally {\n        this._onDidChangeContext.resume();\n      }\n    }\n  }, {\n    key: \"createScoped\",\n    value: function createScoped(domNode) {\n      if (this._isDisposed) {\n        throw new Error(\"AbstractContextKeyService has been disposed\");\n      }\n      return new ScopedContextKeyService(this, domNode);\n    }\n  }, {\n    key: \"contextMatchesRules\",\n    value: function contextMatchesRules(rules) {\n      if (this._isDisposed) {\n        throw new Error(\"AbstractContextKeyService has been disposed\");\n      }\n      var context = this.getContextValuesContainer(this._myContextId);\n      var result = rules ? rules.evaluate(context) : true;\n      // console.group(rules.serialize() + ' -> ' + result);\n      // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n      // console.groupEnd();\n      return result;\n    }\n  }, {\n    key: \"getContextKeyValue\",\n    value: function getContextKeyValue(key) {\n      if (this._isDisposed) {\n        return undefined;\n      }\n      return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n  }, {\n    key: \"setContext\",\n    value: function setContext(key, value) {\n      if (this._isDisposed) {\n        return;\n      }\n      var myContext = this.getContextValuesContainer(this._myContextId);\n      if (!myContext) {\n        return;\n      }\n      if (myContext.setValue(key, value)) {\n        this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n      }\n    }\n  }, {\n    key: \"removeContext\",\n    value: function removeContext(key) {\n      if (this._isDisposed) {\n        return;\n      }\n      if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n        this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n      }\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(target) {\n      if (this._isDisposed) {\n        return NullContext.INSTANCE;\n      }\n      return this.getContextValuesContainer(findContextAttr(target));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(AbstractContextKeyService.prototype), \"dispose\", this).call(this);\n      this._isDisposed = true;\n    }\n  }]);\n}(Disposable);\nvar ContextKeyService = /*#__PURE__*/function (_AbstractContextKeySe) {\n  function ContextKeyService(configurationService) {\n    var _this3;\n    _classCallCheck(this, ContextKeyService);\n    _this3 = _callSuper(this, ContextKeyService, [0]);\n    _this3._contexts = new Map();\n    _this3._lastContextId = 0;\n    var myContext = _this3._register(new ConfigAwareContextValuesContainer(_this3._myContextId, configurationService, _this3._onDidChangeContext));\n    _this3._contexts.set(_this3._myContextId, myContext);\n    // Uncomment this to see the contexts continuously logged\n    // let lastLoggedValue: string | null = null;\n    // setInterval(() => {\n    // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n    // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n    // \tif (lastLoggedValue !== logValue) {\n    // \t\tlastLoggedValue = logValue;\n    // \t\tconsole.log(lastLoggedValue);\n    // \t}\n    // }, 2000);\n    return _this3;\n  }\n  _inherits(ContextKeyService, _AbstractContextKeySe);\n  return _createClass(ContextKeyService, [{\n    key: \"getContextValuesContainer\",\n    value: function getContextValuesContainer(contextId) {\n      if (this._isDisposed) {\n        return NullContext.INSTANCE;\n      }\n      return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n  }, {\n    key: \"createChildContext\",\n    value: function createChildContext() {\n      var parentContextId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._myContextId;\n      if (this._isDisposed) {\n        throw new Error(\"ContextKeyService has been disposed\");\n      }\n      var id = ++this._lastContextId;\n      this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n      return id;\n    }\n  }, {\n    key: \"disposeContext\",\n    value: function disposeContext(contextId) {\n      if (!this._isDisposed) {\n        this._contexts[\"delete\"](contextId);\n      }\n    }\n  }]);\n}(AbstractContextKeyService);\nContextKeyService = __decorate([__param(0, IConfigurationService)], ContextKeyService);\nexport { ContextKeyService };\nvar ScopedContextKeyService = /*#__PURE__*/function (_AbstractContextKeySe2) {\n  function ScopedContextKeyService(parent, domNode) {\n    var _this4;\n    _classCallCheck(this, ScopedContextKeyService);\n    _this4 = _callSuper(this, ScopedContextKeyService, [parent.createChildContext()]);\n    _this4._parentChangeListener = _this4._register(new MutableDisposable());\n    _this4._parent = parent;\n    _this4._updateParentChangeListener();\n    _this4._domNode = domNode;\n    if (_this4._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n      var extraInfo = '';\n      if (_this4._domNode.classList) {\n        extraInfo = Array.from(_this4._domNode.classList.values()).join(', ');\n      }\n      console.error(\"Element already has context attribute\".concat(extraInfo ? ': ' + extraInfo : ''));\n    }\n    _this4._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(_this4._myContextId));\n    return _this4;\n  }\n  _inherits(ScopedContextKeyService, _AbstractContextKeySe2);\n  return _createClass(ScopedContextKeyService, [{\n    key: \"_updateParentChangeListener\",\n    value: function _updateParentChangeListener() {\n      var _this5 = this;\n      // Forward parent events to this listener. Parent will change.\n      this._parentChangeListener.value = this._parent.onDidChangeContext(function (e) {\n        var thisContainer = _this5._parent.getContextValuesContainer(_this5._myContextId);\n        var thisContextValues = thisContainer.value;\n        if (!allEventKeysInContext(e, thisContextValues)) {\n          _this5._onDidChangeContext.fire(e);\n        }\n      });\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._isDisposed) {\n        return;\n      }\n      this._parent.disposeContext(this._myContextId);\n      this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n      _get(_getPrototypeOf(ScopedContextKeyService.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"getContextValuesContainer\",\n    value: function getContextValuesContainer(contextId) {\n      if (this._isDisposed) {\n        return NullContext.INSTANCE;\n      }\n      return this._parent.getContextValuesContainer(contextId);\n    }\n  }, {\n    key: \"createChildContext\",\n    value: function createChildContext() {\n      var parentContextId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._myContextId;\n      if (this._isDisposed) {\n        throw new Error(\"ScopedContextKeyService has been disposed\");\n      }\n      return this._parent.createChildContext(parentContextId);\n    }\n  }, {\n    key: \"disposeContext\",\n    value: function disposeContext(contextId) {\n      if (this._isDisposed) {\n        return;\n      }\n      this._parent.disposeContext(contextId);\n    }\n  }]);\n}(AbstractContextKeyService);\nfunction findContextAttr(domNode) {\n  while (domNode) {\n    if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n      var attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n      if (attr) {\n        return parseInt(attr, 10);\n      }\n      return NaN;\n    }\n    domNode = domNode.parentElement;\n  }\n  return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n  var contextKeyService = accessor.get(IContextKeyService);\n  contextKeyService.createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n  return cloneAndChange(contextValue, function (obj) {\n    if (_typeof(obj) === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n      return URI.revive(obj).toString();\n    }\n    if (obj instanceof URI) {\n      return obj.toString();\n    }\n    return undefined;\n  });\n}\nCommandsRegistry.registerCommand('_setContext', setContext);\nCommandsRegistry.registerCommand({\n  id: 'getContextKeyInfo',\n  handler: function handler() {\n    return _toConsumableArray(RawContextKey.all()).sort(function (a, b) {\n      return a.key.localeCompare(b.key);\n    });\n  },\n  metadata: {\n    description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n    args: []\n  }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n  var result = [];\n  var seen = new Set();\n  var _iterator4 = _createForOfIteratorHelper(RawContextKey.all()),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var info = _step4.value;\n      if (!seen.has(info.key)) {\n        seen.add(info.key);\n        result.push(info);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  result.sort(function (a, b) {\n    return a.key.localeCompare(b.key);\n  });\n  console.log(JSON.stringify(result, undefined, 2));\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","PauseableEmitter","Iterable","Disposable","MutableDisposable","cloneAndChange","TernarySearchTree","URI","localize","CommandsRegistry","IConfigurationService","IContextKeyService","RawContextKey","KEYBINDING_CONTEXT_ATTR","Context","id","parent","_classCallCheck","_id","_parent","_value","create","_createClass","get","_objectSpread","value","setValue","removeValue","getValue","ret","NullContext","_Context","_callSuper","_inherits","undefined","INSTANCE","ConfigAwareContextValuesContainer","_Context2","_configurationService","emitter","_this","_values","forConfigKeys","_listener","onDidChangeConfiguration","event","source","allKeys","Array","from","_ref","_ref2","_slicedToArray","k","clear","fire","ArrayContextKeyChangeEvent","changedKeys","_iterator","_createForOfIteratorHelper","affectedKeys","_step","s","n","done","configKey","contextKey","concat","cachedItems","findSuperstr","push","apply","_toConsumableArray","map","_ref3","_ref4","deleteSuperstr","has","err","e","f","dispose","indexOf","_keyPrefix","_get","_getPrototypeOf","prototype","call","substr","configValue","isArray","JSON","stringify","set","ContextKey","service","defaultValue","_service","_key","_defaultValue","reset","setContext","removeContext","getContextKeyValue","SimpleContextKeyChangeEvent","affectsSome","keys","allKeysContainedIn","_iterator2","_step2","every","CompositeContextKeyChangeEvent","events","_iterator3","_step3","evt","allEventKeysInContext","context","Set","AbstractContextKeyService","_Disposable","myContextId","_this2","_onDidChangeContext","_register","merge","input","onDidChangeContext","_isDisposed","_myContextId","createKey","Error","bufferChangeEvents","callback","pause","resume","createScoped","domNode","ScopedContextKeyService","contextMatchesRules","rules","getContextValuesContainer","result","evaluate","myContext","getContext","findContextAttr","ContextKeyService","_AbstractContextKeySe","configurationService","_this3","_contexts","Map","_lastContextId","contextId","createChildContext","parentContextId","disposeContext","_AbstractContextKeySe2","_this4","_parentChangeListener","_updateParentChangeListener","_domNode","hasAttribute","extraInfo","classList","values","join","console","error","setAttribute","String","_this5","thisContainer","thisContextValues","removeAttribute","attr","getAttribute","parseInt","NaN","parentElement","accessor","contextValue","contextKeyService","stringifyURIs","obj","$mid","revive","toString","registerCommand","handler","all","sort","a","b","localeCompare","metadata","description","args","seen","_iterator4","_step4","info","add","log"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    get value() {\n        return { ...this._value };\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nNullContext.INSTANCE = new NullContext();\nclass ConfigAwareContextValuesContainer extends Context {\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(this._values, ([k]) => k);\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n    allKeysContainedIn(keys) {\n        return this.affectsSome(keys);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.keys.every(key => keys.has(key));\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.events.every(evt => evt.allKeysContainedIn(keys));\n    }\n}\nfunction allEventKeysInContext(event, context) {\n    return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport class AbstractContextKeyService extends Disposable {\n    constructor(myContextId) {\n        super();\n        this._onDidChangeContext = this._register(new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) }));\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n    dispose() {\n        super.dispose();\n        this._isDisposed = true;\n    }\n}\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._lastContextId = 0;\n        const myContext = this._register(new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext));\n        this._contexts.set(this._myContextId, myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        const id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nexport { ContextKeyService };\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = this._register(new MutableDisposable());\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(e => {\n            const thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n            const thisContextValues = thisContainer.value;\n            if (!allEventKeysInContext(e, thisContextValues)) {\n                this._onDidChangeContext.fire(e);\n            }\n        });\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(this._myContextId);\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        super.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    contextKeyService.createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n    return cloneAndChange(contextValue, (obj) => {\n        if (typeof obj === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n            return URI.revive(obj).toString();\n        }\n        if (obj instanceof URI) {\n            return obj.toString();\n        }\n        return undefined;\n    });\n}\nCommandsRegistry.registerCommand('_setContext', setContext);\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    metadata: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (const info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}