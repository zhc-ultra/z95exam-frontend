{"ast":null,"code":"import _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.substr.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var ResolvedKeybindingItem = /*#__PURE__*/_createClass(function ResolvedKeybindingItem(resolvedKeybinding, command, commandArgs, when, isDefault, extensionId, isBuiltinExtension) {\n  _classCallCheck(this, ResolvedKeybindingItem);\n  this._resolvedKeybindingItemBrand = undefined;\n  this.resolvedKeybinding = resolvedKeybinding;\n  this.chords = resolvedKeybinding ? toEmptyArrayIfContainsNull(resolvedKeybinding.getDispatchChords()) : [];\n  if (resolvedKeybinding && this.chords.length === 0) {\n    // handle possible single modifier chord keybindings\n    this.chords = toEmptyArrayIfContainsNull(resolvedKeybinding.getSingleModifierDispatchChords());\n  }\n  this.bubble = command ? command.charCodeAt(0) === 94 /* CharCode.Caret */ : false;\n  this.command = this.bubble ? command.substr(1) : command;\n  this.commandArgs = commandArgs;\n  this.when = when;\n  this.isDefault = isDefault;\n  this.extensionId = extensionId;\n  this.isBuiltinExtension = isBuiltinExtension;\n});\nexport function toEmptyArrayIfContainsNull(arr) {\n  var result = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var element = arr[i];\n    if (!element) {\n      return [];\n    }\n    result.push(element);\n  }\n  return result;\n}","map":{"version":3,"names":["ResolvedKeybindingItem","_createClass","resolvedKeybinding","command","commandArgs","when","isDefault","extensionId","isBuiltinExtension","_classCallCheck","_resolvedKeybindingItemBrand","undefined","chords","toEmptyArrayIfContainsNull","getDispatchChords","length","getSingleModifierDispatchChords","bubble","charCodeAt","substr","arr","result","i","len","element","push"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/platform/keybinding/common/resolvedKeybindingItem.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ResolvedKeybindingItem {\n    constructor(resolvedKeybinding, command, commandArgs, when, isDefault, extensionId, isBuiltinExtension) {\n        this._resolvedKeybindingItemBrand = undefined;\n        this.resolvedKeybinding = resolvedKeybinding;\n        this.chords = resolvedKeybinding ? toEmptyArrayIfContainsNull(resolvedKeybinding.getDispatchChords()) : [];\n        if (resolvedKeybinding && this.chords.length === 0) {\n            // handle possible single modifier chord keybindings\n            this.chords = toEmptyArrayIfContainsNull(resolvedKeybinding.getSingleModifierDispatchChords());\n        }\n        this.bubble = (command ? command.charCodeAt(0) === 94 /* CharCode.Caret */ : false);\n        this.command = this.bubble ? command.substr(1) : command;\n        this.commandArgs = commandArgs;\n        this.when = when;\n        this.isDefault = isDefault;\n        this.extensionId = extensionId;\n        this.isBuiltinExtension = isBuiltinExtension;\n    }\n}\nexport function toEmptyArrayIfContainsNull(arr) {\n    const result = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const element = arr[i];\n        if (!element) {\n            return [];\n        }\n        result.push(element);\n    }\n    return result;\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,WAAaA,sBAAsB,gBAAAC,YAAA,CAC/B,SAAAD,uBAAYE,kBAAkB,EAAEC,OAAO,EAAEC,WAAW,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,kBAAkB,EAAE;EAAAC,eAAA,OAAAT,sBAAA;EACpG,IAAI,CAACU,4BAA4B,GAAGC,SAAS;EAC7C,IAAI,CAACT,kBAAkB,GAAGA,kBAAkB;EAC5C,IAAI,CAACU,MAAM,GAAGV,kBAAkB,GAAGW,0BAA0B,CAACX,kBAAkB,CAACY,iBAAiB,CAAC,CAAC,CAAC,GAAG,EAAE;EAC1G,IAAIZ,kBAAkB,IAAI,IAAI,CAACU,MAAM,CAACG,MAAM,KAAK,CAAC,EAAE;IAChD;IACA,IAAI,CAACH,MAAM,GAAGC,0BAA0B,CAACX,kBAAkB,CAACc,+BAA+B,CAAC,CAAC,CAAC;EAClG;EACA,IAAI,CAACC,MAAM,GAAId,OAAO,GAAGA,OAAO,CAACe,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,uBAAuB,KAAM;EACnF,IAAI,CAACf,OAAO,GAAG,IAAI,CAACc,MAAM,GAAGd,OAAO,CAACgB,MAAM,CAAC,CAAC,CAAC,GAAGhB,OAAO;EACxD,IAAI,CAACC,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;AAChD,CAAC;AAEL,OAAO,SAASK,0BAA0BA,CAACO,GAAG,EAAE;EAC5C,IAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGH,GAAG,CAACL,MAAM,EAAEO,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;IAC5C,IAAME,OAAO,GAAGJ,GAAG,CAACE,CAAC,CAAC;IACtB,IAAI,CAACE,OAAO,EAAE;MACV,OAAO,EAAE;IACb;IACAH,MAAM,CAACI,IAAI,CAACD,OAAO,CAAC;EACxB;EACA,OAAOH,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}