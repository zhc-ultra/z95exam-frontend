{"ast":null,"code":"/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/twig/twig.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"{#\", \"#}\"]\n  },\n  brackets: [[\"{#\", \"#}\"], [\"{%\", \"%}\"], [\"{{\", \"}}\"], [\"(\", \")\"], [\"[\", \"]\"],\n  // HTML\n  [\"<!--\", \"-->\"], [\"<\", \">\"]],\n  autoClosingPairs: [{\n    open: \"{# \",\n    close: \" #}\"\n  }, {\n    open: \"{% \",\n    close: \" %}\"\n  }, {\n    open: \"{{ \",\n    close: \" }}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  },\n  // HTML\n  {\n    open: \"<\",\n    close: \">\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  ignoreCase: true,\n  keywords: [\n  // (opening) tags\n  \"apply\", \"autoescape\", \"block\", \"deprecated\", \"do\", \"embed\", \"extends\", \"flush\", \"for\", \"from\", \"if\", \"import\", \"include\", \"macro\", \"sandbox\", \"set\", \"use\", \"verbatim\", \"with\",\n  // closing tags\n  \"endapply\", \"endautoescape\", \"endblock\", \"endembed\", \"endfor\", \"endif\", \"endmacro\", \"endsandbox\", \"endset\", \"endwith\",\n  // literals\n  \"true\", \"false\"],\n  tokenizer: {\n    root: [\n    // whitespace\n    [/\\s+/],\n    // Twig Tag Delimiters\n    [/{#/, \"comment.twig\", \"@commentState\"], [/{%[-~]?/, \"delimiter.twig\", \"@blockState\"], [/{{[-~]?/, \"delimiter.twig\", \"@variableState\"],\n    // HTML\n    [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"], [/<!--/, \"comment.html\", \"@comment\"], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"\", \"delimiter.html\"]], [/(<)(script)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@script\"\n    }]], [/(<)(style)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@style\"\n    }]], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/</, \"delimiter.html\"], [/[^<{]+/]\n    // text\n    ],\n    /**\n     * Comment Tag Handling\n     */\n    commentState: [[/#}/, \"comment.twig\", \"@pop\"], [/./, \"comment.twig\"]],\n    /**\n     * Block Tag Handling\n     */\n    blockState: [[/[-~]?%}/, \"delimiter.twig\", \"@pop\"],\n    // whitespace\n    [/\\s+/],\n    // verbatim\n    // Unlike other blocks, verbatim ehas its own state\n    // transition to ensure we mark its contents as strings.\n    [/(verbatim)(\\s*)([-~]?%})/, [\"keyword.twig\", \"\", {\n      token: \"delimiter.twig\",\n      next: \"@rawDataState\"\n    }]], {\n      include: \"expression\"\n    }],\n    rawDataState: [\n    // endverbatim\n    [/({%[-~]?)(\\s*)(endverbatim)(\\s*)([-~]?%})/, [\"delimiter.twig\", \"\", \"keyword.twig\", \"\", {\n      token: \"delimiter.twig\",\n      next: \"@popall\"\n    }]], [/./, \"string.twig\"]],\n    /**\n     * Variable Tag Handling\n     */\n    variableState: [[/[-~]?}}/, \"delimiter.twig\", \"@pop\"], {\n      include: \"expression\"\n    }],\n    stringState: [\n    // closing double quoted string\n    [/\"/, \"string.twig\", \"@pop\"],\n    // interpolation start\n    [/#{\\s*/, \"string.twig\", \"@interpolationState\"],\n    // string part\n    [/[^#\"\\\\]*(?:(?:\\\\.|#(?!\\{))[^#\"\\\\]*)*/, \"string.twig\"]],\n    interpolationState: [\n    // interpolation end\n    [/}/, \"string.twig\", \"@pop\"], {\n      include: \"expression\"\n    }],\n    /**\n     * Expression Handling\n     */\n    expression: [\n    // whitespace\n    [/\\s+/],\n    // operators - math\n    [/\\+|-|\\/{1,2}|%|\\*{1,2}/, \"operators.twig\"],\n    // operators - logic\n    [/(and|or|not|b-and|b-xor|b-or)(\\s+)/, [\"operators.twig\", \"\"]],\n    // operators - comparison (symbols)\n    [/==|!=|<|>|>=|<=/, \"operators.twig\"],\n    // operators - comparison (words)\n    [/(starts with|ends with|matches)(\\s+)/, [\"operators.twig\", \"\"]],\n    // operators - containment\n    [/(in)(\\s+)/, [\"operators.twig\", \"\"]],\n    // operators - test\n    [/(is)(\\s+)/, [\"operators.twig\", \"\"]],\n    // operators - misc\n    [/\\||~|:|\\.{1,2}|\\?{1,2}/, \"operators.twig\"],\n    // names\n    [/[^\\W\\d][\\w]*/, {\n      cases: {\n        \"@keywords\": \"keyword.twig\",\n        \"@default\": \"variable.twig\"\n      }\n    }],\n    // numbers\n    [/\\d+(\\.\\d+)?/, \"number.twig\"],\n    // punctuation\n    [/\\(|\\)|\\[|\\]|{|}|,/, \"delimiter.twig\"],\n    // strings\n    [/\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|\\'([^\\'\\\\]*(?:\\\\.[^\\'\\\\]*)*)\\'/, \"string.twig\"],\n    // opening double quoted string\n    [/\"/, \"string.twig\", \"@stringState\"],\n    // misc syntactic constructs\n    // These are not operators per se, but for the purposes of lexical analysis we\n    // can treat them as such.\n    // arrow functions\n    [/=>/, \"operators.twig\"],\n    // assignment\n    [/=/, \"operators.twig\"]],\n    /**\n     * HTML\n     */\n    doctype: [[/[^>]+/, \"metatag.content.html\"], [/>/, \"metatag.html\", \"@pop\"]],\n    comment: [[/-->/, \"comment.html\", \"@pop\"], [/[^-]+/, \"comment.content.html\"], [/./, \"comment.content.html\"]],\n    otherTag: [[/\\/?>/, \"delimiter.html\", \"@pop\"], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/[ \\t\\r\\n]+/]\n    // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/type/, \"attribute.name.html\", \"@scriptAfterType\"], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/(<\\/)(script\\s*)(>)/, [\"delimiter.html\", \"tag.html\", {\n      token: \"delimiter.html\",\n      next: \"@pop\"\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/=/, \"delimiter.html\", \"@scriptAfterTypeEquals\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }],\n    // cover invalid e.g. <script type>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }],\n    // cover invalid e.g. <script type=>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptEmbedded: [[/<\\/script/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/type/, \"attribute.name.html\", \"@styleAfterType\"], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/(<\\/)(style\\s*)(>)/, [\"delimiter.html\", \"tag.html\", {\n      token: \"delimiter.html\",\n      next: \"@pop\"\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/=/, \"delimiter.html\", \"@styleAfterTypeEquals\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }],\n    // cover invalid e.g. <style type>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value.html\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }],\n    // cover invalid e.g. <style type=>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value.html\"], [/'([^']*)'/, \"attribute.value.html\"], [/[\\w\\-]+/, \"attribute.name.html\"], [/=/, \"delimiter.html\"], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleEmbedded: [[/<\\/style/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","keywords","tokenizer","root","token","next","commentState","blockState","include","rawDataState","variableState","stringState","interpolationState","expression","cases","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/twig/twig.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"{#\", \"#}\"]\n  },\n  brackets: [\n    [\"{#\", \"#}\"],\n    [\"{%\", \"%}\"],\n    [\"{{\", \"}}\"],\n    [\"(\", \")\"],\n    [\"[\", \"]\"],\n    // HTML\n    [\"<!--\", \"-->\"],\n    [\"<\", \">\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{# \", close: \" #}\" },\n    { open: \"{% \", close: \" %}\" },\n    { open: \"{{ \", close: \" }}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    // HTML\n    { open: \"<\", close: \">\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  ignoreCase: true,\n  keywords: [\n    // (opening) tags\n    \"apply\",\n    \"autoescape\",\n    \"block\",\n    \"deprecated\",\n    \"do\",\n    \"embed\",\n    \"extends\",\n    \"flush\",\n    \"for\",\n    \"from\",\n    \"if\",\n    \"import\",\n    \"include\",\n    \"macro\",\n    \"sandbox\",\n    \"set\",\n    \"use\",\n    \"verbatim\",\n    \"with\",\n    // closing tags\n    \"endapply\",\n    \"endautoescape\",\n    \"endblock\",\n    \"endembed\",\n    \"endfor\",\n    \"endif\",\n    \"endmacro\",\n    \"endsandbox\",\n    \"endset\",\n    \"endwith\",\n    // literals\n    \"true\",\n    \"false\"\n  ],\n  tokenizer: {\n    root: [\n      // whitespace\n      [/\\s+/],\n      // Twig Tag Delimiters\n      [/{#/, \"comment.twig\", \"@commentState\"],\n      [/{%[-~]?/, \"delimiter.twig\", \"@blockState\"],\n      [/{{[-~]?/, \"delimiter.twig\", \"@variableState\"],\n      // HTML\n      [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"],\n      [/<!--/, \"comment.html\", \"@comment\"],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"\", \"delimiter.html\"]],\n      [/(<)(script)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@script\" }]],\n      [/(<)(style)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@style\" }]],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/</, \"delimiter.html\"],\n      [/[^<{]+/]\n      // text\n    ],\n    /**\n     * Comment Tag Handling\n     */\n    commentState: [\n      [/#}/, \"comment.twig\", \"@pop\"],\n      [/./, \"comment.twig\"]\n    ],\n    /**\n     * Block Tag Handling\n     */\n    blockState: [\n      [/[-~]?%}/, \"delimiter.twig\", \"@pop\"],\n      // whitespace\n      [/\\s+/],\n      // verbatim\n      // Unlike other blocks, verbatim ehas its own state\n      // transition to ensure we mark its contents as strings.\n      [\n        /(verbatim)(\\s*)([-~]?%})/,\n        [\"keyword.twig\", \"\", { token: \"delimiter.twig\", next: \"@rawDataState\" }]\n      ],\n      { include: \"expression\" }\n    ],\n    rawDataState: [\n      // endverbatim\n      [\n        /({%[-~]?)(\\s*)(endverbatim)(\\s*)([-~]?%})/,\n        [\"delimiter.twig\", \"\", \"keyword.twig\", \"\", { token: \"delimiter.twig\", next: \"@popall\" }]\n      ],\n      [/./, \"string.twig\"]\n    ],\n    /**\n     * Variable Tag Handling\n     */\n    variableState: [[/[-~]?}}/, \"delimiter.twig\", \"@pop\"], { include: \"expression\" }],\n    stringState: [\n      // closing double quoted string\n      [/\"/, \"string.twig\", \"@pop\"],\n      // interpolation start\n      [/#{\\s*/, \"string.twig\", \"@interpolationState\"],\n      // string part\n      [/[^#\"\\\\]*(?:(?:\\\\.|#(?!\\{))[^#\"\\\\]*)*/, \"string.twig\"]\n    ],\n    interpolationState: [\n      // interpolation end\n      [/}/, \"string.twig\", \"@pop\"],\n      { include: \"expression\" }\n    ],\n    /**\n     * Expression Handling\n     */\n    expression: [\n      // whitespace\n      [/\\s+/],\n      // operators - math\n      [/\\+|-|\\/{1,2}|%|\\*{1,2}/, \"operators.twig\"],\n      // operators - logic\n      [/(and|or|not|b-and|b-xor|b-or)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - comparison (symbols)\n      [/==|!=|<|>|>=|<=/, \"operators.twig\"],\n      // operators - comparison (words)\n      [/(starts with|ends with|matches)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - containment\n      [/(in)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - test\n      [/(is)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - misc\n      [/\\||~|:|\\.{1,2}|\\?{1,2}/, \"operators.twig\"],\n      // names\n      [\n        /[^\\W\\d][\\w]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword.twig\",\n            \"@default\": \"variable.twig\"\n          }\n        }\n      ],\n      // numbers\n      [/\\d+(\\.\\d+)?/, \"number.twig\"],\n      // punctuation\n      [/\\(|\\)|\\[|\\]|{|}|,/, \"delimiter.twig\"],\n      // strings\n      [/\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|\\'([^\\'\\\\]*(?:\\\\.[^\\'\\\\]*)*)\\'/, \"string.twig\"],\n      // opening double quoted string\n      [/\"/, \"string.twig\", \"@stringState\"],\n      // misc syntactic constructs\n      // These are not operators per se, but for the purposes of lexical analysis we\n      // can treat them as such.\n      // arrow functions\n      [/=>/, \"operators.twig\"],\n      // assignment\n      [/=/, \"operators.twig\"]\n    ],\n    /**\n     * HTML\n     */\n    doctype: [\n      [/[^>]+/, \"metatag.content.html\"],\n      [/>/, \"metatag.html\", \"@pop\"]\n    ],\n    comment: [\n      [/-->/, \"comment.html\", \"@pop\"],\n      [/[^-]+/, \"comment.content.html\"],\n      [/./, \"comment.content.html\"]\n    ],\n    otherTag: [\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [/[ \\t\\r\\n]+/]\n      // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [\n      [/type/, \"attribute.name.html\", \"@scriptAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(script\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <script ... type\n    scriptAfterType: [\n      [/=/, \"delimiter.html\", \"@scriptAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type =\n    scriptAfterTypeEquals: [\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type = $S2\n    scriptWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    scriptEmbedded: [\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [\n      [/type/, \"attribute.name.html\", \"@styleAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(style\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <style ... type\n    styleAfterType: [\n      [/=/, \"delimiter.html\", \"@styleAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type =\n    styleAfterTypeEquals: [\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type = $S2\n    styleWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    styleEmbedded: [\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}