{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport var ReplaceCommand = /*#__PURE__*/function () {\n  function ReplaceCommand(range, text) {\n    var insertsAutoWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, ReplaceCommand);\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  return _createClass(ReplaceCommand, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return Selection.fromPositions(srcRange.getEndPosition());\n    }\n  }]);\n}();\nexport var ReplaceCommandThatSelectsText = /*#__PURE__*/function () {\n  function ReplaceCommandThatSelectsText(range, text) {\n    _classCallCheck(this, ReplaceCommandThatSelectsText);\n    this._range = range;\n    this._text = text;\n  }\n  return _createClass(ReplaceCommandThatSelectsText, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return Selection.fromRange(srcRange, 0 /* SelectionDirection.LTR */);\n    }\n  }]);\n}();\nexport var ReplaceCommandWithoutChangingPosition = /*#__PURE__*/function () {\n  function ReplaceCommandWithoutChangingPosition(range, text) {\n    var insertsAutoWhitespace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, ReplaceCommandWithoutChangingPosition);\n    this._range = range;\n    this._text = text;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  return _createClass(ReplaceCommandWithoutChangingPosition, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return Selection.fromPositions(srcRange.getStartPosition());\n    }\n  }]);\n}();\nexport var ReplaceCommandWithOffsetCursorState = /*#__PURE__*/function () {\n  function ReplaceCommandWithOffsetCursorState(range, text, lineNumberDeltaOffset, columnDeltaOffset) {\n    var insertsAutoWhitespace = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    _classCallCheck(this, ReplaceCommandWithOffsetCursorState);\n    this._range = range;\n    this._text = text;\n    this._columnDeltaOffset = columnDeltaOffset;\n    this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n    this.insertsAutoWhitespace = insertsAutoWhitespace;\n  }\n  return _createClass(ReplaceCommandWithOffsetCursorState, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var inverseEditOperations = helper.getInverseEditOperations();\n      var srcRange = inverseEditOperations[0].range;\n      return Selection.fromPositions(srcRange.getEndPosition().delta(this._lineNumberDeltaOffset, this._columnDeltaOffset));\n    }\n  }]);\n}();\nexport var ReplaceCommandThatPreservesSelection = /*#__PURE__*/function () {\n  function ReplaceCommandThatPreservesSelection(editRange, text, initialSelection) {\n    var forceMoveMarkers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    _classCallCheck(this, ReplaceCommandThatPreservesSelection);\n    this._range = editRange;\n    this._text = text;\n    this._initialSelection = initialSelection;\n    this._forceMoveMarkers = forceMoveMarkers;\n    this._selectionId = null;\n  }\n  return _createClass(ReplaceCommandThatPreservesSelection, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n      this._selectionId = builder.trackSelection(this._initialSelection);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      return helper.getTrackedSelection(this._selectionId);\n    }\n  }]);\n}();","map":{"version":3,"names":["Selection","ReplaceCommand","range","text","insertsAutoWhitespace","arguments","length","undefined","_classCallCheck","_range","_text","_createClass","key","value","getEditOperations","model","builder","addTrackedEditOperation","computeCursorState","helper","inverseEditOperations","getInverseEditOperations","srcRange","fromPositions","getEndPosition","ReplaceCommandThatSelectsText","fromRange","ReplaceCommandWithoutChangingPosition","getStartPosition","ReplaceCommandWithOffsetCursorState","lineNumberDeltaOffset","columnDeltaOffset","_columnDeltaOffset","_lineNumberDeltaOffset","delta","ReplaceCommandThatPreservesSelection","editRange","initialSelection","forceMoveMarkers","_initialSelection","_forceMoveMarkers","_selectionId","trackSelection","getTrackedSelection"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/commands/replaceCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport class ReplaceCommand {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition());\n    }\n}\nexport class ReplaceCommandThatSelectsText {\n    constructor(range, text) {\n        this._range = range;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromRange(srcRange, 0 /* SelectionDirection.LTR */);\n    }\n}\nexport class ReplaceCommandWithoutChangingPosition {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getStartPosition());\n    }\n}\nexport class ReplaceCommandWithOffsetCursorState {\n    constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this._columnDeltaOffset = columnDeltaOffset;\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition().delta(this._lineNumberDeltaOffset, this._columnDeltaOffset));\n    }\n}\nexport class ReplaceCommandThatPreservesSelection {\n    constructor(editRange, text, initialSelection, forceMoveMarkers = false) {\n        this._range = editRange;\n        this._text = text;\n        this._initialSelection = initialSelection;\n        this._forceMoveMarkers = forceMoveMarkers;\n        this._selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n        this._selectionId = builder.trackSelection(this._initialSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}