{"ast":null,"code":"import _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nexport var Command = /*#__PURE__*/function () {\n  function Command(opts) {\n    _classCallCheck(this, Command);\n    this.id = opts.id;\n    this.precondition = opts.precondition;\n    this._kbOpts = opts.kbOpts;\n    this._menuOpts = opts.menuOpts;\n    this.metadata = opts.metadata;\n  }\n  return _createClass(Command, [{\n    key: \"register\",\n    value: function register() {\n      var _this = this;\n      if (Array.isArray(this._menuOpts)) {\n        this._menuOpts.forEach(this._registerMenuItem, this);\n      } else if (this._menuOpts) {\n        this._registerMenuItem(this._menuOpts);\n      }\n      if (this._kbOpts) {\n        var kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n        var _iterator = _createForOfIteratorHelper(kbOptsArr),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var kbOpts = _step.value;\n            var kbWhen = kbOpts.kbExpr;\n            if (this.precondition) {\n              if (kbWhen) {\n                kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n              } else {\n                kbWhen = this.precondition;\n              }\n            }\n            var desc = {\n              id: this.id,\n              weight: kbOpts.weight,\n              args: kbOpts.args,\n              when: kbWhen,\n              primary: kbOpts.primary,\n              secondary: kbOpts.secondary,\n              win: kbOpts.win,\n              linux: kbOpts.linux,\n              mac: kbOpts.mac\n            };\n            KeybindingsRegistry.registerKeybindingRule(desc);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      CommandsRegistry.registerCommand({\n        id: this.id,\n        handler: function handler(accessor, args) {\n          return _this.runCommand(accessor, args);\n        },\n        metadata: this.metadata\n      });\n    }\n  }, {\n    key: \"_registerMenuItem\",\n    value: function _registerMenuItem(item) {\n      MenuRegistry.appendMenuItem(item.menuId, {\n        group: item.group,\n        command: {\n          id: this.id,\n          title: item.title,\n          icon: item.icon,\n          precondition: this.precondition\n        },\n        when: item.when,\n        order: item.order\n      });\n    }\n  }]);\n}();\nexport var MultiCommand = /*#__PURE__*/function (_Command) {\n  function MultiCommand() {\n    var _this2;\n    _classCallCheck(this, MultiCommand);\n    _this2 = _callSuper(this, MultiCommand, arguments);\n    _this2._implementations = [];\n    return _this2;\n  }\n  /**\n   * A higher priority gets to be looked at first\n   */\n  _inherits(MultiCommand, _Command);\n  return _createClass(MultiCommand, [{\n    key: \"addImplementation\",\n    value: function addImplementation(priority, name, implementation, when) {\n      var _this3 = this;\n      this._implementations.push({\n        priority: priority,\n        name: name,\n        implementation: implementation,\n        when: when\n      });\n      this._implementations.sort(function (a, b) {\n        return b.priority - a.priority;\n      });\n      return {\n        dispose: function dispose() {\n          for (var i = 0; i < _this3._implementations.length; i++) {\n            if (_this3._implementations[i].implementation === implementation) {\n              _this3._implementations.splice(i, 1);\n              return;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      var logService = accessor.get(ILogService);\n      var contextKeyService = accessor.get(IContextKeyService);\n      logService.trace(\"Executing Command '\".concat(this.id, \"' which has \").concat(this._implementations.length, \" bound.\"));\n      var _iterator2 = _createForOfIteratorHelper(this._implementations),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var impl = _step2.value;\n          if (impl.when) {\n            var context = contextKeyService.getContext(getActiveElement());\n            var value = impl.when.evaluate(context);\n            if (!value) {\n              continue;\n            }\n          }\n          var result = impl.implementation(accessor, args);\n          if (result) {\n            logService.trace(\"Command '\".concat(this.id, \"' was handled by '\").concat(impl.name, \"'.\"));\n            if (typeof result === 'boolean') {\n              return;\n            }\n            return result;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      logService.trace(\"The Command '\".concat(this.id, \"' was not handled by any implementation.\"));\n    }\n  }]);\n}(Command);\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport var ProxyCommand = /*#__PURE__*/function (_Command2) {\n  function ProxyCommand(command, opts) {\n    var _this4;\n    _classCallCheck(this, ProxyCommand);\n    _this4 = _callSuper(this, ProxyCommand, [opts]);\n    _this4.command = command;\n    return _this4;\n  }\n  _inherits(ProxyCommand, _Command2);\n  return _createClass(ProxyCommand, [{\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      return this.command.runCommand(accessor, args);\n    }\n  }]);\n}(Command);\nexport var EditorCommand = /*#__PURE__*/function (_Command3) {\n  function EditorCommand() {\n    _classCallCheck(this, EditorCommand);\n    return _callSuper(this, EditorCommand, arguments);\n  }\n  _inherits(EditorCommand, _Command3);\n  return _createClass(EditorCommand, [{\n    key: \"runCommand\",\n    value: function runCommand(accessor, args) {\n      var _this5 = this;\n      return EditorCommand.runEditorCommand(accessor, args, this.precondition, function (accessor, editor, args) {\n        return _this5.runEditorCommand(accessor, editor, args);\n      });\n    }\n  }], [{\n    key: \"bindToContribution\",\n    value:\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    function bindToContribution(controllerGetter) {\n      return /*#__PURE__*/function (_EditorCommand) {\n        function EditorControllerCommandImpl(opts) {\n          var _this6;\n          _classCallCheck(this, EditorControllerCommandImpl);\n          _this6 = _callSuper(this, EditorControllerCommandImpl, [opts]);\n          _this6._callback = opts.handler;\n          return _this6;\n        }\n        _inherits(EditorControllerCommandImpl, _EditorCommand);\n        return _createClass(EditorControllerCommandImpl, [{\n          key: \"runEditorCommand\",\n          value: function runEditorCommand(accessor, editor, args) {\n            var controller = controllerGetter(editor);\n            if (controller) {\n              this._callback(controller, args);\n            }\n          }\n        }]);\n      }(EditorCommand);\n    }\n  }, {\n    key: \"runEditorCommand\",\n    value: function runEditorCommand(accessor, args, precondition, runner) {\n      var codeEditorService = accessor.get(ICodeEditorService);\n      // Find the editor with text focus or active\n      var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n      if (!editor) {\n        // well, at least we tried...\n        return;\n      }\n      return editor.invokeWithinContext(function (editorAccessor) {\n        var kbService = editorAccessor.get(IContextKeyService);\n        if (!kbService.contextMatchesRules(precondition !== null && precondition !== void 0 ? precondition : undefined)) {\n          // precondition does not hold\n          return;\n        }\n        return runner(editorAccessor, editor, args);\n      });\n    }\n  }]);\n}(Command);\nexport var EditorAction = /*#__PURE__*/function (_EditorCommand2) {\n  function EditorAction(opts) {\n    var _this7;\n    _classCallCheck(this, EditorAction);\n    _this7 = _callSuper(this, EditorAction, [EditorAction.convertOptions(opts)]);\n    _this7.label = opts.label;\n    _this7.alias = opts.alias;\n    return _this7;\n  }\n  _inherits(EditorAction, _EditorCommand2);\n  return _createClass(EditorAction, [{\n    key: \"runEditorCommand\",\n    value: function runEditorCommand(accessor, editor, args) {\n      this.reportTelemetry(accessor, editor);\n      return this.run(accessor, editor, args || {});\n    }\n  }, {\n    key: \"reportTelemetry\",\n    value: function reportTelemetry(accessor, editor) {\n      accessor.get(ITelemetryService).publicLog2('editorActionInvoked', {\n        name: this.label,\n        id: this.id\n      });\n    }\n  }], [{\n    key: \"convertOptions\",\n    value: function convertOptions(opts) {\n      var menuOpts;\n      if (Array.isArray(opts.menuOpts)) {\n        menuOpts = opts.menuOpts;\n      } else if (opts.menuOpts) {\n        menuOpts = [opts.menuOpts];\n      } else {\n        menuOpts = [];\n      }\n      function withDefaults(item) {\n        if (!item.menuId) {\n          item.menuId = MenuId.EditorContext;\n        }\n        if (!item.title) {\n          item.title = opts.label;\n        }\n        item.when = ContextKeyExpr.and(opts.precondition, item.when);\n        return item;\n      }\n      if (Array.isArray(opts.contextMenuOpts)) {\n        var _menuOpts;\n        (_menuOpts = menuOpts).push.apply(_menuOpts, _toConsumableArray(opts.contextMenuOpts.map(withDefaults)));\n      } else if (opts.contextMenuOpts) {\n        menuOpts.push(withDefaults(opts.contextMenuOpts));\n      }\n      opts.menuOpts = menuOpts;\n      return opts;\n    }\n  }]);\n}(EditorCommand);\nexport var MultiEditorAction = /*#__PURE__*/function (_EditorAction) {\n  function MultiEditorAction() {\n    var _this8;\n    _classCallCheck(this, MultiEditorAction);\n    _this8 = _callSuper(this, MultiEditorAction, arguments);\n    _this8._implementations = [];\n    return _this8;\n  }\n  /**\n   * A higher priority gets to be looked at first\n   */\n  _inherits(MultiEditorAction, _EditorAction);\n  return _createClass(MultiEditorAction, [{\n    key: \"addImplementation\",\n    value: function addImplementation(priority, implementation) {\n      var _this9 = this;\n      this._implementations.push([priority, implementation]);\n      this._implementations.sort(function (a, b) {\n        return b[0] - a[0];\n      });\n      return {\n        dispose: function dispose() {\n          for (var i = 0; i < _this9._implementations.length; i++) {\n            if (_this9._implementations[i][1] === implementation) {\n              _this9._implementations.splice(i, 1);\n              return;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"run\",\n    value: function run(accessor, editor, args) {\n      var _iterator3 = _createForOfIteratorHelper(this._implementations),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var impl = _step3.value;\n          var result = impl[1](accessor, editor, args);\n          if (result) {\n            if (typeof result === 'boolean') {\n              return;\n            }\n            return result;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n}(EditorAction);\n//#endregion EditorAction\n//#region EditorAction2\nexport var EditorAction2 = /*#__PURE__*/function (_Action) {\n  function EditorAction2() {\n    _classCallCheck(this, EditorAction2);\n    return _callSuper(this, EditorAction2, arguments);\n  }\n  _inherits(EditorAction2, _Action);\n  return _createClass(EditorAction2, [{\n    key: \"run\",\n    value: function run(accessor) {\n      var _this10 = this;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      // Find the editor with text focus or active\n      var codeEditorService = accessor.get(ICodeEditorService);\n      var editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n      if (!editor) {\n        // well, at least we tried...\n        return;\n      }\n      // precondition does hold\n      return editor.invokeWithinContext(function (editorAccessor) {\n        var _a, _b;\n        var kbService = editorAccessor.get(IContextKeyService);\n        var logService = editorAccessor.get(ILogService);\n        var enabled = kbService.contextMatchesRules((_a = _this10.desc.precondition) !== null && _a !== void 0 ? _a : undefined);\n        if (!enabled) {\n          logService.debug(\"[EditorAction2] NOT running command because its precondition is FALSE\", _this10.desc.id, (_b = _this10.desc.precondition) === null || _b === void 0 ? void 0 : _b.serialize());\n          return;\n        }\n        return _this10.runEditorCommand.apply(_this10, [editorAccessor, editor].concat(args));\n      });\n    }\n  }]);\n}(Action2);\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n  CommandsRegistry.registerCommand(id, function (accessor) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    var instaService = accessor.get(IInstantiationService);\n    var resource = args[0],\n      position = args[1];\n    assertType(URI.isUri(resource));\n    assertType(Position.isIPosition(position));\n    var model = accessor.get(IModelService).getModel(resource);\n    if (model) {\n      var editorPosition = Position.lift(position);\n      return instaService.invokeFunction.apply(instaService, [handler, model, editorPosition].concat(_toConsumableArray(args.slice(2))));\n    }\n    return accessor.get(ITextModelService).createModelReference(resource).then(function (reference) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      })[\"finally\"](function () {\n        reference.dispose();\n      });\n    });\n  });\n}\nexport function registerEditorCommand(editorCommand) {\n  EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n  return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n  var action = new ctor();\n  EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n  return action;\n}\nexport function registerMultiEditorAction(action) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n  return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n  EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n  EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n  function getEditorCommand(commandId) {\n    return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n  }\n  EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n  function getEditorActions() {\n    return EditorContributionRegistry.INSTANCE.getEditorActions();\n  }\n  EditorExtensionsRegistry.getEditorActions = getEditorActions;\n  function getEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions();\n  }\n  EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n  function getSomeEditorContributions(ids) {\n    return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(function (c) {\n      return ids.indexOf(c.id) >= 0;\n    });\n  }\n  EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n  function getDiffEditorContributions() {\n    return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n  }\n  EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nvar Extensions = {\n  EditorCommonContributions: 'editor.contributions'\n};\nvar EditorContributionRegistry = /*#__PURE__*/function () {\n  function EditorContributionRegistry() {\n    _classCallCheck(this, EditorContributionRegistry);\n    this.editorContributions = [];\n    this.diffEditorContributions = [];\n    this.editorActions = [];\n    this.editorCommands = Object.create(null);\n  }\n  return _createClass(EditorContributionRegistry, [{\n    key: \"registerEditorContribution\",\n    value: function registerEditorContribution(id, ctor, instantiation) {\n      this.editorContributions.push({\n        id: id,\n        ctor: ctor,\n        instantiation: instantiation\n      });\n    }\n  }, {\n    key: \"getEditorContributions\",\n    value: function getEditorContributions() {\n      return this.editorContributions.slice(0);\n    }\n  }, {\n    key: \"getDiffEditorContributions\",\n    value: function getDiffEditorContributions() {\n      return this.diffEditorContributions.slice(0);\n    }\n  }, {\n    key: \"registerEditorAction\",\n    value: function registerEditorAction(action) {\n      action.register();\n      this.editorActions.push(action);\n    }\n  }, {\n    key: \"getEditorActions\",\n    value: function getEditorActions() {\n      return this.editorActions;\n    }\n  }, {\n    key: \"registerEditorCommand\",\n    value: function registerEditorCommand(editorCommand) {\n      editorCommand.register();\n      this.editorCommands[editorCommand.id] = editorCommand;\n    }\n  }, {\n    key: \"getEditorCommand\",\n    value: function getEditorCommand(commandId) {\n      return this.editorCommands[commandId] || null;\n    }\n  }]);\n}();\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n  command.register();\n  return command;\n}\nexport var UndoCommand = registerCommand(new MultiCommand({\n  id: 'undo',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0 /* KeybindingWeight.EditorCore */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n  },\n  menuOpts: [{\n    menuId: MenuId.MenubarEditMenu,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miUndo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Undo\"),\n    order: 1\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('undo', \"Undo\"),\n    order: 1\n  }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, {\n  id: 'default:undo',\n  precondition: undefined\n}));\nexport var RedoCommand = registerCommand(new MultiCommand({\n  id: 'redo',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0 /* KeybindingWeight.EditorCore */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */\n    }\n  },\n  menuOpts: [{\n    menuId: MenuId.MenubarEditMenu,\n    group: '1_do',\n    title: nls.localize({\n      key: 'miRedo',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Redo\"),\n    order: 2\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('redo', \"Redo\"),\n    order: 1\n  }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, {\n  id: 'default:redo',\n  precondition: undefined\n}));\nexport var SelectAllCommand = registerCommand(new MultiCommand({\n  id: 'editor.action.selectAll',\n  precondition: undefined,\n  kbOpts: {\n    weight: 0 /* KeybindingWeight.EditorCore */,\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n  },\n  menuOpts: [{\n    menuId: MenuId.MenubarSelectionMenu,\n    group: '1_basic',\n    title: nls.localize({\n      key: 'miSelectAll',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Select All\"),\n    order: 1\n  }, {\n    menuId: MenuId.CommandPalette,\n    group: '',\n    title: nls.localize('selectAll', \"Select All\"),\n    order: 1\n  }]\n}));","map":{"version":3,"names":["nls","URI","ICodeEditorService","Position","IModelService","ITextModelService","MenuId","MenuRegistry","Action2","CommandsRegistry","ContextKeyExpr","IContextKeyService","IInstantiationService","KeybindingsRegistry","Registry","ITelemetryService","assertType","ILogService","getActiveElement","Command","opts","_classCallCheck","id","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","metadata","_createClass","key","value","register","_this","Array","isArray","forEach","_registerMenuItem","kbOptsArr","_iterator","_createForOfIteratorHelper","_step","s","n","done","kbWhen","kbExpr","and","desc","weight","args","when","primary","secondary","win","linux","mac","registerKeybindingRule","err","e","f","registerCommand","handler","accessor","runCommand","item","appendMenuItem","menuId","group","command","title","icon","order","MultiCommand","_Command","_this2","_callSuper","arguments","_implementations","_inherits","addImplementation","priority","name","implementation","_this3","push","sort","a","b","dispose","i","length","splice","logService","get","contextKeyService","trace","concat","_iterator2","_step2","impl","context","getContext","evaluate","result","ProxyCommand","_Command2","_this4","EditorCommand","_Command3","_this5","runEditorCommand","editor","bindToContribution","controllerGetter","_EditorCommand","EditorControllerCommandImpl","_this6","_callback","controller","runner","codeEditorService","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","kbService","contextMatchesRules","undefined","EditorAction","_EditorCommand2","_this7","convertOptions","label","alias","reportTelemetry","run","publicLog2","withDefaults","EditorContext","contextMenuOpts","apply","_toConsumableArray","map","MultiEditorAction","_EditorAction","_this8","_this9","_iterator3","_step3","EditorAction2","_Action","_this10","_len","_key","_a","_b","enabled","debug","serialize","registerModelAndPositionCommand","_len2","_key2","instaService","resource","position","isUri","isIPosition","model","getModel","editorPosition","lift","invokeFunction","slice","createModelReference","then","reference","Promise","resolve","reject","object","textEditorModel","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","action","registerMultiEditorAction","registerInstantiatedEditorAction","editorAction","registerEditorContribution","instantiation","EditorExtensionsRegistry","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","Extensions","EditorCommonContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","Object","create","add","UndoCommand","MenubarEditMenu","localize","comment","CommandPalette","RedoCommand","SelectAllCommand","MenubarSelectionMenu"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this.metadata = opts.metadata;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            metadata: this.metadata\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation, when) {\n        this._implementations.push({ priority, name, implementation, when });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        const contextKeyService = accessor.get(IContextKeyService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            if (impl.when) {\n                const context = contextKeyService.getContext(getActiveElement());\n                const value = impl.when.evaluate(context);\n                if (!value) {\n                    continue;\n                }\n            }\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    static runEditorCommand(accessor, args, precondition, runner) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(precondition !== null && precondition !== void 0 ? precondition : undefined)) {\n                // precondition does not hold\n                return;\n            }\n            return runner(editorAccessor, editor, args);\n        });\n    }\n    runCommand(accessor, args) {\n        return EditorCommand.runEditorCommand(accessor, args, this.precondition, (accessor, editor, args) => this.runEditorCommand(accessor, editor, args));\n    }\n}\nexport class EditorAction extends EditorCommand {\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion EditorAction\n//#region EditorAction2\nexport class EditorAction2 extends Action2 {\n    run(accessor, ...args) {\n        // Find the editor with text focus or active\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        // precondition does hold\n        return editor.invokeWithinContext((editorAccessor) => {\n            var _a, _b;\n            const kbService = editorAccessor.get(IContextKeyService);\n            const logService = editorAccessor.get(ILogService);\n            const enabled = kbService.contextMatchesRules((_a = this.desc.precondition) !== null && _a !== void 0 ? _a : undefined);\n            if (!enabled) {\n                logService.debug(`[EditorAction2] NOT running command because its precondition is FALSE`, this.desc.id, (_b = this.desc.precondition) === null || _b === void 0 ? void 0 : _b.serialize());\n                return;\n            }\n            return this.runEditorCommand(editorAccessor, editor, ...args);\n        });\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor, instantiation) {\n        this.editorContributions.push({ id, ctor: ctor, instantiation });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions;\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}