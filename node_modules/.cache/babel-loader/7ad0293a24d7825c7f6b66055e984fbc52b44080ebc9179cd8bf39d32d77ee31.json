{"ast":null,"code":"import _objectSpread from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.string.repeat.js\";\nimport \"core-js/modules/web.queue-microtask.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SnippetController2_1;\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { showSimpleSuggestions } from '../../suggest/browser/suggest.js';\nimport { localize } from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { SnippetSession } from './snippetSession.js';\nvar _defaultOptions = {\n  overwriteBefore: 0,\n  overwriteAfter: 0,\n  undoStopBefore: true,\n  undoStopAfter: true,\n  adjustWhitespace: true,\n  clipboardText: undefined,\n  overtypingCapturer: undefined\n};\nvar SnippetController2 = SnippetController2_1 = /*#__PURE__*/function () {\n  function SnippetController2(_editor, _logService, _languageFeaturesService, contextKeyService, _languageConfigurationService) {\n    _classCallCheck(this, SnippetController2);\n    this._editor = _editor;\n    this._logService = _logService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._languageConfigurationService = _languageConfigurationService;\n    this._snippetListener = new DisposableStore();\n    this._modelVersionId = -1;\n    this._inSnippet = SnippetController2_1.InSnippetMode.bindTo(contextKeyService);\n    this._hasNextTabstop = SnippetController2_1.HasNextTabstop.bindTo(contextKeyService);\n    this._hasPrevTabstop = SnippetController2_1.HasPrevTabstop.bindTo(contextKeyService);\n  }\n  return _createClass(SnippetController2, [{\n    key: \"dispose\",\n    value: function dispose() {\n      var _a;\n      this._inSnippet.reset();\n      this._hasPrevTabstop.reset();\n      this._hasNextTabstop.reset();\n      (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n      this._snippetListener.dispose();\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(template, opts) {\n      // this is here to find out more about the yet-not-understood\n      // error that sometimes happens when we fail to inserted a nested\n      // snippet\n      try {\n        this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : _objectSpread(_objectSpread({}, _defaultOptions), opts));\n      } catch (e) {\n        this.cancel();\n        this._logService.error(e);\n        this._logService.error('snippet_error');\n        this._logService.error('insert_template=', template);\n        this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n      }\n    }\n  }, {\n    key: \"_doInsert\",\n    value: function _doInsert(template, opts) {\n      var _this = this;\n      var _a;\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      // don't listen while inserting the snippet\n      // as that is the inflight state causing cancelation\n      this._snippetListener.clear();\n      if (opts.undoStopBefore) {\n        this._editor.getModel().pushStackElement();\n      }\n      // don't merge\n      if (this._session && typeof template !== 'string') {\n        this.cancel();\n      }\n      if (!this._session) {\n        this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n        this._session = new SnippetSession(this._editor, template, opts, this._languageConfigurationService);\n        this._session.insert();\n      } else {\n        assertType(typeof template === 'string');\n        this._session.merge(template, opts);\n      }\n      if (opts.undoStopAfter) {\n        this._editor.getModel().pushStackElement();\n      }\n      // regster completion item provider when there is any choice element\n      if ((_a = this._session) === null || _a === void 0 ? void 0 : _a.hasChoice) {\n        var provider = {\n          _debugDisplayName: 'snippetChoiceCompletions',\n          provideCompletionItems: function provideCompletionItems(model, position) {\n            if (!_this._session || model !== _this._editor.getModel() || !Position.equals(_this._editor.getPosition(), position)) {\n              return undefined;\n            }\n            var activeChoice = _this._session.activeChoice;\n            if (!activeChoice || activeChoice.choice.options.length === 0) {\n              return undefined;\n            }\n            var word = model.getValueInRange(activeChoice.range);\n            var isAnyOfOptions = Boolean(activeChoice.choice.options.find(function (o) {\n              return o.value === word;\n            }));\n            var suggestions = [];\n            for (var i = 0; i < activeChoice.choice.options.length; i++) {\n              var option = activeChoice.choice.options[i];\n              suggestions.push({\n                kind: 13 /* CompletionItemKind.Value */,\n                label: option.value,\n                insertText: option.value,\n                sortText: 'a'.repeat(i + 1),\n                range: activeChoice.range,\n                filterText: isAnyOfOptions ? \"\".concat(word, \"_\").concat(option.value) : undefined,\n                command: {\n                  id: 'jumpToNextSnippetPlaceholder',\n                  title: localize('next', 'Go to next placeholder...')\n                }\n              });\n            }\n            return {\n              suggestions: suggestions\n            };\n          }\n        };\n        var model = this._editor.getModel();\n        var registration;\n        var isRegistered = false;\n        var disable = function disable() {\n          registration === null || registration === void 0 ? void 0 : registration.dispose();\n          isRegistered = false;\n        };\n        var enable = function enable() {\n          if (!isRegistered) {\n            registration = _this._languageFeaturesService.completionProvider.register({\n              language: model.getLanguageId(),\n              pattern: model.uri.fsPath,\n              scheme: model.uri.scheme,\n              exclusive: true\n            }, provider);\n            _this._snippetListener.add(registration);\n            isRegistered = true;\n          }\n        };\n        this._choiceCompletions = {\n          provider: provider,\n          enable: enable,\n          disable: disable\n        };\n      }\n      this._updateState();\n      this._snippetListener.add(this._editor.onDidChangeModelContent(function (e) {\n        return e.isFlush && _this.cancel();\n      }));\n      this._snippetListener.add(this._editor.onDidChangeModel(function () {\n        return _this.cancel();\n      }));\n      this._snippetListener.add(this._editor.onDidChangeCursorSelection(function () {\n        return _this._updateState();\n      }));\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState() {\n      if (!this._session || !this._editor.hasModel()) {\n        // canceled in the meanwhile\n        return;\n      }\n      if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n        // undo until the 'before' state happened\n        // and makes use cancel snippet mode\n        return this.cancel();\n      }\n      if (!this._session.hasPlaceholder) {\n        // don't listen for selection changes and don't\n        // update context keys when the snippet is plain text\n        return this.cancel();\n      }\n      if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n        this._editor.getModel().pushStackElement();\n        return this.cancel();\n      }\n      this._inSnippet.set(true);\n      this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n      this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n      this._handleChoice();\n    }\n  }, {\n    key: \"_handleChoice\",\n    value: function _handleChoice() {\n      var _this2 = this;\n      var _a;\n      if (!this._session || !this._editor.hasModel()) {\n        this._currentChoice = undefined;\n        return;\n      }\n      var activeChoice = this._session.activeChoice;\n      if (!activeChoice || !this._choiceCompletions) {\n        (_a = this._choiceCompletions) === null || _a === void 0 ? void 0 : _a.disable();\n        this._currentChoice = undefined;\n        return;\n      }\n      if (this._currentChoice !== activeChoice.choice) {\n        this._currentChoice = activeChoice.choice;\n        this._choiceCompletions.enable();\n        // trigger suggest with the special choice completion provider\n        queueMicrotask(function () {\n          showSimpleSuggestions(_this2._editor, _this2._choiceCompletions.provider);\n        });\n      }\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      while (this._inSnippet.get()) {\n        this.next();\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var resetSelection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _a;\n      this._inSnippet.reset();\n      this._hasPrevTabstop.reset();\n      this._hasNextTabstop.reset();\n      this._snippetListener.clear();\n      this._currentChoice = undefined;\n      (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n      this._session = undefined;\n      this._modelVersionId = -1;\n      if (resetSelection) {\n        // reset selection to the primary cursor when being asked\n        // for. this happens when explicitly cancelling snippet mode,\n        // e.g. when pressing ESC\n        this._editor.setSelections([this._editor.getSelection()]);\n      }\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      var _a;\n      (_a = this._session) === null || _a === void 0 ? void 0 : _a.prev();\n      this._updateState();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _a;\n      (_a = this._session) === null || _a === void 0 ? void 0 : _a.next();\n      this._updateState();\n    }\n  }, {\n    key: \"isInSnippet\",\n    value: function isInSnippet() {\n      return Boolean(this._inSnippet.get());\n    }\n  }], [{\n    key: \"get\",\n    value: function get(editor) {\n      return editor.getContribution(SnippetController2_1.ID);\n    }\n  }]);\n}();\nSnippetController2.ID = 'snippetController2';\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\nSnippetController2 = SnippetController2_1 = __decorate([__param(1, ILogService), __param(2, ILanguageFeaturesService), __param(3, IContextKeyService), __param(4, ILanguageConfigurationService)], SnippetController2);\nexport { SnippetController2 };\nregisterEditorContribution(SnippetController2.ID, SnippetController2, 4 /* EditorContributionInstantiation.Lazy */);\nvar CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToNextSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n  handler: function handler(ctrl) {\n    return ctrl.next();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new CommandCtor({\n  id: 'jumpToPrevSnippetPlaceholder',\n  precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n  handler: function handler(ctrl) {\n    return ctrl.prev();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new CommandCtor({\n  id: 'leaveSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: function handler(ctrl) {\n    return ctrl.cancel(true);\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n    kbExpr: EditorContextKeys.editorTextFocus,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\nregisterEditorCommand(new CommandCtor({\n  id: 'acceptSnippet',\n  precondition: SnippetController2.InSnippetMode,\n  handler: function handler(ctrl) {\n    return ctrl.finish();\n  }\n  // kbOpts: {\n  // \tweight: KeybindingWeight.EditorContrib + 30,\n  // \tkbExpr: EditorContextKeys.textFocus,\n  // \tprimary: KeyCode.Enter,\n  // }\n}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","SnippetController2_1","DisposableStore","assertType","EditorCommand","registerEditorCommand","registerEditorContribution","Position","EditorContextKeys","ILanguageConfigurationService","ILanguageFeaturesService","showSimpleSuggestions","localize","ContextKeyExpr","IContextKeyService","RawContextKey","ILogService","SnippetSession","_defaultOptions","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","undefined","overtypingCapturer","SnippetController2","_editor","_logService","_languageFeaturesService","contextKeyService","_languageConfigurationService","_classCallCheck","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","bindTo","_hasNextTabstop","HasNextTabstop","_hasPrevTabstop","HasPrevTabstop","_createClass","value","dispose","_a","reset","_session","insert","template","opts","_doInsert","_objectSpread","e","cancel","error","_logInfo","_this","hasModel","clear","getModel","pushStackElement","getAlternativeVersionId","merge","hasChoice","provider","_debugDisplayName","provideCompletionItems","model","position","equals","getPosition","activeChoice","choice","options","word","getValueInRange","range","isAnyOfOptions","Boolean","find","o","suggestions","option","push","kind","label","insertText","sortText","repeat","filterText","concat","command","id","title","registration","isRegistered","disable","enable","completionProvider","register","language","getLanguageId","pattern","uri","fsPath","scheme","exclusive","add","_choiceCompletions","_updateState","onDidChangeModelContent","isFlush","onDidChangeModel","onDidChangeCursorSelection","hasPlaceholder","isAtLastPlaceholder","isSelectionWithinPlaceholders","set","isAtFirstPlaceholder","_handleChoice","_this2","_currentChoice","queueMicrotask","finish","get","next","resetSelection","setSelections","getSelection","prev","isInSnippet","editor","getContribution","ID","CommandCtor","bindToContribution","precondition","and","handler","ctrl","kbOpts","weight","kbExpr","editorTextFocus","primary","secondary"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetController2.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SnippetController2_1;\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { showSimpleSuggestions } from '../../suggest/browser/suggest.js';\nimport { localize } from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { SnippetSession } from './snippetSession.js';\nconst _defaultOptions = {\n    overwriteBefore: 0,\n    overwriteAfter: 0,\n    undoStopBefore: true,\n    undoStopAfter: true,\n    adjustWhitespace: true,\n    clipboardText: undefined,\n    overtypingCapturer: undefined\n};\nlet SnippetController2 = SnippetController2_1 = class SnippetController2 {\n    static get(editor) {\n        return editor.getContribution(SnippetController2_1.ID);\n    }\n    constructor(_editor, _logService, _languageFeaturesService, contextKeyService, _languageConfigurationService) {\n        this._editor = _editor;\n        this._logService = _logService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._snippetListener = new DisposableStore();\n        this._modelVersionId = -1;\n        this._inSnippet = SnippetController2_1.InSnippetMode.bindTo(contextKeyService);\n        this._hasNextTabstop = SnippetController2_1.HasNextTabstop.bindTo(contextKeyService);\n        this._hasPrevTabstop = SnippetController2_1.HasPrevTabstop.bindTo(contextKeyService);\n    }\n    dispose() {\n        var _a;\n        this._inSnippet.reset();\n        this._hasPrevTabstop.reset();\n        this._hasNextTabstop.reset();\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._snippetListener.dispose();\n    }\n    insert(template, opts) {\n        // this is here to find out more about the yet-not-understood\n        // error that sometimes happens when we fail to inserted a nested\n        // snippet\n        try {\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : { ..._defaultOptions, ...opts });\n        }\n        catch (e) {\n            this.cancel();\n            this._logService.error(e);\n            this._logService.error('snippet_error');\n            this._logService.error('insert_template=', template);\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n        }\n    }\n    _doInsert(template, opts) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // don't listen while inserting the snippet\n        // as that is the inflight state causing cancelation\n        this._snippetListener.clear();\n        if (opts.undoStopBefore) {\n            this._editor.getModel().pushStackElement();\n        }\n        // don't merge\n        if (this._session && typeof template !== 'string') {\n            this.cancel();\n        }\n        if (!this._session) {\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n            this._session = new SnippetSession(this._editor, template, opts, this._languageConfigurationService);\n            this._session.insert();\n        }\n        else {\n            assertType(typeof template === 'string');\n            this._session.merge(template, opts);\n        }\n        if (opts.undoStopAfter) {\n            this._editor.getModel().pushStackElement();\n        }\n        // regster completion item provider when there is any choice element\n        if ((_a = this._session) === null || _a === void 0 ? void 0 : _a.hasChoice) {\n            const provider = {\n                _debugDisplayName: 'snippetChoiceCompletions',\n                provideCompletionItems: (model, position) => {\n                    if (!this._session || model !== this._editor.getModel() || !Position.equals(this._editor.getPosition(), position)) {\n                        return undefined;\n                    }\n                    const { activeChoice } = this._session;\n                    if (!activeChoice || activeChoice.choice.options.length === 0) {\n                        return undefined;\n                    }\n                    const word = model.getValueInRange(activeChoice.range);\n                    const isAnyOfOptions = Boolean(activeChoice.choice.options.find(o => o.value === word));\n                    const suggestions = [];\n                    for (let i = 0; i < activeChoice.choice.options.length; i++) {\n                        const option = activeChoice.choice.options[i];\n                        suggestions.push({\n                            kind: 13 /* CompletionItemKind.Value */,\n                            label: option.value,\n                            insertText: option.value,\n                            sortText: 'a'.repeat(i + 1),\n                            range: activeChoice.range,\n                            filterText: isAnyOfOptions ? `${word}_${option.value}` : undefined,\n                            command: { id: 'jumpToNextSnippetPlaceholder', title: localize('next', 'Go to next placeholder...') }\n                        });\n                    }\n                    return { suggestions };\n                }\n            };\n            const model = this._editor.getModel();\n            let registration;\n            let isRegistered = false;\n            const disable = () => {\n                registration === null || registration === void 0 ? void 0 : registration.dispose();\n                isRegistered = false;\n            };\n            const enable = () => {\n                if (!isRegistered) {\n                    registration = this._languageFeaturesService.completionProvider.register({\n                        language: model.getLanguageId(),\n                        pattern: model.uri.fsPath,\n                        scheme: model.uri.scheme,\n                        exclusive: true\n                    }, provider);\n                    this._snippetListener.add(registration);\n                    isRegistered = true;\n                }\n            };\n            this._choiceCompletions = { provider, enable, disable };\n        }\n        this._updateState();\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\n    }\n    _updateState() {\n        if (!this._session || !this._editor.hasModel()) {\n            // canceled in the meanwhile\n            return;\n        }\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n            // undo until the 'before' state happened\n            // and makes use cancel snippet mode\n            return this.cancel();\n        }\n        if (!this._session.hasPlaceholder) {\n            // don't listen for selection changes and don't\n            // update context keys when the snippet is plain text\n            return this.cancel();\n        }\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n            this._editor.getModel().pushStackElement();\n            return this.cancel();\n        }\n        this._inSnippet.set(true);\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n        this._handleChoice();\n    }\n    _handleChoice() {\n        var _a;\n        if (!this._session || !this._editor.hasModel()) {\n            this._currentChoice = undefined;\n            return;\n        }\n        const { activeChoice } = this._session;\n        if (!activeChoice || !this._choiceCompletions) {\n            (_a = this._choiceCompletions) === null || _a === void 0 ? void 0 : _a.disable();\n            this._currentChoice = undefined;\n            return;\n        }\n        if (this._currentChoice !== activeChoice.choice) {\n            this._currentChoice = activeChoice.choice;\n            this._choiceCompletions.enable();\n            // trigger suggest with the special choice completion provider\n            queueMicrotask(() => {\n                showSimpleSuggestions(this._editor, this._choiceCompletions.provider);\n            });\n        }\n    }\n    finish() {\n        while (this._inSnippet.get()) {\n            this.next();\n        }\n    }\n    cancel(resetSelection = false) {\n        var _a;\n        this._inSnippet.reset();\n        this._hasPrevTabstop.reset();\n        this._hasNextTabstop.reset();\n        this._snippetListener.clear();\n        this._currentChoice = undefined;\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._session = undefined;\n        this._modelVersionId = -1;\n        if (resetSelection) {\n            // reset selection to the primary cursor when being asked\n            // for. this happens when explicitly cancelling snippet mode,\n            // e.g. when pressing ESC\n            this._editor.setSelections([this._editor.getSelection()]);\n        }\n    }\n    prev() {\n        var _a;\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.prev();\n        this._updateState();\n    }\n    next() {\n        var _a;\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.next();\n        this._updateState();\n    }\n    isInSnippet() {\n        return Boolean(this._inSnippet.get());\n    }\n};\nSnippetController2.ID = 'snippetController2';\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\nSnippetController2 = SnippetController2_1 = __decorate([\n    __param(1, ILogService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageConfigurationService)\n], SnippetController2);\nexport { SnippetController2 };\nregisterEditorContribution(SnippetController2.ID, SnippetController2, 4 /* EditorContributionInstantiation.Lazy */);\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\nregisterEditorCommand(new CommandCtor({\n    id: 'jumpToNextSnippetPlaceholder',\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n    handler: ctrl => ctrl.next(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'jumpToPrevSnippetPlaceholder',\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n    handler: ctrl => ctrl.prev(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'leaveSnippet',\n    precondition: SnippetController2.InSnippetMode,\n    handler: ctrl => ctrl.cancel(true),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'acceptSnippet',\n    precondition: SnippetController2.InSnippetMode,\n    handler: ctrl => ctrl.finish(),\n    // kbOpts: {\n    // \tweight: KeybindingWeight.EditorContrib + 30,\n    // \tkbExpr: EditorContextKeys.textFocus,\n    // \tprimary: KeyCode.Enter,\n    // }\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}