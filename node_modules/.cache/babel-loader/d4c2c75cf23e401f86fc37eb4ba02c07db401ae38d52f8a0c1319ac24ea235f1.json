{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.object.keys.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport * as dom from '../../../../base/browser/dom.js';\nexport var ViewOverlayWidgets = /*#__PURE__*/function (_ViewPart) {\n  function ViewOverlayWidgets(context, viewDomNode) {\n    var _this;\n    _classCallCheck(this, ViewOverlayWidgets);\n    _this = _callSuper(this, ViewOverlayWidgets, [context]);\n    _this._viewDomNode = viewDomNode;\n    var options = _this._context.configuration.options;\n    var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n    _this._widgets = {};\n    _this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n    _this._minimapWidth = layoutInfo.minimap.minimapWidth;\n    _this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n    _this._editorHeight = layoutInfo.height;\n    _this._editorWidth = layoutInfo.width;\n    _this._viewDomNodeRect = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0\n    };\n    _this._domNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this._domNode, 4 /* PartFingerprint.OverlayWidgets */);\n    _this._domNode.setClassName('overlayWidgets');\n    _this.overflowingOverlayWidgetsDomNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this.overflowingOverlayWidgetsDomNode, 5 /* PartFingerprint.OverflowingOverlayWidgets */);\n    _this.overflowingOverlayWidgetsDomNode.setClassName('overflowingOverlayWidgets');\n    return _this;\n  }\n  _inherits(ViewOverlayWidgets, _ViewPart);\n  return _createClass(ViewOverlayWidgets, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ViewOverlayWidgets.prototype), \"dispose\", this).call(this);\n      this._widgets = {};\n    }\n  }, {\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      return this._domNode;\n    }\n    // ---- begin view event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n      this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n      this._minimapWidth = layoutInfo.minimap.minimapWidth;\n      this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n      this._editorHeight = layoutInfo.height;\n      this._editorWidth = layoutInfo.width;\n      return true;\n    }\n    // ---- end view event handlers\n  }, {\n    key: \"addWidget\",\n    value: function addWidget(widget) {\n      var domNode = createFastDomNode(widget.getDomNode());\n      this._widgets[widget.getId()] = {\n        widget: widget,\n        preference: null,\n        domNode: domNode\n      };\n      // This is sync because a widget wants to be in the dom\n      domNode.setPosition('absolute');\n      domNode.setAttribute('widgetId', widget.getId());\n      if (widget.allowEditorOverflow) {\n        this.overflowingOverlayWidgetsDomNode.appendChild(domNode);\n      } else {\n        this._domNode.appendChild(domNode);\n      }\n      this.setShouldRender();\n      this._updateMaxMinWidth();\n    }\n  }, {\n    key: \"setWidgetPosition\",\n    value: function setWidgetPosition(widget, preference) {\n      var widgetData = this._widgets[widget.getId()];\n      if (widgetData.preference === preference) {\n        this._updateMaxMinWidth();\n        return false;\n      }\n      widgetData.preference = preference;\n      this.setShouldRender();\n      this._updateMaxMinWidth();\n      return true;\n    }\n  }, {\n    key: \"removeWidget\",\n    value: function removeWidget(widget) {\n      var widgetId = widget.getId();\n      if (this._widgets.hasOwnProperty(widgetId)) {\n        var widgetData = this._widgets[widgetId];\n        var domNode = widgetData.domNode.domNode;\n        delete this._widgets[widgetId];\n        domNode.remove();\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n      }\n    }\n  }, {\n    key: \"_updateMaxMinWidth\",\n    value: function _updateMaxMinWidth() {\n      var _a, _b;\n      var maxMinWidth = 0;\n      var keys = Object.keys(this._widgets);\n      for (var i = 0, len = keys.length; i < len; i++) {\n        var widgetId = keys[i];\n        var widget = this._widgets[widgetId];\n        var widgetMinWidthInPx = (_b = (_a = widget.widget).getMinContentWidthInPx) === null || _b === void 0 ? void 0 : _b.call(_a);\n        if (typeof widgetMinWidthInPx !== 'undefined') {\n          maxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n        }\n      }\n      this._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n    }\n  }, {\n    key: \"_renderWidget\",\n    value: function _renderWidget(widgetData) {\n      var domNode = widgetData.domNode;\n      if (widgetData.preference === null) {\n        domNode.setTop('');\n        return;\n      }\n      if (widgetData.preference === 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */) {\n        domNode.setTop(0);\n        domNode.setRight(2 * this._verticalScrollbarWidth + this._minimapWidth);\n      } else if (widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n        var widgetHeight = domNode.domNode.clientHeight;\n        domNode.setTop(this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight);\n        domNode.setRight(2 * this._verticalScrollbarWidth + this._minimapWidth);\n      } else if (widgetData.preference === 2 /* OverlayWidgetPositionPreference.TOP_CENTER */) {\n        domNode.setTop(0);\n        domNode.domNode.style.right = '50%';\n      } else {\n        var _widgetData$preferenc = widgetData.preference,\n          top = _widgetData$preferenc.top,\n          left = _widgetData$preferenc.left;\n        var fixedOverflowWidgets = this._context.configuration.options.get(42 /* EditorOption.fixedOverflowWidgets */);\n        if (fixedOverflowWidgets && widgetData.widget.allowEditorOverflow) {\n          // top, left are computed relative to the editor and we need them relative to the page\n          var editorBoundingBox = this._viewDomNodeRect;\n          domNode.setTop(top + editorBoundingBox.top);\n          domNode.setLeft(left + editorBoundingBox.left);\n          domNode.setPosition('fixed');\n        } else {\n          domNode.setTop(top);\n          domNode.setLeft(left);\n          domNode.setPosition('absolute');\n        }\n      }\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      this._viewDomNodeRect = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      this._domNode.setWidth(this._editorWidth);\n      var keys = Object.keys(this._widgets);\n      for (var i = 0, len = keys.length; i < len; i++) {\n        var widgetId = keys[i];\n        this._renderWidget(this._widgets[widgetId]);\n      }\n    }\n  }]);\n}(ViewPart);","map":{"version":3,"names":["createFastDomNode","PartFingerprints","ViewPart","dom","ViewOverlayWidgets","_ViewPart","context","viewDomNode","_this","_classCallCheck","_callSuper","_viewDomNode","options","_context","configuration","layoutInfo","get","_widgets","_verticalScrollbarWidth","verticalScrollbarWidth","_minimapWidth","minimap","minimapWidth","_horizontalScrollbarHeight","horizontalScrollbarHeight","_editorHeight","height","_editorWidth","width","_viewDomNodeRect","top","left","_domNode","document","createElement","write","setClassName","overflowingOverlayWidgetsDomNode","_inherits","_createClass","key","value","dispose","_get","_getPrototypeOf","prototype","call","getDomNode","onConfigurationChanged","e","addWidget","widget","domNode","getId","preference","setPosition","setAttribute","allowEditorOverflow","appendChild","setShouldRender","_updateMaxMinWidth","setWidgetPosition","widgetData","removeWidget","widgetId","hasOwnProperty","remove","_a","_b","maxMinWidth","keys","Object","i","len","length","widgetMinWidthInPx","getMinContentWidthInPx","Math","max","viewLayout","setOverlayWidgetsMinWidth","_renderWidget","setTop","setRight","widgetHeight","clientHeight","style","right","_widgetData$preferenc","fixedOverflowWidgets","editorBoundingBox","setLeft","prepareRender","ctx","getDomNodePagePosition","render","setWidth"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport * as dom from '../../../../base/browser/dom.js';\nexport class ViewOverlayWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._widgets = {};\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        this._viewDomNodeRect = { top: 0, left: 0, width: 0, height: 0 };\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 4 /* PartFingerprint.OverlayWidgets */);\n        this._domNode.setClassName('overlayWidgets');\n        this.overflowingOverlayWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingOverlayWidgetsDomNode, 5 /* PartFingerprint.OverflowingOverlayWidgets */);\n        this.overflowingOverlayWidgetsDomNode.setClassName('overflowingOverlayWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        return true;\n    }\n    // ---- end view event handlers\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: null,\n            domNode: domNode\n        };\n        // This is sync because a widget wants to be in the dom\n        domNode.setPosition('absolute');\n        domNode.setAttribute('widgetId', widget.getId());\n        if (widget.allowEditorOverflow) {\n            this.overflowingOverlayWidgetsDomNode.appendChild(domNode);\n        }\n        else {\n            this._domNode.appendChild(domNode);\n        }\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n    }\n    setWidgetPosition(widget, preference) {\n        const widgetData = this._widgets[widget.getId()];\n        if (widgetData.preference === preference) {\n            this._updateMaxMinWidth();\n            return false;\n        }\n        widgetData.preference = preference;\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.remove();\n            this.setShouldRender();\n            this._updateMaxMinWidth();\n        }\n    }\n    _updateMaxMinWidth() {\n        var _a, _b;\n        let maxMinWidth = 0;\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            const widget = this._widgets[widgetId];\n            const widgetMinWidthInPx = (_b = (_a = widget.widget).getMinContentWidthInPx) === null || _b === void 0 ? void 0 : _b.call(_a);\n            if (typeof widgetMinWidthInPx !== 'undefined') {\n                maxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n            }\n        }\n        this._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n    }\n    _renderWidget(widgetData) {\n        const domNode = widgetData.domNode;\n        if (widgetData.preference === null) {\n            domNode.setTop('');\n            return;\n        }\n        if (widgetData.preference === 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */) {\n            domNode.setTop(0);\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n            const widgetHeight = domNode.domNode.clientHeight;\n            domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 2 /* OverlayWidgetPositionPreference.TOP_CENTER */) {\n            domNode.setTop(0);\n            domNode.domNode.style.right = '50%';\n        }\n        else {\n            const { top, left } = widgetData.preference;\n            const fixedOverflowWidgets = this._context.configuration.options.get(42 /* EditorOption.fixedOverflowWidgets */);\n            if (fixedOverflowWidgets && widgetData.widget.allowEditorOverflow) {\n                // top, left are computed relative to the editor and we need them relative to the page\n                const editorBoundingBox = this._viewDomNodeRect;\n                domNode.setTop(top + editorBoundingBox.top);\n                domNode.setLeft(left + editorBoundingBox.left);\n                domNode.setPosition('fixed');\n            }\n            else {\n                domNode.setTop(top);\n                domNode.setLeft(left);\n                domNode.setPosition('absolute');\n            }\n        }\n    }\n    prepareRender(ctx) {\n        this._viewDomNodeRect = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._editorWidth);\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            this._renderWidget(this._widgets[widgetId]);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}