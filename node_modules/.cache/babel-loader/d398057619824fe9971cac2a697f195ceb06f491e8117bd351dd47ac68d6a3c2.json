{"ast":null,"code":"import _objectSpread from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n/**\n * Derived icons, that could become separate icons.\n * These mappings should be moved into the mapping file in the vscode-codicons repo at some point.\n */\nexport var codiconsDerived = {\n  dialogError: register('dialog-error', 'error'),\n  dialogWarning: register('dialog-warning', 'warning'),\n  dialogInfo: register('dialog-info', 'info'),\n  dialogClose: register('dialog-close', 'close'),\n  treeItemExpanded: register('tree-item-expanded', 'chevron-down'),\n  // collapsed is done with rotation\n  treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n  treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n  treeFilterClear: register('tree-filter-clear', 'close'),\n  treeItemLoading: register('tree-item-loading', 'loading'),\n  menuSelection: register('menu-selection', 'check'),\n  menuSubmenu: register('menu-submenu', 'chevron-right'),\n  menuBarMore: register('menubar-more', 'more'),\n  scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n  scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n  scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n  scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n  toolBarMore: register('toolbar-more', 'more'),\n  quickInputBack: register('quick-input-back', 'arrow-left'),\n  dropDownButton: register('drop-down-button', 0xeab4),\n  symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n  exportIcon: register('export', 0xebac),\n  workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n  newLine: register('newline', 0xebea),\n  thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n  thumbsUpFilled: register('thumbsup-filled', 0xec14),\n  gitFetch: register('git-fetch', 0xec1d),\n  lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n  debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9)\n};\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport var Codicon = _objectSpread(_objectSpread({}, codiconsLibrary), codiconsDerived);","map":{"version":3,"names":["register","codiconsLibrary","codiconsDerived","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","dropDownButton","symbolCustomColor","exportIcon","workspaceUnspecified","newLine","thumbsDownFilled","thumbsUpFilled","gitFetch","lightbulbSparkleAutofix","debugBreakpointPending","Codicon","_objectSpread"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/base/common/codicons.js"],"sourcesContent":["import { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n/**\n * Derived icons, that could become separate icons.\n * These mappings should be moved into the mapping file in the vscode-codicons repo at some point.\n */\nexport const codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'), // collapsed is done with rotation\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,eAAe,QAAQ,sBAAsB;AACtD;AACA;AACA;AACA;AACA,OAAO,IAAMC,eAAe,GAAG;EAC3BC,WAAW,EAAEH,QAAQ,CAAC,cAAc,EAAE,OAAO,CAAC;EAC9CI,aAAa,EAAEJ,QAAQ,CAAC,gBAAgB,EAAE,SAAS,CAAC;EACpDK,UAAU,EAAEL,QAAQ,CAAC,aAAa,EAAE,MAAM,CAAC;EAC3CM,WAAW,EAAEN,QAAQ,CAAC,cAAc,EAAE,OAAO,CAAC;EAC9CO,gBAAgB,EAAEP,QAAQ,CAAC,oBAAoB,EAAE,cAAc,CAAC;EAAE;EAClEQ,kBAAkB,EAAER,QAAQ,CAAC,wBAAwB,EAAE,aAAa,CAAC;EACrES,mBAAmB,EAAET,QAAQ,CAAC,yBAAyB,EAAE,gBAAgB,CAAC;EAC1EU,eAAe,EAAEV,QAAQ,CAAC,mBAAmB,EAAE,OAAO,CAAC;EACvDW,eAAe,EAAEX,QAAQ,CAAC,mBAAmB,EAAE,SAAS,CAAC;EACzDY,aAAa,EAAEZ,QAAQ,CAAC,gBAAgB,EAAE,OAAO,CAAC;EAClDa,WAAW,EAAEb,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC;EACtDc,WAAW,EAAEd,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC;EAC7Ce,mBAAmB,EAAEf,QAAQ,CAAC,uBAAuB,EAAE,eAAe,CAAC;EACvEgB,oBAAoB,EAAEhB,QAAQ,CAAC,wBAAwB,EAAE,gBAAgB,CAAC;EAC1EiB,iBAAiB,EAAEjB,QAAQ,CAAC,qBAAqB,EAAE,aAAa,CAAC;EACjEkB,mBAAmB,EAAElB,QAAQ,CAAC,uBAAuB,EAAE,eAAe,CAAC;EACvEmB,WAAW,EAAEnB,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC;EAC7CoB,cAAc,EAAEpB,QAAQ,CAAC,kBAAkB,EAAE,YAAY,CAAC;EAC1DqB,cAAc,EAAErB,QAAQ,CAAC,kBAAkB,EAAE,MAAM,CAAC;EACpDsB,iBAAiB,EAAEtB,QAAQ,CAAC,oBAAoB,EAAE,MAAM,CAAC;EACzDuB,UAAU,EAAEvB,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;EACtCwB,oBAAoB,EAAExB,QAAQ,CAAC,uBAAuB,EAAE,MAAM,CAAC;EAC/DyB,OAAO,EAAEzB,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC;EACpC0B,gBAAgB,EAAE1B,QAAQ,CAAC,mBAAmB,EAAE,MAAM,CAAC;EACvD2B,cAAc,EAAE3B,QAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC;EACnD4B,QAAQ,EAAE5B,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC;EACvC6B,uBAAuB,EAAE7B,QAAQ,CAAC,2BAA2B,EAAE,MAAM,CAAC;EACtE8B,sBAAsB,EAAE9B,QAAQ,CAAC,0BAA0B,EAAE,MAAM;AACvE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAM+B,OAAO,GAAAC,aAAA,CAAAA,aAAA,KACb/B,eAAe,GACfC,eAAe,CACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}