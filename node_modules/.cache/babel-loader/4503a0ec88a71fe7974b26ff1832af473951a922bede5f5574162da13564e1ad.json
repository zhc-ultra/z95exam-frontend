{"ast":null,"code":"import _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _wrapNativeSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport var ErrorHandler = /*#__PURE__*/function () {\n  function ErrorHandler() {\n    _classCallCheck(this, ErrorHandler);\n    this.listeners = [];\n    this.unexpectedErrorHandler = function (e) {\n      setTimeout(function () {\n        if (e.stack) {\n          if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n            throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n          }\n          throw new Error(e.message + '\\n\\n' + e.stack);\n        }\n        throw e;\n      }, 0);\n    };\n  }\n  return _createClass(ErrorHandler, [{\n    key: \"emit\",\n    value: function emit(e) {\n      this.listeners.forEach(function (listener) {\n        listener(e);\n      });\n    }\n  }, {\n    key: \"onUnexpectedError\",\n    value: function onUnexpectedError(e) {\n      this.unexpectedErrorHandler(e);\n      this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n  }, {\n    key: \"onUnexpectedExternalError\",\n    value: function onUnexpectedExternalError(e) {\n      this.unexpectedErrorHandler(e);\n    }\n  }]);\n}();\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n  // ignore errors from cancelled promises\n  if (!isCancellationError(e)) {\n    errorHandler.onUnexpectedError(e);\n  }\n  return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n  // ignore errors from cancelled promises\n  if (!isCancellationError(e)) {\n    errorHandler.onUnexpectedExternalError(e);\n  }\n  return undefined;\n}\nexport function transformErrorForSerialization(error) {\n  if (error instanceof Error) {\n    var name = error.name,\n      message = error.message;\n    var stack = error.stacktrace || error.stack;\n    return {\n      $isError: true,\n      name: name,\n      message: message,\n      stack: stack,\n      noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n    };\n  }\n  // return as is\n  return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n  if (error instanceof CancellationError) {\n    return true;\n  }\n  return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport var CancellationError = /*#__PURE__*/function (_Error) {\n  function CancellationError() {\n    var _this;\n    _classCallCheck(this, CancellationError);\n    _this = _callSuper(this, CancellationError, [canceledName]);\n    _this.name = _this.message;\n    return _this;\n  }\n  _inherits(CancellationError, _Error);\n  return _createClass(CancellationError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n  var error = new Error(canceledName);\n  error.name = error.message;\n  return error;\n}\nexport function illegalArgument(name) {\n  if (name) {\n    return new Error(\"Illegal argument: \".concat(name));\n  } else {\n    return new Error('Illegal argument');\n  }\n}\nexport function illegalState(name) {\n  if (name) {\n    return new Error(\"Illegal state: \".concat(name));\n  } else {\n    return new Error('Illegal state');\n  }\n}\nexport var NotSupportedError = /*#__PURE__*/function (_Error2) {\n  function NotSupportedError(message) {\n    var _this2;\n    _classCallCheck(this, NotSupportedError);\n    _this2 = _callSuper(this, NotSupportedError, ['NotSupported']);\n    if (message) {\n      _this2.message = message;\n    }\n    return _this2;\n  }\n  _inherits(NotSupportedError, _Error2);\n  return _createClass(NotSupportedError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport var ErrorNoTelemetry = /*#__PURE__*/function (_Error3) {\n  function ErrorNoTelemetry(msg) {\n    var _this3;\n    _classCallCheck(this, ErrorNoTelemetry);\n    _this3 = _callSuper(this, ErrorNoTelemetry, [msg]);\n    _this3.name = 'CodeExpectedError';\n    return _this3;\n  }\n  _inherits(ErrorNoTelemetry, _Error3);\n  return _createClass(ErrorNoTelemetry, null, [{\n    key: \"fromError\",\n    value: function fromError(err) {\n      if (err instanceof ErrorNoTelemetry) {\n        return err;\n      }\n      var result = new ErrorNoTelemetry();\n      result.message = err.message;\n      result.stack = err.stack;\n      return result;\n    }\n  }, {\n    key: \"isErrorNoTelemetry\",\n    value: function isErrorNoTelemetry(err) {\n      return err.name === 'CodeExpectedError';\n    }\n  }]);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport var BugIndicatingError = /*#__PURE__*/function (_Error4) {\n  function BugIndicatingError(message) {\n    var _this4;\n    _classCallCheck(this, BugIndicatingError);\n    _this4 = _callSuper(this, BugIndicatingError, [message || 'An unexpected bug occurred.']);\n    Object.setPrototypeOf(_this4, BugIndicatingError.prototype);\n    // Because we know for sure only buggy code throws this,\n    // we definitely want to break here and fix the bug.\n    // eslint-disable-next-line no-debugger\n    // debugger;\n    return _this4;\n  }\n  _inherits(BugIndicatingError, _Error4);\n  return _createClass(BugIndicatingError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"names":["ErrorHandler","_classCallCheck","listeners","unexpectedErrorHandler","e","setTimeout","stack","ErrorNoTelemetry","isErrorNoTelemetry","message","Error","_createClass","key","value","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","errorHandler","isCancellationError","undefined","transformErrorForSerialization","error","name","stacktrace","$isError","noTelemetry","canceledName","CancellationError","_Error","_this","_callSuper","_inherits","_wrapNativeSuper","canceled","illegalArgument","concat","illegalState","NotSupportedError","_Error2","_this2","_Error3","msg","_this3","fromError","err","result","BugIndicatingError","_Error4","_this4","Object","setPrototypeOf","prototype"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/common/errors.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = new ErrorNoTelemetry();\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n        // Because we know for sure only buggy code throws this,\n        // we definitely want to break here and fix the bug.\n        // eslint-disable-next-line no-debugger\n        // debugger;\n    }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,WAAaA,YAAY;EACrB,SAAAA,aAAA,EAAc;IAAAC,eAAA,OAAAD,YAAA;IACV,IAAI,CAACE,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,sBAAsB,GAAG,UAAUC,CAAC,EAAE;MACvCC,UAAU,CAAC,YAAM;QACb,IAAID,CAAC,CAACE,KAAK,EAAE;UACT,IAAIC,gBAAgB,CAACC,kBAAkB,CAACJ,CAAC,CAAC,EAAE;YACxC,MAAM,IAAIG,gBAAgB,CAACH,CAAC,CAACK,OAAO,GAAG,MAAM,GAAGL,CAAC,CAACE,KAAK,CAAC;UAC5D;UACA,MAAM,IAAII,KAAK,CAACN,CAAC,CAACK,OAAO,GAAG,MAAM,GAAGL,CAAC,CAACE,KAAK,CAAC;QACjD;QACA,MAAMF,CAAC;MACX,CAAC,EAAE,CAAC,CAAC;IACT,CAAC;EACL;EAAC,OAAAO,YAAA,CAAAX,YAAA;IAAAY,GAAA;IAAAC,KAAA,EACD,SAAAC,KAAKV,CAAC,EAAE;MACJ,IAAI,CAACF,SAAS,CAACa,OAAO,CAAC,UAACC,QAAQ,EAAK;QACjCA,QAAQ,CAACZ,CAAC,CAAC;MACf,CAAC,CAAC;IACN;EAAC;IAAAQ,GAAA;IAAAC,KAAA,EACD,SAAAI,kBAAkBb,CAAC,EAAE;MACjB,IAAI,CAACD,sBAAsB,CAACC,CAAC,CAAC;MAC9B,IAAI,CAACU,IAAI,CAACV,CAAC,CAAC;IAChB;IACA;EAAA;IAAAQ,GAAA;IAAAC,KAAA,EACA,SAAAK,0BAA0Bd,CAAC,EAAE;MACzB,IAAI,CAACD,sBAAsB,CAACC,CAAC,CAAC;IAClC;EAAC;AAAA;AAEL,OAAO,IAAMe,YAAY,GAAG,IAAInB,YAAY,CAAC,CAAC;AAC9C,OAAO,SAASiB,iBAAiBA,CAACb,CAAC,EAAE;EACjC;EACA,IAAI,CAACgB,mBAAmB,CAAChB,CAAC,CAAC,EAAE;IACzBe,YAAY,CAACF,iBAAiB,CAACb,CAAC,CAAC;EACrC;EACA,OAAOiB,SAAS;AACpB;AACA,OAAO,SAASH,yBAAyBA,CAACd,CAAC,EAAE;EACzC;EACA,IAAI,CAACgB,mBAAmB,CAAChB,CAAC,CAAC,EAAE;IACzBe,YAAY,CAACD,yBAAyB,CAACd,CAAC,CAAC;EAC7C;EACA,OAAOiB,SAAS;AACpB;AACA,OAAO,SAASC,8BAA8BA,CAACC,KAAK,EAAE;EAClD,IAAIA,KAAK,YAAYb,KAAK,EAAE;IACxB,IAAQc,IAAI,GAAcD,KAAK,CAAvBC,IAAI;MAAEf,OAAO,GAAKc,KAAK,CAAjBd,OAAO;IACrB,IAAMH,KAAK,GAAGiB,KAAK,CAACE,UAAU,IAAIF,KAAK,CAACjB,KAAK;IAC7C,OAAO;MACHoB,QAAQ,EAAE,IAAI;MACdF,IAAI,EAAJA,IAAI;MACJf,OAAO,EAAPA,OAAO;MACPH,KAAK,EAALA,KAAK;MACLqB,WAAW,EAAEpB,gBAAgB,CAACC,kBAAkB,CAACe,KAAK;IAC1D,CAAC;EACL;EACA;EACA,OAAOA,KAAK;AAChB;AACA,IAAMK,YAAY,GAAG,UAAU;AAC/B;AACA;AACA;AACA,OAAO,SAASR,mBAAmBA,CAACG,KAAK,EAAE;EACvC,IAAIA,KAAK,YAAYM,iBAAiB,EAAE;IACpC,OAAO,IAAI;EACf;EACA,OAAON,KAAK,YAAYb,KAAK,IAAIa,KAAK,CAACC,IAAI,KAAKI,YAAY,IAAIL,KAAK,CAACd,OAAO,KAAKmB,YAAY;AAClG;AACA;AACA;AACA,WAAaC,iBAAiB,0BAAAC,MAAA;EAC1B,SAAAD,kBAAA,EAAc;IAAA,IAAAE,KAAA;IAAA9B,eAAA,OAAA4B,iBAAA;IACVE,KAAA,GAAAC,UAAA,OAAAH,iBAAA,GAAMD,YAAY;IAClBG,KAAA,CAAKP,IAAI,GAAGO,KAAA,CAAKtB,OAAO;IAAC,OAAAsB,KAAA;EAC7B;EAACE,SAAA,CAAAJ,iBAAA,EAAAC,MAAA;EAAA,OAAAnB,YAAA,CAAAkB,iBAAA;AAAA,gBAAAK,gBAAA,CAJkCxB,KAAK;AAM5C;AACA;AACA;AACA,OAAO,SAASyB,QAAQA,CAAA,EAAG;EACvB,IAAMZ,KAAK,GAAG,IAAIb,KAAK,CAACkB,YAAY,CAAC;EACrCL,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACd,OAAO;EAC1B,OAAOc,KAAK;AAChB;AACA,OAAO,SAASa,eAAeA,CAACZ,IAAI,EAAE;EAClC,IAAIA,IAAI,EAAE;IACN,OAAO,IAAId,KAAK,sBAAA2B,MAAA,CAAsBb,IAAI,CAAE,CAAC;EACjD,CAAC,MACI;IACD,OAAO,IAAId,KAAK,CAAC,kBAAkB,CAAC;EACxC;AACJ;AACA,OAAO,SAAS4B,YAAYA,CAACd,IAAI,EAAE;EAC/B,IAAIA,IAAI,EAAE;IACN,OAAO,IAAId,KAAK,mBAAA2B,MAAA,CAAmBb,IAAI,CAAE,CAAC;EAC9C,CAAC,MACI;IACD,OAAO,IAAId,KAAK,CAAC,eAAe,CAAC;EACrC;AACJ;AACA,WAAa6B,iBAAiB,0BAAAC,OAAA;EAC1B,SAAAD,kBAAY9B,OAAO,EAAE;IAAA,IAAAgC,MAAA;IAAAxC,eAAA,OAAAsC,iBAAA;IACjBE,MAAA,GAAAT,UAAA,OAAAO,iBAAA,GAAM,cAAc;IACpB,IAAI9B,OAAO,EAAE;MACTgC,MAAA,CAAKhC,OAAO,GAAGA,OAAO;IAC1B;IAAC,OAAAgC,MAAA;EACL;EAACR,SAAA,CAAAM,iBAAA,EAAAC,OAAA;EAAA,OAAA7B,YAAA,CAAA4B,iBAAA;AAAA,gBAAAL,gBAAA,CANkCxB,KAAK;AAQ5C;AACA;AACA;AACA,WAAaH,gBAAgB,0BAAAmC,OAAA;EACzB,SAAAnC,iBAAYoC,GAAG,EAAE;IAAA,IAAAC,MAAA;IAAA3C,eAAA,OAAAM,gBAAA;IACbqC,MAAA,GAAAZ,UAAA,OAAAzB,gBAAA,GAAMoC,GAAG;IACTC,MAAA,CAAKpB,IAAI,GAAG,mBAAmB;IAAC,OAAAoB,MAAA;EACpC;EAACX,SAAA,CAAA1B,gBAAA,EAAAmC,OAAA;EAAA,OAAA/B,YAAA,CAAAJ,gBAAA;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAgC,UAAiBC,GAAG,EAAE;MAClB,IAAIA,GAAG,YAAYvC,gBAAgB,EAAE;QACjC,OAAOuC,GAAG;MACd;MACA,IAAMC,MAAM,GAAG,IAAIxC,gBAAgB,CAAC,CAAC;MACrCwC,MAAM,CAACtC,OAAO,GAAGqC,GAAG,CAACrC,OAAO;MAC5BsC,MAAM,CAACzC,KAAK,GAAGwC,GAAG,CAACxC,KAAK;MACxB,OAAOyC,MAAM;IACjB;EAAC;IAAAnC,GAAA;IAAAC,KAAA,EACD,SAAAL,mBAA0BsC,GAAG,EAAE;MAC3B,OAAOA,GAAG,CAACtB,IAAI,KAAK,mBAAmB;IAC3C;EAAC;AAAA,gBAAAU,gBAAA,CAhBiCxB,KAAK;AAkB3C;AACA;AACA;AACA;AACA;AACA,WAAasC,kBAAkB,0BAAAC,OAAA;EAC3B,SAAAD,mBAAYvC,OAAO,EAAE;IAAA,IAAAyC,MAAA;IAAAjD,eAAA,OAAA+C,kBAAA;IACjBE,MAAA,GAAAlB,UAAA,OAAAgB,kBAAA,GAAMvC,OAAO,IAAI,6BAA6B;IAC9C0C,MAAM,CAACC,cAAc,CAAAF,MAAA,EAAOF,kBAAkB,CAACK,SAAS,CAAC;IACzD;IACA;IACA;IACA;IAAA,OAAAH,MAAA;EACJ;EAACjB,SAAA,CAAAe,kBAAA,EAAAC,OAAA;EAAA,OAAAtC,YAAA,CAAAqC,kBAAA;AAAA,gBAAAd,gBAAA,CARmCxB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}