{"ast":null,"code":"import _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.anchor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar ContentHoverController_1, ContentHoverWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget, getHoverAccessibleViewHint } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nvar $ = dom.$;\nvar ContentHoverController = ContentHoverController_1 = /*#__PURE__*/function (_Disposable) {\n  function ContentHoverController(_editor, _instantiationService, _keybindingService) {\n    var _this;\n    _classCallCheck(this, ContentHoverController);\n    _this = _callSuper(this, ContentHoverController);\n    _this._editor = _editor;\n    _this._instantiationService = _instantiationService;\n    _this._keybindingService = _keybindingService;\n    _this._currentResult = null;\n    _this._widget = _this._register(_this._instantiationService.createInstance(ContentHoverWidget, _this._editor));\n    // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n    _this._participants = [];\n    var _iterator = _createForOfIteratorHelper(HoverParticipantRegistry.getAll()),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var participant = _step.value;\n        _this._participants.push(_this._instantiationService.createInstance(participant, _this._editor));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    _this._participants.sort(function (p1, p2) {\n      return p1.hoverOrdinal - p2.hoverOrdinal;\n    });\n    _this._computer = new ContentHoverComputer(_this._editor, _this._participants);\n    _this._hoverOperation = _this._register(new HoverOperation(_this._editor, _this._computer));\n    _this._register(_this._hoverOperation.onResult(function (result) {\n      if (!_this._computer.anchor) {\n        // invalid state, ignore result\n        return;\n      }\n      var messages = result.hasLoadingMessage ? _this._addLoadingMessage(result.value) : result.value;\n      _this._withResult(new HoverResult(_this._computer.anchor, messages, result.isComplete));\n    }));\n    _this._register(dom.addStandardDisposableListener(_this._widget.getDomNode(), 'keydown', function (e) {\n      if (e.equals(9 /* KeyCode.Escape */)) {\n        _this.hide();\n      }\n    }));\n    _this._register(TokenizationRegistry.onDidChange(function () {\n      if (_this._widget.position && _this._currentResult) {\n        _this._setCurrentResult(_this._currentResult); // render again\n      }\n    }));\n    return _this;\n  }\n  /**\n   * Returns true if the hover shows now or will show.\n   */\n  _inherits(ContentHoverController, _Disposable);\n  return _createClass(ContentHoverController, [{\n    key: \"_startShowingOrUpdateHover\",\n    value: function _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n      if (!this._widget.position || !this._currentResult) {\n        // The hover is not visible\n        if (anchor) {\n          this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n          return true;\n        }\n        return false;\n      }\n      // The hover is currently visible\n      var isHoverSticky = this._editor.getOption(60 /* EditorOption.hover */).sticky;\n      var isGettingCloser = isHoverSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy);\n      if (isGettingCloser) {\n        // The mouse is getting closer to the hover, so we will keep the hover untouched\n        // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n        if (anchor) {\n          this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n        }\n        return true;\n      }\n      if (!anchor) {\n        this._setCurrentResult(null);\n        return false;\n      }\n      if (anchor && this._currentResult.anchor.equals(anchor)) {\n        // The widget is currently showing results for the exact same anchor, so no update is needed\n        return true;\n      }\n      if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n        // The new anchor is not compatible with the previous anchor\n        this._setCurrentResult(null);\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n      }\n      // We aren't getting any closer to the hover, so we will filter existing results\n      // and keep those which also apply to the new anchor.\n      this._setCurrentResult(this._currentResult.filter(anchor));\n      this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n      return true;\n    }\n  }, {\n    key: \"_startHoverOperationIfNecessary\",\n    value: function _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n      if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n        // We have to start a hover operation at the exact same anchor as before, so no work is needed\n        return;\n      }\n      this._hoverOperation.cancel();\n      this._computer.anchor = anchor;\n      this._computer.shouldFocus = focus;\n      this._computer.source = source;\n      this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n      this._hoverOperation.start(mode);\n    }\n  }, {\n    key: \"_setCurrentResult\",\n    value: function _setCurrentResult(hoverResult) {\n      if (this._currentResult === hoverResult) {\n        // avoid updating the DOM to avoid resetting the user selection\n        return;\n      }\n      if (hoverResult && hoverResult.messages.length === 0) {\n        hoverResult = null;\n      }\n      this._currentResult = hoverResult;\n      if (this._currentResult) {\n        this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n      } else {\n        this._widget.hide();\n      }\n    }\n  }, {\n    key: \"_addLoadingMessage\",\n    value: function _addLoadingMessage(result) {\n      if (this._computer.anchor) {\n        var _iterator2 = _createForOfIteratorHelper(this._participants),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var participant = _step2.value;\n            if (participant.createLoadingMessage) {\n              var loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n              if (loadingMessage) {\n                return result.slice(0).concat([loadingMessage]);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_withResult\",\n    value: function _withResult(hoverResult) {\n      if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n        // The hover is visible with a previous complete result.\n        if (!hoverResult.isComplete) {\n          // Instead of rendering the new partial result, we wait for the result to be complete.\n          return;\n        }\n        if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n          // The hover would now hide normally, so we'll keep the previous messages\n          return;\n        }\n      }\n      this._setCurrentResult(hoverResult);\n    }\n  }, {\n    key: \"_renderMessages\",\n    value: function _renderMessages(anchor, messages) {\n      var _this2 = this;\n      var _ContentHoverControll = ContentHoverController_1.computeHoverRanges(this._editor, anchor.range, messages),\n        showAtPosition = _ContentHoverControll.showAtPosition,\n        showAtSecondaryPosition = _ContentHoverControll.showAtSecondaryPosition,\n        highlightRange = _ContentHoverControll.highlightRange;\n      var disposables = new DisposableStore();\n      var statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n      var fragment = document.createDocumentFragment();\n      var colorPicker = null;\n      var context = {\n        fragment: fragment,\n        statusBar: statusBar,\n        setColorPicker: function setColorPicker(widget) {\n          return colorPicker = widget;\n        },\n        onContentsChanged: function onContentsChanged() {\n          return _this2._widget.onContentsChanged();\n        },\n        setMinimumDimensions: function setMinimumDimensions(dimensions) {\n          return _this2._widget.setMinimumDimensions(dimensions);\n        },\n        hide: function hide() {\n          return _this2.hide();\n        }\n      };\n      var _iterator3 = _createForOfIteratorHelper(this._participants),\n        _step3;\n      try {\n        var _loop = function _loop() {\n          var participant = _step3.value;\n          var hoverParts = messages.filter(function (msg) {\n            return msg.owner === participant;\n          });\n          if (hoverParts.length > 0) {\n            disposables.add(participant.renderHoverParts(context, hoverParts));\n          }\n        };\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      var isBeforeContent = messages.some(function (m) {\n        return m.isBeforeContent;\n      });\n      if (statusBar.hasContent) {\n        fragment.appendChild(statusBar.hoverElement);\n      }\n      if (fragment.hasChildNodes()) {\n        if (highlightRange) {\n          var highlightDecoration = this._editor.createDecorationsCollection();\n          highlightDecoration.set([{\n            range: highlightRange,\n            options: ContentHoverController_1._DECORATION_OPTIONS\n          }]);\n          disposables.add(toDisposable(function () {\n            highlightDecoration.clear();\n          }));\n        }\n        this._widget.showAt(fragment, new ContentHoverVisibleData(anchor.initialMousePosX, anchor.initialMousePosY, colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(60 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, disposables));\n      } else {\n        disposables.dispose();\n      }\n    }\n  }, {\n    key: \"showsOrWillShow\",\n    value:\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    function showsOrWillShow(mouseEvent) {\n      if (this._widget.isResizing) {\n        return true;\n      }\n      var anchorCandidates = [];\n      var _iterator4 = _createForOfIteratorHelper(this._participants),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var participant = _step4.value;\n          if (participant.suggestHoverAnchor) {\n            var anchor = participant.suggestHoverAnchor(mouseEvent);\n            if (anchor) {\n              anchorCandidates.push(anchor);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      var target = mouseEvent.target;\n      if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n        anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n      }\n      if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n        var epsilon = this._editor.getOption(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n        if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n          // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n          anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n      }\n      if (anchorCandidates.length === 0) {\n        return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n      }\n      anchorCandidates.sort(function (a, b) {\n        return b.priority - a.priority;\n      });\n      return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n  }, {\n    key: \"startShowingAtRange\",\n    value: function startShowingAtRange(range, mode, source, focus) {\n      this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n  }, {\n    key: \"containsNode\",\n    value: function containsNode(node) {\n      return node ? this._widget.getDomNode().contains(node) : false;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._widget.focus();\n    }\n  }, {\n    key: \"scrollUp\",\n    value: function scrollUp() {\n      this._widget.scrollUp();\n    }\n  }, {\n    key: \"scrollDown\",\n    value: function scrollDown() {\n      this._widget.scrollDown();\n    }\n  }, {\n    key: \"scrollLeft\",\n    value: function scrollLeft() {\n      this._widget.scrollLeft();\n    }\n  }, {\n    key: \"scrollRight\",\n    value: function scrollRight() {\n      this._widget.scrollRight();\n    }\n  }, {\n    key: \"pageUp\",\n    value: function pageUp() {\n      this._widget.pageUp();\n    }\n  }, {\n    key: \"pageDown\",\n    value: function pageDown() {\n      this._widget.pageDown();\n    }\n  }, {\n    key: \"goToTop\",\n    value: function goToTop() {\n      this._widget.goToTop();\n    }\n  }, {\n    key: \"goToBottom\",\n    value: function goToBottom() {\n      this._widget.goToBottom();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._computer.anchor = null;\n      this._hoverOperation.cancel();\n      this._setCurrentResult(null);\n    }\n  }, {\n    key: \"isColorPickerVisible\",\n    get: function get() {\n      return this._widget.isColorPickerVisible;\n    }\n  }, {\n    key: \"isVisibleFromKeyboard\",\n    get: function get() {\n      return this._widget.isVisibleFromKeyboard;\n    }\n  }, {\n    key: \"isVisible\",\n    get: function get() {\n      return this._widget.isVisible;\n    }\n  }, {\n    key: \"isFocused\",\n    get: function get() {\n      return this._widget.isFocused;\n    }\n  }, {\n    key: \"isResizing\",\n    get: function get() {\n      return this._widget.isResizing;\n    }\n  }, {\n    key: \"widget\",\n    get: function get() {\n      return this._widget;\n    }\n  }], [{\n    key: \"computeHoverRanges\",\n    value: function computeHoverRanges(editor, anchorRange, messages) {\n      var startColumnBoundary = 1;\n      if (editor.hasModel()) {\n        // Ensure the range is on the current view line\n        var viewModel = editor._getViewModel();\n        var coordinatesConverter = viewModel.coordinatesConverter;\n        var anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n        var anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n        startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n      }\n      // The anchor range is always on a single line\n      var anchorLineNumber = anchorRange.startLineNumber;\n      var renderStartColumn = anchorRange.startColumn;\n      var highlightRange = messages[0].range;\n      var forceShowAtRange = null;\n      var _iterator5 = _createForOfIteratorHelper(messages),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var msg = _step5.value;\n          highlightRange = Range.plusRange(highlightRange, msg.range);\n          if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n            // this message has a range that is completely sitting on the line of the anchor\n            renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n          }\n          if (msg.forceShowAtRange) {\n            forceShowAtRange = msg.range;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var showAtPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn);\n      var showAtSecondaryPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn);\n      return {\n        showAtPosition: showAtPosition,\n        showAtSecondaryPosition: showAtSecondaryPosition,\n        highlightRange: highlightRange\n      };\n    }\n  }]);\n}(Disposable);\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n  description: 'content-hover-highlight',\n  className: 'hoverHighlight'\n});\nContentHoverController = ContentHoverController_1 = __decorate([__param(1, IInstantiationService), __param(2, IKeybindingService)], ContentHoverController);\nexport { ContentHoverController };\nvar HoverResult = /*#__PURE__*/function () {\n  function HoverResult(anchor, messages, isComplete) {\n    _classCallCheck(this, HoverResult);\n    this.anchor = anchor;\n    this.messages = messages;\n    this.isComplete = isComplete;\n  }\n  return _createClass(HoverResult, [{\n    key: \"filter\",\n    value: function filter(anchor) {\n      var filteredMessages = this.messages.filter(function (m) {\n        return m.isValidForHoverAnchor(anchor);\n      });\n      if (filteredMessages.length === this.messages.length) {\n        return this;\n      }\n      return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n  }]);\n}();\nvar FilteredHoverResult = /*#__PURE__*/function (_HoverResult) {\n  function FilteredHoverResult(original, anchor, messages, isComplete) {\n    var _this3;\n    _classCallCheck(this, FilteredHoverResult);\n    _this3 = _callSuper(this, FilteredHoverResult, [anchor, messages, isComplete]);\n    _this3.original = original;\n    return _this3;\n  }\n  _inherits(FilteredHoverResult, _HoverResult);\n  return _createClass(FilteredHoverResult, [{\n    key: \"filter\",\n    value: function filter(anchor) {\n      return this.original.filter(anchor);\n    }\n  }]);\n}(HoverResult);\nvar ContentHoverVisibleData = /*#__PURE__*/_createClass(function ContentHoverVisibleData(initialMousePosX, initialMousePosY, colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, disposables) {\n  _classCallCheck(this, ContentHoverVisibleData);\n  this.initialMousePosX = initialMousePosX;\n  this.initialMousePosY = initialMousePosY;\n  this.colorPicker = colorPicker;\n  this.showAtPosition = showAtPosition;\n  this.showAtSecondaryPosition = showAtSecondaryPosition;\n  this.preferAbove = preferAbove;\n  this.stoleFocus = stoleFocus;\n  this.source = source;\n  this.isBeforeContent = isBeforeContent;\n  this.disposables = disposables;\n  this.closestMouseDistance = undefined;\n});\nvar HORIZONTAL_SCROLLING_BY = 30;\nvar SCROLLBAR_WIDTH = 10;\nvar CONTAINER_HEIGHT_PADDING = 6;\nvar ContentHoverWidget = ContentHoverWidget_1 = /*#__PURE__*/function (_ResizableContentWidg) {\n  function ContentHoverWidget(editor, contextKeyService, _configurationService, _accessibilityService, _keybindingService) {\n    var _this4;\n    _classCallCheck(this, ContentHoverWidget);\n    var minimumHeight = editor.getOption(67 /* EditorOption.lineHeight */) + 8;\n    var minimumWidth = 150;\n    var minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n    _this4 = _callSuper(this, ContentHoverWidget, [editor, minimumSize]);\n    _this4._configurationService = _configurationService;\n    _this4._accessibilityService = _accessibilityService;\n    _this4._keybindingService = _keybindingService;\n    _this4._hover = _this4._register(new HoverWidget());\n    _this4._minimumSize = minimumSize;\n    _this4._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n    _this4._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n    dom.append(_this4._resizableNode.domNode, _this4._hover.containerDomNode);\n    _this4._resizableNode.domNode.style.zIndex = '50';\n    _this4._register(_this4._editor.onDidLayoutChange(function () {\n      if (_this4.isVisible) {\n        _this4._updateMaxDimensions();\n      }\n    }));\n    _this4._register(_this4._editor.onDidChangeConfiguration(function (e) {\n      if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n        _this4._updateFont();\n      }\n    }));\n    var focusTracker = _this4._register(dom.trackFocus(_this4._resizableNode.domNode));\n    _this4._register(focusTracker.onDidFocus(function () {\n      _this4._hoverFocusedKey.set(true);\n    }));\n    _this4._register(focusTracker.onDidBlur(function () {\n      _this4._hoverFocusedKey.set(false);\n    }));\n    _this4._setHoverData(undefined);\n    _this4._editor.addContentWidget(_this4);\n    return _this4;\n  }\n  _inherits(ContentHoverWidget, _ResizableContentWidg);\n  return _createClass(ContentHoverWidget, [{\n    key: \"isColorPickerVisible\",\n    get: function get() {\n      var _a;\n      return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n  }, {\n    key: \"isVisibleFromKeyboard\",\n    get: function get() {\n      var _a;\n      return ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */;\n    }\n  }, {\n    key: \"isVisible\",\n    get: function get() {\n      var _a;\n      return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n  }, {\n    key: \"isFocused\",\n    get: function get() {\n      var _a;\n      return (_a = this._hoverFocusedKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _a;\n      _get(_getPrototypeOf(ContentHoverWidget.prototype), \"dispose\", this).call(this);\n      (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n      this._editor.removeContentWidget(this);\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return ContentHoverWidget_1.ID;\n    }\n  }, {\n    key: \"_setContentsDomNodeDimensions\",\n    value: function _setContentsDomNodeDimensions(width, height) {\n      var contentsDomNode = this._hover.contentsDomNode;\n      return ContentHoverWidget_1._applyDimensions(contentsDomNode, width, height);\n    }\n  }, {\n    key: \"_setContainerDomNodeDimensions\",\n    value: function _setContainerDomNodeDimensions(width, height) {\n      var containerDomNode = this._hover.containerDomNode;\n      return ContentHoverWidget_1._applyDimensions(containerDomNode, width, height);\n    }\n  }, {\n    key: \"_setHoverWidgetDimensions\",\n    value: function _setHoverWidgetDimensions(width, height) {\n      this._setContentsDomNodeDimensions(width, height);\n      this._setContainerDomNodeDimensions(width, height);\n      this._layoutContentWidget();\n    }\n  }, {\n    key: \"_setHoverWidgetMaxDimensions\",\n    value: function _setHoverWidgetMaxDimensions(width, height) {\n      ContentHoverWidget_1._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n      ContentHoverWidget_1._applyMaxDimensions(this._hover.containerDomNode, width, height);\n      this._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? \"\".concat(width, \"px\") : width);\n      this._layoutContentWidget();\n    }\n  }, {\n    key: \"_hasHorizontalScrollbar\",\n    value: function _hasHorizontalScrollbar() {\n      var scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n      var hasHorizontalScrollbar = scrollDimensions.scrollWidth > scrollDimensions.width;\n      return hasHorizontalScrollbar;\n    }\n  }, {\n    key: \"_adjustContentsBottomPadding\",\n    value: function _adjustContentsBottomPadding() {\n      var contentsDomNode = this._hover.contentsDomNode;\n      var extraBottomPadding = \"\".concat(this._hover.scrollbar.options.horizontalScrollbarSize, \"px\");\n      if (contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n        contentsDomNode.style.paddingBottom = extraBottomPadding;\n      }\n    }\n  }, {\n    key: \"_setAdjustedHoverWidgetDimensions\",\n    value: function _setAdjustedHoverWidgetDimensions(size) {\n      this._setHoverWidgetMaxDimensions('none', 'none');\n      var width = size.width;\n      var height = size.height;\n      this._setHoverWidgetDimensions(width, height);\n      // measure if widget has horizontal scrollbar after setting the dimensions\n      if (this._hasHorizontalScrollbar()) {\n        this._adjustContentsBottomPadding();\n        this._setContentsDomNodeDimensions(width, height - SCROLLBAR_WIDTH);\n      }\n    }\n  }, {\n    key: \"_updateResizableNodeMaxDimensions\",\n    value: function _updateResizableNodeMaxDimensions() {\n      var _a, _b;\n      var maxRenderingWidth = (_a = this._findMaximumRenderingWidth()) !== null && _a !== void 0 ? _a : Infinity;\n      var maxRenderingHeight = (_b = this._findMaximumRenderingHeight()) !== null && _b !== void 0 ? _b : Infinity;\n      this._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n      this._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(size) {\n      var _a, _b;\n      ContentHoverWidget_1._lastDimensions = new dom.Dimension(size.width, size.height);\n      this._setAdjustedHoverWidgetDimensions(size);\n      this._resizableNode.layout(size.height, size.width);\n      this._updateResizableNodeMaxDimensions();\n      this._hover.scrollbar.scanDomNode();\n      this._editor.layoutContentWidget(this);\n      (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    }\n  }, {\n    key: \"_findAvailableSpaceVertically\",\n    value: function _findAvailableSpaceVertically() {\n      var _a;\n      var position = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition;\n      if (!position) {\n        return;\n      }\n      return this._positionPreference === 1 /* ContentWidgetPositionPreference.ABOVE */ ? this._availableVerticalSpaceAbove(position) : this._availableVerticalSpaceBelow(position);\n    }\n  }, {\n    key: \"_findMaximumRenderingHeight\",\n    value: function _findMaximumRenderingHeight() {\n      var availableSpace = this._findAvailableSpaceVertically();\n      if (!availableSpace) {\n        return;\n      }\n      // Padding needed in order to stop the resizing down to a smaller height\n      var maximumHeight = CONTAINER_HEIGHT_PADDING;\n      Array.from(this._hover.contentsDomNode.children).forEach(function (hoverPart) {\n        maximumHeight += hoverPart.clientHeight;\n      });\n      if (this._hasHorizontalScrollbar()) {\n        maximumHeight += SCROLLBAR_WIDTH;\n      }\n      return Math.min(availableSpace, maximumHeight);\n    }\n  }, {\n    key: \"_isHoverTextOverflowing\",\n    value: function _isHoverTextOverflowing() {\n      // To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n      this._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n      this._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n      var overflowing = Array.from(this._hover.contentsDomNode.children).some(function (hoverElement) {\n        return hoverElement.scrollWidth > hoverElement.clientWidth;\n      });\n      this._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n      this._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n      return overflowing;\n    }\n  }, {\n    key: \"_findMaximumRenderingWidth\",\n    value: function _findMaximumRenderingWidth() {\n      if (!this._editor || !this._editor.hasModel()) {\n        return;\n      }\n      var overflowing = this._isHoverTextOverflowing();\n      var initialWidth = typeof this._contentWidth === 'undefined' ? 0 : this._contentWidth - 2 // - 2 for the borders\n      ;\n      if (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n        var bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n        var horizontalPadding = 14;\n        return bodyBoxWidth - horizontalPadding;\n      } else {\n        return this._hover.containerDomNode.clientWidth + 2;\n      }\n    }\n  }, {\n    key: \"isMouseGettingCloser\",\n    value: function isMouseGettingCloser(posx, posy) {\n      if (!this._visibleData) {\n        return false;\n      }\n      if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n        this._visibleData.initialMousePosX = posx;\n        this._visibleData.initialMousePosY = posy;\n        return false;\n      }\n      var widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n      if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n        this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n      }\n      var distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n      if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n        // The mouse is getting farther away\n        return false;\n      }\n      this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n      return true;\n    }\n  }, {\n    key: \"_setHoverData\",\n    value: function _setHoverData(hoverData) {\n      var _a;\n      (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n      this._visibleData = hoverData;\n      this._hoverVisibleKey.set(!!hoverData);\n      this._hover.containerDomNode.classList.toggle('hidden', !hoverData);\n    }\n  }, {\n    key: \"_updateFont\",\n    value: function _updateFont() {\n      var _this5 = this;\n      var _this$_editor$getOpti = this._editor.getOption(50 /* EditorOption.fontInfo */),\n        fontSize = _this$_editor$getOpti.fontSize,\n        lineHeight = _this$_editor$getOpti.lineHeight;\n      var contentsDomNode = this._hover.contentsDomNode;\n      contentsDomNode.style.fontSize = \"\".concat(fontSize, \"px\");\n      contentsDomNode.style.lineHeight = \"\".concat(lineHeight / fontSize);\n      var codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n      codeClasses.forEach(function (node) {\n        return _this5._editor.applyFontInfo(node);\n      });\n    }\n  }, {\n    key: \"_updateContent\",\n    value: function _updateContent(node) {\n      var contentsDomNode = this._hover.contentsDomNode;\n      contentsDomNode.style.paddingBottom = '';\n      contentsDomNode.textContent = '';\n      contentsDomNode.appendChild(node);\n    }\n  }, {\n    key: \"_layoutContentWidget\",\n    value: function _layoutContentWidget() {\n      this._editor.layoutContentWidget(this);\n      this._hover.onContentsChanged();\n    }\n  }, {\n    key: \"_updateMaxDimensions\",\n    value: function _updateMaxDimensions() {\n      var height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget_1._lastDimensions.height);\n      var width = Math.max(this._editor.getLayoutInfo().width * 0.66, 500, ContentHoverWidget_1._lastDimensions.width);\n      this._setHoverWidgetMaxDimensions(width, height);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render(node, hoverData) {\n      this._setHoverData(hoverData);\n      this._updateFont();\n      this._updateContent(node);\n      this._updateMaxDimensions();\n      this.onContentsChanged();\n      // Simply force a synchronous render on the editor\n      // such that the widget does not really render with left = '0px'\n      this._editor.render();\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      var _a;\n      if (!this._visibleData) {\n        return null;\n      }\n      return {\n        position: this._visibleData.showAtPosition,\n        secondaryPosition: this._visibleData.showAtSecondaryPosition,\n        positionAffinity: this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined,\n        preference: [(_a = this._positionPreference) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */]\n      };\n    }\n  }, {\n    key: \"showAt\",\n    value: function showAt(node, hoverData) {\n      var _a, _b, _c, _d;\n      if (!this._editor || !this._editor.hasModel()) {\n        return;\n      }\n      this._render(node, hoverData);\n      var widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n      var widgetPosition = hoverData.showAtPosition;\n      this._positionPreference = (_a = this._findPositionPreference(widgetHeight, widgetPosition)) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */;\n      // See https://github.com/microsoft/vscode/issues/140339\n      // TODO: Doing a second layout of the hover after force rendering the editor\n      this.onContentsChanged();\n      if (hoverData.stoleFocus) {\n        this._hover.containerDomNode.focus();\n      }\n      (_b = hoverData.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n      // The aria label overrides the label, so if we add to it, add the contents of the hover\n      var hoverFocused = this._hover.containerDomNode.ownerDocument.activeElement === this._hover.containerDomNode;\n      var accessibleViewHint = hoverFocused && getHoverAccessibleViewHint(this._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(), (_d = (_c = this._keybindingService.lookupKeybinding('editor.action.accessibleView')) === null || _c === void 0 ? void 0 : _c.getAriaLabel()) !== null && _d !== void 0 ? _d : '');\n      if (accessibleViewHint) {\n        this._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this._visibleData) {\n        return;\n      }\n      var stoleFocus = this._visibleData.stoleFocus || this._hoverFocusedKey.get();\n      this._setHoverData(undefined);\n      this._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n      this._resizableNode.clearSashHoverState();\n      this._hoverFocusedKey.set(false);\n      this._editor.layoutContentWidget(this);\n      if (stoleFocus) {\n        this._editor.focus();\n      }\n    }\n  }, {\n    key: \"_removeConstraintsRenderNormally\",\n    value: function _removeConstraintsRenderNormally() {\n      // Added because otherwise the initial size of the hover content is smaller than should be\n      var layoutInfo = this._editor.getLayoutInfo();\n      this._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n      this._setHoverWidgetDimensions('auto', 'auto');\n    }\n  }, {\n    key: \"_adjustHoverHeightForScrollbar\",\n    value: function _adjustHoverHeightForScrollbar(height) {\n      var _a;\n      var containerDomNode = this._hover.containerDomNode;\n      var contentsDomNode = this._hover.contentsDomNode;\n      var maxRenderingHeight = (_a = this._findMaximumRenderingHeight()) !== null && _a !== void 0 ? _a : Infinity;\n      this._setContainerDomNodeDimensions(dom.getTotalWidth(containerDomNode), Math.min(maxRenderingHeight, height));\n      this._setContentsDomNodeDimensions(dom.getTotalWidth(contentsDomNode), Math.min(maxRenderingHeight, height - SCROLLBAR_WIDTH));\n    }\n  }, {\n    key: \"setMinimumDimensions\",\n    value: function setMinimumDimensions(dimensions) {\n      // We combine the new minimum dimensions with the previous ones\n      this._minimumSize = new dom.Dimension(Math.max(this._minimumSize.width, dimensions.width), Math.max(this._minimumSize.height, dimensions.height));\n      this._updateMinimumWidth();\n    }\n  }, {\n    key: \"_updateMinimumWidth\",\n    value: function _updateMinimumWidth() {\n      var width = typeof this._contentWidth === 'undefined' ? this._minimumSize.width : Math.min(this._contentWidth, this._minimumSize.width);\n      // We want to avoid that the hover is artificially large, so we use the content width as minimum width\n      this._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n    }\n  }, {\n    key: \"onContentsChanged\",\n    value: function onContentsChanged() {\n      var _a;\n      this._removeConstraintsRenderNormally();\n      var containerDomNode = this._hover.containerDomNode;\n      var height = dom.getTotalHeight(containerDomNode);\n      var width = dom.getTotalWidth(containerDomNode);\n      this._resizableNode.layout(height, width);\n      this._setHoverWidgetDimensions(width, height);\n      height = dom.getTotalHeight(containerDomNode);\n      width = dom.getTotalWidth(containerDomNode);\n      this._contentWidth = width;\n      this._updateMinimumWidth();\n      this._resizableNode.layout(height, width);\n      if (this._hasHorizontalScrollbar()) {\n        this._adjustContentsBottomPadding();\n        this._adjustHoverHeightForScrollbar(height);\n      }\n      if ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) {\n        var widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n        this._positionPreference = this._findPositionPreference(widgetHeight, this._visibleData.showAtPosition);\n      }\n      this._layoutContentWidget();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._hover.containerDomNode.focus();\n    }\n  }, {\n    key: \"scrollUp\",\n    value: function scrollUp() {\n      var scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n      var fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n      this._hover.scrollbar.setScrollPosition({\n        scrollTop: scrollTop - fontInfo.lineHeight\n      });\n    }\n  }, {\n    key: \"scrollDown\",\n    value: function scrollDown() {\n      var scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n      var fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n      this._hover.scrollbar.setScrollPosition({\n        scrollTop: scrollTop + fontInfo.lineHeight\n      });\n    }\n  }, {\n    key: \"scrollLeft\",\n    value: function scrollLeft() {\n      var scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n      this._hover.scrollbar.setScrollPosition({\n        scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY\n      });\n    }\n  }, {\n    key: \"scrollRight\",\n    value: function scrollRight() {\n      var scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n      this._hover.scrollbar.setScrollPosition({\n        scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY\n      });\n    }\n  }, {\n    key: \"pageUp\",\n    value: function pageUp() {\n      var scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n      var scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n      this._hover.scrollbar.setScrollPosition({\n        scrollTop: scrollTop - scrollHeight\n      });\n    }\n  }, {\n    key: \"pageDown\",\n    value: function pageDown() {\n      var scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n      var scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n      this._hover.scrollbar.setScrollPosition({\n        scrollTop: scrollTop + scrollHeight\n      });\n    }\n  }, {\n    key: \"goToTop\",\n    value: function goToTop() {\n      this._hover.scrollbar.setScrollPosition({\n        scrollTop: 0\n      });\n    }\n  }, {\n    key: \"goToBottom\",\n    value: function goToBottom() {\n      this._hover.scrollbar.setScrollPosition({\n        scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight\n      });\n    }\n  }], [{\n    key: \"_applyDimensions\",\n    value: function _applyDimensions(container, width, height) {\n      var transformedWidth = typeof width === 'number' ? \"\".concat(width, \"px\") : width;\n      var transformedHeight = typeof height === 'number' ? \"\".concat(height, \"px\") : height;\n      container.style.width = transformedWidth;\n      container.style.height = transformedHeight;\n    }\n  }, {\n    key: \"_applyMaxDimensions\",\n    value: function _applyMaxDimensions(container, width, height) {\n      var transformedWidth = typeof width === 'number' ? \"\".concat(width, \"px\") : width;\n      var transformedHeight = typeof height === 'number' ? \"\".concat(height, \"px\") : height;\n      container.style.maxWidth = transformedWidth;\n      container.style.maxHeight = transformedHeight;\n    }\n  }]);\n}(ResizableContentWidget);\nContentHoverWidget.ID = 'editor.contrib.resizableContentHoverWidget';\nContentHoverWidget._lastDimensions = new dom.Dimension(0, 0);\nContentHoverWidget = ContentHoverWidget_1 = __decorate([__param(1, IContextKeyService), __param(2, IConfigurationService), __param(3, IAccessibilityService), __param(4, IKeybindingService)], ContentHoverWidget);\nexport { ContentHoverWidget };\nvar EditorHoverStatusBar = /*#__PURE__*/function (_Disposable2) {\n  function EditorHoverStatusBar(_keybindingService) {\n    var _this6;\n    _classCallCheck(this, EditorHoverStatusBar);\n    _this6 = _callSuper(this, EditorHoverStatusBar);\n    _this6._keybindingService = _keybindingService;\n    _this6._hasContent = false;\n    _this6.hoverElement = $('div.hover-row.status-bar');\n    _this6.actionsElement = dom.append(_this6.hoverElement, $('div.actions'));\n    return _this6;\n  }\n  _inherits(EditorHoverStatusBar, _Disposable2);\n  return _createClass(EditorHoverStatusBar, [{\n    key: \"hasContent\",\n    get: function get() {\n      return this._hasContent;\n    }\n  }, {\n    key: \"addAction\",\n    value: function addAction(actionOptions) {\n      var keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n      var keybindingLabel = keybinding ? keybinding.getLabel() : null;\n      this._hasContent = true;\n      return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n  }, {\n    key: \"append\",\n    value: function append(element) {\n      var result = dom.append(this.actionsElement, element);\n      this._hasContent = true;\n      return result;\n    }\n  }]);\n}(Disposable);\nEditorHoverStatusBar = __decorate([__param(0, IKeybindingService)], EditorHoverStatusBar);\nexport { EditorHoverStatusBar };\nvar ContentHoverComputer = /*#__PURE__*/function () {\n  function ContentHoverComputer(_editor, _participants) {\n    _classCallCheck(this, ContentHoverComputer);\n    this._editor = _editor;\n    this._participants = _participants;\n    this._anchor = null;\n    this._shouldFocus = false;\n    this._source = 0 /* HoverStartSource.Mouse */;\n    this._insistOnKeepingHoverVisible = false;\n  }\n  return _createClass(ContentHoverComputer, [{\n    key: \"anchor\",\n    get: function get() {\n      return this._anchor;\n    },\n    set: function set(value) {\n      this._anchor = value;\n    }\n  }, {\n    key: \"shouldFocus\",\n    get: function get() {\n      return this._shouldFocus;\n    },\n    set: function set(value) {\n      this._shouldFocus = value;\n    }\n  }, {\n    key: \"source\",\n    get: function get() {\n      return this._source;\n    },\n    set: function set(value) {\n      this._source = value;\n    }\n  }, {\n    key: \"insistOnKeepingHoverVisible\",\n    get: function get() {\n      return this._insistOnKeepingHoverVisible;\n    },\n    set: function set(value) {\n      this._insistOnKeepingHoverVisible = value;\n    }\n  }, {\n    key: \"computeAsync\",\n    value: function computeAsync(token) {\n      var anchor = this._anchor;\n      if (!this._editor.hasModel() || !anchor) {\n        return AsyncIterableObject.EMPTY;\n      }\n      var lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n      return AsyncIterableObject.merge(this._participants.map(function (participant) {\n        if (!participant.computeAsync) {\n          return AsyncIterableObject.EMPTY;\n        }\n        return participant.computeAsync(anchor, lineDecorations, token);\n      }));\n    }\n  }, {\n    key: \"computeSync\",\n    value: function computeSync() {\n      if (!this._editor.hasModel() || !this._anchor) {\n        return [];\n      }\n      var lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n      var result = [];\n      var _iterator6 = _createForOfIteratorHelper(this._participants),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var participant = _step6.value;\n          result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return coalesce(result);\n    }\n  }], [{\n    key: \"_getLineDecorations\",\n    value: function _getLineDecorations(editor, anchor) {\n      if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n        return [];\n      }\n      var model = editor.getModel();\n      var lineNumber = anchor.range.startLineNumber;\n      if (lineNumber > model.getLineCount()) {\n        // invalid line\n        return [];\n      }\n      var maxColumn = model.getLineMaxColumn(lineNumber);\n      return editor.getLineDecorations(lineNumber).filter(function (d) {\n        if (d.options.isWholeLine) {\n          return true;\n        }\n        var startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;\n        var endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;\n        if (d.options.showIfCollapsed) {\n          // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n          if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n            return false;\n          }\n        } else {\n          if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n  }]);\n}();\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n  var x = left + width / 2; // x center of rectangle\n  var y = top + height / 2; // y center of rectangle\n  var dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n  var dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n  return Math.sqrt(dx * dx + dy * dy);\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","ContentHoverController_1","ContentHoverWidget_1","dom","HoverAction","HoverWidget","getHoverAccessibleViewHint","coalesce","Disposable","DisposableStore","toDisposable","Position","Range","ModelDecorationOptions","TokenizationRegistry","HoverOperation","HoverParticipantRegistry","HoverRangeAnchor","IInstantiationService","IKeybindingService","AsyncIterableObject","EditorContextKeys","IContextKeyService","ResizableContentWidget","IConfigurationService","IAccessibilityService","$","ContentHoverController","_Disposable","_editor","_instantiationService","_keybindingService","_this","_classCallCheck","_callSuper","_currentResult","_widget","_register","createInstance","ContentHoverWidget","_participants","_iterator","_createForOfIteratorHelper","getAll","_step","s","n","done","participant","value","push","err","e","f","sort","p1","p2","hoverOrdinal","_computer","ContentHoverComputer","_hoverOperation","onResult","result","anchor","messages","hasLoadingMessage","_addLoadingMessage","_withResult","HoverResult","isComplete","addStandardDisposableListener","getDomNode","equals","hide","onDidChange","position","_setCurrentResult","_inherits","_createClass","_startShowingOrUpdateHover","mode","source","focus","mouseEvent","_startHoverOperationIfNecessary","isHoverSticky","getOption","sticky","isGettingCloser","isMouseGettingCloser","event","posx","posy","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","cancel","shouldFocus","start","hoverResult","_renderMessages","_iterator2","_step2","createLoadingMessage","loadingMessage","slice","concat","_this2","_ContentHoverControll","computeHoverRanges","range","showAtPosition","showAtSecondaryPosition","highlightRange","disposables","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","setMinimumDimensions","dimensions","_iterator3","_step3","_loop","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","m","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","clear","showAt","ContentHoverVisibleData","initialMousePosX","initialMousePosY","above","dispose","showsOrWillShow","isResizing","anchorCandidates","_iterator4","_step4","suggestHoverAnchor","type","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","a","b","priority","startShowingAtRange","undefined","containsNode","node","contains","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","get","isColorPickerVisible","isVisibleFromKeyboard","isVisible","isFocused","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","_iterator5","_step5","plusRange","endLineNumber","Math","max","min","getStartPosition","register","description","className","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","_HoverResult","original","_this3","preferAbove","stoleFocus","closestMouseDistance","HORIZONTAL_SCROLLING_BY","SCROLLBAR_WIDTH","CONTAINER_HEIGHT_PADDING","_ResizableContentWidg","contextKeyService","_configurationService","_accessibilityService","_this4","minimumHeight","minimumWidth","minimumSize","Dimension","_hover","_minimumSize","_hoverVisibleKey","hoverVisible","bindTo","_hoverFocusedKey","hoverFocused","append","_resizableNode","domNode","containerDomNode","style","zIndex","onDidLayoutChange","_updateMaxDimensions","onDidChangeConfiguration","hasChanged","_updateFont","focusTracker","trackFocus","onDidFocus","onDidBlur","_setHoverData","addContentWidget","_a","Boolean","_visibleData","_get","_getPrototypeOf","prototype","call","removeContentWidget","getId","ID","_setContentsDomNodeDimensions","width","height","contentsDomNode","_applyDimensions","_setContainerDomNodeDimensions","_setHoverWidgetDimensions","_layoutContentWidget","_setHoverWidgetMaxDimensions","_applyMaxDimensions","setProperty","_hasHorizontalScrollbar","scrollDimensions","scrollbar","getScrollDimensions","hasHorizontalScrollbar","scrollWidth","_adjustContentsBottomPadding","extraBottomPadding","horizontalScrollbarSize","paddingBottom","_setAdjustedHoverWidgetDimensions","size","_updateResizableNodeMaxDimensions","_b","maxRenderingWidth","_findMaximumRenderingWidth","Infinity","maxRenderingHeight","_findMaximumRenderingHeight","maxSize","_resize","_lastDimensions","layout","scanDomNode","layoutContentWidget","_findAvailableSpaceVertically","_positionPreference","_availableVerticalSpaceAbove","_availableVerticalSpaceBelow","availableSpace","maximumHeight","Array","from","children","forEach","hoverPart","clientHeight","_isHoverTextOverflowing","overflowing","clientWidth","removeProperty","initialWidth","_contentWidth","bodyBoxWidth","getClientArea","ownerDocument","body","horizontalPadding","widgetRect","getDomNodePagePosition","computeDistanceFromPointToRectangle","left","top","distance","hoverData","classList","toggle","_this5","_this$_editor$getOpti","fontSize","lineHeight","codeClasses","getElementsByClassName","applyFontInfo","_updateContent","textContent","getLayoutInfo","_render","render","getPosition","secondaryPosition","positionAffinity","preference","_c","_d","widgetHeight","getTotalHeight","widgetPosition","_findPositionPreference","activeElement","accessibleViewHint","getValue","isScreenReaderOptimized","lookupKeybinding","getAriaLabel","ariaLabel","clearSashHoverState","_removeConstraintsRenderNormally","layoutInfo","_adjustHoverHeightForScrollbar","getTotalWidth","_updateMinimumWidth","minSize","scrollTop","getScrollPosition","fontInfo","setScrollPosition","scrollHeight","container","transformedWidth","transformedHeight","maxWidth","maxHeight","_Disposable2","_this6","_hasContent","actionsElement","addAction","actionOptions","keybinding","commandId","keybindingLabel","getLabel","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","computeAsync","token","EMPTY","lineDecorations","_getLineDecorations","merge","map","computeSync","_iterator6","_step6","supportsMarkerHover","model","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","pointX","pointY","x","y","dx","abs","dy","sqrt"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ContentHoverController_1, ContentHoverWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget, getHoverAccessibleViewHint } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nconst $ = dom.$;\nlet ContentHoverController = ContentHoverController_1 = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._currentResult = null;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const isHoverSticky = this._editor.getOption(60 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (isHoverSticky\n            && mouseEvent\n            && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController_1.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            setMinimumDimensions: (dimensions) => this._widget.setMinimumDimensions(dimensions),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController_1._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(anchor.initialMousePosX, anchor.initialMousePosY, colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(60 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        const showAtPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn);\n        const showAtSecondaryPosition = forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn);\n        return {\n            showAtPosition,\n            showAtSecondaryPosition,\n            highlightRange\n        };\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    showsOrWillShow(mouseEvent) {\n        if (this._widget.isResizing) {\n            return true;\n        }\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines\n                && typeof target.detail.horizontalDistanceToText === 'number'\n                && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    containsNode(node) {\n        return (node ? this._widget.getDomNode().contains(node) : false);\n    }\n    focus() {\n        this._widget.focus();\n    }\n    scrollUp() {\n        this._widget.scrollUp();\n    }\n    scrollDown() {\n        this._widget.scrollDown();\n    }\n    scrollLeft() {\n        this._widget.scrollLeft();\n    }\n    scrollRight() {\n        this._widget.scrollRight();\n    }\n    pageUp() {\n        this._widget.pageUp();\n    }\n    pageDown() {\n        this._widget.pageDown();\n    }\n    goToTop() {\n        this._widget.goToTop();\n    }\n    goToBottom() {\n        this._widget.goToBottom();\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    get isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    get isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    get isVisible() {\n        return this._widget.isVisible;\n    }\n    get isFocused() {\n        return this._widget.isFocused;\n    }\n    get isResizing() {\n        return this._widget.isResizing;\n    }\n    get widget() {\n        return this._widget;\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = ContentHoverController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(initialMousePosX, initialMousePosY, colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, disposables) {\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nconst HORIZONTAL_SCROLLING_BY = 30;\nconst SCROLLBAR_WIDTH = 10;\nconst CONTAINER_HEIGHT_PADDING = 6;\nlet ContentHoverWidget = ContentHoverWidget_1 = class ContentHoverWidget extends ResizableContentWidget {\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    get isVisible() {\n        var _a;\n        return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    get isFocused() {\n        var _a;\n        return (_a = this._hoverFocusedKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(editor, contextKeyService, _configurationService, _accessibilityService, _keybindingService) {\n        const minimumHeight = editor.getOption(67 /* EditorOption.lineHeight */) + 8;\n        const minimumWidth = 150;\n        const minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n        super(editor, minimumSize);\n        this._configurationService = _configurationService;\n        this._accessibilityService = _accessibilityService;\n        this._keybindingService = _keybindingService;\n        this._hover = this._register(new HoverWidget());\n        this._minimumSize = minimumSize;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n        this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n        dom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n        this._resizableNode.domNode.style.zIndex = '50';\n        this._register(this._editor.onDidLayoutChange(() => {\n            if (this.isVisible) {\n                this._updateMaxDimensions();\n            }\n        }));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        const focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n        this._register(focusTracker.onDidFocus(() => {\n            this._hoverFocusedKey.set(true);\n        }));\n        this._register(focusTracker.onDidBlur(() => {\n            this._hoverFocusedKey.set(false);\n        }));\n        this._setHoverData(undefined);\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return ContentHoverWidget_1.ID;\n    }\n    static _applyDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.width = transformedWidth;\n        container.style.height = transformedHeight;\n    }\n    _setContentsDomNodeDimensions(width, height) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        return ContentHoverWidget_1._applyDimensions(contentsDomNode, width, height);\n    }\n    _setContainerDomNodeDimensions(width, height) {\n        const containerDomNode = this._hover.containerDomNode;\n        return ContentHoverWidget_1._applyDimensions(containerDomNode, width, height);\n    }\n    _setHoverWidgetDimensions(width, height) {\n        this._setContentsDomNodeDimensions(width, height);\n        this._setContainerDomNodeDimensions(width, height);\n        this._layoutContentWidget();\n    }\n    static _applyMaxDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.maxWidth = transformedWidth;\n        container.style.maxHeight = transformedHeight;\n    }\n    _setHoverWidgetMaxDimensions(width, height) {\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.containerDomNode, width, height);\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n        this._layoutContentWidget();\n    }\n    _hasHorizontalScrollbar() {\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = scrollDimensions.scrollWidth > scrollDimensions.width;\n        return hasHorizontalScrollbar;\n    }\n    _adjustContentsBottomPadding() {\n        const contentsDomNode = this._hover.contentsDomNode;\n        const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n        if (contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n            contentsDomNode.style.paddingBottom = extraBottomPadding;\n        }\n    }\n    _setAdjustedHoverWidgetDimensions(size) {\n        this._setHoverWidgetMaxDimensions('none', 'none');\n        const width = size.width;\n        const height = size.height;\n        this._setHoverWidgetDimensions(width, height);\n        // measure if widget has horizontal scrollbar after setting the dimensions\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._setContentsDomNodeDimensions(width, height - SCROLLBAR_WIDTH);\n        }\n    }\n    _updateResizableNodeMaxDimensions() {\n        var _a, _b;\n        const maxRenderingWidth = (_a = this._findMaximumRenderingWidth()) !== null && _a !== void 0 ? _a : Infinity;\n        const maxRenderingHeight = (_b = this._findMaximumRenderingHeight()) !== null && _b !== void 0 ? _b : Infinity;\n        this._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n        this._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n    }\n    _resize(size) {\n        var _a, _b;\n        ContentHoverWidget_1._lastDimensions = new dom.Dimension(size.width, size.height);\n        this._setAdjustedHoverWidgetDimensions(size);\n        this._resizableNode.layout(size.height, size.width);\n        this._updateResizableNodeMaxDimensions();\n        this._hover.scrollbar.scanDomNode();\n        this._editor.layoutContentWidget(this);\n        (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    }\n    _findAvailableSpaceVertically() {\n        var _a;\n        const position = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition;\n        if (!position) {\n            return;\n        }\n        return this._positionPreference === 1 /* ContentWidgetPositionPreference.ABOVE */ ?\n            this._availableVerticalSpaceAbove(position)\n            : this._availableVerticalSpaceBelow(position);\n    }\n    _findMaximumRenderingHeight() {\n        const availableSpace = this._findAvailableSpaceVertically();\n        if (!availableSpace) {\n            return;\n        }\n        // Padding needed in order to stop the resizing down to a smaller height\n        let maximumHeight = CONTAINER_HEIGHT_PADDING;\n        Array.from(this._hover.contentsDomNode.children).forEach((hoverPart) => {\n            maximumHeight += hoverPart.clientHeight;\n        });\n        if (this._hasHorizontalScrollbar()) {\n            maximumHeight += SCROLLBAR_WIDTH;\n        }\n        return Math.min(availableSpace, maximumHeight);\n    }\n    _isHoverTextOverflowing() {\n        // To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n        const overflowing = Array.from(this._hover.contentsDomNode.children).some((hoverElement) => {\n            return hoverElement.scrollWidth > hoverElement.clientWidth;\n        });\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n        return overflowing;\n    }\n    _findMaximumRenderingWidth() {\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        const overflowing = this._isHoverTextOverflowing();\n        const initialWidth = (typeof this._contentWidth === 'undefined'\n            ? 0\n            : this._contentWidth - 2 // - 2 for the borders\n        );\n        if (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n            const bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n            const horizontalPadding = 14;\n            return bodyBoxWidth - horizontalPadding;\n        }\n        else {\n            return this._hover.containerDomNode.clientWidth + 2;\n        }\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined'\n            || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setHoverData(hoverData) {\n        var _a;\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._visibleData = hoverData;\n        this._hoverVisibleKey.set(!!hoverData);\n        this._hover.containerDomNode.classList.toggle('hidden', !hoverData);\n    }\n    _updateFont() {\n        const { fontSize, lineHeight } = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.fontSize = `${fontSize}px`;\n        contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _updateContent(node) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.paddingBottom = '';\n        contentsDomNode.textContent = '';\n        contentsDomNode.appendChild(node);\n    }\n    _layoutContentWidget() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n    }\n    _updateMaxDimensions() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget_1._lastDimensions.height);\n        const width = Math.max(this._editor.getLayoutInfo().width * 0.66, 500, ContentHoverWidget_1._lastDimensions.width);\n        this._setHoverWidgetMaxDimensions(width, height);\n    }\n    _render(node, hoverData) {\n        this._setHoverData(hoverData);\n        this._updateFont();\n        this._updateContent(node);\n        this._updateMaxDimensions();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n    }\n    getPosition() {\n        var _a;\n        if (!this._visibleData) {\n            return null;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            positionAffinity: this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined,\n            preference: [(_a = this._positionPreference) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */]\n        };\n    }\n    showAt(node, hoverData) {\n        var _a, _b, _c, _d;\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        this._render(node, hoverData);\n        const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n        const widgetPosition = hoverData.showAtPosition;\n        this._positionPreference = (_a = this._findPositionPreference(widgetHeight, widgetPosition)) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (hoverData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_b = hoverData.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n        // The aria label overrides the label, so if we add to it, add the contents of the hover\n        const hoverFocused = this._hover.containerDomNode.ownerDocument.activeElement === this._hover.containerDomNode;\n        const accessibleViewHint = hoverFocused && getHoverAccessibleViewHint(this._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(), (_d = (_c = this._keybindingService.lookupKeybinding('editor.action.accessibleView')) === null || _c === void 0 ? void 0 : _c.getAriaLabel()) !== null && _d !== void 0 ? _d : '');\n        if (accessibleViewHint) {\n            this._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n        }\n    }\n    hide() {\n        if (!this._visibleData) {\n            return;\n        }\n        const stoleFocus = this._visibleData.stoleFocus || this._hoverFocusedKey.get();\n        this._setHoverData(undefined);\n        this._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n        this._resizableNode.clearSashHoverState();\n        this._hoverFocusedKey.set(false);\n        this._editor.layoutContentWidget(this);\n        if (stoleFocus) {\n            this._editor.focus();\n        }\n    }\n    _removeConstraintsRenderNormally() {\n        // Added because otherwise the initial size of the hover content is smaller than should be\n        const layoutInfo = this._editor.getLayoutInfo();\n        this._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n        this._setHoverWidgetDimensions('auto', 'auto');\n    }\n    _adjustHoverHeightForScrollbar(height) {\n        var _a;\n        const containerDomNode = this._hover.containerDomNode;\n        const contentsDomNode = this._hover.contentsDomNode;\n        const maxRenderingHeight = (_a = this._findMaximumRenderingHeight()) !== null && _a !== void 0 ? _a : Infinity;\n        this._setContainerDomNodeDimensions(dom.getTotalWidth(containerDomNode), Math.min(maxRenderingHeight, height));\n        this._setContentsDomNodeDimensions(dom.getTotalWidth(contentsDomNode), Math.min(maxRenderingHeight, height - SCROLLBAR_WIDTH));\n    }\n    setMinimumDimensions(dimensions) {\n        // We combine the new minimum dimensions with the previous ones\n        this._minimumSize = new dom.Dimension(Math.max(this._minimumSize.width, dimensions.width), Math.max(this._minimumSize.height, dimensions.height));\n        this._updateMinimumWidth();\n    }\n    _updateMinimumWidth() {\n        const width = (typeof this._contentWidth === 'undefined'\n            ? this._minimumSize.width\n            : Math.min(this._contentWidth, this._minimumSize.width));\n        // We want to avoid that the hover is artificially large, so we use the content width as minimum width\n        this._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n    }\n    onContentsChanged() {\n        var _a;\n        this._removeConstraintsRenderNormally();\n        const containerDomNode = this._hover.containerDomNode;\n        let height = dom.getTotalHeight(containerDomNode);\n        let width = dom.getTotalWidth(containerDomNode);\n        this._resizableNode.layout(height, width);\n        this._setHoverWidgetDimensions(width, height);\n        height = dom.getTotalHeight(containerDomNode);\n        width = dom.getTotalWidth(containerDomNode);\n        this._contentWidth = width;\n        this._updateMinimumWidth();\n        this._resizableNode.layout(height, width);\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._adjustHoverHeightForScrollbar(height);\n        }\n        if ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) {\n            const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n            this._positionPreference = this._findPositionPreference(widgetHeight, this._visibleData.showAtPosition);\n        }\n        this._layoutContentWidget();\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    scrollUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n    }\n    scrollDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n    }\n    scrollLeft() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY });\n    }\n    scrollRight() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY });\n    }\n    pageUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n    }\n    pageDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n    }\n    goToTop() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n    }\n    goToBottom() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.resizableContentHoverWidget';\nContentHoverWidget._lastDimensions = new dom.Dimension(0, 0);\nContentHoverWidget = ContentHoverWidget_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IConfigurationService),\n    __param(3, IAccessibilityService),\n    __param(4, IKeybindingService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nexport { EditorHoverStatusBar };\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}