{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nvar RegistryImpl = /*#__PURE__*/function () {\n  function RegistryImpl() {\n    _classCallCheck(this, RegistryImpl);\n    this.data = new Map();\n  }\n  return _createClass(RegistryImpl, [{\n    key: \"add\",\n    value: function add(id, data) {\n      Assert.ok(Types.isString(id));\n      Assert.ok(Types.isObject(data));\n      Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n      this.data.set(id, data);\n    }\n  }, {\n    key: \"as\",\n    value: function as(id) {\n      return this.data.get(id) || null;\n    }\n  }]);\n}();\nexport var Registry = new RegistryImpl();","map":{"version":3,"names":["Assert","Types","RegistryImpl","_classCallCheck","data","Map","_createClass","key","value","add","id","ok","isString","isObject","has","set","as","get","Registry"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAM,MAAM,gCAAgC;AACxD,OAAO,KAAKC,KAAK,MAAM,+BAA+B;AAAC,IACjDC,YAAY;EACd,SAAAA,aAAA,EAAc;IAAAC,eAAA,OAAAD,YAAA;IACV,IAAI,CAACE,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzB;EAAC,OAAAC,YAAA,CAAAJ,YAAA;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAC,IAAIC,EAAE,EAAEN,IAAI,EAAE;MACVJ,MAAM,CAACW,EAAE,CAACV,KAAK,CAACW,QAAQ,CAACF,EAAE,CAAC,CAAC;MAC7BV,MAAM,CAACW,EAAE,CAACV,KAAK,CAACY,QAAQ,CAACT,IAAI,CAAC,CAAC;MAC/BJ,MAAM,CAACW,EAAE,CAAC,CAAC,IAAI,CAACP,IAAI,CAACU,GAAG,CAACJ,EAAE,CAAC,EAAE,4CAA4C,CAAC;MAC3E,IAAI,CAACN,IAAI,CAACW,GAAG,CAACL,EAAE,EAAEN,IAAI,CAAC;IAC3B;EAAC;IAAAG,GAAA;IAAAC,KAAA,EACD,SAAAQ,GAAGN,EAAE,EAAE;MACH,OAAO,IAAI,CAACN,IAAI,CAACa,GAAG,CAACP,EAAE,CAAC,IAAI,IAAI;IACpC;EAAC;AAAA;AAEL,OAAO,IAAMQ,QAAQ,GAAG,IAAIhB,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}