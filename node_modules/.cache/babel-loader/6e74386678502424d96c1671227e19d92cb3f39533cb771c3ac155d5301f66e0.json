{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport var MarginViewLineDecorationsOverlay = /*#__PURE__*/function (_DedupOverlay) {\n  function MarginViewLineDecorationsOverlay(context) {\n    var _this;\n    _classCallCheck(this, MarginViewLineDecorationsOverlay);\n    _this = _callSuper(this, MarginViewLineDecorationsOverlay);\n    _this._context = context;\n    _this._renderResult = null;\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  _inherits(MarginViewLineDecorationsOverlay, _DedupOverlay);\n  return _createClass(MarginViewLineDecorationsOverlay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n      this._renderResult = null;\n      _get(_getPrototypeOf(MarginViewLineDecorationsOverlay.prototype), \"dispose\", this).call(this);\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n    // --- end event handlers\n  }, {\n    key: \"_getDecorations\",\n    value: function _getDecorations(ctx) {\n      var decorations = ctx.getDecorationsInViewport();\n      var r = [];\n      var rLen = 0;\n      for (var i = 0, len = decorations.length; i < len; i++) {\n        var d = decorations[i];\n        var marginClassName = d.options.marginClassName;\n        var zIndex = d.options.zIndex;\n        if (marginClassName) {\n          r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, null, zIndex);\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n      var toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n      var output = [];\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        var decorations = toRender[lineIndex].getDecorations();\n        var lineOutput = '';\n        var _iterator = _createForOfIteratorHelper(decorations),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var decoration = _step.value;\n            lineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        output[lineIndex] = lineOutput;\n      }\n      this._renderResult = output;\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n      return this._renderResult[lineNumber - startLineNumber];\n    }\n  }]);\n}(DedupOverlay);","map":{"version":3,"names":["DecorationToRender","DedupOverlay","MarginViewLineDecorationsOverlay","_DedupOverlay","context","_this","_classCallCheck","_callSuper","_context","_renderResult","addEventHandler","_inherits","_createClass","key","value","dispose","removeEventHandler","_get","_getPrototypeOf","prototype","call","onConfigurationChanged","e","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_getDecorations","ctx","decorations","getDecorationsInViewport","r","rLen","i","len","length","d","marginClassName","options","zIndex","range","startLineNumber","endLineNumber","prepareRender","visibleStartLineNumber","visibleRange","visibleEndLineNumber","toRender","_render","output","lineNumber","lineIndex","getDecorations","lineOutput","_iterator","_createForOfIteratorHelper","_step","s","n","done","decoration","className","err","f","render"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const marginClassName = d.options.marginClassName;\n            const zIndex = d.options.zIndex;\n            if (marginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, null, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}