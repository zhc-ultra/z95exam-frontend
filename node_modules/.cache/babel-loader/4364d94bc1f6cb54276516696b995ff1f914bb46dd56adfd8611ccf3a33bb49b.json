{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport var ReplaceAllCommand = /*#__PURE__*/function () {\n  function ReplaceAllCommand(editorSelection, ranges, replaceStrings) {\n    _classCallCheck(this, ReplaceAllCommand);\n    this._editorSelection = editorSelection;\n    this._ranges = ranges;\n    this._replaceStrings = replaceStrings;\n    this._trackedEditorSelectionId = null;\n  }\n  return _createClass(ReplaceAllCommand, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      if (this._ranges.length > 0) {\n        // Collect all edit operations\n        var ops = [];\n        for (var i = 0; i < this._ranges.length; i++) {\n          ops.push({\n            range: this._ranges[i],\n            text: this._replaceStrings[i]\n          });\n        }\n        // Sort them in ascending order by range starts\n        ops.sort(function (o1, o2) {\n          return Range.compareRangesUsingStarts(o1.range, o2.range);\n        });\n        // Merge operations that touch each other\n        var resultOps = [];\n        var previousOp = ops[0];\n        for (var _i = 1; _i < ops.length; _i++) {\n          if (previousOp.range.endLineNumber === ops[_i].range.startLineNumber && previousOp.range.endColumn === ops[_i].range.startColumn) {\n            // These operations are one after another and can be merged\n            previousOp.range = previousOp.range.plusRange(ops[_i].range);\n            previousOp.text = previousOp.text + ops[_i].text;\n          } else {\n            resultOps.push(previousOp);\n            previousOp = ops[_i];\n          }\n        }\n        resultOps.push(previousOp);\n        for (var _i2 = 0, _resultOps = resultOps; _i2 < _resultOps.length; _i2++) {\n          var op = _resultOps[_i2];\n          builder.addEditOperation(op.range, op.text);\n        }\n      }\n      this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n  }]);\n}();","map":{"version":3,"names":["Range","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_classCallCheck","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","_createClass","key","value","getEditOperations","model","builder","length","ops","i","push","range","text","sort","o1","o2","compareRangesUsingStarts","resultOps","previousOp","endLineNumber","startLineNumber","endColumn","startColumn","plusRange","_i2","_resultOps","op","addEditOperation","trackSelection","computeCursorState","helper","getTrackedSelection"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            const ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            const resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,+BAA+B;AACrD,WAAaC,iBAAiB;EAC1B,SAAAA,kBAAYC,eAAe,EAAEC,MAAM,EAAEC,cAAc,EAAE;IAAAC,eAAA,OAAAJ,iBAAA;IACjD,IAAI,CAACK,gBAAgB,GAAGJ,eAAe;IACvC,IAAI,CAACK,OAAO,GAAGJ,MAAM;IACrB,IAAI,CAACK,eAAe,GAAGJ,cAAc;IACrC,IAAI,CAACK,yBAAyB,GAAG,IAAI;EACzC;EAAC,OAAAC,YAAA,CAAAT,iBAAA;IAAAU,GAAA;IAAAC,KAAA,EACD,SAAAC,kBAAkBC,KAAK,EAAEC,OAAO,EAAE;MAC9B,IAAI,IAAI,CAACR,OAAO,CAACS,MAAM,GAAG,CAAC,EAAE;QACzB;QACA,IAAMC,GAAG,GAAG,EAAE;QACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACX,OAAO,CAACS,MAAM,EAAEE,CAAC,EAAE,EAAE;UAC1CD,GAAG,CAACE,IAAI,CAAC;YACLC,KAAK,EAAE,IAAI,CAACb,OAAO,CAACW,CAAC,CAAC;YACtBG,IAAI,EAAE,IAAI,CAACb,eAAe,CAACU,CAAC;UAChC,CAAC,CAAC;QACN;QACA;QACAD,GAAG,CAACK,IAAI,CAAC,UAACC,EAAE,EAAEC,EAAE,EAAK;UACjB,OAAOxB,KAAK,CAACyB,wBAAwB,CAACF,EAAE,CAACH,KAAK,EAAEI,EAAE,CAACJ,KAAK,CAAC;QAC7D,CAAC,CAAC;QACF;QACA,IAAMM,SAAS,GAAG,EAAE;QACpB,IAAIC,UAAU,GAAGV,GAAG,CAAC,CAAC,CAAC;QACvB,KAAK,IAAIC,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGD,GAAG,CAACD,MAAM,EAAEE,EAAC,EAAE,EAAE;UACjC,IAAIS,UAAU,CAACP,KAAK,CAACQ,aAAa,KAAKX,GAAG,CAACC,EAAC,CAAC,CAACE,KAAK,CAACS,eAAe,IAAIF,UAAU,CAACP,KAAK,CAACU,SAAS,KAAKb,GAAG,CAACC,EAAC,CAAC,CAACE,KAAK,CAACW,WAAW,EAAE;YAC5H;YACAJ,UAAU,CAACP,KAAK,GAAGO,UAAU,CAACP,KAAK,CAACY,SAAS,CAACf,GAAG,CAACC,EAAC,CAAC,CAACE,KAAK,CAAC;YAC3DO,UAAU,CAACN,IAAI,GAAGM,UAAU,CAACN,IAAI,GAAGJ,GAAG,CAACC,EAAC,CAAC,CAACG,IAAI;UACnD,CAAC,MACI;YACDK,SAAS,CAACP,IAAI,CAACQ,UAAU,CAAC;YAC1BA,UAAU,GAAGV,GAAG,CAACC,EAAC,CAAC;UACvB;QACJ;QACAQ,SAAS,CAACP,IAAI,CAACQ,UAAU,CAAC;QAC1B,SAAAM,GAAA,MAAAC,UAAA,GAAiBR,SAAS,EAAAO,GAAA,GAAAC,UAAA,CAAAlB,MAAA,EAAAiB,GAAA,IAAE;UAAvB,IAAME,EAAE,GAAAD,UAAA,CAAAD,GAAA;UACTlB,OAAO,CAACqB,gBAAgB,CAACD,EAAE,CAACf,KAAK,EAAEe,EAAE,CAACd,IAAI,CAAC;QAC/C;MACJ;MACA,IAAI,CAACZ,yBAAyB,GAAGM,OAAO,CAACsB,cAAc,CAAC,IAAI,CAAC/B,gBAAgB,CAAC;IAClF;EAAC;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAA0B,mBAAmBxB,KAAK,EAAEyB,MAAM,EAAE;MAC9B,OAAOA,MAAM,CAACC,mBAAmB,CAAC,IAAI,CAAC/B,yBAAyB,CAAC;IACrE;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}