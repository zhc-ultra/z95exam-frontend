{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../globalPointerMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nvar POINTER_DRAG_RESET_DISTANCE = 140;\nexport var AbstractScrollbar = /*#__PURE__*/function (_Widget) {\n  function AbstractScrollbar(opts) {\n    var _this;\n    _classCallCheck(this, AbstractScrollbar);\n    _this = _callSuper(this, AbstractScrollbar);\n    _this._lazyRender = opts.lazyRender;\n    _this._host = opts.host;\n    _this._scrollable = opts.scrollable;\n    _this._scrollByPage = opts.scrollByPage;\n    _this._scrollbarState = opts.scrollbarState;\n    _this._visibilityController = _this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n    _this._visibilityController.setIsNeeded(_this._scrollbarState.isNeeded());\n    _this._pointerMoveMonitor = _this._register(new GlobalPointerMoveMonitor());\n    _this._shouldRender = true;\n    _this.domNode = createFastDomNode(document.createElement('div'));\n    _this.domNode.setAttribute('role', 'presentation');\n    _this.domNode.setAttribute('aria-hidden', 'true');\n    _this._visibilityController.setDomNode(_this.domNode);\n    _this.domNode.setPosition('absolute');\n    _this._register(dom.addDisposableListener(_this.domNode.domNode, dom.EventType.POINTER_DOWN, function (e) {\n      return _this._domNodePointerDown(e);\n    }));\n    return _this;\n  }\n  // ----------------- creation\n  /**\n   * Creates the dom node for an arrow & adds it to the container\n   */\n  _inherits(AbstractScrollbar, _Widget);\n  return _createClass(AbstractScrollbar, [{\n    key: \"_createArrow\",\n    value: function _createArrow(opts) {\n      var arrow = this._register(new ScrollbarArrow(opts));\n      this.domNode.domNode.appendChild(arrow.bgDomNode);\n      this.domNode.domNode.appendChild(arrow.domNode);\n    }\n    /**\n     * Creates the slider dom node, adds it to the container & hooks up the events\n     */\n  }, {\n    key: \"_createSlider\",\n    value: function _createSlider(top, left, width, height) {\n      var _this2 = this;\n      this.slider = createFastDomNode(document.createElement('div'));\n      this.slider.setClassName('slider');\n      this.slider.setPosition('absolute');\n      this.slider.setTop(top);\n      this.slider.setLeft(left);\n      if (typeof width === 'number') {\n        this.slider.setWidth(width);\n      }\n      if (typeof height === 'number') {\n        this.slider.setHeight(height);\n      }\n      this.slider.setLayerHinting(true);\n      this.slider.setContain('strict');\n      this.domNode.domNode.appendChild(this.slider.domNode);\n      this._register(dom.addDisposableListener(this.slider.domNode, dom.EventType.POINTER_DOWN, function (e) {\n        if (e.button === 0) {\n          e.preventDefault();\n          _this2._sliderPointerDown(e);\n        }\n      }));\n      this.onclick(this.slider.domNode, function (e) {\n        if (e.leftButton) {\n          e.stopPropagation();\n        }\n      });\n    }\n    // ----------------- Update state\n  }, {\n    key: \"_onElementSize\",\n    value: function _onElementSize(visibleSize) {\n      if (this._scrollbarState.setVisibleSize(visibleSize)) {\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n          this.render();\n        }\n      }\n      return this._shouldRender;\n    }\n  }, {\n    key: \"_onElementScrollSize\",\n    value: function _onElementScrollSize(elementScrollSize) {\n      if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n          this.render();\n        }\n      }\n      return this._shouldRender;\n    }\n  }, {\n    key: \"_onElementScrollPosition\",\n    value: function _onElementScrollPosition(elementScrollPosition) {\n      if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n          this.render();\n        }\n      }\n      return this._shouldRender;\n    }\n    // ----------------- rendering\n  }, {\n    key: \"beginReveal\",\n    value: function beginReveal() {\n      this._visibilityController.setShouldBeVisible(true);\n    }\n  }, {\n    key: \"beginHide\",\n    value: function beginHide() {\n      this._visibilityController.setShouldBeVisible(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this._shouldRender) {\n        return;\n      }\n      this._shouldRender = false;\n      this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n      this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n    }\n    // ----------------- DOM events\n  }, {\n    key: \"_domNodePointerDown\",\n    value: function _domNodePointerDown(e) {\n      if (e.target !== this.domNode.domNode) {\n        return;\n      }\n      this._onPointerDown(e);\n    }\n  }, {\n    key: \"delegatePointerDown\",\n    value: function delegatePointerDown(e) {\n      var domTop = this.domNode.domNode.getClientRects()[0].top;\n      var sliderStart = domTop + this._scrollbarState.getSliderPosition();\n      var sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n      var pointerPos = this._sliderPointerPosition(e);\n      if (sliderStart <= pointerPos && pointerPos <= sliderStop) {\n        // Act as if it was a pointer down on the slider\n        if (e.button === 0) {\n          e.preventDefault();\n          this._sliderPointerDown(e);\n        }\n      } else {\n        // Act as if it was a pointer down on the scrollbar\n        this._onPointerDown(e);\n      }\n    }\n  }, {\n    key: \"_onPointerDown\",\n    value: function _onPointerDown(e) {\n      var offsetX;\n      var offsetY;\n      if (e.target === this.domNode.domNode && typeof e.offsetX === 'number' && typeof e.offsetY === 'number') {\n        offsetX = e.offsetX;\n        offsetY = e.offsetY;\n      } else {\n        var domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n        offsetX = e.pageX - domNodePosition.left;\n        offsetY = e.pageY - domNodePosition.top;\n      }\n      var offset = this._pointerDownRelativePosition(offsetX, offsetY);\n      this._setDesiredScrollPositionNow(this._scrollByPage ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset) : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n      if (e.button === 0) {\n        // left button\n        e.preventDefault();\n        this._sliderPointerDown(e);\n      }\n    }\n  }, {\n    key: \"_sliderPointerDown\",\n    value: function _sliderPointerDown(e) {\n      var _this3 = this;\n      if (!e.target || !(e.target instanceof Element)) {\n        return;\n      }\n      var initialPointerPosition = this._sliderPointerPosition(e);\n      var initialPointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(e);\n      var initialScrollbarState = this._scrollbarState.clone();\n      this.slider.toggleClassName('active', true);\n      this._pointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, function (pointerMoveData) {\n        var pointerOrthogonalPosition = _this3._sliderOrthogonalPointerPosition(pointerMoveData);\n        var pointerOrthogonalDelta = Math.abs(pointerOrthogonalPosition - initialPointerOrthogonalPosition);\n        if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n          // The pointer has wondered away from the scrollbar => reset dragging\n          _this3._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n          return;\n        }\n        var pointerPosition = _this3._sliderPointerPosition(pointerMoveData);\n        var pointerDelta = pointerPosition - initialPointerPosition;\n        _this3._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(pointerDelta));\n      }, function () {\n        _this3.slider.toggleClassName('active', false);\n        _this3._host.onDragEnd();\n      });\n      this._host.onDragStart();\n    }\n  }, {\n    key: \"_setDesiredScrollPositionNow\",\n    value: function _setDesiredScrollPositionNow(_desiredScrollPosition) {\n      var desiredScrollPosition = {};\n      this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n      this._scrollable.setScrollPositionNow(desiredScrollPosition);\n    }\n  }, {\n    key: \"updateScrollbarSize\",\n    value: function updateScrollbarSize(scrollbarSize) {\n      this._updateScrollbarSize(scrollbarSize);\n      this._scrollbarState.setScrollbarSize(scrollbarSize);\n      this._shouldRender = true;\n      if (!this._lazyRender) {\n        this.render();\n      }\n    }\n  }, {\n    key: \"isNeeded\",\n    value: function isNeeded() {\n      return this._scrollbarState.isNeeded();\n    }\n  }]);\n}(Widget);","map":{"version":3,"names":["dom","createFastDomNode","GlobalPointerMoveMonitor","ScrollbarArrow","ScrollbarVisibilityController","Widget","platform","POINTER_DRAG_RESET_DISTANCE","AbstractScrollbar","_Widget","opts","_this","_classCallCheck","_callSuper","_lazyRender","lazyRender","_host","host","_scrollable","scrollable","_scrollByPage","scrollByPage","_scrollbarState","scrollbarState","_visibilityController","_register","visibility","extraScrollbarClassName","setIsNeeded","isNeeded","_pointerMoveMonitor","_shouldRender","domNode","document","createElement","setAttribute","setDomNode","setPosition","addDisposableListener","EventType","POINTER_DOWN","e","_domNodePointerDown","_inherits","_createClass","key","value","_createArrow","arrow","appendChild","bgDomNode","_createSlider","top","left","width","height","_this2","slider","setClassName","setTop","setLeft","setWidth","setHeight","setLayerHinting","setContain","button","preventDefault","_sliderPointerDown","onclick","leftButton","stopPropagation","_onElementSize","visibleSize","setVisibleSize","render","_onElementScrollSize","elementScrollSize","setScrollSize","_onElementScrollPosition","elementScrollPosition","setScrollPosition","beginReveal","setShouldBeVisible","beginHide","_renderDomNode","getRectangleLargeSize","getRectangleSmallSize","_updateSlider","getSliderSize","getArrowSize","getSliderPosition","target","_onPointerDown","delegatePointerDown","domTop","getClientRects","sliderStart","sliderStop","pointerPos","_sliderPointerPosition","offsetX","offsetY","domNodePosition","getDomNodePagePosition","pageX","pageY","offset","_pointerDownRelativePosition","_setDesiredScrollPositionNow","getDesiredScrollPositionFromOffsetPaged","getDesiredScrollPositionFromOffset","_this3","Element","initialPointerPosition","initialPointerOrthogonalPosition","_sliderOrthogonalPointerPosition","initialScrollbarState","clone","toggleClassName","startMonitoring","pointerId","buttons","pointerMoveData","pointerOrthogonalPosition","pointerOrthogonalDelta","Math","abs","isWindows","getScrollPosition","pointerPosition","pointerDelta","getDesiredScrollPositionFromDelta","onDragEnd","onDragStart","_desiredScrollPosition","desiredScrollPosition","writeScrollPosition","setScrollPositionNow","updateScrollbarSize","scrollbarSize","_updateScrollbarSize","setScrollbarSize"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/abstractScrollbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../globalPointerMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nexport class AbstractScrollbar extends Widget {\n    constructor(opts) {\n        super();\n        this._lazyRender = opts.lazyRender;\n        this._host = opts.host;\n        this._scrollable = opts.scrollable;\n        this._scrollByPage = opts.scrollByPage;\n        this._scrollbarState = opts.scrollbarState;\n        this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._pointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._shouldRender = true;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this._visibilityController.setDomNode(this.domNode);\n        this.domNode.setPosition('absolute');\n        this._register(dom.addDisposableListener(this.domNode.domNode, dom.EventType.POINTER_DOWN, (e) => this._domNodePointerDown(e)));\n    }\n    // ----------------- creation\n    /**\n     * Creates the dom node for an arrow & adds it to the container\n     */\n    _createArrow(opts) {\n        const arrow = this._register(new ScrollbarArrow(opts));\n        this.domNode.domNode.appendChild(arrow.bgDomNode);\n        this.domNode.domNode.appendChild(arrow.domNode);\n    }\n    /**\n     * Creates the slider dom node, adds it to the container & hooks up the events\n     */\n    _createSlider(top, left, width, height) {\n        this.slider = createFastDomNode(document.createElement('div'));\n        this.slider.setClassName('slider');\n        this.slider.setPosition('absolute');\n        this.slider.setTop(top);\n        this.slider.setLeft(left);\n        if (typeof width === 'number') {\n            this.slider.setWidth(width);\n        }\n        if (typeof height === 'number') {\n            this.slider.setHeight(height);\n        }\n        this.slider.setLayerHinting(true);\n        this.slider.setContain('strict');\n        this.domNode.domNode.appendChild(this.slider.domNode);\n        this._register(dom.addDisposableListener(this.slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            if (e.button === 0) {\n                e.preventDefault();\n                this._sliderPointerDown(e);\n            }\n        }));\n        this.onclick(this.slider.domNode, e => {\n            if (e.leftButton) {\n                e.stopPropagation();\n            }\n        });\n    }\n    // ----------------- Update state\n    _onElementSize(visibleSize) {\n        if (this._scrollbarState.setVisibleSize(visibleSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollSize(elementScrollSize) {\n        if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollPosition(elementScrollPosition) {\n        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    // ----------------- rendering\n    beginReveal() {\n        this._visibilityController.setShouldBeVisible(true);\n    }\n    beginHide() {\n        this._visibilityController.setShouldBeVisible(false);\n    }\n    render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n    }\n    // ----------------- DOM events\n    _domNodePointerDown(e) {\n        if (e.target !== this.domNode.domNode) {\n            return;\n        }\n        this._onPointerDown(e);\n    }\n    delegatePointerDown(e) {\n        const domTop = this.domNode.domNode.getClientRects()[0].top;\n        const sliderStart = domTop + this._scrollbarState.getSliderPosition();\n        const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n        const pointerPos = this._sliderPointerPosition(e);\n        if (sliderStart <= pointerPos && pointerPos <= sliderStop) {\n            // Act as if it was a pointer down on the slider\n            if (e.button === 0) {\n                e.preventDefault();\n                this._sliderPointerDown(e);\n            }\n        }\n        else {\n            // Act as if it was a pointer down on the scrollbar\n            this._onPointerDown(e);\n        }\n    }\n    _onPointerDown(e) {\n        let offsetX;\n        let offsetY;\n        if (e.target === this.domNode.domNode && typeof e.offsetX === 'number' && typeof e.offsetY === 'number') {\n            offsetX = e.offsetX;\n            offsetY = e.offsetY;\n        }\n        else {\n            const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n            offsetX = e.pageX - domNodePosition.left;\n            offsetY = e.pageY - domNodePosition.top;\n        }\n        const offset = this._pointerDownRelativePosition(offsetX, offsetY);\n        this._setDesiredScrollPositionNow(this._scrollByPage\n            ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\n            : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n        if (e.button === 0) {\n            // left button\n            e.preventDefault();\n            this._sliderPointerDown(e);\n        }\n    }\n    _sliderPointerDown(e) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPointerPosition = this._sliderPointerPosition(e);\n        const initialPointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(e);\n        const initialScrollbarState = this._scrollbarState.clone();\n        this.slider.toggleClassName('active', true);\n        this._pointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, (pointerMoveData) => {\n            const pointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(pointerMoveData);\n            const pointerOrthogonalDelta = Math.abs(pointerOrthogonalPosition - initialPointerOrthogonalPosition);\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n                return;\n            }\n            const pointerPosition = this._sliderPointerPosition(pointerMoveData);\n            const pointerDelta = pointerPosition - initialPointerPosition;\n            this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(pointerDelta));\n        }, () => {\n            this.slider.toggleClassName('active', false);\n            this._host.onDragEnd();\n        });\n        this._host.onDragStart();\n    }\n    _setDesiredScrollPositionNow(_desiredScrollPosition) {\n        const desiredScrollPosition = {};\n        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n        this._scrollable.setScrollPositionNow(desiredScrollPosition);\n    }\n    updateScrollbarSize(scrollbarSize) {\n        this._updateScrollbarSize(scrollbarSize);\n        this._scrollbarState.setScrollbarSize(scrollbarSize);\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n            this.render();\n        }\n    }\n    isNeeded() {\n        return this._scrollbarState.isNeeded();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}