{"ast":null,"code":"import _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var HorizontalGuidesState;\n(function (HorizontalGuidesState) {\n  HorizontalGuidesState[HorizontalGuidesState[\"Disabled\"] = 0] = \"Disabled\";\n  HorizontalGuidesState[HorizontalGuidesState[\"EnabledForActive\"] = 1] = \"EnabledForActive\";\n  HorizontalGuidesState[HorizontalGuidesState[\"Enabled\"] = 2] = \"Enabled\";\n})(HorizontalGuidesState || (HorizontalGuidesState = {}));\nexport var IndentGuide = /*#__PURE__*/_createClass(function IndentGuide(visibleColumn, column, className,\n/**\n * If set, this indent guide is a horizontal guide (no vertical part).\n * It starts at visibleColumn and continues until endColumn.\n*/\nhorizontalLine,\n/**\n * If set (!= -1), only show this guide for wrapped lines that don't contain this model column, but are after it.\n*/\nforWrappedLinesAfterColumn, forWrappedLinesBeforeOrAtColumn) {\n  _classCallCheck(this, IndentGuide);\n  this.visibleColumn = visibleColumn;\n  this.column = column;\n  this.className = className;\n  this.horizontalLine = horizontalLine;\n  this.forWrappedLinesAfterColumn = forWrappedLinesAfterColumn;\n  this.forWrappedLinesBeforeOrAtColumn = forWrappedLinesBeforeOrAtColumn;\n  if (visibleColumn !== -1 === (column !== -1)) {\n    throw new Error();\n  }\n});\nexport var IndentGuideHorizontalLine = /*#__PURE__*/_createClass(function IndentGuideHorizontalLine(top, endColumn) {\n  _classCallCheck(this, IndentGuideHorizontalLine);\n  this.top = top;\n  this.endColumn = endColumn;\n});","map":{"version":3,"names":["HorizontalGuidesState","IndentGuide","_createClass","visibleColumn","column","className","horizontalLine","forWrappedLinesAfterColumn","forWrappedLinesBeforeOrAtColumn","_classCallCheck","Error","IndentGuideHorizontalLine","top","endColumn"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/textModelGuides.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var HorizontalGuidesState;\n(function (HorizontalGuidesState) {\n    HorizontalGuidesState[HorizontalGuidesState[\"Disabled\"] = 0] = \"Disabled\";\n    HorizontalGuidesState[HorizontalGuidesState[\"EnabledForActive\"] = 1] = \"EnabledForActive\";\n    HorizontalGuidesState[HorizontalGuidesState[\"Enabled\"] = 2] = \"Enabled\";\n})(HorizontalGuidesState || (HorizontalGuidesState = {}));\nexport class IndentGuide {\n    constructor(visibleColumn, column, className, \n    /**\n     * If set, this indent guide is a horizontal guide (no vertical part).\n     * It starts at visibleColumn and continues until endColumn.\n    */\n    horizontalLine, \n    /**\n     * If set (!= -1), only show this guide for wrapped lines that don't contain this model column, but are after it.\n    */\n    forWrappedLinesAfterColumn, forWrappedLinesBeforeOrAtColumn) {\n        this.visibleColumn = visibleColumn;\n        this.column = column;\n        this.className = className;\n        this.horizontalLine = horizontalLine;\n        this.forWrappedLinesAfterColumn = forWrappedLinesAfterColumn;\n        this.forWrappedLinesBeforeOrAtColumn = forWrappedLinesBeforeOrAtColumn;\n        if ((visibleColumn !== -1) === (column !== -1)) {\n            throw new Error();\n        }\n    }\n}\nexport class IndentGuideHorizontalLine {\n    constructor(top, endColumn) {\n        this.top = top;\n        this.endColumn = endColumn;\n    }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,OAAO,IAAIA,qBAAqB;AAChC,CAAC,UAAUA,qBAAqB,EAAE;EAC9BA,qBAAqB,CAACA,qBAAqB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EACzEA,qBAAqB,CAACA,qBAAqB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,kBAAkB;EACzFA,qBAAqB,CAACA,qBAAqB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;AAC3E,CAAC,EAAEA,qBAAqB,KAAKA,qBAAqB,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD,WAAaC,WAAW,gBAAAC,YAAA,CACpB,SAAAD,YAAYE,aAAa,EAAEC,MAAM,EAAEC,SAAS;AAC5C;AACJ;AACA;AACA;AACIC,cAAc;AACd;AACJ;AACA;AACIC,0BAA0B,EAAEC,+BAA+B,EAAE;EAAAC,eAAA,OAAAR,WAAA;EACzD,IAAI,CAACE,aAAa,GAAGA,aAAa;EAClC,IAAI,CAACC,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACC,0BAA0B,GAAGA,0BAA0B;EAC5D,IAAI,CAACC,+BAA+B,GAAGA,+BAA+B;EACtE,IAAKL,aAAa,KAAK,CAAC,CAAC,MAAOC,MAAM,KAAK,CAAC,CAAC,CAAC,EAAE;IAC5C,MAAM,IAAIM,KAAK,CAAC,CAAC;EACrB;AACJ,CAAC;AAEL,WAAaC,yBAAyB,gBAAAT,YAAA,CAClC,SAAAS,0BAAYC,GAAG,EAAEC,SAAS,EAAE;EAAAJ,eAAA,OAAAE,yBAAA;EACxB,IAAI,CAACC,GAAG,GAAGA,GAAG;EACd,IAAI,CAACC,SAAS,GAAGA,SAAS;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}