{"ast":null,"code":"import _objectSpread from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, getWindow, scheduleAtNextAnimationFrame as _scheduleAtNextAnimationFrame } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { Sash } from '../sash/sash.js';\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { pushToEnd, pushToStart, range } from '../../../common/arrays.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { combinedDisposable, Disposable, dispose as _dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport * as types from '../../../common/types.js';\nimport './splitview.css';\nvar defaultStyles = {\n  separatorBorder: Color.transparent\n};\nvar ViewItem = /*#__PURE__*/function () {\n  function ViewItem(container, view, size, disposable) {\n    _classCallCheck(this, ViewItem);\n    this.container = container;\n    this.view = view;\n    this.disposable = disposable;\n    this._cachedVisibleSize = undefined;\n    if (typeof size === 'number') {\n      this._size = size;\n      this._cachedVisibleSize = undefined;\n      container.classList.add('visible');\n    } else {\n      this._size = 0;\n      this._cachedVisibleSize = size.cachedVisibleSize;\n    }\n  }\n  return _createClass(ViewItem, [{\n    key: \"size\",\n    get: function get() {\n      return this._size;\n    },\n    set: function set(size) {\n      this._size = size;\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return typeof this._cachedVisibleSize === 'undefined';\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible, size) {\n      var _a, _b;\n      if (visible === this.visible) {\n        return;\n      }\n      if (visible) {\n        this.size = clamp(this._cachedVisibleSize, this.viewMinimumSize, this.viewMaximumSize);\n        this._cachedVisibleSize = undefined;\n      } else {\n        this._cachedVisibleSize = typeof size === 'number' ? size : this.size;\n        this.size = 0;\n      }\n      this.container.classList.toggle('visible', visible);\n      try {\n        (_b = (_a = this.view).setVisible) === null || _b === void 0 ? void 0 : _b.call(_a, visible);\n      } catch (e) {\n        console.error('Splitview: Failed to set visible view');\n        console.error(e);\n      }\n    }\n  }, {\n    key: \"minimumSize\",\n    get: function get() {\n      return this.visible ? this.view.minimumSize : 0;\n    }\n  }, {\n    key: \"viewMinimumSize\",\n    get: function get() {\n      return this.view.minimumSize;\n    }\n  }, {\n    key: \"maximumSize\",\n    get: function get() {\n      return this.visible ? this.view.maximumSize : 0;\n    }\n  }, {\n    key: \"viewMaximumSize\",\n    get: function get() {\n      return this.view.maximumSize;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this.view.priority;\n    }\n  }, {\n    key: \"proportionalLayout\",\n    get: function get() {\n      var _a;\n      return (_a = this.view.proportionalLayout) !== null && _a !== void 0 ? _a : true;\n    }\n  }, {\n    key: \"snap\",\n    get: function get() {\n      return !!this.view.snap;\n    }\n  }, {\n    key: \"enabled\",\n    set: function set(enabled) {\n      this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(offset, layoutContext) {\n      this.layoutContainer(offset);\n      try {\n        this.view.layout(this.size, offset, layoutContext);\n      } catch (e) {\n        console.error('Splitview: Failed to layout view');\n        console.error(e);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposable.dispose();\n    }\n  }]);\n}();\nvar VerticalViewItem = /*#__PURE__*/function (_ViewItem) {\n  function VerticalViewItem() {\n    _classCallCheck(this, VerticalViewItem);\n    return _callSuper(this, VerticalViewItem, arguments);\n  }\n  _inherits(VerticalViewItem, _ViewItem);\n  return _createClass(VerticalViewItem, [{\n    key: \"layoutContainer\",\n    value: function layoutContainer(offset) {\n      this.container.style.top = \"\".concat(offset, \"px\");\n      this.container.style.height = \"\".concat(this.size, \"px\");\n    }\n  }]);\n}(ViewItem);\nvar HorizontalViewItem = /*#__PURE__*/function (_ViewItem2) {\n  function HorizontalViewItem() {\n    _classCallCheck(this, HorizontalViewItem);\n    return _callSuper(this, HorizontalViewItem, arguments);\n  }\n  _inherits(HorizontalViewItem, _ViewItem2);\n  return _createClass(HorizontalViewItem, [{\n    key: \"layoutContainer\",\n    value: function layoutContainer(offset) {\n      this.container.style.left = \"\".concat(offset, \"px\");\n      this.container.style.width = \"\".concat(this.size, \"px\");\n    }\n  }]);\n}(ViewItem);\nvar State;\n(function (State) {\n  State[State[\"Idle\"] = 0] = \"Idle\";\n  State[State[\"Busy\"] = 1] = \"Busy\";\n})(State || (State = {}));\nexport var Sizing;\n(function (Sizing) {\n  /**\n   * When adding or removing views, distribute the delta space among\n   * all other views.\n   */\n  Sizing.Distribute = {\n    type: 'distribute'\n  };\n  /**\n   * When adding or removing views, split the delta space with another\n   * specific view, indexed by the provided `index`.\n   */\n  function Split(index) {\n    return {\n      type: 'split',\n      index: index\n    };\n  }\n  Sizing.Split = Split;\n  /**\n   * When adding a view, use DistributeSizing when all pre-existing views are\n   * distributed evenly, otherwise use SplitSizing.\n   */\n  function Auto(index) {\n    return {\n      type: 'auto',\n      index: index\n    };\n  }\n  Sizing.Auto = Auto;\n  /**\n   * When adding or removing views, assume the view is invisible.\n   */\n  function Invisible(cachedVisibleSize) {\n    return {\n      type: 'invisible',\n      cachedVisibleSize: cachedVisibleSize\n    };\n  }\n  Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\n/**\n * The {@link SplitView} is the UI component which implements a one dimensional\n * flex-like layout algorithm for a collection of {@link IView} instances, which\n * are essentially HTMLElement instances with the following size constraints:\n *\n * - {@link IView.minimumSize}\n * - {@link IView.maximumSize}\n * - {@link IView.priority}\n * - {@link IView.snap}\n *\n * In case the SplitView doesn't have enough size to fit all views, it will overflow\n * its content with a scrollbar.\n *\n * In between each pair of views there will be a {@link Sash} allowing the user\n * to resize the views, making sure the constraints are respected.\n *\n * An optional {@link TLayoutContext layout context type} may be used in order to\n * pass along layout contextual data from the {@link SplitView.layout} method down\n * to each view's {@link IView.layout} calls.\n *\n * Features:\n * - Flex-like layout algorithm\n * - Snap support\n * - Orthogonal sash support, for corner sashes\n * - View hide/show support\n * - View swap/move support\n * - Alt key modifier behavior, macOS style\n */\nexport var SplitView = /*#__PURE__*/function (_Disposable) {\n  /**\n   * Create a new {@link SplitView} instance.\n   */\n  function SplitView(container) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, SplitView);\n    var _a, _b, _c, _d, _e;\n    _this = _callSuper(this, SplitView);\n    _this.size = 0;\n    _this._contentSize = 0;\n    _this.proportions = undefined;\n    _this.viewItems = [];\n    _this.sashItems = []; // used in tests\n    _this.state = State.Idle;\n    _this._onDidSashChange = _this._register(new Emitter());\n    _this._onDidSashReset = _this._register(new Emitter());\n    _this._startSnappingEnabled = true;\n    _this._endSnappingEnabled = true;\n    /**\n     * Fires whenever the user resizes a {@link Sash sash}.\n     */\n    _this.onDidSashChange = _this._onDidSashChange.event;\n    /**\n     * Fires whenever the user double clicks a {@link Sash sash}.\n     */\n    _this.onDidSashReset = _this._onDidSashReset.event;\n    _this.orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : 0 /* Orientation.VERTICAL */;\n    _this.inverseAltBehavior = (_b = options.inverseAltBehavior) !== null && _b !== void 0 ? _b : false;\n    _this.proportionalLayout = (_c = options.proportionalLayout) !== null && _c !== void 0 ? _c : true;\n    _this.getSashOrthogonalSize = options.getSashOrthogonalSize;\n    _this.el = document.createElement('div');\n    _this.el.classList.add('monaco-split-view2');\n    _this.el.classList.add(_this.orientation === 0 /* Orientation.VERTICAL */ ? 'vertical' : 'horizontal');\n    container.appendChild(_this.el);\n    _this.sashContainer = append(_this.el, $('.sash-container'));\n    _this.viewContainer = $('.split-view-container');\n    _this.scrollable = _this._register(new Scrollable({\n      forceIntegerValues: true,\n      smoothScrollDuration: 125,\n      scheduleAtNextAnimationFrame: function scheduleAtNextAnimationFrame(callback) {\n        return _scheduleAtNextAnimationFrame(getWindow(_this.el), callback);\n      }\n    }));\n    _this.scrollableElement = _this._register(new SmoothScrollableElement(_this.viewContainer, {\n      vertical: _this.orientation === 0 /* Orientation.VERTICAL */ ? (_d = options.scrollbarVisibility) !== null && _d !== void 0 ? _d : 1 /* ScrollbarVisibility.Auto */ : 2 /* ScrollbarVisibility.Hidden */,\n      horizontal: _this.orientation === 1 /* Orientation.HORIZONTAL */ ? (_e = options.scrollbarVisibility) !== null && _e !== void 0 ? _e : 1 /* ScrollbarVisibility.Auto */ : 2 /* ScrollbarVisibility.Hidden */\n    }, _this.scrollable));\n    // https://github.com/microsoft/vscode/issues/157737\n    var onDidScrollViewContainer = _this._register(new DomEmitter(_this.viewContainer, 'scroll')).event;\n    _this._register(onDidScrollViewContainer(function (_) {\n      var position = _this.scrollableElement.getScrollPosition();\n      var scrollLeft = Math.abs(_this.viewContainer.scrollLeft - position.scrollLeft) <= 1 ? undefined : _this.viewContainer.scrollLeft;\n      var scrollTop = Math.abs(_this.viewContainer.scrollTop - position.scrollTop) <= 1 ? undefined : _this.viewContainer.scrollTop;\n      if (scrollLeft !== undefined || scrollTop !== undefined) {\n        _this.scrollableElement.setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    }));\n    _this.onDidScroll = _this.scrollableElement.onScroll;\n    _this._register(_this.onDidScroll(function (e) {\n      if (e.scrollTopChanged) {\n        _this.viewContainer.scrollTop = e.scrollTop;\n      }\n      if (e.scrollLeftChanged) {\n        _this.viewContainer.scrollLeft = e.scrollLeft;\n      }\n    }));\n    append(_this.el, _this.scrollableElement.getDomNode());\n    _this.style(options.styles || defaultStyles);\n    // We have an existing set of view, add them now\n    if (options.descriptor) {\n      _this.size = options.descriptor.size;\n      options.descriptor.views.forEach(function (viewDescriptor, index) {\n        var sizing = types.isUndefined(viewDescriptor.visible) || viewDescriptor.visible ? viewDescriptor.size : {\n          type: 'invisible',\n          cachedVisibleSize: viewDescriptor.size\n        };\n        var view = viewDescriptor.view;\n        _this.doAddView(view, sizing, index, true);\n      });\n      // Initialize content size and proportions for first layout\n      _this._contentSize = _this.viewItems.reduce(function (r, i) {\n        return r + i.size;\n      }, 0);\n      _this.saveProportions();\n    }\n    return _this;\n  }\n  _inherits(SplitView, _Disposable);\n  return _createClass(SplitView, [{\n    key: \"orthogonalStartSash\",\n    get: function get() {\n      return this._orthogonalStartSash;\n    },\n    set:\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the left- or top-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    function set(sash) {\n      var _iterator = _createForOfIteratorHelper(this.sashItems),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var sashItem = _step.value;\n          sashItem.sash.orthogonalStartSash = sash;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the right- or bottom-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n  }, {\n    key: \"orthogonalEndSash\",\n    get: function get() {\n      return this._orthogonalEndSash;\n    },\n    set: function set(sash) {\n      var _iterator2 = _createForOfIteratorHelper(this.sashItems),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var sashItem = _step2.value;\n          sashItem.sash.orthogonalEndSash = sash;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this._orthogonalEndSash = sash;\n    }\n    /**\n     * Enable/disable snapping at the beginning of this {@link SplitView}.\n     */\n  }, {\n    key: \"startSnappingEnabled\",\n    get: function get() {\n      return this._startSnappingEnabled;\n    },\n    set: function set(startSnappingEnabled) {\n      if (this._startSnappingEnabled === startSnappingEnabled) {\n        return;\n      }\n      this._startSnappingEnabled = startSnappingEnabled;\n      this.updateSashEnablement();\n    }\n    /**\n     * Enable/disable snapping at the end of this {@link SplitView}.\n     */\n  }, {\n    key: \"endSnappingEnabled\",\n    get: function get() {\n      return this._endSnappingEnabled;\n    },\n    set: function set(endSnappingEnabled) {\n      if (this._endSnappingEnabled === endSnappingEnabled) {\n        return;\n      }\n      this._endSnappingEnabled = endSnappingEnabled;\n      this.updateSashEnablement();\n    }\n  }, {\n    key: \"style\",\n    value: function style(styles) {\n      if (styles.separatorBorder.isTransparent()) {\n        this.el.classList.remove('separator-border');\n        this.el.style.removeProperty('--separator-border');\n      } else {\n        this.el.classList.add('separator-border');\n        this.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n      }\n    }\n    /**\n     * Add a {@link IView view} to this {@link SplitView}.\n     *\n     * @param view The view to add.\n     * @param size Either a fixed size, or a dynamic {@link Sizing} strategy.\n     * @param index The index to insert the view on.\n     * @param skipLayout Whether layout should be skipped.\n     */\n  }, {\n    key: \"addView\",\n    value: function addView(view, size) {\n      var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.viewItems.length;\n      var skipLayout = arguments.length > 3 ? arguments[3] : undefined;\n      this.doAddView(view, size, index, skipLayout);\n    }\n    /**\n     * Layout the {@link SplitView}.\n     *\n     * @param size The entire size of the {@link SplitView}.\n     * @param layoutContext An optional layout context to pass along to {@link IView views}.\n     */\n  }, {\n    key: \"layout\",\n    value: function layout(size, layoutContext) {\n      var _this2 = this;\n      var previousSize = Math.max(this.size, this._contentSize);\n      this.size = size;\n      this.layoutContext = layoutContext;\n      if (!this.proportions) {\n        var indexes = range(this.viewItems.length);\n        var lowPriorityIndexes = indexes.filter(function (i) {\n          return _this2.viewItems[i].priority === 1;\n        } /* LayoutPriority.Low */);\n        var highPriorityIndexes = indexes.filter(function (i) {\n          return _this2.viewItems[i].priority === 2;\n        } /* LayoutPriority.High */);\n        this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n      } else {\n        var total = 0;\n        for (var i = 0; i < this.viewItems.length; i++) {\n          var item = this.viewItems[i];\n          var proportion = this.proportions[i];\n          if (typeof proportion === 'number') {\n            total += proportion;\n          } else {\n            size -= item.size;\n          }\n        }\n        for (var _i = 0; _i < this.viewItems.length; _i++) {\n          var _item = this.viewItems[_i];\n          var _proportion = this.proportions[_i];\n          if (typeof _proportion === 'number' && total > 0) {\n            _item.size = clamp(Math.round(_proportion * size / total), _item.minimumSize, _item.maximumSize);\n          }\n        }\n      }\n      this.distributeEmptySpace();\n      this.layoutViews();\n    }\n  }, {\n    key: \"saveProportions\",\n    value: function saveProportions() {\n      var _this3 = this;\n      if (this.proportionalLayout && this._contentSize > 0) {\n        this.proportions = this.viewItems.map(function (v) {\n          return v.proportionalLayout && v.visible ? v.size / _this3._contentSize : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"onSashStart\",\n    value: function onSashStart(_ref) {\n      var _this4 = this;\n      var sash = _ref.sash,\n        start = _ref.start,\n        alt = _ref.alt;\n      var _iterator3 = _createForOfIteratorHelper(this.viewItems),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item = _step3.value;\n          item.enabled = false;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      var index = this.sashItems.findIndex(function (item) {\n        return item.sash === sash;\n      });\n      // This way, we can press Alt while we resize a sash, macOS style!\n      var disposable = combinedDisposable(addDisposableListener(this.el.ownerDocument.body, 'keydown', function (e) {\n        return resetSashDragState(_this4.sashDragState.current, e.altKey);\n      }), addDisposableListener(this.el.ownerDocument.body, 'keyup', function () {\n        return resetSashDragState(_this4.sashDragState.current, false);\n      }));\n      var resetSashDragState = function resetSashDragState(start, alt) {\n        var sizes = _this4.viewItems.map(function (i) {\n          return i.size;\n        });\n        var minDelta = Number.NEGATIVE_INFINITY;\n        var maxDelta = Number.POSITIVE_INFINITY;\n        if (_this4.inverseAltBehavior) {\n          alt = !alt;\n        }\n        if (alt) {\n          // When we're using the last sash with Alt, we're resizing\n          // the view to the left/up, instead of right/down as usual\n          // Thus, we must do the inverse of the usual\n          var isLastSash = index === _this4.sashItems.length - 1;\n          if (isLastSash) {\n            var viewItem = _this4.viewItems[index];\n            minDelta = (viewItem.minimumSize - viewItem.size) / 2;\n            maxDelta = (viewItem.maximumSize - viewItem.size) / 2;\n          } else {\n            var _viewItem = _this4.viewItems[index + 1];\n            minDelta = (_viewItem.size - _viewItem.maximumSize) / 2;\n            maxDelta = (_viewItem.size - _viewItem.minimumSize) / 2;\n          }\n        }\n        var snapBefore;\n        var snapAfter;\n        if (!alt) {\n          var upIndexes = range(index, -1);\n          var downIndexes = range(index + 1, _this4.viewItems.length);\n          var minDeltaUp = upIndexes.reduce(function (r, i) {\n            return r + (_this4.viewItems[i].minimumSize - sizes[i]);\n          }, 0);\n          var maxDeltaUp = upIndexes.reduce(function (r, i) {\n            return r + (_this4.viewItems[i].viewMaximumSize - sizes[i]);\n          }, 0);\n          var maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce(function (r, i) {\n            return r + (sizes[i] - _this4.viewItems[i].minimumSize);\n          }, 0);\n          var minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce(function (r, i) {\n            return r + (sizes[i] - _this4.viewItems[i].viewMaximumSize);\n          }, 0);\n          var _minDelta = Math.max(minDeltaUp, minDeltaDown);\n          var _maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n          var snapBeforeIndex = _this4.findFirstSnapIndex(upIndexes);\n          var snapAfterIndex = _this4.findFirstSnapIndex(downIndexes);\n          if (typeof snapBeforeIndex === 'number') {\n            var _viewItem2 = _this4.viewItems[snapBeforeIndex];\n            var halfSize = Math.floor(_viewItem2.viewMinimumSize / 2);\n            snapBefore = {\n              index: snapBeforeIndex,\n              limitDelta: _viewItem2.visible ? _minDelta - halfSize : _minDelta + halfSize,\n              size: _viewItem2.size\n            };\n          }\n          if (typeof snapAfterIndex === 'number') {\n            var _viewItem3 = _this4.viewItems[snapAfterIndex];\n            var _halfSize = Math.floor(_viewItem3.viewMinimumSize / 2);\n            snapAfter = {\n              index: snapAfterIndex,\n              limitDelta: _viewItem3.visible ? _maxDelta + _halfSize : _maxDelta - _halfSize,\n              size: _viewItem3.size\n            };\n          }\n        }\n        _this4.sashDragState = {\n          start: start,\n          current: start,\n          index: index,\n          sizes: sizes,\n          minDelta: minDelta,\n          maxDelta: maxDelta,\n          alt: alt,\n          snapBefore: snapBefore,\n          snapAfter: snapAfter,\n          disposable: disposable\n        };\n      };\n      resetSashDragState(start, alt);\n    }\n  }, {\n    key: \"onSashChange\",\n    value: function onSashChange(_ref2) {\n      var current = _ref2.current;\n      var _this$sashDragState = this.sashDragState,\n        index = _this$sashDragState.index,\n        start = _this$sashDragState.start,\n        sizes = _this$sashDragState.sizes,\n        alt = _this$sashDragState.alt,\n        minDelta = _this$sashDragState.minDelta,\n        maxDelta = _this$sashDragState.maxDelta,\n        snapBefore = _this$sashDragState.snapBefore,\n        snapAfter = _this$sashDragState.snapAfter;\n      this.sashDragState.current = current;\n      var delta = current - start;\n      var newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n      if (alt) {\n        var isLastSash = index === this.sashItems.length - 1;\n        var newSizes = this.viewItems.map(function (i) {\n          return i.size;\n        });\n        var viewItemIndex = isLastSash ? index : index + 1;\n        var viewItem = this.viewItems[viewItemIndex];\n        var newMinDelta = viewItem.size - viewItem.maximumSize;\n        var newMaxDelta = viewItem.size - viewItem.minimumSize;\n        var resizeIndex = isLastSash ? index - 1 : index + 1;\n        this.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n      }\n      this.distributeEmptySpace();\n      this.layoutViews();\n    }\n  }, {\n    key: \"onSashEnd\",\n    value: function onSashEnd(index) {\n      this._onDidSashChange.fire(index);\n      this.sashDragState.disposable.dispose();\n      this.saveProportions();\n      var _iterator4 = _createForOfIteratorHelper(this.viewItems),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var item = _step4.value;\n          item.enabled = true;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"onViewChange\",\n    value: function onViewChange(item, size) {\n      var index = this.viewItems.indexOf(item);\n      if (index < 0 || index >= this.viewItems.length) {\n        return;\n      }\n      size = typeof size === 'number' ? size : item.size;\n      size = clamp(size, item.minimumSize, item.maximumSize);\n      if (this.inverseAltBehavior && index > 0) {\n        // In this case, we want the view to grow or shrink both sides equally\n        // so we just resize the \"left\" side by half and let `resize` do the clamping magic\n        this.resize(index - 1, Math.floor((item.size - size) / 2));\n        this.distributeEmptySpace();\n        this.layoutViews();\n      } else {\n        item.size = size;\n        this.relayout([index], undefined);\n      }\n    }\n    /**\n     * Resize a {@link IView view} within the {@link SplitView}.\n     *\n     * @param index The {@link IView view} index.\n     * @param size The {@link IView view} size.\n     */\n  }, {\n    key: \"resizeView\",\n    value: function resizeView(index, size) {\n      var _this5 = this;\n      if (index < 0 || index >= this.viewItems.length) {\n        return;\n      }\n      if (this.state !== State.Idle) {\n        throw new Error('Cant modify splitview');\n      }\n      this.state = State.Busy;\n      try {\n        var indexes = range(this.viewItems.length).filter(function (i) {\n          return i !== index;\n        });\n        var lowPriorityIndexes = [].concat(_toConsumableArray(indexes.filter(function (i) {\n          return _this5.viewItems[i].priority === 1;\n        } /* LayoutPriority.Low */)), [index]);\n        var highPriorityIndexes = indexes.filter(function (i) {\n          return _this5.viewItems[i].priority === 2;\n        } /* LayoutPriority.High */);\n        var item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this.size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n      } finally {\n        this.state = State.Idle;\n      }\n    }\n    /**\n     * Distribute the entire {@link SplitView} size among all {@link IView views}.\n     */\n  }, {\n    key: \"distributeViewSizes\",\n    value: function distributeViewSizes() {\n      var _this6 = this;\n      var flexibleViewItems = [];\n      var flexibleSize = 0;\n      var _iterator5 = _createForOfIteratorHelper(this.viewItems),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _item2 = _step5.value;\n          if (_item2.maximumSize - _item2.minimumSize > 0) {\n            flexibleViewItems.push(_item2);\n            flexibleSize += _item2.size;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var size = Math.floor(flexibleSize / flexibleViewItems.length);\n      for (var _i2 = 0, _flexibleViewItems = flexibleViewItems; _i2 < _flexibleViewItems.length; _i2++) {\n        var item = _flexibleViewItems[_i2];\n        item.size = clamp(size, item.minimumSize, item.maximumSize);\n      }\n      var indexes = range(this.viewItems.length);\n      var lowPriorityIndexes = indexes.filter(function (i) {\n        return _this6.viewItems[i].priority === 1;\n      } /* LayoutPriority.Low */);\n      var highPriorityIndexes = indexes.filter(function (i) {\n        return _this6.viewItems[i].priority === 2;\n      } /* LayoutPriority.High */);\n      this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    /**\n     * Returns the size of a {@link IView view}.\n     */\n  }, {\n    key: \"getViewSize\",\n    value: function getViewSize(index) {\n      if (index < 0 || index >= this.viewItems.length) {\n        return -1;\n      }\n      return this.viewItems[index].size;\n    }\n  }, {\n    key: \"doAddView\",\n    value: function doAddView(view, size) {\n      var _this7 = this;\n      var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.viewItems.length;\n      var skipLayout = arguments.length > 3 ? arguments[3] : undefined;\n      if (this.state !== State.Idle) {\n        throw new Error('Cant modify splitview');\n      }\n      this.state = State.Busy;\n      try {\n        // Add view\n        var container = $('.split-view-view');\n        if (index === this.viewItems.length) {\n          this.viewContainer.appendChild(container);\n        } else {\n          this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        var onChangeDisposable = view.onDidChange(function (size) {\n          return _this7.onViewChange(item, size);\n        });\n        var containerDisposable = toDisposable(function () {\n          return _this7.viewContainer.removeChild(container);\n        });\n        var disposable = combinedDisposable(onChangeDisposable, containerDisposable);\n        var viewSize;\n        if (typeof size === 'number') {\n          viewSize = size;\n        } else {\n          if (size.type === 'auto') {\n            if (this.areViewsDistributed()) {\n              size = {\n                type: 'distribute'\n              };\n            } else {\n              size = {\n                type: 'split',\n                index: size.index\n              };\n            }\n          }\n          if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n          } else if (size.type === 'invisible') {\n            viewSize = {\n              cachedVisibleSize: size.cachedVisibleSize\n            };\n          } else {\n            viewSize = view.minimumSize;\n          }\n        }\n        var item = this.orientation === 0 /* Orientation.VERTICAL */ ? new VerticalViewItem(container, view, viewSize, disposable) : new HorizontalViewItem(container, view, viewSize, disposable);\n        this.viewItems.splice(index, 0, item);\n        // Add sash\n        if (this.viewItems.length > 1) {\n          var opts = {\n            orthogonalStartSash: this.orthogonalStartSash,\n            orthogonalEndSash: this.orthogonalEndSash\n          };\n          var sash = this.orientation === 0 /* Orientation.VERTICAL */ ? new Sash(this.sashContainer, {\n            getHorizontalSashTop: function getHorizontalSashTop(s) {\n              return _this7.getSashPosition(s);\n            },\n            getHorizontalSashWidth: this.getSashOrthogonalSize\n          }, _objectSpread(_objectSpread({}, opts), {}, {\n            orientation: 1 /* Orientation.HORIZONTAL */\n          })) : new Sash(this.sashContainer, {\n            getVerticalSashLeft: function getVerticalSashLeft(s) {\n              return _this7.getSashPosition(s);\n            },\n            getVerticalSashHeight: this.getSashOrthogonalSize\n          }, _objectSpread(_objectSpread({}, opts), {}, {\n            orientation: 0 /* Orientation.VERTICAL */\n          }));\n          var sashEventMapper = this.orientation === 0 /* Orientation.VERTICAL */ ? function (e) {\n            return {\n              sash: sash,\n              start: e.startY,\n              current: e.currentY,\n              alt: e.altKey\n            };\n          } : function (e) {\n            return {\n              sash: sash,\n              start: e.startX,\n              current: e.currentX,\n              alt: e.altKey\n            };\n          };\n          var onStart = Event.map(sash.onDidStart, sashEventMapper);\n          var onStartDisposable = onStart(this.onSashStart, this);\n          var onChange = Event.map(sash.onDidChange, sashEventMapper);\n          var _onChangeDisposable = onChange(this.onSashChange, this);\n          var onEnd = Event.map(sash.onDidEnd, function () {\n            return _this7.sashItems.findIndex(function (item) {\n              return item.sash === sash;\n            });\n          });\n          var onEndDisposable = onEnd(this.onSashEnd, this);\n          var onDidResetDisposable = sash.onDidReset(function () {\n            var index = _this7.sashItems.findIndex(function (item) {\n              return item.sash === sash;\n            });\n            var upIndexes = range(index, -1);\n            var downIndexes = range(index + 1, _this7.viewItems.length);\n            var snapBeforeIndex = _this7.findFirstSnapIndex(upIndexes);\n            var snapAfterIndex = _this7.findFirstSnapIndex(downIndexes);\n            if (typeof snapBeforeIndex === 'number' && !_this7.viewItems[snapBeforeIndex].visible) {\n              return;\n            }\n            if (typeof snapAfterIndex === 'number' && !_this7.viewItems[snapAfterIndex].visible) {\n              return;\n            }\n            _this7._onDidSashReset.fire(index);\n          });\n          var _disposable = combinedDisposable(onStartDisposable, _onChangeDisposable, onEndDisposable, onDidResetDisposable, sash);\n          var sashItem = {\n            sash: sash,\n            disposable: _disposable\n          };\n          this.sashItems.splice(index - 1, 0, sashItem);\n        }\n        container.appendChild(view.element);\n        var highPriorityIndexes;\n        if (typeof size !== 'number' && size.type === 'split') {\n          highPriorityIndexes = [size.index];\n        }\n        if (!skipLayout) {\n          this.relayout([index], highPriorityIndexes);\n        }\n        if (!skipLayout && typeof size !== 'number' && size.type === 'distribute') {\n          this.distributeViewSizes();\n        }\n      } finally {\n        this.state = State.Idle;\n      }\n    }\n  }, {\n    key: \"relayout\",\n    value: function relayout(lowPriorityIndexes, highPriorityIndexes) {\n      var contentSize = this.viewItems.reduce(function (r, i) {\n        return r + i.size;\n      }, 0);\n      this.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n      this.distributeEmptySpace();\n      this.layoutViews();\n      this.saveProportions();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(index, delta) {\n      var _this8 = this;\n      var sizes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.viewItems.map(function (i) {\n        return i.size;\n      });\n      var lowPriorityIndexes = arguments.length > 3 ? arguments[3] : undefined;\n      var highPriorityIndexes = arguments.length > 4 ? arguments[4] : undefined;\n      var overloadMinDelta = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Number.NEGATIVE_INFINITY;\n      var overloadMaxDelta = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Number.POSITIVE_INFINITY;\n      var snapBefore = arguments.length > 7 ? arguments[7] : undefined;\n      var snapAfter = arguments.length > 8 ? arguments[8] : undefined;\n      if (index < 0 || index >= this.viewItems.length) {\n        return 0;\n      }\n      var upIndexes = range(index, -1);\n      var downIndexes = range(index + 1, this.viewItems.length);\n      if (highPriorityIndexes) {\n        var _iterator6 = _createForOfIteratorHelper(highPriorityIndexes),\n          _step6;\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var _index = _step6.value;\n            pushToStart(upIndexes, _index);\n            pushToStart(downIndexes, _index);\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n      if (lowPriorityIndexes) {\n        var _iterator7 = _createForOfIteratorHelper(lowPriorityIndexes),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var _index2 = _step7.value;\n            pushToEnd(upIndexes, _index2);\n            pushToEnd(downIndexes, _index2);\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n      }\n      var upItems = upIndexes.map(function (i) {\n        return _this8.viewItems[i];\n      });\n      var upSizes = upIndexes.map(function (i) {\n        return sizes[i];\n      });\n      var downItems = downIndexes.map(function (i) {\n        return _this8.viewItems[i];\n      });\n      var downSizes = downIndexes.map(function (i) {\n        return sizes[i];\n      });\n      var minDeltaUp = upIndexes.reduce(function (r, i) {\n        return r + (_this8.viewItems[i].minimumSize - sizes[i]);\n      }, 0);\n      var maxDeltaUp = upIndexes.reduce(function (r, i) {\n        return r + (_this8.viewItems[i].maximumSize - sizes[i]);\n      }, 0);\n      var maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce(function (r, i) {\n        return r + (sizes[i] - _this8.viewItems[i].minimumSize);\n      }, 0);\n      var minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce(function (r, i) {\n        return r + (sizes[i] - _this8.viewItems[i].maximumSize);\n      }, 0);\n      var minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n      var maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n      var snapped = false;\n      if (snapBefore) {\n        var snapView = this.viewItems[snapBefore.index];\n        var visible = delta >= snapBefore.limitDelta;\n        snapped = visible !== snapView.visible;\n        snapView.setVisible(visible, snapBefore.size);\n      }\n      if (!snapped && snapAfter) {\n        var _snapView = this.viewItems[snapAfter.index];\n        var _visible = delta < snapAfter.limitDelta;\n        snapped = _visible !== _snapView.visible;\n        _snapView.setVisible(_visible, snapAfter.size);\n      }\n      if (snapped) {\n        return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n      }\n      delta = clamp(delta, minDelta, maxDelta);\n      for (var i = 0, deltaUp = delta; i < upItems.length; i++) {\n        var item = upItems[i];\n        var size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n        var viewDelta = size - upSizes[i];\n        deltaUp -= viewDelta;\n        item.size = size;\n      }\n      for (var _i3 = 0, deltaDown = delta; _i3 < downItems.length; _i3++) {\n        var _item3 = downItems[_i3];\n        var _size = clamp(downSizes[_i3] - deltaDown, _item3.minimumSize, _item3.maximumSize);\n        var _viewDelta = _size - downSizes[_i3];\n        deltaDown += _viewDelta;\n        _item3.size = _size;\n      }\n      return delta;\n    }\n  }, {\n    key: \"distributeEmptySpace\",\n    value: function distributeEmptySpace(lowPriorityIndex) {\n      var _this9 = this;\n      var contentSize = this.viewItems.reduce(function (r, i) {\n        return r + i.size;\n      }, 0);\n      var emptyDelta = this.size - contentSize;\n      var indexes = range(this.viewItems.length - 1, -1);\n      var lowPriorityIndexes = indexes.filter(function (i) {\n        return _this9.viewItems[i].priority === 1;\n      } /* LayoutPriority.Low */);\n      var highPriorityIndexes = indexes.filter(function (i) {\n        return _this9.viewItems[i].priority === 2;\n      } /* LayoutPriority.High */);\n      var _iterator8 = _createForOfIteratorHelper(highPriorityIndexes),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var index = _step8.value;\n          pushToStart(indexes, index);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      var _iterator9 = _createForOfIteratorHelper(lowPriorityIndexes),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var _index3 = _step9.value;\n          pushToEnd(indexes, _index3);\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      if (typeof lowPriorityIndex === 'number') {\n        pushToEnd(indexes, lowPriorityIndex);\n      }\n      for (var i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n        var item = this.viewItems[indexes[i]];\n        var size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n        var viewDelta = size - item.size;\n        emptyDelta -= viewDelta;\n        item.size = size;\n      }\n    }\n  }, {\n    key: \"layoutViews\",\n    value: function layoutViews() {\n      // Save new content size\n      this._contentSize = this.viewItems.reduce(function (r, i) {\n        return r + i.size;\n      }, 0);\n      // Layout views\n      var offset = 0;\n      var _iterator10 = _createForOfIteratorHelper(this.viewItems),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var viewItem = _step10.value;\n          viewItem.layout(offset, this.layoutContext);\n          offset += viewItem.size;\n        }\n        // Layout sashes\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      this.sashItems.forEach(function (item) {\n        return item.sash.layout();\n      });\n      this.updateSashEnablement();\n      this.updateScrollableElement();\n    }\n  }, {\n    key: \"updateScrollableElement\",\n    value: function updateScrollableElement() {\n      if (this.orientation === 0 /* Orientation.VERTICAL */) {\n        this.scrollableElement.setScrollDimensions({\n          height: this.size,\n          scrollHeight: this._contentSize\n        });\n      } else {\n        this.scrollableElement.setScrollDimensions({\n          width: this.size,\n          scrollWidth: this._contentSize\n        });\n      }\n    }\n  }, {\n    key: \"updateSashEnablement\",\n    value: function updateSashEnablement() {\n      var previous = false;\n      var collapsesDown = this.viewItems.map(function (i) {\n        return previous = i.size - i.minimumSize > 0 || previous;\n      });\n      previous = false;\n      var expandsDown = this.viewItems.map(function (i) {\n        return previous = i.maximumSize - i.size > 0 || previous;\n      });\n      var reverseViews = _toConsumableArray(this.viewItems).reverse();\n      previous = false;\n      var collapsesUp = reverseViews.map(function (i) {\n        return previous = i.size - i.minimumSize > 0 || previous;\n      }).reverse();\n      previous = false;\n      var expandsUp = reverseViews.map(function (i) {\n        return previous = i.maximumSize - i.size > 0 || previous;\n      }).reverse();\n      var position = 0;\n      for (var index = 0; index < this.sashItems.length; index++) {\n        var sash = this.sashItems[index].sash;\n        var viewItem = this.viewItems[index];\n        position += viewItem.size;\n        var min = !(collapsesDown[index] && expandsUp[index + 1]);\n        var max = !(expandsDown[index] && collapsesUp[index + 1]);\n        if (min && max) {\n          var upIndexes = range(index, -1);\n          var downIndexes = range(index + 1, this.viewItems.length);\n          var snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n          var snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n          var snappedBefore = typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible;\n          var snappedAfter = typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible;\n          if (snappedBefore && collapsesUp[index] && (position > 0 || this.startSnappingEnabled)) {\n            sash.state = 1 /* SashState.AtMinimum */;\n          } else if (snappedAfter && collapsesDown[index] && (position < this._contentSize || this.endSnappingEnabled)) {\n            sash.state = 2 /* SashState.AtMaximum */;\n          } else {\n            sash.state = 0 /* SashState.Disabled */;\n          }\n        } else if (min && !max) {\n          sash.state = 1 /* SashState.AtMinimum */;\n        } else if (!min && max) {\n          sash.state = 2 /* SashState.AtMaximum */;\n        } else {\n          sash.state = 3 /* SashState.Enabled */;\n        }\n      }\n    }\n  }, {\n    key: \"getSashPosition\",\n    value: function getSashPosition(sash) {\n      var position = 0;\n      for (var i = 0; i < this.sashItems.length; i++) {\n        position += this.viewItems[i].size;\n        if (this.sashItems[i].sash === sash) {\n          return position;\n        }\n      }\n      return 0;\n    }\n  }, {\n    key: \"findFirstSnapIndex\",\n    value: function findFirstSnapIndex(indexes) {\n      // visible views first\n      var _iterator11 = _createForOfIteratorHelper(indexes),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var index = _step11.value;\n          var viewItem = this.viewItems[index];\n          if (!viewItem.visible) {\n            continue;\n          }\n          if (viewItem.snap) {\n            return index;\n          }\n        }\n        // then, hidden views\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      var _iterator12 = _createForOfIteratorHelper(indexes),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _index4 = _step12.value;\n          var _viewItem4 = this.viewItems[_index4];\n          if (_viewItem4.visible && _viewItem4.maximumSize - _viewItem4.minimumSize > 0) {\n            return undefined;\n          }\n          if (!_viewItem4.visible && _viewItem4.snap) {\n            return _index4;\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return undefined;\n    }\n  }, {\n    key: \"areViewsDistributed\",\n    value: function areViewsDistributed() {\n      var min = undefined,\n        max = undefined;\n      var _iterator13 = _createForOfIteratorHelper(this.viewItems),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var view = _step13.value;\n          min = min === undefined ? view.size : Math.min(min, view.size);\n          max = max === undefined ? view.size : Math.max(max, view.size);\n          if (max - min > 2) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _a;\n      (_a = this.sashDragState) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n      _dispose(this.viewItems);\n      this.viewItems = [];\n      this.sashItems.forEach(function (i) {\n        return i.disposable.dispose();\n      });\n      this.sashItems = [];\n      _get(_getPrototypeOf(SplitView.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n}(Disposable);","map":{"version":3,"names":["$","addDisposableListener","append","getWindow","scheduleAtNextAnimationFrame","DomEmitter","Sash","SmoothScrollableElement","pushToEnd","pushToStart","range","Color","Emitter","Event","combinedDisposable","Disposable","dispose","toDisposable","clamp","Scrollable","types","defaultStyles","separatorBorder","transparent","ViewItem","container","view","size","disposable","_classCallCheck","_cachedVisibleSize","undefined","_size","classList","add","cachedVisibleSize","_createClass","key","get","set","value","setVisible","visible","_a","_b","viewMinimumSize","viewMaximumSize","toggle","call","e","console","error","minimumSize","maximumSize","priority","proportionalLayout","snap","enabled","style","pointerEvents","layout","offset","layoutContext","layoutContainer","VerticalViewItem","_ViewItem","_callSuper","arguments","_inherits","top","concat","height","HorizontalViewItem","_ViewItem2","left","width","State","Sizing","Distribute","type","Split","index","Auto","Invisible","SplitView","_Disposable","_this","options","length","_c","_d","_e","_contentSize","proportions","viewItems","sashItems","state","Idle","_onDidSashChange","_register","_onDidSashReset","_startSnappingEnabled","_endSnappingEnabled","onDidSashChange","event","onDidSashReset","orientation","inverseAltBehavior","getSashOrthogonalSize","el","document","createElement","appendChild","sashContainer","viewContainer","scrollable","forceIntegerValues","smoothScrollDuration","callback","scrollableElement","vertical","scrollbarVisibility","horizontal","onDidScrollViewContainer","_","position","getScrollPosition","scrollLeft","Math","abs","scrollTop","setScrollPosition","onDidScroll","onScroll","scrollTopChanged","scrollLeftChanged","getDomNode","styles","descriptor","views","forEach","viewDescriptor","sizing","isUndefined","doAddView","reduce","r","i","saveProportions","_orthogonalStartSash","sash","_iterator","_createForOfIteratorHelper","_step","s","n","done","sashItem","orthogonalStartSash","err","f","_orthogonalEndSash","_iterator2","_step2","orthogonalEndSash","startSnappingEnabled","updateSashEnablement","endSnappingEnabled","isTransparent","remove","removeProperty","setProperty","toString","addView","skipLayout","_this2","previousSize","max","indexes","lowPriorityIndexes","filter","highPriorityIndexes","resize","total","item","proportion","round","distributeEmptySpace","layoutViews","_this3","map","v","onSashStart","_ref","_this4","start","alt","_iterator3","_step3","findIndex","ownerDocument","body","resetSashDragState","sashDragState","current","altKey","sizes","minDelta","Number","NEGATIVE_INFINITY","maxDelta","POSITIVE_INFINITY","isLastSash","viewItem","snapBefore","snapAfter","upIndexes","downIndexes","minDeltaUp","maxDeltaUp","maxDeltaDown","minDeltaDown","min","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","halfSize","floor","limitDelta","onSashChange","_ref2","_this$sashDragState","delta","newDelta","newSizes","viewItemIndex","newMinDelta","newMaxDelta","resizeIndex","onSashEnd","fire","_iterator4","_step4","onViewChange","indexOf","relayout","resizeView","_this5","Error","Busy","_toConsumableArray","distributeViewSizes","_this6","flexibleViewItems","flexibleSize","_iterator5","_step5","push","_i2","_flexibleViewItems","getViewSize","_this7","insertBefore","children","onChangeDisposable","onDidChange","containerDisposable","removeChild","viewSize","areViewsDistributed","splice","opts","getHorizontalSashTop","getSashPosition","getHorizontalSashWidth","_objectSpread","getVerticalSashLeft","getVerticalSashHeight","sashEventMapper","startY","currentY","startX","currentX","onStart","onDidStart","onStartDisposable","onChange","onEnd","onDidEnd","onEndDisposable","onDidResetDisposable","onDidReset","element","contentSize","_this8","overloadMinDelta","overloadMaxDelta","_iterator6","_step6","_iterator7","_step7","upItems","upSizes","downItems","downSizes","snapped","snapView","deltaUp","viewDelta","deltaDown","lowPriorityIndex","_this9","emptyDelta","_iterator8","_step8","_iterator9","_step9","_iterator10","_step10","updateScrollableElement","setScrollDimensions","scrollHeight","scrollWidth","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","snappedBefore","snappedAfter","_iterator11","_step11","_iterator12","_step12","_iterator13","_step13","_get","_getPrototypeOf","prototype"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/browser/ui/splitview/splitview.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, getWindow, scheduleAtNextAnimationFrame } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { Sash } from '../sash/sash.js';\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { pushToEnd, pushToStart, range } from '../../../common/arrays.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { combinedDisposable, Disposable, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport * as types from '../../../common/types.js';\nimport './splitview.css';\nconst defaultStyles = {\n    separatorBorder: Color.transparent\n};\nclass ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        var _a, _b;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp(this._cachedVisibleSize, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize = typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        try {\n            (_b = (_a = this.view).setVisible) === null || _b === void 0 ? void 0 : _b.call(_a, visible);\n        }\n        catch (e) {\n            console.error('Splitview: Failed to set visible view');\n            console.error(e);\n        }\n    }\n    get minimumSize() { return this.visible ? this.view.minimumSize : 0; }\n    get viewMinimumSize() { return this.view.minimumSize; }\n    get maximumSize() { return this.visible ? this.view.maximumSize : 0; }\n    get viewMaximumSize() { return this.view.maximumSize; }\n    get priority() { return this.view.priority; }\n    get proportionalLayout() { var _a; return (_a = this.view.proportionalLayout) !== null && _a !== void 0 ? _a : true; }\n    get snap() { return !!this.view.snap; }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    layout(offset, layoutContext) {\n        this.layoutContainer(offset);\n        try {\n            this.view.layout(this.size, offset, layoutContext);\n        }\n        catch (e) {\n            console.error('Splitview: Failed to layout view');\n            console.error(e);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n    }\n}\nclass VerticalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.top = `${offset}px`;\n        this.container.style.height = `${this.size}px`;\n    }\n}\nclass HorizontalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.left = `${offset}px`;\n        this.container.style.width = `${this.size}px`;\n    }\n}\nvar State;\n(function (State) {\n    State[State[\"Idle\"] = 0] = \"Idle\";\n    State[State[\"Busy\"] = 1] = \"Busy\";\n})(State || (State = {}));\nexport var Sizing;\n(function (Sizing) {\n    /**\n     * When adding or removing views, distribute the delta space among\n     * all other views.\n     */\n    Sizing.Distribute = { type: 'distribute' };\n    /**\n     * When adding or removing views, split the delta space with another\n     * specific view, indexed by the provided `index`.\n     */\n    function Split(index) { return { type: 'split', index }; }\n    Sizing.Split = Split;\n    /**\n     * When adding a view, use DistributeSizing when all pre-existing views are\n     * distributed evenly, otherwise use SplitSizing.\n     */\n    function Auto(index) { return { type: 'auto', index }; }\n    Sizing.Auto = Auto;\n    /**\n     * When adding or removing views, assume the view is invisible.\n     */\n    function Invisible(cachedVisibleSize) { return { type: 'invisible', cachedVisibleSize }; }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\n/**\n * The {@link SplitView} is the UI component which implements a one dimensional\n * flex-like layout algorithm for a collection of {@link IView} instances, which\n * are essentially HTMLElement instances with the following size constraints:\n *\n * - {@link IView.minimumSize}\n * - {@link IView.maximumSize}\n * - {@link IView.priority}\n * - {@link IView.snap}\n *\n * In case the SplitView doesn't have enough size to fit all views, it will overflow\n * its content with a scrollbar.\n *\n * In between each pair of views there will be a {@link Sash} allowing the user\n * to resize the views, making sure the constraints are respected.\n *\n * An optional {@link TLayoutContext layout context type} may be used in order to\n * pass along layout contextual data from the {@link SplitView.layout} method down\n * to each view's {@link IView.layout} calls.\n *\n * Features:\n * - Flex-like layout algorithm\n * - Snap support\n * - Orthogonal sash support, for corner sashes\n * - View hide/show support\n * - View swap/move support\n * - Alt key modifier behavior, macOS style\n */\nexport class SplitView extends Disposable {\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    get startSnappingEnabled() { return this._startSnappingEnabled; }\n    get endSnappingEnabled() { return this._endSnappingEnabled; }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the left- or top-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalStartSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalStartSash = sash;\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the right- or bottom-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalEndSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalEndSash = sash;\n        }\n        this._orthogonalEndSash = sash;\n    }\n    /**\n     * Enable/disable snapping at the beginning of this {@link SplitView}.\n     */\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    /**\n     * Enable/disable snapping at the end of this {@link SplitView}.\n     */\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    /**\n     * Create a new {@link SplitView} instance.\n     */\n    constructor(container, options = {}) {\n        var _a, _b, _c, _d, _e;\n        super();\n        this.size = 0;\n        this._contentSize = 0;\n        this.proportions = undefined;\n        this.viewItems = [];\n        this.sashItems = []; // used in tests\n        this.state = State.Idle;\n        this._onDidSashChange = this._register(new Emitter());\n        this._onDidSashReset = this._register(new Emitter());\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        /**\n         * Fires whenever the user resizes a {@link Sash sash}.\n         */\n        this.onDidSashChange = this._onDidSashChange.event;\n        /**\n         * Fires whenever the user double clicks a {@link Sash sash}.\n         */\n        this.onDidSashReset = this._onDidSashReset.event;\n        this.orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : 0 /* Orientation.VERTICAL */;\n        this.inverseAltBehavior = (_b = options.inverseAltBehavior) !== null && _b !== void 0 ? _b : false;\n        this.proportionalLayout = (_c = options.proportionalLayout) !== null && _c !== void 0 ? _c : true;\n        this.getSashOrthogonalSize = options.getSashOrthogonalSize;\n        this.el = document.createElement('div');\n        this.el.classList.add('monaco-split-view2');\n        this.el.classList.add(this.orientation === 0 /* Orientation.VERTICAL */ ? 'vertical' : 'horizontal');\n        container.appendChild(this.el);\n        this.sashContainer = append(this.el, $('.sash-container'));\n        this.viewContainer = $('.split-view-container');\n        this.scrollable = this._register(new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 125,\n            scheduleAtNextAnimationFrame: callback => scheduleAtNextAnimationFrame(getWindow(this.el), callback),\n        }));\n        this.scrollableElement = this._register(new SmoothScrollableElement(this.viewContainer, {\n            vertical: this.orientation === 0 /* Orientation.VERTICAL */ ? ((_d = options.scrollbarVisibility) !== null && _d !== void 0 ? _d : 1 /* ScrollbarVisibility.Auto */) : 2 /* ScrollbarVisibility.Hidden */,\n            horizontal: this.orientation === 1 /* Orientation.HORIZONTAL */ ? ((_e = options.scrollbarVisibility) !== null && _e !== void 0 ? _e : 1 /* ScrollbarVisibility.Auto */) : 2 /* ScrollbarVisibility.Hidden */\n        }, this.scrollable));\n        // https://github.com/microsoft/vscode/issues/157737\n        const onDidScrollViewContainer = this._register(new DomEmitter(this.viewContainer, 'scroll')).event;\n        this._register(onDidScrollViewContainer(_ => {\n            const position = this.scrollableElement.getScrollPosition();\n            const scrollLeft = Math.abs(this.viewContainer.scrollLeft - position.scrollLeft) <= 1 ? undefined : this.viewContainer.scrollLeft;\n            const scrollTop = Math.abs(this.viewContainer.scrollTop - position.scrollTop) <= 1 ? undefined : this.viewContainer.scrollTop;\n            if (scrollLeft !== undefined || scrollTop !== undefined) {\n                this.scrollableElement.setScrollPosition({ scrollLeft, scrollTop });\n            }\n        }));\n        this.onDidScroll = this.scrollableElement.onScroll;\n        this._register(this.onDidScroll(e => {\n            if (e.scrollTopChanged) {\n                this.viewContainer.scrollTop = e.scrollTop;\n            }\n            if (e.scrollLeftChanged) {\n                this.viewContainer.scrollLeft = e.scrollLeft;\n            }\n        }));\n        append(this.el, this.scrollableElement.getDomNode());\n        this.style(options.styles || defaultStyles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this.size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = types.isUndefined(viewDescriptor.visible) || viewDescriptor.visible ? viewDescriptor.size : { type: 'invisible', cachedVisibleSize: viewDescriptor.size };\n                const view = viewDescriptor.view;\n                this.doAddView(view, sizing, index, true);\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if (styles.separatorBorder.isTransparent()) {\n            this.el.classList.remove('separator-border');\n            this.el.style.removeProperty('--separator-border');\n        }\n        else {\n            this.el.classList.add('separator-border');\n            this.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n        }\n    }\n    /**\n     * Add a {@link IView view} to this {@link SplitView}.\n     *\n     * @param view The view to add.\n     * @param size Either a fixed size, or a dynamic {@link Sizing} strategy.\n     * @param index The index to insert the view on.\n     * @param skipLayout Whether layout should be skipped.\n     */\n    addView(view, size, index = this.viewItems.length, skipLayout) {\n        this.doAddView(view, size, index, skipLayout);\n    }\n    /**\n     * Layout the {@link SplitView}.\n     *\n     * @param size The entire size of the {@link SplitView}.\n     * @param layoutContext An optional layout context to pass along to {@link IView views}.\n     */\n    layout(size, layoutContext) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.layoutContext = layoutContext;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n            const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round(proportion * size / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this.proportions = this.viewItems.map(v => v.proportionalLayout && v.visible ? v.size / this._contentSize : undefined);\n        }\n    }\n    onSashStart({ sash, start, alt }) {\n        for (const item of this.viewItems) {\n            item.enabled = false;\n        }\n        const index = this.sashItems.findIndex(item => item.sash === sash);\n        // This way, we can press Alt while we resize a sash, macOS style!\n        const disposable = combinedDisposable(addDisposableListener(this.el.ownerDocument.body, 'keydown', e => resetSashDragState(this.sashDragState.current, e.altKey)), addDisposableListener(this.el.ownerDocument.body, 'keyup', () => resetSashDragState(this.sashDragState.current, false)));\n        const resetSashDragState = (start, alt) => {\n            const sizes = this.viewItems.map(i => i.size);\n            let minDelta = Number.NEGATIVE_INFINITY;\n            let maxDelta = Number.POSITIVE_INFINITY;\n            if (this.inverseAltBehavior) {\n                alt = !alt;\n            }\n            if (alt) {\n                // When we're using the last sash with Alt, we're resizing\n                // the view to the left/up, instead of right/down as usual\n                // Thus, we must do the inverse of the usual\n                const isLastSash = index === this.sashItems.length - 1;\n                if (isLastSash) {\n                    const viewItem = this.viewItems[index];\n                    minDelta = (viewItem.minimumSize - viewItem.size) / 2;\n                    maxDelta = (viewItem.maximumSize - viewItem.size) / 2;\n                }\n                else {\n                    const viewItem = this.viewItems[index + 1];\n                    minDelta = (viewItem.size - viewItem.maximumSize) / 2;\n                    maxDelta = (viewItem.size - viewItem.minimumSize) / 2;\n                }\n            }\n            let snapBefore;\n            let snapAfter;\n            if (!alt) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const viewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: viewItem.visible ? minDelta - halfSize : minDelta + halfSize,\n                        size: viewItem.size\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const viewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: viewItem.visible ? maxDelta + halfSize : maxDelta - halfSize,\n                        size: viewItem.size\n                    };\n                }\n            }\n            this.sashDragState = { start, current: start, index, sizes, minDelta, maxDelta, alt, snapBefore, snapAfter, disposable };\n        };\n        resetSashDragState(start, alt);\n    }\n    onSashChange({ current }) {\n        const { index, start, sizes, alt, minDelta, maxDelta, snapBefore, snapAfter } = this.sashDragState;\n        this.sashDragState.current = current;\n        const delta = current - start;\n        const newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n        if (alt) {\n            const isLastSash = index === this.sashItems.length - 1;\n            const newSizes = this.viewItems.map(i => i.size);\n            const viewItemIndex = isLastSash ? index : index + 1;\n            const viewItem = this.viewItems[viewItemIndex];\n            const newMinDelta = viewItem.size - viewItem.maximumSize;\n            const newMaxDelta = viewItem.size - viewItem.minimumSize;\n            const resizeIndex = isLastSash ? index - 1 : index + 1;\n            this.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    onSashEnd(index) {\n        this._onDidSashChange.fire(index);\n        this.sashDragState.disposable.dispose();\n        this.saveProportions();\n        for (const item of this.viewItems) {\n            item.enabled = true;\n        }\n    }\n    onViewChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        if (this.inverseAltBehavior && index > 0) {\n            // In this case, we want the view to grow or shrink both sides equally\n            // so we just resize the \"left\" side by half and let `resize` do the clamping magic\n            this.resize(index - 1, Math.floor((item.size - size) / 2));\n            this.distributeEmptySpace();\n            this.layoutViews();\n        }\n        else {\n            item.size = size;\n            this.relayout([index], undefined);\n        }\n    }\n    /**\n     * Resize a {@link IView view} within the {@link SplitView}.\n     *\n     * @param index The {@link IView view} index.\n     * @param size The {@link IView view} size.\n     */\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        try {\n            const indexes = range(this.viewItems.length).filter(i => i !== index);\n            const lowPriorityIndexes = [...indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */), index];\n            const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n            const item = this.viewItems[index];\n            size = Math.round(size);\n            size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this.size));\n            item.size = size;\n            this.relayout(lowPriorityIndexes, highPriorityIndexes);\n        }\n        finally {\n            this.state = State.Idle;\n        }\n    }\n    /**\n     * Distribute the entire {@link SplitView} size among all {@link IView views}.\n     */\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    /**\n     * Returns the size of a {@link IView view}.\n     */\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    doAddView(view, size, index = this.viewItems.length, skipLayout) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        try {\n            // Add view\n            const container = $('.split-view-view');\n            if (index === this.viewItems.length) {\n                this.viewContainer.appendChild(container);\n            }\n            else {\n                this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n            }\n            const onChangeDisposable = view.onDidChange(size => this.onViewChange(item, size));\n            const containerDisposable = toDisposable(() => this.viewContainer.removeChild(container));\n            const disposable = combinedDisposable(onChangeDisposable, containerDisposable);\n            let viewSize;\n            if (typeof size === 'number') {\n                viewSize = size;\n            }\n            else {\n                if (size.type === 'auto') {\n                    if (this.areViewsDistributed()) {\n                        size = { type: 'distribute' };\n                    }\n                    else {\n                        size = { type: 'split', index: size.index };\n                    }\n                }\n                if (size.type === 'split') {\n                    viewSize = this.getViewSize(size.index) / 2;\n                }\n                else if (size.type === 'invisible') {\n                    viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n                }\n                else {\n                    viewSize = view.minimumSize;\n                }\n            }\n            const item = this.orientation === 0 /* Orientation.VERTICAL */\n                ? new VerticalViewItem(container, view, viewSize, disposable)\n                : new HorizontalViewItem(container, view, viewSize, disposable);\n            this.viewItems.splice(index, 0, item);\n            // Add sash\n            if (this.viewItems.length > 1) {\n                const opts = { orthogonalStartSash: this.orthogonalStartSash, orthogonalEndSash: this.orthogonalEndSash };\n                const sash = this.orientation === 0 /* Orientation.VERTICAL */\n                    ? new Sash(this.sashContainer, { getHorizontalSashTop: s => this.getSashPosition(s), getHorizontalSashWidth: this.getSashOrthogonalSize }, { ...opts, orientation: 1 /* Orientation.HORIZONTAL */ })\n                    : new Sash(this.sashContainer, { getVerticalSashLeft: s => this.getSashPosition(s), getVerticalSashHeight: this.getSashOrthogonalSize }, { ...opts, orientation: 0 /* Orientation.VERTICAL */ });\n                const sashEventMapper = this.orientation === 0 /* Orientation.VERTICAL */\n                    ? (e) => ({ sash, start: e.startY, current: e.currentY, alt: e.altKey })\n                    : (e) => ({ sash, start: e.startX, current: e.currentX, alt: e.altKey });\n                const onStart = Event.map(sash.onDidStart, sashEventMapper);\n                const onStartDisposable = onStart(this.onSashStart, this);\n                const onChange = Event.map(sash.onDidChange, sashEventMapper);\n                const onChangeDisposable = onChange(this.onSashChange, this);\n                const onEnd = Event.map(sash.onDidEnd, () => this.sashItems.findIndex(item => item.sash === sash));\n                const onEndDisposable = onEnd(this.onSashEnd, this);\n                const onDidResetDisposable = sash.onDidReset(() => {\n                    const index = this.sashItems.findIndex(item => item.sash === sash);\n                    const upIndexes = range(index, -1);\n                    const downIndexes = range(index + 1, this.viewItems.length);\n                    const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                    const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                    if (typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible) {\n                        return;\n                    }\n                    if (typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible) {\n                        return;\n                    }\n                    this._onDidSashReset.fire(index);\n                });\n                const disposable = combinedDisposable(onStartDisposable, onChangeDisposable, onEndDisposable, onDidResetDisposable, sash);\n                const sashItem = { sash, disposable };\n                this.sashItems.splice(index - 1, 0, sashItem);\n            }\n            container.appendChild(view.element);\n            let highPriorityIndexes;\n            if (typeof size !== 'number' && size.type === 'split') {\n                highPriorityIndexes = [size.index];\n            }\n            if (!skipLayout) {\n                this.relayout([index], highPriorityIndexes);\n            }\n            if (!skipLayout && typeof size !== 'number' && size.type === 'distribute') {\n                this.distributeViewSizes();\n            }\n        }\n        finally {\n            this.state = State.Idle;\n        }\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    resize(index, delta, sizes = this.viewItems.map(i => i.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return 0;\n        }\n        const upIndexes = range(index, -1);\n        const downIndexes = range(index + 1, this.viewItems.length);\n        if (highPriorityIndexes) {\n            for (const index of highPriorityIndexes) {\n                pushToStart(upIndexes, index);\n                pushToStart(downIndexes, index);\n            }\n        }\n        if (lowPriorityIndexes) {\n            for (const index of lowPriorityIndexes) {\n                pushToEnd(upIndexes, index);\n                pushToEnd(downIndexes, index);\n            }\n        }\n        const upItems = upIndexes.map(i => this.viewItems[i]);\n        const upSizes = upIndexes.map(i => sizes[i]);\n        const downItems = downIndexes.map(i => this.viewItems[i]);\n        const downSizes = downIndexes.map(i => sizes[i]);\n        const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n        const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].maximumSize - sizes[i]), 0);\n        const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n        const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].maximumSize), 0);\n        const minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n        const maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n        let snapped = false;\n        if (snapBefore) {\n            const snapView = this.viewItems[snapBefore.index];\n            const visible = delta >= snapBefore.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapBefore.size);\n        }\n        if (!snapped && snapAfter) {\n            const snapView = this.viewItems[snapAfter.index];\n            const visible = delta < snapAfter.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapAfter.size);\n        }\n        if (snapped) {\n            return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n        }\n        delta = clamp(delta, minDelta, maxDelta);\n        for (let i = 0, deltaUp = delta; i < upItems.length; i++) {\n            const item = upItems[i];\n            const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n            const viewDelta = size - upSizes[i];\n            deltaUp -= viewDelta;\n            item.size = size;\n        }\n        for (let i = 0, deltaDown = delta; i < downItems.length; i++) {\n            const item = downItems[i];\n            const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n            const viewDelta = size - downSizes[i];\n            deltaDown += viewDelta;\n            item.size = size;\n        }\n        return delta;\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    layoutViews() {\n        // Save new content size\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        // Layout views\n        let offset = 0;\n        for (const viewItem of this.viewItems) {\n            viewItem.layout(offset, this.layoutContext);\n            offset += viewItem.size;\n        }\n        // Layout sashes\n        this.sashItems.forEach(item => item.sash.layout());\n        this.updateSashEnablement();\n        this.updateScrollableElement();\n    }\n    updateScrollableElement() {\n        if (this.orientation === 0 /* Orientation.VERTICAL */) {\n            this.scrollableElement.setScrollDimensions({\n                height: this.size,\n                scrollHeight: this._contentSize\n            });\n        }\n        else {\n            this.scrollableElement.setScrollDimensions({\n                width: this.size,\n                scrollWidth: this._contentSize\n            });\n        }\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map(i => previous = (i.size - i.minimumSize > 0) || previous);\n        previous = false;\n        const expandsDown = this.viewItems.map(i => previous = (i.maximumSize - i.size > 0) || previous);\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews.map(i => previous = (i.size - i.minimumSize > 0) || previous).reverse();\n        previous = false;\n        const expandsUp = reverseViews.map(i => previous = (i.maximumSize - i.size > 0) || previous).reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashItems.length; index++) {\n            const { sash } = this.sashItems[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore && collapsesUp[index] && (position > 0 || this.startSnappingEnabled)) {\n                    sash.state = 1 /* SashState.AtMinimum */;\n                }\n                else if (snappedAfter && collapsesDown[index] && (position < this._contentSize || this.endSnappingEnabled)) {\n                    sash.state = 2 /* SashState.AtMaximum */;\n                }\n                else {\n                    sash.state = 0 /* SashState.Disabled */;\n                }\n            }\n            else if (min && !max) {\n                sash.state = 1 /* SashState.AtMinimum */;\n            }\n            else if (!min && max) {\n                sash.state = 2 /* SashState.AtMaximum */;\n            }\n            else {\n                sash.state = 3 /* SashState.Enabled */;\n            }\n        }\n    }\n    getSashPosition(sash) {\n        let position = 0;\n        for (let i = 0; i < this.sashItems.length; i++) {\n            position += this.viewItems[i].size;\n            if (this.sashItems[i].sash === sash) {\n                return position;\n            }\n        }\n        return 0;\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible && viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    areViewsDistributed() {\n        let min = undefined, max = undefined;\n        for (const view of this.viewItems) {\n            min = min === undefined ? view.size : Math.min(min, view.size);\n            max = max === undefined ? view.size : Math.max(max, view.size);\n            if (max - min > 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n    dispose() {\n        var _a;\n        (_a = this.sashDragState) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        dispose(this.viewItems);\n        this.viewItems = [];\n        this.sashItems.forEach(i => i.disposable.dispose());\n        this.sashItems = [];\n        super.dispose();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}