{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/clojure/clojure.contribution.ts\nimport { registerLanguage } from \"../_.contribution.js\";\nregisterLanguage({\n  id: \"clojure\",\n  extensions: [\".clj\", \".cljs\", \".cljc\", \".edn\"],\n  aliases: [\"clojure\", \"Clojure\"],\n  loader: function loader() {\n    if (false) {\n      return new Promise(function (resolve, reject) {\n        __require([\"vs/basic-languages/clojure/clojure\"], resolve, reject);\n      });\n    } else {\n      return import(\"./clojure.js\");\n    }\n  }\n});","map":{"version":3,"names":["registerLanguage","id","extensions","aliases","loader","Promise","resolve","reject","__require"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/clojure/clojure.contribution.ts\nimport { registerLanguage } from \"../_.contribution.js\";\nregisterLanguage({\n  id: \"clojure\",\n  extensions: [\".clj\", \".cljs\", \".cljc\", \".edn\"],\n  aliases: [\"clojure\", \"Clojure\"],\n  loader: () => {\n    if (false) {\n      return new Promise((resolve, reject) => {\n        __require([\"vs/basic-languages/clojure/clojure\"], resolve, reject);\n      });\n    } else {\n      return import(\"./clojure.js\");\n    }\n  }\n});\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,SAASA,gBAAgB,QAAQ,sBAAsB;AACvDA,gBAAgB,CAAC;EACfC,EAAE,EAAE,SAAS;EACbC,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;EAC9CC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EAC/BC,MAAM,EAAE,SAAAA,OAAA,EAAM;IACZ,IAAI,KAAK,EAAE;MACT,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACtCC,SAAS,CAAC,CAAC,oCAAoC,CAAC,EAAEF,OAAO,EAAEC,MAAM,CAAC;MACpE,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,OAAO,MAAM,CAAC,cAAc,CAAC;IAC/B;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}