{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { Position } from '../../../common/core/position.js';\nexport var AbstractLineHighlightOverlay = /*#__PURE__*/function (_DynamicViewOverlay) {\n  function AbstractLineHighlightOverlay(context) {\n    var _this;\n    _classCallCheck(this, AbstractLineHighlightOverlay);\n    _this = _callSuper(this, AbstractLineHighlightOverlay);\n    _this._context = context;\n    var options = _this._context.configuration.options;\n    var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n    _this._renderLineHighlight = options.get(96 /* EditorOption.renderLineHighlight */);\n    _this._renderLineHighlightOnlyWhenFocus = options.get(97 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n    _this._wordWrap = layoutInfo.isViewportWrapping;\n    _this._contentLeft = layoutInfo.contentLeft;\n    _this._contentWidth = layoutInfo.contentWidth;\n    _this._selectionIsEmpty = true;\n    _this._focused = false;\n    _this._cursorLineNumbers = [1];\n    _this._selections = [new Selection(1, 1, 1, 1)];\n    _this._renderData = null;\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  _inherits(AbstractLineHighlightOverlay, _DynamicViewOverlay);\n  return _createClass(AbstractLineHighlightOverlay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n      _get(_getPrototypeOf(AbstractLineHighlightOverlay.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"_readFromSelections\",\n    value: function _readFromSelections() {\n      var hasChanged = false;\n      var lineNumbers = new Set();\n      var _iterator = _createForOfIteratorHelper(this._selections),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var selection = _step.value;\n          lineNumbers.add(selection.positionLineNumber);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var cursorsLineNumbers = Array.from(lineNumbers);\n      cursorsLineNumbers.sort(function (a, b) {\n        return a - b;\n      });\n      if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n        this._cursorLineNumbers = cursorsLineNumbers;\n        hasChanged = true;\n      }\n      var selectionIsEmpty = this._selections.every(function (s) {\n        return s.isEmpty();\n      });\n      if (this._selectionIsEmpty !== selectionIsEmpty) {\n        this._selectionIsEmpty = selectionIsEmpty;\n        hasChanged = true;\n      }\n      return hasChanged;\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onThemeChanged\",\n    value: function onThemeChanged(e) {\n      return this._readFromSelections();\n    }\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n      this._renderLineHighlight = options.get(96 /* EditorOption.renderLineHighlight */);\n      this._renderLineHighlightOnlyWhenFocus = options.get(97 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n      this._wordWrap = layoutInfo.isViewportWrapping;\n      this._contentLeft = layoutInfo.contentLeft;\n      this._contentWidth = layoutInfo.contentWidth;\n      return true;\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._selections = e.selections;\n      return this._readFromSelections();\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollWidthChanged || e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onFocusChanged\",\n    value: function onFocusChanged(e) {\n      if (!this._renderLineHighlightOnlyWhenFocus) {\n        return false;\n      }\n      this._focused = e.isFocused;\n      return true;\n    }\n    // --- end event handlers\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      if (!this._shouldRenderThis()) {\n        this._renderData = null;\n        return;\n      }\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n      // initialize renderData\n      var renderData = [];\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        renderData[lineIndex] = '';\n      }\n      if (this._wordWrap) {\n        // do a first pass to render wrapped lines\n        var renderedLineWrapped = this._renderOne(ctx, false);\n        var _iterator2 = _createForOfIteratorHelper(this._cursorLineNumbers),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var cursorLineNumber = _step2.value;\n            var coordinatesConverter = this._context.viewModel.coordinatesConverter;\n            var modelLineNumber = coordinatesConverter.convertViewPositionToModelPosition(new Position(cursorLineNumber, 1)).lineNumber;\n            var firstViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, 1)).lineNumber;\n            var lastViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, this._context.viewModel.model.getLineMaxColumn(modelLineNumber))).lineNumber;\n            var firstLine = Math.max(firstViewLineNumber, visibleStartLineNumber);\n            var lastLine = Math.min(lastViewLineNumber, visibleEndLineNumber);\n            for (var _lineNumber = firstLine; _lineNumber <= lastLine; _lineNumber++) {\n              var _lineIndex = _lineNumber - visibleStartLineNumber;\n              renderData[_lineIndex] = renderedLineWrapped;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n      // do a second pass to render exact lines\n      var renderedLineExact = this._renderOne(ctx, true);\n      var _iterator3 = _createForOfIteratorHelper(this._cursorLineNumbers),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _cursorLineNumber = _step3.value;\n          if (_cursorLineNumber < visibleStartLineNumber || _cursorLineNumber > visibleEndLineNumber) {\n            continue;\n          }\n          var _lineIndex2 = _cursorLineNumber - visibleStartLineNumber;\n          renderData[_lineIndex2] = renderedLineExact;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._renderData = renderData;\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderData) {\n        return '';\n      }\n      var lineIndex = lineNumber - startLineNumber;\n      if (lineIndex >= this._renderData.length) {\n        return '';\n      }\n      return this._renderData[lineIndex];\n    }\n  }, {\n    key: \"_shouldRenderInMargin\",\n    value: function _shouldRenderInMargin() {\n      return (this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all') && (!this._renderLineHighlightOnlyWhenFocus || this._focused);\n    }\n  }, {\n    key: \"_shouldRenderInContent\",\n    value: function _shouldRenderInContent() {\n      return (this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all') && this._selectionIsEmpty && (!this._renderLineHighlightOnlyWhenFocus || this._focused);\n    }\n  }]);\n}(DynamicViewOverlay);\nexport var CurrentLineHighlightOverlay = /*#__PURE__*/function (_AbstractLineHighligh) {\n  function CurrentLineHighlightOverlay() {\n    _classCallCheck(this, CurrentLineHighlightOverlay);\n    return _callSuper(this, CurrentLineHighlightOverlay, arguments);\n  }\n  _inherits(CurrentLineHighlightOverlay, _AbstractLineHighligh);\n  return _createClass(CurrentLineHighlightOverlay, [{\n    key: \"_renderOne\",\n    value: function _renderOne(ctx, exact) {\n      var className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-both' : '') + (exact ? ' current-line-exact' : '');\n      return \"<div class=\\\"\".concat(className, \"\\\" style=\\\"width:\").concat(Math.max(ctx.scrollWidth, this._contentWidth), \"px;\\\"></div>\");\n    }\n  }, {\n    key: \"_shouldRenderThis\",\n    value: function _shouldRenderThis() {\n      return this._shouldRenderInContent();\n    }\n  }, {\n    key: \"_shouldRenderOther\",\n    value: function _shouldRenderOther() {\n      return this._shouldRenderInMargin();\n    }\n  }]);\n}(AbstractLineHighlightOverlay);\nexport var CurrentLineMarginHighlightOverlay = /*#__PURE__*/function (_AbstractLineHighligh2) {\n  function CurrentLineMarginHighlightOverlay() {\n    _classCallCheck(this, CurrentLineMarginHighlightOverlay);\n    return _callSuper(this, CurrentLineMarginHighlightOverlay, arguments);\n  }\n  _inherits(CurrentLineMarginHighlightOverlay, _AbstractLineHighligh2);\n  return _createClass(CurrentLineMarginHighlightOverlay, [{\n    key: \"_renderOne\",\n    value: function _renderOne(ctx, exact) {\n      var className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '') + (this._shouldRenderInMargin() && exact ? ' current-line-exact-margin' : '');\n      return \"<div class=\\\"\".concat(className, \"\\\" style=\\\"width:\").concat(this._contentLeft, \"px\\\"></div>\");\n    }\n  }, {\n    key: \"_shouldRenderThis\",\n    value: function _shouldRenderThis() {\n      return true;\n    }\n  }, {\n    key: \"_shouldRenderOther\",\n    value: function _shouldRenderOther() {\n      return this._shouldRenderInContent();\n    }\n  }]);\n}(AbstractLineHighlightOverlay);\nregisterThemingParticipant(function (theme, collector) {\n  var lineHighlight = theme.getColor(editorLineHighlight);\n  if (lineHighlight) {\n    collector.addRule(\".monaco-editor .view-overlays .current-line { background-color: \".concat(lineHighlight, \"; }\"));\n    collector.addRule(\".monaco-editor .margin-view-overlays .current-line-margin { background-color: \".concat(lineHighlight, \"; border: none; }\"));\n  }\n  if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n    var lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n    if (lineHighlightBorder) {\n      collector.addRule(\".monaco-editor .view-overlays .current-line-exact { border: 2px solid \".concat(lineHighlightBorder, \"; }\"));\n      collector.addRule(\".monaco-editor .margin-view-overlays .current-line-exact-margin { border: 2px solid \".concat(lineHighlightBorder, \"; }\"));\n      if (isHighContrast(theme.type)) {\n        collector.addRule(\".monaco-editor .view-overlays .current-line-exact { border-width: 1px; }\");\n        collector.addRule(\".monaco-editor .margin-view-overlays .current-line-exact-margin { border-width: 1px; }\");\n      }\n    }\n  }\n});","map":{"version":3,"names":["DynamicViewOverlay","editorLineHighlight","editorLineHighlightBorder","arrays","registerThemingParticipant","Selection","isHighContrast","Position","AbstractLineHighlightOverlay","_DynamicViewOverlay","context","_this","_classCallCheck","_callSuper","_context","options","configuration","layoutInfo","get","_renderLineHighlight","_renderLineHighlightOnlyWhenFocus","_wordWrap","isViewportWrapping","_contentLeft","contentLeft","_contentWidth","contentWidth","_selectionIsEmpty","_focused","_cursorLineNumbers","_selections","_renderData","addEventHandler","_inherits","_createClass","key","value","dispose","removeEventHandler","_get","_getPrototypeOf","prototype","call","_readFromSelections","hasChanged","lineNumbers","Set","_iterator","_createForOfIteratorHelper","_step","s","n","done","selection","add","positionLineNumber","err","e","f","cursorsLineNumbers","Array","from","sort","a","b","equals","selectionIsEmpty","every","isEmpty","onThemeChanged","onConfigurationChanged","onCursorStateChanged","selections","onFlushed","onLinesDeleted","onLinesInserted","onScrollChanged","scrollWidthChanged","scrollTopChanged","onZonesChanged","onFocusChanged","isFocused","prepareRender","ctx","_shouldRenderThis","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","renderData","lineNumber","lineIndex","renderedLineWrapped","_renderOne","_iterator2","_step2","cursorLineNumber","coordinatesConverter","viewModel","modelLineNumber","convertViewPositionToModelPosition","firstViewLineNumber","convertModelPositionToViewPosition","lastViewLineNumber","model","getLineMaxColumn","firstLine","Math","max","lastLine","min","renderedLineExact","_iterator3","_step3","render","length","_shouldRenderInMargin","_shouldRenderInContent","CurrentLineHighlightOverlay","_AbstractLineHighligh","arguments","exact","className","concat","scrollWidth","_shouldRenderOther","CurrentLineMarginHighlightOverlay","_AbstractLineHighligh2","theme","collector","lineHighlight","getColor","addRule","isTransparent","defines","lineHighlightBorder","type"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { Position } from '../../../common/core/position.js';\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._renderLineHighlight = options.get(96 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(97 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._wordWrap = layoutInfo.isViewportWrapping;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._selectionIsEmpty = true;\n        this._focused = false;\n        this._cursorLineNumbers = [1];\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderData = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    _readFromSelections() {\n        let hasChanged = false;\n        const lineNumbers = new Set();\n        for (const selection of this._selections) {\n            lineNumbers.add(selection.positionLineNumber);\n        }\n        const cursorsLineNumbers = Array.from(lineNumbers);\n        cursorsLineNumbers.sort((a, b) => a - b);\n        if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n            this._cursorLineNumbers = cursorsLineNumbers;\n            hasChanged = true;\n        }\n        const selectionIsEmpty = this._selections.every(s => s.isEmpty());\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            hasChanged = true;\n        }\n        return hasChanged;\n    }\n    // --- begin event handlers\n    onThemeChanged(e) {\n        return this._readFromSelections();\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._renderLineHighlight = options.get(96 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(97 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._wordWrap = layoutInfo.isViewportWrapping;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return this._readFromSelections();\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollWidthChanged || e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        if (!this._renderLineHighlightOnlyWhenFocus) {\n            return false;\n        }\n        this._focused = e.isFocused;\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._shouldRenderThis()) {\n            this._renderData = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        // initialize renderData\n        const renderData = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            renderData[lineIndex] = '';\n        }\n        if (this._wordWrap) {\n            // do a first pass to render wrapped lines\n            const renderedLineWrapped = this._renderOne(ctx, false);\n            for (const cursorLineNumber of this._cursorLineNumbers) {\n                const coordinatesConverter = this._context.viewModel.coordinatesConverter;\n                const modelLineNumber = coordinatesConverter.convertViewPositionToModelPosition(new Position(cursorLineNumber, 1)).lineNumber;\n                const firstViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, 1)).lineNumber;\n                const lastViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, this._context.viewModel.model.getLineMaxColumn(modelLineNumber))).lineNumber;\n                const firstLine = Math.max(firstViewLineNumber, visibleStartLineNumber);\n                const lastLine = Math.min(lastViewLineNumber, visibleEndLineNumber);\n                for (let lineNumber = firstLine; lineNumber <= lastLine; lineNumber++) {\n                    const lineIndex = lineNumber - visibleStartLineNumber;\n                    renderData[lineIndex] = renderedLineWrapped;\n                }\n            }\n        }\n        // do a second pass to render exact lines\n        const renderedLineExact = this._renderOne(ctx, true);\n        for (const cursorLineNumber of this._cursorLineNumbers) {\n            if (cursorLineNumber < visibleStartLineNumber || cursorLineNumber > visibleEndLineNumber) {\n                continue;\n            }\n            const lineIndex = cursorLineNumber - visibleStartLineNumber;\n            renderData[lineIndex] = renderedLineExact;\n        }\n        this._renderData = renderData;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderData) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex >= this._renderData.length) {\n            return '';\n        }\n        return this._renderData[lineIndex];\n    }\n    _shouldRenderInMargin() {\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n    _shouldRenderInContent() {\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n            && this._selectionIsEmpty\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n}\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx, exact) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-both' : '') + (exact ? ' current-line-exact' : '');\n        return `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return this._shouldRenderInContent();\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInMargin();\n    }\n}\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx, exact) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '') + (this._shouldRenderInMargin() && exact ? ' current-line-exact-margin' : '');\n        return `<div class=\"${className}\" style=\"width:${this._contentLeft}px\"></div>`;\n    }\n    _shouldRenderThis() {\n        return true;\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInContent();\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    if (lineHighlight) {\n        collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n        collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n    }\n    if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n        const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n        if (lineHighlightBorder) {\n            collector.addRule(`.monaco-editor .view-overlays .current-line-exact { border: 2px solid ${lineHighlightBorder}; }`);\n            collector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border: 2px solid ${lineHighlightBorder}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .view-overlays .current-line-exact { border-width: 1px; }`);\n                collector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border-width: 1px; }`);\n            }\n        }\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}