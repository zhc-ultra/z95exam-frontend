{"ast":null,"code":"import _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, runWhenWindowIdle } from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../../base/common/lifecycle.js';\nexport var CodeEditorContributions = /*#__PURE__*/function (_Disposable) {\n  function CodeEditorContributions() {\n    var _this;\n    _classCallCheck(this, CodeEditorContributions);\n    _this = _callSuper(this, CodeEditorContributions);\n    _this._editor = null;\n    _this._instantiationService = null;\n    /**\n     * Contains all instantiated contributions.\n     */\n    _this._instances = _this._register(new DisposableMap());\n    /**\n     * Contains contributions which are not yet instantiated.\n     */\n    _this._pending = new Map();\n    /**\n     * Tracks which instantiation kinds are still left in `_pending`.\n     */\n    _this._finishedInstantiation = [];\n    _this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n    _this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n    _this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n    _this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    return _this;\n  }\n  _inherits(CodeEditorContributions, _Disposable);\n  return _createClass(CodeEditorContributions, [{\n    key: \"initialize\",\n    value: function initialize(editor, contributions, instantiationService) {\n      var _this2 = this;\n      this._editor = editor;\n      this._instantiationService = instantiationService;\n      var _iterator = _createForOfIteratorHelper(contributions),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var desc = _step.value;\n          if (this._pending.has(desc.id)) {\n            onUnexpectedError(new Error(\"Cannot have two contributions with the same id \".concat(desc.id)));\n            continue;\n          }\n          this._pending.set(desc.id, desc);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n      // AfterFirstRender\n      // - these extensions will be instantiated at the latest 50ms after the first render.\n      // - but if there is idle time, we will instantiate them sooner.\n      this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), function () {\n        _this2._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n      }));\n      // BeforeFirstInteraction\n      // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n      // - but if there is idle time, we will instantiate them sooner.\n      this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), function () {\n        _this2._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n      }));\n      // Eventually\n      // - these extensions will only be instantiated when there is idle time.\n      // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n      this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), function () {\n        _this2._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n      }, 5000));\n    }\n  }, {\n    key: \"saveViewState\",\n    value: function saveViewState() {\n      var contributionsState = {};\n      var _iterator2 = _createForOfIteratorHelper(this._instances),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            id = _step2$value[0],\n            contribution = _step2$value[1];\n          if (typeof contribution.saveViewState === 'function') {\n            contributionsState[id] = contribution.saveViewState();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return contributionsState;\n    }\n  }, {\n    key: \"restoreViewState\",\n    value: function restoreViewState(contributionsState) {\n      var _iterator3 = _createForOfIteratorHelper(this._instances),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n            id = _step3$value[0],\n            contribution = _step3$value[1];\n          if (typeof contribution.restoreViewState === 'function') {\n            contribution.restoreViewState(contributionsState[id]);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      this._instantiateById(id);\n      return this._instances.get(id) || null;\n    }\n  }, {\n    key: \"onBeforeInteractionEvent\",\n    value: function onBeforeInteractionEvent() {\n      // this method is called very often by the editor!\n      this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n  }, {\n    key: \"onAfterModelAttached\",\n    value: function onAfterModelAttached() {\n      var _this3 = this;\n      var _a;\n      return runWhenWindowIdle(getWindow((_a = this._editor) === null || _a === void 0 ? void 0 : _a.getDomNode()), function () {\n        _this3._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n      }, 50);\n    }\n  }, {\n    key: \"_instantiateSome\",\n    value: function _instantiateSome(instantiation) {\n      if (this._finishedInstantiation[instantiation]) {\n        // already done with this instantiation!\n        return;\n      }\n      this._finishedInstantiation[instantiation] = true;\n      var contribs = this._findPendingContributionsByInstantiation(instantiation);\n      var _iterator4 = _createForOfIteratorHelper(contribs),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var contrib = _step4.value;\n          this._instantiateById(contrib.id);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"_findPendingContributionsByInstantiation\",\n    value: function _findPendingContributionsByInstantiation(instantiation) {\n      var result = [];\n      var _iterator5 = _createForOfIteratorHelper(this._pending),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n            desc = _step5$value[1];\n          if (desc.instantiation === instantiation) {\n            result.push(desc);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"_instantiateById\",\n    value: function _instantiateById(id) {\n      var desc = this._pending.get(id);\n      if (!desc) {\n        return;\n      }\n      this._pending[\"delete\"](id);\n      if (!this._instantiationService || !this._editor) {\n        throw new Error(\"Cannot instantiate contributions before being initialized!\");\n      }\n      try {\n        var instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n        this._instances.set(desc.id, instance);\n        if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n          console.warn(\"Editor contribution '\".concat(desc.id, \"' should be eager instantiated because it uses saveViewState / restoreViewState.\"));\n        }\n      } catch (err) {\n        onUnexpectedError(err);\n      }\n    }\n  }]);\n}(Disposable);","map":{"version":3,"names":["getWindow","runWhenWindowIdle","onUnexpectedError","Disposable","DisposableMap","CodeEditorContributions","_Disposable","_this","_classCallCheck","_callSuper","_editor","_instantiationService","_instances","_register","_pending","Map","_finishedInstantiation","_inherits","_createClass","key","value","initialize","editor","contributions","instantiationService","_this2","_iterator","_createForOfIteratorHelper","_step","s","n","done","desc","has","id","Error","concat","set","err","e","f","_instantiateSome","getDomNode","saveViewState","contributionsState","_iterator2","_step2","_step2$value","_slicedToArray","contribution","restoreViewState","_iterator3","_step3","_step3$value","get","_instantiateById","onBeforeInteractionEvent","onAfterModelAttached","_this3","_a","instantiation","contribs","_findPendingContributionsByInstantiation","_iterator4","_step4","contrib","result","_iterator5","_step5","_step5$value","push","instance","createInstance","ctor","console","warn"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditor/codeEditorContributions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, runWhenWindowIdle } from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../../base/common/lifecycle.js';\nexport class CodeEditorContributions extends Disposable {\n    constructor() {\n        super();\n        this._editor = null;\n        this._instantiationService = null;\n        /**\n         * Contains all instantiated contributions.\n         */\n        this._instances = this._register(new DisposableMap());\n        /**\n         * Contains contributions which are not yet instantiated.\n         */\n        this._pending = new Map();\n        /**\n         * Tracks which instantiation kinds are still left in `_pending`.\n         */\n        this._finishedInstantiation = [];\n        this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n        this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n        this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n        this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    }\n    initialize(editor, contributions, instantiationService) {\n        this._editor = editor;\n        this._instantiationService = instantiationService;\n        for (const desc of contributions) {\n            if (this._pending.has(desc.id)) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            this._pending.set(desc.id, desc);\n        }\n        this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n        // AfterFirstRender\n        // - these extensions will be instantiated at the latest 50ms after the first render.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }));\n        // BeforeFirstInteraction\n        // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n        }));\n        // Eventually\n        // - these extensions will only be instantiated when there is idle time.\n        // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n        this._register(runWhenWindowIdle(getWindow(this._editor.getDomNode()), () => {\n            this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n        }, 5000));\n    }\n    saveViewState() {\n        const contributionsState = {};\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        return contributionsState;\n    }\n    restoreViewState(contributionsState) {\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.restoreViewState === 'function') {\n                contribution.restoreViewState(contributionsState[id]);\n            }\n        }\n    }\n    get(id) {\n        this._instantiateById(id);\n        return this._instances.get(id) || null;\n    }\n    onBeforeInteractionEvent() {\n        // this method is called very often by the editor!\n        this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n    onAfterModelAttached() {\n        var _a;\n        return runWhenWindowIdle(getWindow((_a = this._editor) === null || _a === void 0 ? void 0 : _a.getDomNode()), () => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }, 50);\n    }\n    _instantiateSome(instantiation) {\n        if (this._finishedInstantiation[instantiation]) {\n            // already done with this instantiation!\n            return;\n        }\n        this._finishedInstantiation[instantiation] = true;\n        const contribs = this._findPendingContributionsByInstantiation(instantiation);\n        for (const contrib of contribs) {\n            this._instantiateById(contrib.id);\n        }\n    }\n    _findPendingContributionsByInstantiation(instantiation) {\n        const result = [];\n        for (const [, desc] of this._pending) {\n            if (desc.instantiation === instantiation) {\n                result.push(desc);\n            }\n        }\n        return result;\n    }\n    _instantiateById(id) {\n        const desc = this._pending.get(id);\n        if (!desc) {\n            return;\n        }\n        this._pending.delete(id);\n        if (!this._instantiationService || !this._editor) {\n            throw new Error(`Cannot instantiate contributions before being initialized!`);\n        }\n        try {\n            const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n            this._instances.set(desc.id, instance);\n            if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n                console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n            }\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}