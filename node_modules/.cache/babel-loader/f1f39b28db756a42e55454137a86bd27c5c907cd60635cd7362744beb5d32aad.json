{"ast":null,"code":"import _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport { defineComponent, toRefs, watch, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { hexToRgb, rgbToHsv } from \"../_utils/color.js\";\nimport useState from \"../_hooks/use-state.js\";\nimport Input from \"../input/index.js\";\nimport InputAlpha from \"./input-alpha.js\";\nimport InputGroup from \"../input/input-group.js\";\nvar InputHex = defineComponent({\n  name: \"InputHex\",\n  props: {\n    color: {\n      type: Object,\n      required: true\n    },\n    alpha: {\n      type: Number,\n      required: true\n    },\n    disabled: Boolean,\n    disabledAlpha: Boolean,\n    onHsvChange: Function,\n    onAlphaChange: Function\n  },\n  setup: function setup(props) {\n    var prefixCls = getPrefixCls(\"color-picker\");\n    var _toRefs = toRefs(props),\n      color = _toRefs.color;\n    var _useState = useState(color.value.hex),\n      _useState2 = _slicedToArray(_useState, 2),\n      hex = _useState2[0],\n      setHex = _useState2[1];\n    var handlerChange = function handlerChange(value) {\n      var _a;\n      var _rgb = hexToRgb(value) || {\n        r: 255,\n        g: 0,\n        b: 0\n      };\n      var hsv = rgbToHsv(_rgb.r, _rgb.g, _rgb.b);\n      (_a = props.onHsvChange) == null ? void 0 : _a.call(props, hsv);\n    };\n    var onInputChange = function onInputChange(value) {\n      var _a, _b;\n      var matchValue = (_b = (_a = value.match(/[a-fA-F0-9]*/g)) == null ? void 0 : _a.join(\"\")) != null ? _b : \"\";\n      if (matchValue !== color.value.hex) {\n        handlerChange(matchValue.toUpperCase());\n      }\n    };\n    var onPaste = function onPaste(ev) {\n      if (!ev.clipboardData) return;\n      var text = ev.clipboardData.getData(\"Text\");\n      if (text.startsWith(\"#\")) {\n        text = text.slice(1);\n      }\n      onInputChange(text);\n      ev.preventDefault();\n    };\n    watch(color, function () {\n      if (color.value.hex !== hex.value) {\n        setHex(color.value.hex);\n      }\n    });\n    return function () {\n      return createVNode(InputGroup, {\n        \"class\": \"\".concat(prefixCls, \"-input-group\")\n      }, {\n        \"default\": function _default() {\n          return [createVNode(Input, {\n            \"class\": \"\".concat(prefixCls, \"-input-hex\"),\n            \"size\": \"mini\",\n            \"maxLength\": 6,\n            \"disabled\": props.disabled,\n            \"modelValue\": hex.value,\n            \"onInput\": setHex,\n            \"onChange\": onInputChange,\n            \"onBlur\": function onBlur() {\n              return handlerChange;\n            },\n            \"onPressEnter\": function onPressEnter() {\n              return handlerChange;\n            },\n            \"onPaste\": onPaste\n          }, {\n            prefix: function prefix() {\n              return \"#\";\n            }\n          }), !props.disabledAlpha && createVNode(InputAlpha, {\n            \"disabled\": props.disabled,\n            \"value\": props.alpha,\n            \"onChange\": props.onAlphaChange\n          }, null)];\n        }\n      });\n    };\n  }\n});\nexport { InputHex as default };","map":{"version":3,"names":["defineComponent","toRefs","watch","createVNode","getPrefixCls","hexToRgb","rgbToHsv","useState","Input","InputAlpha","InputGroup","InputHex","name","props","color","type","Object","required","alpha","Number","disabled","Boolean","disabledAlpha","onHsvChange","Function","onAlphaChange","setup","prefixCls","_toRefs","_useState","value","hex","_useState2","_slicedToArray","setHex","handlerChange","_a","_rgb","r","g","b","hsv","call","onInputChange","_b","matchValue","match","join","toUpperCase","onPaste","ev","clipboardData","text","getData","startsWith","slice","preventDefault","concat","_default","onBlur","onPressEnter","prefix","default"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/@arco-design/web-vue/es/color-picker/input-hex.js"],"sourcesContent":["import { defineComponent, toRefs, watch, createVNode } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { hexToRgb, rgbToHsv } from \"../_utils/color.js\";\nimport useState from \"../_hooks/use-state.js\";\nimport Input from \"../input/index.js\";\nimport InputAlpha from \"./input-alpha.js\";\nimport InputGroup from \"../input/input-group.js\";\nvar InputHex = defineComponent({\n  name: \"InputHex\",\n  props: {\n    color: {\n      type: Object,\n      required: true\n    },\n    alpha: {\n      type: Number,\n      required: true\n    },\n    disabled: Boolean,\n    disabledAlpha: Boolean,\n    onHsvChange: Function,\n    onAlphaChange: Function\n  },\n  setup(props) {\n    const prefixCls = getPrefixCls(\"color-picker\");\n    const {\n      color\n    } = toRefs(props);\n    const [hex, setHex] = useState(color.value.hex);\n    const handlerChange = (value) => {\n      var _a;\n      const _rgb = hexToRgb(value) || {\n        r: 255,\n        g: 0,\n        b: 0\n      };\n      const hsv = rgbToHsv(_rgb.r, _rgb.g, _rgb.b);\n      (_a = props.onHsvChange) == null ? void 0 : _a.call(props, hsv);\n    };\n    const onInputChange = (value) => {\n      var _a, _b;\n      const matchValue = (_b = (_a = value.match(/[a-fA-F0-9]*/g)) == null ? void 0 : _a.join(\"\")) != null ? _b : \"\";\n      if (matchValue !== color.value.hex) {\n        handlerChange(matchValue.toUpperCase());\n      }\n    };\n    const onPaste = (ev) => {\n      if (!ev.clipboardData)\n        return;\n      let text = ev.clipboardData.getData(\"Text\");\n      if (text.startsWith(\"#\")) {\n        text = text.slice(1);\n      }\n      onInputChange(text);\n      ev.preventDefault();\n    };\n    watch(color, () => {\n      if (color.value.hex !== hex.value) {\n        setHex(color.value.hex);\n      }\n    });\n    return () => createVNode(InputGroup, {\n      \"class\": `${prefixCls}-input-group`\n    }, {\n      default: () => [createVNode(Input, {\n        \"class\": `${prefixCls}-input-hex`,\n        \"size\": \"mini\",\n        \"maxLength\": 6,\n        \"disabled\": props.disabled,\n        \"modelValue\": hex.value,\n        \"onInput\": setHex,\n        \"onChange\": onInputChange,\n        \"onBlur\": () => handlerChange,\n        \"onPressEnter\": () => handlerChange,\n        \"onPaste\": onPaste\n      }, {\n        prefix: () => \"#\"\n      }), !props.disabledAlpha && createVNode(InputAlpha, {\n        \"disabled\": props.disabled,\n        \"value\": props.alpha,\n        \"onChange\": props.onAlphaChange\n      }, null)]\n    });\n  }\n});\nexport { InputHex as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}