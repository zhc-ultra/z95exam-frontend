{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\nvar _classCallCheck = require(\"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\nvar _callSuper = require(\"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/callSuper.js\")[\"default\"];\nvar _inherits = require(\"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/inherits.js\")[\"default\"];\nvar ErrorReportingMixinBase = require('./mixin-base');\nvar ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nvar Mixin = require('../../utils/mixin');\nvar ErrorReportingTokenizerMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {\n  function ErrorReportingTokenizerMixin(tokenizer, opts) {\n    var _this;\n    _classCallCheck(this, ErrorReportingTokenizerMixin);\n    _this = _callSuper(this, ErrorReportingTokenizerMixin, [tokenizer, opts]);\n    var preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n    _this.posTracker = preprocessorMixin.posTracker;\n    return _this;\n  }\n  _inherits(ErrorReportingTokenizerMixin, _ErrorReportingMixinB);\n  return _createClass(ErrorReportingTokenizerMixin);\n}(ErrorReportingMixinBase);\nmodule.exports = ErrorReportingTokenizerMixin;","map":{"version":3,"names":["_createClass","require","_classCallCheck","_callSuper","_inherits","ErrorReportingMixinBase","ErrorReportingPreprocessorMixin","Mixin","ErrorReportingTokenizerMixin","_ErrorReportingMixinB","tokenizer","opts","_this","preprocessorMixin","install","preprocessor","posTracker","module","exports"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/hast-util-raw/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"],"sourcesContent":["'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA,GAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAD,OAAA;AAAA,IAAAE,UAAA,GAAAF,OAAA;AAAA,IAAAG,SAAA,GAAAH,OAAA;AAEb,IAAMI,uBAAuB,GAAGJ,OAAO,CAAC,cAAc,CAAC;AACvD,IAAMK,+BAA+B,GAAGL,OAAO,CAAC,sBAAsB,CAAC;AACvE,IAAMM,KAAK,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AAAC,IAErCO,4BAA4B,0BAAAC,qBAAA;EAC9B,SAAAD,6BAAYE,SAAS,EAAEC,IAAI,EAAE;IAAA,IAAAC,KAAA;IAAAV,eAAA,OAAAM,4BAAA;IACzBI,KAAA,GAAAT,UAAA,OAAAK,4BAAA,GAAME,SAAS,EAAEC,IAAI;IAErB,IAAME,iBAAiB,GAAGN,KAAK,CAACO,OAAO,CAACJ,SAAS,CAACK,YAAY,EAAET,+BAA+B,EAAEK,IAAI,CAAC;IAEtGC,KAAA,CAAKI,UAAU,GAAGH,iBAAiB,CAACG,UAAU;IAAC,OAAAJ,KAAA;EACnD;EAACR,SAAA,CAAAI,4BAAA,EAAAC,qBAAA;EAAA,OAAAT,YAAA,CAAAQ,4BAAA;AAAA,EAPsCH,uBAAuB;AAUlEY,MAAM,CAACC,OAAO,GAAGV,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}