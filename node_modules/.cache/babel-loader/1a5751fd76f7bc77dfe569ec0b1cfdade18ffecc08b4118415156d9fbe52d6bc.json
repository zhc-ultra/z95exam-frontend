{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { equals as _equals } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './stickyScroll.css';\nimport { getColumnOfNodeOffset } from '../../../browser/viewParts/lines/viewLine.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { Position } from '../../../common/core/position.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { foldingCollapsedIcon, foldingExpandedIcon } from '../../folding/browser/foldingDecorations.js';\nexport var StickyScrollWidgetState = /*#__PURE__*/function () {\n  function StickyScrollWidgetState(startLineNumbers, endLineNumbers, lastLineRelativePosition) {\n    var showEndForLine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    _classCallCheck(this, StickyScrollWidgetState);\n    this.startLineNumbers = startLineNumbers;\n    this.endLineNumbers = endLineNumbers;\n    this.lastLineRelativePosition = lastLineRelativePosition;\n    this.showEndForLine = showEndForLine;\n  }\n  return _createClass(StickyScrollWidgetState, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return !!other && this.lastLineRelativePosition === other.lastLineRelativePosition && this.showEndForLine === other.showEndForLine && _equals(this.startLineNumbers, other.startLineNumbers) && _equals(this.endLineNumbers, other.endLineNumbers);\n    }\n  }]);\n}();\nvar _ttPolicy = createTrustedTypesPolicy('stickyScrollViewLayer', {\n  createHTML: function createHTML(value) {\n    return value;\n  }\n});\nvar STICKY_INDEX_ATTR = 'data-sticky-line-index';\nvar STICKY_IS_LINE_ATTR = 'data-sticky-is-line';\nvar STICKY_IS_LINE_NUMBER_ATTR = 'data-sticky-is-line-number';\nvar STICKY_IS_FOLDING_ICON_ATTR = 'data-sticky-is-folding-icon';\nexport var StickyScrollWidget = /*#__PURE__*/function (_Disposable) {\n  function StickyScrollWidget(_editor) {\n    var _this;\n    _classCallCheck(this, StickyScrollWidget);\n    _this = _callSuper(this, StickyScrollWidget);\n    _this._editor = _editor;\n    _this._foldingIconStore = new DisposableStore();\n    _this._rootDomNode = document.createElement('div');\n    _this._lineNumbersDomNode = document.createElement('div');\n    _this._linesDomNodeScrollable = document.createElement('div');\n    _this._linesDomNode = document.createElement('div');\n    _this._lineHeight = _this._editor.getOption(67 /* EditorOption.lineHeight */);\n    _this._renderedStickyLines = [];\n    _this._lineNumbers = [];\n    _this._lastLineRelativePosition = 0;\n    _this._minContentWidthInPx = 0;\n    _this._isOnGlyphMargin = false;\n    _this._lineNumbersDomNode.className = 'sticky-widget-line-numbers';\n    _this._lineNumbersDomNode.setAttribute('role', 'none');\n    _this._linesDomNode.className = 'sticky-widget-lines';\n    _this._linesDomNode.setAttribute('role', 'list');\n    _this._linesDomNodeScrollable.className = 'sticky-widget-lines-scrollable';\n    _this._linesDomNodeScrollable.appendChild(_this._linesDomNode);\n    _this._rootDomNode.className = 'sticky-widget';\n    _this._rootDomNode.classList.toggle('peek', _editor instanceof EmbeddedCodeEditorWidget);\n    _this._rootDomNode.appendChild(_this._lineNumbersDomNode);\n    _this._rootDomNode.appendChild(_this._linesDomNodeScrollable);\n    var updateScrollLeftPosition = function updateScrollLeftPosition() {\n      _this._linesDomNode.style.left = _this._editor.getOption(115 /* EditorOption.stickyScroll */).scrollWithEditor ? \"-\".concat(_this._editor.getScrollLeft(), \"px\") : '0px';\n    };\n    _this._register(_this._editor.onDidChangeConfiguration(function (e) {\n      if (e.hasChanged(115 /* EditorOption.stickyScroll */)) {\n        updateScrollLeftPosition();\n      }\n      if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n        _this._lineHeight = _this._editor.getOption(67 /* EditorOption.lineHeight */);\n      }\n    }));\n    _this._register(_this._editor.onDidScrollChange(function (e) {\n      if (e.scrollLeftChanged) {\n        updateScrollLeftPosition();\n      }\n      if (e.scrollWidthChanged) {\n        _this._updateWidgetWidth();\n      }\n    }));\n    _this._register(_this._editor.onDidChangeModel(function () {\n      updateScrollLeftPosition();\n      _this._updateWidgetWidth();\n    }));\n    _this._register(_this._foldingIconStore);\n    updateScrollLeftPosition();\n    _this._register(_this._editor.onDidLayoutChange(function (e) {\n      _this._updateWidgetWidth();\n    }));\n    _this._updateWidgetWidth();\n    return _this;\n  }\n  _inherits(StickyScrollWidget, _Disposable);\n  return _createClass(StickyScrollWidget, [{\n    key: \"lineNumbers\",\n    get: function get() {\n      return this._lineNumbers;\n    }\n  }, {\n    key: \"lineNumberCount\",\n    get: function get() {\n      return this._lineNumbers.length;\n    }\n  }, {\n    key: \"getRenderedStickyLine\",\n    value: function getRenderedStickyLine(lineNumber) {\n      return this._renderedStickyLines.find(function (stickyLine) {\n        return stickyLine.lineNumber === lineNumber;\n      });\n    }\n  }, {\n    key: \"getCurrentLines\",\n    value: function getCurrentLines() {\n      return this._lineNumbers;\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(_state, foldingModel, _rebuildFromLine) {\n      if (_rebuildFromLine === undefined && (!this._previousState && !_state || this._previousState && this._previousState.equals(_state))) {\n        return;\n      }\n      var isWidgetHeightZero = this._isWidgetHeightZero(_state);\n      var state = isWidgetHeightZero ? undefined : _state;\n      var rebuildFromLine = isWidgetHeightZero ? 0 : this._findLineToRebuildWidgetFrom(_state, _rebuildFromLine);\n      this._renderRootNode(state, foldingModel, rebuildFromLine);\n      this._previousState = _state;\n    }\n  }, {\n    key: \"_isWidgetHeightZero\",\n    value: function _isWidgetHeightZero(state) {\n      if (!state) {\n        return true;\n      }\n      var futureWidgetHeight = state.startLineNumbers.length * this._lineHeight + state.lastLineRelativePosition;\n      if (futureWidgetHeight > 0) {\n        this._lastLineRelativePosition = state.lastLineRelativePosition;\n        var lineNumbers = _toConsumableArray(state.startLineNumbers);\n        if (state.showEndForLine !== null) {\n          lineNumbers[state.showEndForLine] = state.endLineNumbers[state.showEndForLine];\n        }\n        this._lineNumbers = lineNumbers;\n      } else {\n        this._lastLineRelativePosition = 0;\n        this._lineNumbers = [];\n      }\n      return futureWidgetHeight === 0;\n    }\n  }, {\n    key: \"_findLineToRebuildWidgetFrom\",\n    value: function _findLineToRebuildWidgetFrom(state, _rebuildFromLine) {\n      if (!state || !this._previousState) {\n        return 0;\n      }\n      if (_rebuildFromLine !== undefined) {\n        return _rebuildFromLine;\n      }\n      var previousState = this._previousState;\n      var indexOfLinesAlreadyRendered = state.startLineNumbers.findIndex(function (startLineNumber) {\n        return !previousState.startLineNumbers.includes(startLineNumber);\n      });\n      return indexOfLinesAlreadyRendered === -1 ? 0 : indexOfLinesAlreadyRendered;\n    }\n  }, {\n    key: \"_updateWidgetWidth\",\n    value: function _updateWidgetWidth() {\n      var layoutInfo = this._editor.getLayoutInfo();\n      var lineNumbersWidth = layoutInfo.contentLeft;\n      this._lineNumbersDomNode.style.width = \"\".concat(lineNumbersWidth, \"px\");\n      this._linesDomNodeScrollable.style.setProperty('--vscode-editorStickyScroll-scrollableWidth', \"\".concat(this._editor.getScrollWidth() - layoutInfo.verticalScrollbarWidth, \"px\"));\n      this._rootDomNode.style.width = \"\".concat(layoutInfo.width - layoutInfo.verticalScrollbarWidth, \"px\");\n    }\n  }, {\n    key: \"_clearStickyLinesFromLine\",\n    value: function _clearStickyLinesFromLine(clearFromLine) {\n      this._foldingIconStore.clear();\n      // Removing only the lines that need to be rerendered\n      for (var i = clearFromLine; i < this._renderedStickyLines.length; i++) {\n        var stickyLine = this._renderedStickyLines[i];\n        stickyLine.lineNumberDomNode.remove();\n        stickyLine.lineDomNode.remove();\n      }\n      // Keep the lines that need to be updated\n      this._renderedStickyLines = this._renderedStickyLines.slice(0, clearFromLine);\n      this._rootDomNode.style.display = 'none';\n    }\n  }, {\n    key: \"_useFoldingOpacityTransition\",\n    value: function _useFoldingOpacityTransition(requireTransitions) {\n      this._lineNumbersDomNode.style.setProperty('--vscode-editorStickyScroll-foldingOpacityTransition', \"opacity \".concat(requireTransitions ? 0.5 : 0, \"s\"));\n    }\n  }, {\n    key: \"_setFoldingIconsVisibility\",\n    value: function _setFoldingIconsVisibility(allVisible) {\n      var _iterator = _createForOfIteratorHelper(this._renderedStickyLines),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var line = _step.value;\n          var foldingIcon = line.foldingIcon;\n          if (!foldingIcon) {\n            continue;\n          }\n          foldingIcon.setVisible(allVisible ? true : foldingIcon.isCollapsed);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"_renderRootNode\",\n    value: function () {\n      var _renderRootNode2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(state, foldingModel, rebuildFromLine) {\n        var _iterator2, _step2, stickyLine, layoutInfo, linesToRender, _iterator3, _step3, _step3$value, index, line, _stickyLine, widgetHeight;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this._clearStickyLinesFromLine(rebuildFromLine);\n              if (state) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              // For existing sticky lines update the top and z-index\n              _iterator2 = _createForOfIteratorHelper(this._renderedStickyLines);\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  stickyLine = _step2.value;\n                  this._updateTopAndZIndexOfStickyLine(stickyLine);\n                }\n                // For new sticky lines\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              layoutInfo = this._editor.getLayoutInfo();\n              linesToRender = this._lineNumbers.slice(rebuildFromLine);\n              _iterator3 = _createForOfIteratorHelper(linesToRender.entries());\n              _context.prev = 8;\n              _iterator3.s();\n            case 10:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 20;\n                break;\n              }\n              _step3$value = _slicedToArray(_step3.value, 2), index = _step3$value[0], line = _step3$value[1];\n              _stickyLine = this._renderChildNode(index + rebuildFromLine, line, foldingModel, layoutInfo);\n              if (_stickyLine) {\n                _context.next = 15;\n                break;\n              }\n              return _context.abrupt(\"continue\", 18);\n            case 15:\n              this._linesDomNode.appendChild(_stickyLine.lineDomNode);\n              this._lineNumbersDomNode.appendChild(_stickyLine.lineNumberDomNode);\n              this._renderedStickyLines.push(_stickyLine);\n            case 18:\n              _context.next = 10;\n              break;\n            case 20:\n              _context.next = 25;\n              break;\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](8);\n              _iterator3.e(_context.t0);\n            case 25:\n              _context.prev = 25;\n              _iterator3.f();\n              return _context.finish(25);\n            case 28:\n              if (foldingModel) {\n                this._setFoldingHoverListeners();\n                this._useFoldingOpacityTransition(!this._isOnGlyphMargin);\n              }\n              widgetHeight = this._lineNumbers.length * this._lineHeight + this._lastLineRelativePosition;\n              this._rootDomNode.style.display = 'block';\n              this._lineNumbersDomNode.style.height = \"\".concat(widgetHeight, \"px\");\n              this._linesDomNodeScrollable.style.height = \"\".concat(widgetHeight, \"px\");\n              this._rootDomNode.style.height = \"\".concat(widgetHeight, \"px\");\n              this._rootDomNode.style.marginLeft = '0px';\n              this._minContentWidthInPx = Math.max.apply(Math, _toConsumableArray(this._renderedStickyLines.map(function (l) {\n                return l.scrollWidth;\n              }))) + layoutInfo.verticalScrollbarWidth;\n              this._editor.layoutOverlayWidget(this);\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[8, 22, 25, 28]]);\n      }));\n      function _renderRootNode(_x, _x2, _x3) {\n        return _renderRootNode2.apply(this, arguments);\n      }\n      return _renderRootNode;\n    }()\n  }, {\n    key: \"_setFoldingHoverListeners\",\n    value: function _setFoldingHoverListeners() {\n      var _this2 = this;\n      var showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n      if (showFoldingControls !== 'mouseover') {\n        return;\n      }\n      this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_ENTER, function () {\n        _this2._isOnGlyphMargin = true;\n        _this2._setFoldingIconsVisibility(true);\n      }));\n      this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_LEAVE, function () {\n        _this2._isOnGlyphMargin = false;\n        _this2._useFoldingOpacityTransition(true);\n        _this2._setFoldingIconsVisibility(false);\n      }));\n    }\n  }, {\n    key: \"_renderChildNode\",\n    value: function _renderChildNode(index, line, foldingModel, layoutInfo) {\n      var viewModel = this._editor._getViewModel();\n      if (!viewModel) {\n        return;\n      }\n      var viewLineNumber = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(line, 1)).lineNumber;\n      var lineRenderingData = viewModel.getViewLineRenderingData(viewLineNumber);\n      var lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n      var actualInlineDecorations;\n      try {\n        actualInlineDecorations = LineDecoration.filter(lineRenderingData.inlineDecorations, viewLineNumber, lineRenderingData.minColumn, lineRenderingData.maxColumn);\n      } catch (err) {\n        actualInlineDecorations = [];\n      }\n      var renderLineInput = new RenderLineInput(true, true, lineRenderingData.content, lineRenderingData.continuesWithWrappedLine, lineRenderingData.isBasicASCII, lineRenderingData.containsRTL, 0, lineRenderingData.tokens, actualInlineDecorations, lineRenderingData.tabSize, lineRenderingData.startVisibleColumn, 1, 1, 1, 500, 'none', true, true, null);\n      var sb = new StringBuilder(2000);\n      var renderOutput = renderViewLine(renderLineInput, sb);\n      var newLine;\n      if (_ttPolicy) {\n        newLine = _ttPolicy.createHTML(sb.build());\n      } else {\n        newLine = sb.build();\n      }\n      var lineHTMLNode = document.createElement('span');\n      lineHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n      lineHTMLNode.setAttribute(STICKY_IS_LINE_ATTR, '');\n      lineHTMLNode.setAttribute('role', 'listitem');\n      lineHTMLNode.tabIndex = 0;\n      lineHTMLNode.className = 'sticky-line-content';\n      lineHTMLNode.classList.add(\"stickyLine\".concat(line));\n      lineHTMLNode.style.lineHeight = \"\".concat(this._lineHeight, \"px\");\n      lineHTMLNode.innerHTML = newLine;\n      var lineNumberHTMLNode = document.createElement('span');\n      lineNumberHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n      lineNumberHTMLNode.setAttribute(STICKY_IS_LINE_NUMBER_ATTR, '');\n      lineNumberHTMLNode.className = 'sticky-line-number';\n      lineNumberHTMLNode.style.lineHeight = \"\".concat(this._lineHeight, \"px\");\n      var lineNumbersWidth = layoutInfo.contentLeft;\n      lineNumberHTMLNode.style.width = \"\".concat(lineNumbersWidth, \"px\");\n      var innerLineNumberHTML = document.createElement('span');\n      if (lineNumberOption.renderType === 1 /* RenderLineNumbersType.On */ || lineNumberOption.renderType === 3 /* RenderLineNumbersType.Interval */ && line % 10 === 0) {\n        innerLineNumberHTML.innerText = line.toString();\n      } else if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n        innerLineNumberHTML.innerText = Math.abs(line - this._editor.getPosition().lineNumber).toString();\n      }\n      innerLineNumberHTML.className = 'sticky-line-number-inner';\n      innerLineNumberHTML.style.lineHeight = \"\".concat(this._lineHeight, \"px\");\n      innerLineNumberHTML.style.width = \"\".concat(layoutInfo.lineNumbersWidth, \"px\");\n      innerLineNumberHTML.style.paddingLeft = \"\".concat(layoutInfo.lineNumbersLeft, \"px\");\n      lineNumberHTMLNode.appendChild(innerLineNumberHTML);\n      var foldingIcon = this._renderFoldingIconForLine(foldingModel, line);\n      if (foldingIcon) {\n        lineNumberHTMLNode.appendChild(foldingIcon.domNode);\n      }\n      this._editor.applyFontInfo(lineHTMLNode);\n      this._editor.applyFontInfo(innerLineNumberHTML);\n      lineNumberHTMLNode.style.lineHeight = \"\".concat(this._lineHeight, \"px\");\n      lineHTMLNode.style.lineHeight = \"\".concat(this._lineHeight, \"px\");\n      lineNumberHTMLNode.style.height = \"\".concat(this._lineHeight, \"px\");\n      lineHTMLNode.style.height = \"\".concat(this._lineHeight, \"px\");\n      var renderedLine = new RenderedStickyLine(index, line, lineHTMLNode, lineNumberHTMLNode, foldingIcon, renderOutput.characterMapping, lineHTMLNode.scrollWidth);\n      return this._updateTopAndZIndexOfStickyLine(renderedLine);\n    }\n  }, {\n    key: \"_updateTopAndZIndexOfStickyLine\",\n    value: function _updateTopAndZIndexOfStickyLine(stickyLine) {\n      var _a;\n      var index = stickyLine.index;\n      var lineHTMLNode = stickyLine.lineDomNode;\n      var lineNumberHTMLNode = stickyLine.lineNumberDomNode;\n      var isLastLine = index === this._lineNumbers.length - 1;\n      var lastLineZIndex = '0';\n      var intermediateLineZIndex = '1';\n      lineHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n      lineNumberHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n      var lastLineTop = \"\".concat(index * this._lineHeight + this._lastLineRelativePosition + (((_a = stickyLine.foldingIcon) === null || _a === void 0 ? void 0 : _a.isCollapsed) ? 1 : 0), \"px\");\n      var intermediateLineTop = \"\".concat(index * this._lineHeight, \"px\");\n      lineHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n      lineNumberHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n      return stickyLine;\n    }\n  }, {\n    key: \"_renderFoldingIconForLine\",\n    value: function _renderFoldingIconForLine(foldingModel, line) {\n      var showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n      if (!foldingModel || showFoldingControls === 'never') {\n        return;\n      }\n      var foldingRegions = foldingModel.regions;\n      var indexOfFoldingRegion = foldingRegions.findRange(line);\n      var startLineNumber = foldingRegions.getStartLineNumber(indexOfFoldingRegion);\n      var isFoldingScope = line === startLineNumber;\n      if (!isFoldingScope) {\n        return;\n      }\n      var isCollapsed = foldingRegions.isCollapsed(indexOfFoldingRegion);\n      var foldingIcon = new StickyFoldingIcon(isCollapsed, startLineNumber, foldingRegions.getEndLineNumber(indexOfFoldingRegion), this._lineHeight);\n      foldingIcon.setVisible(this._isOnGlyphMargin ? true : isCollapsed || showFoldingControls === 'always');\n      foldingIcon.domNode.setAttribute(STICKY_IS_FOLDING_ICON_ATTR, '');\n      return foldingIcon;\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return 'editor.contrib.stickyScrollWidget';\n    }\n  }, {\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      return this._rootDomNode;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        preference: null\n      };\n    }\n  }, {\n    key: \"getMinContentWidthInPx\",\n    value: function getMinContentWidthInPx() {\n      return this._minContentWidthInPx;\n    }\n  }, {\n    key: \"focusLineWithIndex\",\n    value: function focusLineWithIndex(index) {\n      if (0 <= index && index < this._renderedStickyLines.length) {\n        this._renderedStickyLines[index].lineDomNode.focus();\n      }\n    }\n    /**\n     * Given a leaf dom node, tries to find the editor position.\n     */\n  }, {\n    key: \"getEditorPositionFromNode\",\n    value: function getEditorPositionFromNode(spanDomNode) {\n      if (!spanDomNode || spanDomNode.children.length > 0) {\n        // This is not a leaf node\n        return null;\n      }\n      var renderedStickyLine = this._getRenderedStickyLineFromChildDomNode(spanDomNode);\n      if (!renderedStickyLine) {\n        return null;\n      }\n      var column = getColumnOfNodeOffset(renderedStickyLine.characterMapping, spanDomNode, 0);\n      return new Position(renderedStickyLine.lineNumber, column);\n    }\n  }, {\n    key: \"getLineNumberFromChildDomNode\",\n    value: function getLineNumberFromChildDomNode(domNode) {\n      var _a, _b;\n      return (_b = (_a = this._getRenderedStickyLineFromChildDomNode(domNode)) === null || _a === void 0 ? void 0 : _a.lineNumber) !== null && _b !== void 0 ? _b : null;\n    }\n  }, {\n    key: \"_getRenderedStickyLineFromChildDomNode\",\n    value: function _getRenderedStickyLineFromChildDomNode(domNode) {\n      var index = this.getLineIndexFromChildDomNode(domNode);\n      if (index === null || index < 0 || index >= this._renderedStickyLines.length) {\n        return null;\n      }\n      return this._renderedStickyLines[index];\n    }\n    /**\n     * Given a child dom node, tries to find the line number attribute that was stored in the node.\n     * @returns the attribute value or null if none is found.\n     */\n  }, {\n    key: \"getLineIndexFromChildDomNode\",\n    value: function getLineIndexFromChildDomNode(domNode) {\n      var lineIndex = this._getAttributeValue(domNode, STICKY_INDEX_ATTR);\n      return lineIndex ? parseInt(lineIndex, 10) : null;\n    }\n    /**\n     * Given a child dom node, tries to find if it is (contained in) a sticky line.\n     * @returns a boolean.\n     */\n  }, {\n    key: \"isInStickyLine\",\n    value: function isInStickyLine(domNode) {\n      var isInLine = this._getAttributeValue(domNode, STICKY_IS_LINE_ATTR);\n      return isInLine !== undefined;\n    }\n    /**\n     * Given a child dom node, tries to find if this dom node is (contained in) a sticky folding icon.\n     * @returns a boolean.\n     */\n  }, {\n    key: \"isInFoldingIconDomNode\",\n    value: function isInFoldingIconDomNode(domNode) {\n      var isInFoldingIcon = this._getAttributeValue(domNode, STICKY_IS_FOLDING_ICON_ATTR);\n      return isInFoldingIcon !== undefined;\n    }\n    /**\n     * Given the dom node, finds if it or its parent sequence contains the given attribute.\n     * @returns the attribute value or undefined.\n     */\n  }, {\n    key: \"_getAttributeValue\",\n    value: function _getAttributeValue(domNode, attribute) {\n      while (domNode && domNode !== this._rootDomNode) {\n        var line = domNode.getAttribute(attribute);\n        if (line !== null) {\n          return line;\n        }\n        domNode = domNode.parentElement;\n      }\n      return;\n    }\n  }]);\n}(Disposable);\nvar RenderedStickyLine = /*#__PURE__*/_createClass(function RenderedStickyLine(index, lineNumber, lineDomNode, lineNumberDomNode, foldingIcon, characterMapping, scrollWidth) {\n  _classCallCheck(this, RenderedStickyLine);\n  this.index = index;\n  this.lineNumber = lineNumber;\n  this.lineDomNode = lineDomNode;\n  this.lineNumberDomNode = lineNumberDomNode;\n  this.foldingIcon = foldingIcon;\n  this.characterMapping = characterMapping;\n  this.scrollWidth = scrollWidth;\n});\nvar StickyFoldingIcon = /*#__PURE__*/function () {\n  function StickyFoldingIcon(isCollapsed, foldingStartLine, foldingEndLine, dimension) {\n    _classCallCheck(this, StickyFoldingIcon);\n    this.isCollapsed = isCollapsed;\n    this.foldingStartLine = foldingStartLine;\n    this.foldingEndLine = foldingEndLine;\n    this.dimension = dimension;\n    this.domNode = document.createElement('div');\n    this.domNode.style.width = \"\".concat(dimension, \"px\");\n    this.domNode.style.height = \"\".concat(dimension, \"px\");\n    this.domNode.className = ThemeIcon.asClassName(isCollapsed ? foldingCollapsedIcon : foldingExpandedIcon);\n  }\n  return _createClass(StickyFoldingIcon, [{\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      this.domNode.style.cursor = visible ? 'pointer' : 'default';\n      this.domNode.style.opacity = visible ? '1' : '0';\n    }\n  }]);\n}();","map":{"version":3,"names":["dom","createTrustedTypesPolicy","equals","Disposable","DisposableStore","ThemeIcon","getColumnOfNodeOffset","EmbeddedCodeEditorWidget","Position","StringBuilder","LineDecoration","RenderLineInput","renderViewLine","foldingCollapsedIcon","foldingExpandedIcon","StickyScrollWidgetState","startLineNumbers","endLineNumbers","lastLineRelativePosition","showEndForLine","arguments","length","undefined","_classCallCheck","_createClass","key","value","other","_ttPolicy","createHTML","STICKY_INDEX_ATTR","STICKY_IS_LINE_ATTR","STICKY_IS_LINE_NUMBER_ATTR","STICKY_IS_FOLDING_ICON_ATTR","StickyScrollWidget","_Disposable","_editor","_this","_callSuper","_foldingIconStore","_rootDomNode","document","createElement","_lineNumbersDomNode","_linesDomNodeScrollable","_linesDomNode","_lineHeight","getOption","_renderedStickyLines","_lineNumbers","_lastLineRelativePosition","_minContentWidthInPx","_isOnGlyphMargin","className","setAttribute","appendChild","classList","toggle","updateScrollLeftPosition","style","left","scrollWithEditor","concat","getScrollLeft","_register","onDidChangeConfiguration","e","hasChanged","onDidScrollChange","scrollLeftChanged","scrollWidthChanged","_updateWidgetWidth","onDidChangeModel","onDidLayoutChange","_inherits","get","getRenderedStickyLine","lineNumber","find","stickyLine","getCurrentLines","setState","_state","foldingModel","_rebuildFromLine","_previousState","isWidgetHeightZero","_isWidgetHeightZero","state","rebuildFromLine","_findLineToRebuildWidgetFrom","_renderRootNode","futureWidgetHeight","lineNumbers","_toConsumableArray","previousState","indexOfLinesAlreadyRendered","findIndex","startLineNumber","includes","layoutInfo","getLayoutInfo","lineNumbersWidth","contentLeft","width","setProperty","getScrollWidth","verticalScrollbarWidth","_clearStickyLinesFromLine","clearFromLine","clear","i","lineNumberDomNode","remove","lineDomNode","slice","display","_useFoldingOpacityTransition","requireTransitions","_setFoldingIconsVisibility","allVisible","_iterator","_createForOfIteratorHelper","_step","s","n","done","line","foldingIcon","setVisible","isCollapsed","err","f","_renderRootNode2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_iterator2","_step2","linesToRender","_iterator3","_step3","_step3$value","index","_stickyLine","widgetHeight","wrap","_callee$","_context","prev","next","abrupt","_updateTopAndZIndexOfStickyLine","entries","_slicedToArray","_renderChildNode","push","t0","finish","_setFoldingHoverListeners","height","marginLeft","Math","max","apply","map","l","scrollWidth","layoutOverlayWidget","stop","_x","_x2","_x3","_this2","showFoldingControls","add","addDisposableListener","EventType","MOUSE_ENTER","MOUSE_LEAVE","viewModel","_getViewModel","viewLineNumber","coordinatesConverter","convertModelPositionToViewPosition","lineRenderingData","getViewLineRenderingData","lineNumberOption","actualInlineDecorations","filter","inlineDecorations","minColumn","maxColumn","renderLineInput","content","continuesWithWrappedLine","isBasicASCII","containsRTL","tokens","tabSize","startVisibleColumn","sb","renderOutput","newLine","build","lineHTMLNode","String","tabIndex","lineHeight","innerHTML","lineNumberHTMLNode","innerLineNumberHTML","renderType","innerText","toString","abs","getPosition","paddingLeft","lineNumbersLeft","_renderFoldingIconForLine","domNode","applyFontInfo","renderedLine","RenderedStickyLine","characterMapping","_a","isLastLine","lastLineZIndex","intermediateLineZIndex","zIndex","lastLineTop","intermediateLineTop","top","foldingRegions","regions","indexOfFoldingRegion","findRange","getStartLineNumber","isFoldingScope","StickyFoldingIcon","getEndLineNumber","getId","getDomNode","preference","getMinContentWidthInPx","focusLineWithIndex","focus","getEditorPositionFromNode","spanDomNode","children","renderedStickyLine","_getRenderedStickyLineFromChildDomNode","column","getLineNumberFromChildDomNode","_b","getLineIndexFromChildDomNode","lineIndex","_getAttributeValue","parseInt","isInStickyLine","isInLine","isInFoldingIconDomNode","isInFoldingIcon","attribute","getAttribute","parentElement","foldingStartLine","foldingEndLine","dimension","asClassName","visible","cursor","opacity"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './stickyScroll.css';\nimport { getColumnOfNodeOffset } from '../../../browser/viewParts/lines/viewLine.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { Position } from '../../../common/core/position.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { foldingCollapsedIcon, foldingExpandedIcon } from '../../folding/browser/foldingDecorations.js';\nexport class StickyScrollWidgetState {\n    constructor(startLineNumbers, endLineNumbers, lastLineRelativePosition, showEndForLine = null) {\n        this.startLineNumbers = startLineNumbers;\n        this.endLineNumbers = endLineNumbers;\n        this.lastLineRelativePosition = lastLineRelativePosition;\n        this.showEndForLine = showEndForLine;\n    }\n    equals(other) {\n        return !!other\n            && this.lastLineRelativePosition === other.lastLineRelativePosition\n            && this.showEndForLine === other.showEndForLine\n            && equals(this.startLineNumbers, other.startLineNumbers)\n            && equals(this.endLineNumbers, other.endLineNumbers);\n    }\n}\nconst _ttPolicy = createTrustedTypesPolicy('stickyScrollViewLayer', { createHTML: value => value });\nconst STICKY_INDEX_ATTR = 'data-sticky-line-index';\nconst STICKY_IS_LINE_ATTR = 'data-sticky-is-line';\nconst STICKY_IS_LINE_NUMBER_ATTR = 'data-sticky-is-line-number';\nconst STICKY_IS_FOLDING_ICON_ATTR = 'data-sticky-is-folding-icon';\nexport class StickyScrollWidget extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._foldingIconStore = new DisposableStore();\n        this._rootDomNode = document.createElement('div');\n        this._lineNumbersDomNode = document.createElement('div');\n        this._linesDomNodeScrollable = document.createElement('div');\n        this._linesDomNode = document.createElement('div');\n        this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n        this._renderedStickyLines = [];\n        this._lineNumbers = [];\n        this._lastLineRelativePosition = 0;\n        this._minContentWidthInPx = 0;\n        this._isOnGlyphMargin = false;\n        this._lineNumbersDomNode.className = 'sticky-widget-line-numbers';\n        this._lineNumbersDomNode.setAttribute('role', 'none');\n        this._linesDomNode.className = 'sticky-widget-lines';\n        this._linesDomNode.setAttribute('role', 'list');\n        this._linesDomNodeScrollable.className = 'sticky-widget-lines-scrollable';\n        this._linesDomNodeScrollable.appendChild(this._linesDomNode);\n        this._rootDomNode.className = 'sticky-widget';\n        this._rootDomNode.classList.toggle('peek', _editor instanceof EmbeddedCodeEditorWidget);\n        this._rootDomNode.appendChild(this._lineNumbersDomNode);\n        this._rootDomNode.appendChild(this._linesDomNodeScrollable);\n        const updateScrollLeftPosition = () => {\n            this._linesDomNode.style.left = this._editor.getOption(115 /* EditorOption.stickyScroll */).scrollWithEditor ? `-${this._editor.getScrollLeft()}px` : '0px';\n        };\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(115 /* EditorOption.stickyScroll */)) {\n                updateScrollLeftPosition();\n            }\n            if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n                this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n            }\n        }));\n        this._register(this._editor.onDidScrollChange((e) => {\n            if (e.scrollLeftChanged) {\n                updateScrollLeftPosition();\n            }\n            if (e.scrollWidthChanged) {\n                this._updateWidgetWidth();\n            }\n        }));\n        this._register(this._editor.onDidChangeModel(() => {\n            updateScrollLeftPosition();\n            this._updateWidgetWidth();\n        }));\n        this._register(this._foldingIconStore);\n        updateScrollLeftPosition();\n        this._register(this._editor.onDidLayoutChange((e) => {\n            this._updateWidgetWidth();\n        }));\n        this._updateWidgetWidth();\n    }\n    get lineNumbers() {\n        return this._lineNumbers;\n    }\n    get lineNumberCount() {\n        return this._lineNumbers.length;\n    }\n    getRenderedStickyLine(lineNumber) {\n        return this._renderedStickyLines.find(stickyLine => stickyLine.lineNumber === lineNumber);\n    }\n    getCurrentLines() {\n        return this._lineNumbers;\n    }\n    setState(_state, foldingModel, _rebuildFromLine) {\n        if (_rebuildFromLine === undefined &&\n            ((!this._previousState && !_state) || (this._previousState && this._previousState.equals(_state)))) {\n            return;\n        }\n        const isWidgetHeightZero = this._isWidgetHeightZero(_state);\n        const state = isWidgetHeightZero ? undefined : _state;\n        const rebuildFromLine = isWidgetHeightZero ? 0 : this._findLineToRebuildWidgetFrom(_state, _rebuildFromLine);\n        this._renderRootNode(state, foldingModel, rebuildFromLine);\n        this._previousState = _state;\n    }\n    _isWidgetHeightZero(state) {\n        if (!state) {\n            return true;\n        }\n        const futureWidgetHeight = state.startLineNumbers.length * this._lineHeight + state.lastLineRelativePosition;\n        if (futureWidgetHeight > 0) {\n            this._lastLineRelativePosition = state.lastLineRelativePosition;\n            const lineNumbers = [...state.startLineNumbers];\n            if (state.showEndForLine !== null) {\n                lineNumbers[state.showEndForLine] = state.endLineNumbers[state.showEndForLine];\n            }\n            this._lineNumbers = lineNumbers;\n        }\n        else {\n            this._lastLineRelativePosition = 0;\n            this._lineNumbers = [];\n        }\n        return futureWidgetHeight === 0;\n    }\n    _findLineToRebuildWidgetFrom(state, _rebuildFromLine) {\n        if (!state || !this._previousState) {\n            return 0;\n        }\n        if (_rebuildFromLine !== undefined) {\n            return _rebuildFromLine;\n        }\n        const previousState = this._previousState;\n        const indexOfLinesAlreadyRendered = state.startLineNumbers.findIndex(startLineNumber => !previousState.startLineNumbers.includes(startLineNumber));\n        return (indexOfLinesAlreadyRendered === -1) ? 0 : indexOfLinesAlreadyRendered;\n    }\n    _updateWidgetWidth() {\n        const layoutInfo = this._editor.getLayoutInfo();\n        const lineNumbersWidth = layoutInfo.contentLeft;\n        this._lineNumbersDomNode.style.width = `${lineNumbersWidth}px`;\n        this._linesDomNodeScrollable.style.setProperty('--vscode-editorStickyScroll-scrollableWidth', `${this._editor.getScrollWidth() - layoutInfo.verticalScrollbarWidth}px`);\n        this._rootDomNode.style.width = `${layoutInfo.width - layoutInfo.verticalScrollbarWidth}px`;\n    }\n    _clearStickyLinesFromLine(clearFromLine) {\n        this._foldingIconStore.clear();\n        // Removing only the lines that need to be rerendered\n        for (let i = clearFromLine; i < this._renderedStickyLines.length; i++) {\n            const stickyLine = this._renderedStickyLines[i];\n            stickyLine.lineNumberDomNode.remove();\n            stickyLine.lineDomNode.remove();\n        }\n        // Keep the lines that need to be updated\n        this._renderedStickyLines = this._renderedStickyLines.slice(0, clearFromLine);\n        this._rootDomNode.style.display = 'none';\n    }\n    _useFoldingOpacityTransition(requireTransitions) {\n        this._lineNumbersDomNode.style.setProperty('--vscode-editorStickyScroll-foldingOpacityTransition', `opacity ${requireTransitions ? 0.5 : 0}s`);\n    }\n    _setFoldingIconsVisibility(allVisible) {\n        for (const line of this._renderedStickyLines) {\n            const foldingIcon = line.foldingIcon;\n            if (!foldingIcon) {\n                continue;\n            }\n            foldingIcon.setVisible(allVisible ? true : foldingIcon.isCollapsed);\n        }\n    }\n    async _renderRootNode(state, foldingModel, rebuildFromLine) {\n        this._clearStickyLinesFromLine(rebuildFromLine);\n        if (!state) {\n            return;\n        }\n        // For existing sticky lines update the top and z-index\n        for (const stickyLine of this._renderedStickyLines) {\n            this._updateTopAndZIndexOfStickyLine(stickyLine);\n        }\n        // For new sticky lines\n        const layoutInfo = this._editor.getLayoutInfo();\n        const linesToRender = this._lineNumbers.slice(rebuildFromLine);\n        for (const [index, line] of linesToRender.entries()) {\n            const stickyLine = this._renderChildNode(index + rebuildFromLine, line, foldingModel, layoutInfo);\n            if (!stickyLine) {\n                continue;\n            }\n            this._linesDomNode.appendChild(stickyLine.lineDomNode);\n            this._lineNumbersDomNode.appendChild(stickyLine.lineNumberDomNode);\n            this._renderedStickyLines.push(stickyLine);\n        }\n        if (foldingModel) {\n            this._setFoldingHoverListeners();\n            this._useFoldingOpacityTransition(!this._isOnGlyphMargin);\n        }\n        const widgetHeight = this._lineNumbers.length * this._lineHeight + this._lastLineRelativePosition;\n        this._rootDomNode.style.display = 'block';\n        this._lineNumbersDomNode.style.height = `${widgetHeight}px`;\n        this._linesDomNodeScrollable.style.height = `${widgetHeight}px`;\n        this._rootDomNode.style.height = `${widgetHeight}px`;\n        this._rootDomNode.style.marginLeft = '0px';\n        this._minContentWidthInPx = Math.max(...this._renderedStickyLines.map(l => l.scrollWidth)) + layoutInfo.verticalScrollbarWidth;\n        this._editor.layoutOverlayWidget(this);\n    }\n    _setFoldingHoverListeners() {\n        const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n        if (showFoldingControls !== 'mouseover') {\n            return;\n        }\n        this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_ENTER, () => {\n            this._isOnGlyphMargin = true;\n            this._setFoldingIconsVisibility(true);\n        }));\n        this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_LEAVE, () => {\n            this._isOnGlyphMargin = false;\n            this._useFoldingOpacityTransition(true);\n            this._setFoldingIconsVisibility(false);\n        }));\n    }\n    _renderChildNode(index, line, foldingModel, layoutInfo) {\n        const viewModel = this._editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        const viewLineNumber = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(line, 1)).lineNumber;\n        const lineRenderingData = viewModel.getViewLineRenderingData(viewLineNumber);\n        const lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n        let actualInlineDecorations;\n        try {\n            actualInlineDecorations = LineDecoration.filter(lineRenderingData.inlineDecorations, viewLineNumber, lineRenderingData.minColumn, lineRenderingData.maxColumn);\n        }\n        catch (err) {\n            actualInlineDecorations = [];\n        }\n        const renderLineInput = new RenderLineInput(true, true, lineRenderingData.content, lineRenderingData.continuesWithWrappedLine, lineRenderingData.isBasicASCII, lineRenderingData.containsRTL, 0, lineRenderingData.tokens, actualInlineDecorations, lineRenderingData.tabSize, lineRenderingData.startVisibleColumn, 1, 1, 1, 500, 'none', true, true, null);\n        const sb = new StringBuilder(2000);\n        const renderOutput = renderViewLine(renderLineInput, sb);\n        let newLine;\n        if (_ttPolicy) {\n            newLine = _ttPolicy.createHTML(sb.build());\n        }\n        else {\n            newLine = sb.build();\n        }\n        const lineHTMLNode = document.createElement('span');\n        lineHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n        lineHTMLNode.setAttribute(STICKY_IS_LINE_ATTR, '');\n        lineHTMLNode.setAttribute('role', 'listitem');\n        lineHTMLNode.tabIndex = 0;\n        lineHTMLNode.className = 'sticky-line-content';\n        lineHTMLNode.classList.add(`stickyLine${line}`);\n        lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineHTMLNode.innerHTML = newLine;\n        const lineNumberHTMLNode = document.createElement('span');\n        lineNumberHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n        lineNumberHTMLNode.setAttribute(STICKY_IS_LINE_NUMBER_ATTR, '');\n        lineNumberHTMLNode.className = 'sticky-line-number';\n        lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        const lineNumbersWidth = layoutInfo.contentLeft;\n        lineNumberHTMLNode.style.width = `${lineNumbersWidth}px`;\n        const innerLineNumberHTML = document.createElement('span');\n        if (lineNumberOption.renderType === 1 /* RenderLineNumbersType.On */ || lineNumberOption.renderType === 3 /* RenderLineNumbersType.Interval */ && line % 10 === 0) {\n            innerLineNumberHTML.innerText = line.toString();\n        }\n        else if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n            innerLineNumberHTML.innerText = Math.abs(line - this._editor.getPosition().lineNumber).toString();\n        }\n        innerLineNumberHTML.className = 'sticky-line-number-inner';\n        innerLineNumberHTML.style.lineHeight = `${this._lineHeight}px`;\n        innerLineNumberHTML.style.width = `${layoutInfo.lineNumbersWidth}px`;\n        innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft}px`;\n        lineNumberHTMLNode.appendChild(innerLineNumberHTML);\n        const foldingIcon = this._renderFoldingIconForLine(foldingModel, line);\n        if (foldingIcon) {\n            lineNumberHTMLNode.appendChild(foldingIcon.domNode);\n        }\n        this._editor.applyFontInfo(lineHTMLNode);\n        this._editor.applyFontInfo(innerLineNumberHTML);\n        lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineNumberHTMLNode.style.height = `${this._lineHeight}px`;\n        lineHTMLNode.style.height = `${this._lineHeight}px`;\n        const renderedLine = new RenderedStickyLine(index, line, lineHTMLNode, lineNumberHTMLNode, foldingIcon, renderOutput.characterMapping, lineHTMLNode.scrollWidth);\n        return this._updateTopAndZIndexOfStickyLine(renderedLine);\n    }\n    _updateTopAndZIndexOfStickyLine(stickyLine) {\n        var _a;\n        const index = stickyLine.index;\n        const lineHTMLNode = stickyLine.lineDomNode;\n        const lineNumberHTMLNode = stickyLine.lineNumberDomNode;\n        const isLastLine = index === this._lineNumbers.length - 1;\n        const lastLineZIndex = '0';\n        const intermediateLineZIndex = '1';\n        lineHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n        lineNumberHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n        const lastLineTop = `${index * this._lineHeight + this._lastLineRelativePosition + (((_a = stickyLine.foldingIcon) === null || _a === void 0 ? void 0 : _a.isCollapsed) ? 1 : 0)}px`;\n        const intermediateLineTop = `${index * this._lineHeight}px`;\n        lineHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n        lineNumberHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n        return stickyLine;\n    }\n    _renderFoldingIconForLine(foldingModel, line) {\n        const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n        if (!foldingModel || showFoldingControls === 'never') {\n            return;\n        }\n        const foldingRegions = foldingModel.regions;\n        const indexOfFoldingRegion = foldingRegions.findRange(line);\n        const startLineNumber = foldingRegions.getStartLineNumber(indexOfFoldingRegion);\n        const isFoldingScope = line === startLineNumber;\n        if (!isFoldingScope) {\n            return;\n        }\n        const isCollapsed = foldingRegions.isCollapsed(indexOfFoldingRegion);\n        const foldingIcon = new StickyFoldingIcon(isCollapsed, startLineNumber, foldingRegions.getEndLineNumber(indexOfFoldingRegion), this._lineHeight);\n        foldingIcon.setVisible(this._isOnGlyphMargin ? true : (isCollapsed || showFoldingControls === 'always'));\n        foldingIcon.domNode.setAttribute(STICKY_IS_FOLDING_ICON_ATTR, '');\n        return foldingIcon;\n    }\n    getId() {\n        return 'editor.contrib.stickyScrollWidget';\n    }\n    getDomNode() {\n        return this._rootDomNode;\n    }\n    getPosition() {\n        return {\n            preference: null\n        };\n    }\n    getMinContentWidthInPx() {\n        return this._minContentWidthInPx;\n    }\n    focusLineWithIndex(index) {\n        if (0 <= index && index < this._renderedStickyLines.length) {\n            this._renderedStickyLines[index].lineDomNode.focus();\n        }\n    }\n    /**\n     * Given a leaf dom node, tries to find the editor position.\n     */\n    getEditorPositionFromNode(spanDomNode) {\n        if (!spanDomNode || spanDomNode.children.length > 0) {\n            // This is not a leaf node\n            return null;\n        }\n        const renderedStickyLine = this._getRenderedStickyLineFromChildDomNode(spanDomNode);\n        if (!renderedStickyLine) {\n            return null;\n        }\n        const column = getColumnOfNodeOffset(renderedStickyLine.characterMapping, spanDomNode, 0);\n        return new Position(renderedStickyLine.lineNumber, column);\n    }\n    getLineNumberFromChildDomNode(domNode) {\n        var _a, _b;\n        return (_b = (_a = this._getRenderedStickyLineFromChildDomNode(domNode)) === null || _a === void 0 ? void 0 : _a.lineNumber) !== null && _b !== void 0 ? _b : null;\n    }\n    _getRenderedStickyLineFromChildDomNode(domNode) {\n        const index = this.getLineIndexFromChildDomNode(domNode);\n        if (index === null || index < 0 || index >= this._renderedStickyLines.length) {\n            return null;\n        }\n        return this._renderedStickyLines[index];\n    }\n    /**\n     * Given a child dom node, tries to find the line number attribute that was stored in the node.\n     * @returns the attribute value or null if none is found.\n     */\n    getLineIndexFromChildDomNode(domNode) {\n        const lineIndex = this._getAttributeValue(domNode, STICKY_INDEX_ATTR);\n        return lineIndex ? parseInt(lineIndex, 10) : null;\n    }\n    /**\n     * Given a child dom node, tries to find if it is (contained in) a sticky line.\n     * @returns a boolean.\n     */\n    isInStickyLine(domNode) {\n        const isInLine = this._getAttributeValue(domNode, STICKY_IS_LINE_ATTR);\n        return isInLine !== undefined;\n    }\n    /**\n     * Given a child dom node, tries to find if this dom node is (contained in) a sticky folding icon.\n     * @returns a boolean.\n     */\n    isInFoldingIconDomNode(domNode) {\n        const isInFoldingIcon = this._getAttributeValue(domNode, STICKY_IS_FOLDING_ICON_ATTR);\n        return isInFoldingIcon !== undefined;\n    }\n    /**\n     * Given the dom node, finds if it or its parent sequence contains the given attribute.\n     * @returns the attribute value or undefined.\n     */\n    _getAttributeValue(domNode, attribute) {\n        while (domNode && domNode !== this._rootDomNode) {\n            const line = domNode.getAttribute(attribute);\n            if (line !== null) {\n                return line;\n            }\n            domNode = domNode.parentElement;\n        }\n        return;\n    }\n}\nclass RenderedStickyLine {\n    constructor(index, lineNumber, lineDomNode, lineNumberDomNode, foldingIcon, characterMapping, scrollWidth) {\n        this.index = index;\n        this.lineNumber = lineNumber;\n        this.lineDomNode = lineDomNode;\n        this.lineNumberDomNode = lineNumberDomNode;\n        this.foldingIcon = foldingIcon;\n        this.characterMapping = characterMapping;\n        this.scrollWidth = scrollWidth;\n    }\n}\nclass StickyFoldingIcon {\n    constructor(isCollapsed, foldingStartLine, foldingEndLine, dimension) {\n        this.isCollapsed = isCollapsed;\n        this.foldingStartLine = foldingStartLine;\n        this.foldingEndLine = foldingEndLine;\n        this.dimension = dimension;\n        this.domNode = document.createElement('div');\n        this.domNode.style.width = `${dimension}px`;\n        this.domNode.style.height = `${dimension}px`;\n        this.domNode.className = ThemeIcon.asClassName(isCollapsed ? foldingCollapsedIcon : foldingExpandedIcon);\n    }\n    setVisible(visible) {\n        this.domNode.style.cursor = visible ? 'pointer' : 'default';\n        this.domNode.style.opacity = visible ? '1' : '0';\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}