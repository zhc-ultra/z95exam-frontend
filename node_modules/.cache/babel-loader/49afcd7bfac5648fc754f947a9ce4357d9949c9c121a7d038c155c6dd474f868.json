{"ast":null,"code":"import _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { ComposedTreeDelegate } from './abstractTree.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { CompressibleObjectTree, ObjectTree } from './objectTree.js';\nimport { ObjectTreeElementCollapseState, TreeError, WeakMapper } from './tree.js';\nimport { createCancelablePromise, Promises, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { isCancellationError, onUnexpectedError } from '../../../common/errors.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nimport { DisposableStore, dispose as _dispose } from '../../../common/lifecycle.js';\nimport { isIterable } from '../../../common/types.js';\nfunction createAsyncDataTreeNode(props) {\n  return _objectSpread(_objectSpread({}, props), {}, {\n    children: [],\n    refreshPromise: undefined,\n    stale: true,\n    slow: false,\n    forceExpanded: false\n  });\n}\nfunction isAncestor(ancestor, descendant) {\n  if (!descendant.parent) {\n    return false;\n  } else if (descendant.parent === ancestor) {\n    return true;\n  } else {\n    return isAncestor(ancestor, descendant.parent);\n  }\n}\nfunction intersects(node, other) {\n  return node === other || isAncestor(node, other) || isAncestor(other, node);\n}\nvar AsyncDataTreeNodeWrapper = /*#__PURE__*/function () {\n  function AsyncDataTreeNodeWrapper(node) {\n    _classCallCheck(this, AsyncDataTreeNodeWrapper);\n    this.node = node;\n  }\n  return _createClass(AsyncDataTreeNodeWrapper, [{\n    key: \"element\",\n    get: function get() {\n      return this.node.element.element;\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this.node.children.map(function (node) {\n        return new AsyncDataTreeNodeWrapper(node);\n      });\n    }\n  }, {\n    key: \"depth\",\n    get: function get() {\n      return this.node.depth;\n    }\n  }, {\n    key: \"visibleChildrenCount\",\n    get: function get() {\n      return this.node.visibleChildrenCount;\n    }\n  }, {\n    key: \"visibleChildIndex\",\n    get: function get() {\n      return this.node.visibleChildIndex;\n    }\n  }, {\n    key: \"collapsible\",\n    get: function get() {\n      return this.node.collapsible;\n    }\n  }, {\n    key: \"collapsed\",\n    get: function get() {\n      return this.node.collapsed;\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this.node.visible;\n    }\n  }, {\n    key: \"filterData\",\n    get: function get() {\n      return this.node.filterData;\n    }\n  }]);\n}();\nvar AsyncDataTreeRenderer = /*#__PURE__*/function () {\n  function AsyncDataTreeRenderer(renderer, nodeMapper, onDidChangeTwistieState) {\n    _classCallCheck(this, AsyncDataTreeRenderer);\n    this.renderer = renderer;\n    this.nodeMapper = nodeMapper;\n    this.onDidChangeTwistieState = onDidChangeTwistieState;\n    this.renderedNodes = new Map();\n    this.templateId = renderer.templateId;\n  }\n  return _createClass(AsyncDataTreeRenderer, [{\n    key: \"renderTemplate\",\n    value: function renderTemplate(container) {\n      var templateData = this.renderer.renderTemplate(container);\n      return {\n        templateData: templateData\n      };\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(node, index, templateData, height) {\n      this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n  }, {\n    key: \"renderTwistie\",\n    value: function renderTwistie(element, twistieElement) {\n      if (element.slow) {\n        var _twistieElement$class;\n        (_twistieElement$class = twistieElement.classList).add.apply(_twistieElement$class, _toConsumableArray(ThemeIcon.asClassNameArray(Codicon.treeItemLoading)));\n        return true;\n      } else {\n        var _twistieElement$class2;\n        (_twistieElement$class2 = twistieElement.classList).remove.apply(_twistieElement$class2, _toConsumableArray(ThemeIcon.asClassNameArray(Codicon.treeItemLoading)));\n        return false;\n      }\n    }\n  }, {\n    key: \"disposeElement\",\n    value: function disposeElement(node, index, templateData, height) {\n      var _a, _b;\n      (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n  }, {\n    key: \"disposeTemplate\",\n    value: function disposeTemplate(templateData) {\n      this.renderer.disposeTemplate(templateData.templateData);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderedNodes.clear();\n    }\n  }]);\n}();\nfunction asTreeEvent(e) {\n  return {\n    browserEvent: e.browserEvent,\n    elements: e.elements.map(function (e) {\n      return e.element;\n    })\n  };\n}\nfunction asTreeMouseEvent(e) {\n  return {\n    browserEvent: e.browserEvent,\n    element: e.element && e.element.element,\n    target: e.target\n  };\n}\nvar AsyncDataTreeElementsDragAndDropData = /*#__PURE__*/function (_ElementsDragAndDropD) {\n  function AsyncDataTreeElementsDragAndDropData(data) {\n    var _this;\n    _classCallCheck(this, AsyncDataTreeElementsDragAndDropData);\n    _this = _callSuper(this, AsyncDataTreeElementsDragAndDropData, [data.elements.map(function (node) {\n      return node.element;\n    })]);\n    _this.data = data;\n    return _this;\n  }\n  _inherits(AsyncDataTreeElementsDragAndDropData, _ElementsDragAndDropD);\n  return _createClass(AsyncDataTreeElementsDragAndDropData);\n}(ElementsDragAndDropData);\nfunction asAsyncDataTreeDragAndDropData(data) {\n  if (data instanceof ElementsDragAndDropData) {\n    return new AsyncDataTreeElementsDragAndDropData(data);\n  }\n  return data;\n}\nvar AsyncDataTreeNodeListDragAndDrop = /*#__PURE__*/function () {\n  function AsyncDataTreeNodeListDragAndDrop(dnd) {\n    _classCallCheck(this, AsyncDataTreeNodeListDragAndDrop);\n    this.dnd = dnd;\n  }\n  return _createClass(AsyncDataTreeNodeListDragAndDrop, [{\n    key: \"getDragURI\",\n    value: function getDragURI(node) {\n      return this.dnd.getDragURI(node.element);\n    }\n  }, {\n    key: \"getDragLabel\",\n    value: function getDragLabel(nodes, originalEvent) {\n      if (this.dnd.getDragLabel) {\n        return this.dnd.getDragLabel(nodes.map(function (node) {\n          return node.element;\n        }), originalEvent);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(data, originalEvent) {\n      var _a, _b;\n      (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asAsyncDataTreeDragAndDropData(data), originalEvent);\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(data, targetNode, targetIndex, targetSector, originalEvent) {\n      var raw = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n      return this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n      this.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(originalEvent) {\n      var _a, _b;\n      (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.dnd.dispose();\n    }\n  }]);\n}();\nfunction asObjectTreeOptions(options) {\n  return options && _objectSpread(_objectSpread({}, options), {}, {\n    collapseByDefault: true,\n    identityProvider: options.identityProvider && {\n      getId: function getId(el) {\n        return options.identityProvider.getId(el.element);\n      }\n    },\n    dnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd),\n    multipleSelectionController: options.multipleSelectionController && {\n      isSelectionSingleChangeEvent: function isSelectionSingleChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionSingleChangeEvent(_objectSpread(_objectSpread({}, e), {}, {\n          element: e.element\n        }));\n      },\n      isSelectionRangeChangeEvent: function isSelectionRangeChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionRangeChangeEvent(_objectSpread(_objectSpread({}, e), {}, {\n          element: e.element\n        }));\n      }\n    },\n    accessibilityProvider: options.accessibilityProvider && _objectSpread(_objectSpread({}, options.accessibilityProvider), {}, {\n      getPosInSet: undefined,\n      getSetSize: undefined,\n      getRole: options.accessibilityProvider.getRole ? function (el) {\n        return options.accessibilityProvider.getRole(el.element);\n      } : function () {\n        return 'treeitem';\n      },\n      isChecked: options.accessibilityProvider.isChecked ? function (e) {\n        var _a;\n        return !!((_a = options.accessibilityProvider) === null || _a === void 0 ? void 0 : _a.isChecked(e.element));\n      } : undefined,\n      getAriaLabel: function getAriaLabel(e) {\n        return options.accessibilityProvider.getAriaLabel(e.element);\n      },\n      getWidgetAriaLabel: function getWidgetAriaLabel() {\n        return options.accessibilityProvider.getWidgetAriaLabel();\n      },\n      getWidgetRole: options.accessibilityProvider.getWidgetRole ? function () {\n        return options.accessibilityProvider.getWidgetRole();\n      } : function () {\n        return 'tree';\n      },\n      getAriaLevel: options.accessibilityProvider.getAriaLevel && function (node) {\n        return options.accessibilityProvider.getAriaLevel(node.element);\n      },\n      getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && function (node) {\n        return options.accessibilityProvider.getActiveDescendantId(node.element);\n      }\n    }),\n    filter: options.filter && {\n      filter: function filter(e, parentVisibility) {\n        return options.filter.filter(e.element, parentVisibility);\n      }\n    },\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && _objectSpread(_objectSpread({}, options.keyboardNavigationLabelProvider), {}, {\n      getKeyboardNavigationLabel: function getKeyboardNavigationLabel(e) {\n        return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element);\n      }\n    }),\n    sorter: undefined,\n    expandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : typeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : function (e) {\n      return options.expandOnlyOnTwistieClick(e.element);\n    },\n    defaultFindVisibility: function defaultFindVisibility(e) {\n      if (e.hasChildren && e.stale) {\n        return 1 /* TreeVisibility.Visible */;\n      } else if (typeof options.defaultFindVisibility === 'number') {\n        return options.defaultFindVisibility;\n      } else if (typeof options.defaultFindVisibility === 'undefined') {\n        return 2 /* TreeVisibility.Recurse */;\n      } else {\n        return options.defaultFindVisibility(e.element);\n      }\n    }\n  });\n}\nfunction dfs(node, fn) {\n  fn(node);\n  node.children.forEach(function (child) {\n    return dfs(child, fn);\n  });\n}\nexport var AsyncDataTree = /*#__PURE__*/function () {\n  function AsyncDataTree(user, container, delegate, renderers, dataSource) {\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    _classCallCheck(this, AsyncDataTree);\n    this.user = user;\n    this.dataSource = dataSource;\n    this.nodes = new Map();\n    this.subTreeRefreshPromises = new Map();\n    this.refreshPromises = new Map();\n    this._onDidRender = new Emitter();\n    this._onDidChangeNodeSlowState = new Emitter();\n    this.nodeMapper = new WeakMapper(function (node) {\n      return new AsyncDataTreeNodeWrapper(node);\n    });\n    this.disposables = new DisposableStore();\n    this.identityProvider = options.identityProvider;\n    this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n    this.sorter = options.sorter;\n    this.getDefaultCollapseState = function (e) {\n      return options.collapseByDefault ? options.collapseByDefault(e) ? ObjectTreeElementCollapseState.PreserveOrCollapsed : ObjectTreeElementCollapseState.PreserveOrExpanded : undefined;\n    };\n    this.tree = this.createTree(user, container, delegate, renderers, options);\n    this.onDidChangeFindMode = this.tree.onDidChangeFindMode;\n    this.onDidChangeFindMatchType = this.tree.onDidChangeFindMatchType;\n    this.root = createAsyncDataTreeNode({\n      element: undefined,\n      parent: null,\n      hasChildren: true,\n      defaultCollapseState: undefined\n    });\n    if (this.identityProvider) {\n      this.root = _objectSpread(_objectSpread({}, this.root), {}, {\n        id: null\n      });\n    }\n    this.nodes.set(null, this.root);\n    this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\n  }\n  return _createClass(AsyncDataTree, [{\n    key: \"onDidScroll\",\n    get: function get() {\n      return this.tree.onDidScroll;\n    }\n  }, {\n    key: \"onDidChangeFocus\",\n    get: function get() {\n      return Event.map(this.tree.onDidChangeFocus, asTreeEvent);\n    }\n  }, {\n    key: \"onDidChangeSelection\",\n    get: function get() {\n      return Event.map(this.tree.onDidChangeSelection, asTreeEvent);\n    }\n  }, {\n    key: \"onMouseDblClick\",\n    get: function get() {\n      return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent);\n    }\n  }, {\n    key: \"onPointer\",\n    get: function get() {\n      return Event.map(this.tree.onPointer, asTreeMouseEvent);\n    }\n  }, {\n    key: \"onDidFocus\",\n    get: function get() {\n      return this.tree.onDidFocus;\n    }\n    /**\n     * To be used internally only!\n     * @deprecated\n     */\n  }, {\n    key: \"onDidChangeModel\",\n    get: function get() {\n      return this.tree.onDidChangeModel;\n    }\n  }, {\n    key: \"onDidChangeCollapseState\",\n    get: function get() {\n      return this.tree.onDidChangeCollapseState;\n    }\n  }, {\n    key: \"onDidChangeFindOpenState\",\n    get: function get() {\n      return this.tree.onDidChangeFindOpenState;\n    }\n  }, {\n    key: \"onDidChangeStickyScrollFocused\",\n    get: function get() {\n      return this.tree.onDidChangeStickyScrollFocused;\n    }\n  }, {\n    key: \"onDidDispose\",\n    get: function get() {\n      return this.tree.onDidDispose;\n    }\n  }, {\n    key: \"createTree\",\n    value: function createTree(user, container, delegate, renderers, options) {\n      var _this2 = this;\n      var objectTreeDelegate = new ComposedTreeDelegate(delegate);\n      var objectTreeRenderers = renderers.map(function (r) {\n        return new AsyncDataTreeRenderer(r, _this2.nodeMapper, _this2._onDidChangeNodeSlowState.event);\n      });\n      var objectTreeOptions = asObjectTreeOptions(options) || {};\n      return new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.tree.updateOptions(options);\n    }\n    // Widget\n  }, {\n    key: \"getHTMLElement\",\n    value: function getHTMLElement() {\n      return this.tree.getHTMLElement();\n    }\n  }, {\n    key: \"scrollTop\",\n    get: function get() {\n      return this.tree.scrollTop;\n    },\n    set: function set(scrollTop) {\n      this.tree.scrollTop = scrollTop;\n    }\n  }, {\n    key: \"scrollHeight\",\n    get: function get() {\n      return this.tree.scrollHeight;\n    }\n  }, {\n    key: \"renderHeight\",\n    get: function get() {\n      return this.tree.renderHeight;\n    }\n  }, {\n    key: \"domFocus\",\n    value: function domFocus() {\n      this.tree.domFocus();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(height, width) {\n      this.tree.layout(height, width);\n    }\n  }, {\n    key: \"style\",\n    value: function style(styles) {\n      this.tree.style(styles);\n    }\n    // Model\n  }, {\n    key: \"getInput\",\n    value: function getInput() {\n      return this.root.element;\n    }\n  }, {\n    key: \"setInput\",\n    value: function () {\n      var _setInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input, viewState) {\n        var viewStateContext;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.refreshPromises.forEach(function (promise) {\n                return promise.cancel();\n              });\n              this.refreshPromises.clear();\n              this.root.element = input;\n              viewStateContext = viewState && {\n                viewState: viewState,\n                focus: [],\n                selection: []\n              };\n              _context.next = 6;\n              return this._updateChildren(input, true, false, viewStateContext);\n            case 6:\n              if (viewStateContext) {\n                this.tree.setFocus(viewStateContext.focus);\n                this.tree.setSelection(viewStateContext.selection);\n              }\n              if (viewState && typeof viewState.scrollTop === 'number') {\n                this.scrollTop = viewState.scrollTop;\n              }\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function setInput(_x, _x2) {\n        return _setInput.apply(this, arguments);\n      }\n      return setInput;\n    }()\n  }, {\n    key: \"_updateChildren\",\n    value: function () {\n      var _updateChildren2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var element,\n          recursive,\n          rerender,\n          viewStateContext,\n          options,\n          node,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              element = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : this.root.element;\n              recursive = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : true;\n              rerender = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : false;\n              viewStateContext = _args2.length > 3 ? _args2[3] : undefined;\n              options = _args2.length > 4 ? _args2[4] : undefined;\n              if (!(typeof this.root.element === 'undefined')) {\n                _context2.next = 7;\n                break;\n              }\n              throw new TreeError(this.user, 'Tree input not set');\n            case 7:\n              if (!this.root.refreshPromise) {\n                _context2.next = 12;\n                break;\n              }\n              _context2.next = 10;\n              return this.root.refreshPromise;\n            case 10:\n              _context2.next = 12;\n              return Event.toPromise(this._onDidRender.event);\n            case 12:\n              node = this.getDataNode(element);\n              _context2.next = 15;\n              return this.refreshAndRenderNode(node, recursive, viewStateContext, options);\n            case 15:\n              if (rerender) {\n                try {\n                  this.tree.rerender(node);\n                } catch (_a) {\n                  // missing nodes are fine, this could've resulted from\n                  // parallel refresh calls, removing `node` altogether\n                }\n              }\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function _updateChildren() {\n        return _updateChildren2.apply(this, arguments);\n      }\n      return _updateChildren;\n    }() // View\n  }, {\n    key: \"rerender\",\n    value: function rerender(element) {\n      if (element === undefined || element === this.root.element) {\n        this.tree.rerender();\n        return;\n      }\n      var node = this.getDataNode(element);\n      this.tree.rerender(node);\n    }\n    // Tree\n  }, {\n    key: \"getNode\",\n    value: function getNode() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root.element;\n      var dataNode = this.getDataNode(element);\n      var node = this.tree.getNode(dataNode === this.root ? null : dataNode);\n      return this.nodeMapper.map(node);\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(element) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var node = this.getDataNode(element);\n      return this.tree.collapse(node === this.root ? null : node, recursive);\n    }\n  }, {\n    key: \"expand\",\n    value: function () {\n      var _expand = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(element) {\n        var recursive,\n          node,\n          result,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              recursive = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : false;\n              if (!(typeof this.root.element === 'undefined')) {\n                _context3.next = 3;\n                break;\n              }\n              throw new TreeError(this.user, 'Tree input not set');\n            case 3:\n              if (!this.root.refreshPromise) {\n                _context3.next = 8;\n                break;\n              }\n              _context3.next = 6;\n              return this.root.refreshPromise;\n            case 6:\n              _context3.next = 8;\n              return Event.toPromise(this._onDidRender.event);\n            case 8:\n              node = this.getDataNode(element);\n              if (!(this.tree.hasElement(node) && !this.tree.isCollapsible(node))) {\n                _context3.next = 11;\n                break;\n              }\n              return _context3.abrupt(\"return\", false);\n            case 11:\n              if (!node.refreshPromise) {\n                _context3.next = 16;\n                break;\n              }\n              _context3.next = 14;\n              return this.root.refreshPromise;\n            case 14:\n              _context3.next = 16;\n              return Event.toPromise(this._onDidRender.event);\n            case 16:\n              if (!(node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node))) {\n                _context3.next = 18;\n                break;\n              }\n              return _context3.abrupt(\"return\", false);\n            case 18:\n              result = this.tree.expand(node === this.root ? null : node, recursive);\n              if (!node.refreshPromise) {\n                _context3.next = 24;\n                break;\n              }\n              _context3.next = 22;\n              return this.root.refreshPromise;\n            case 22:\n              _context3.next = 24;\n              return Event.toPromise(this._onDidRender.event);\n            case 24:\n              return _context3.abrupt(\"return\", result);\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function expand(_x3) {\n        return _expand.apply(this, arguments);\n      }\n      return expand;\n    }()\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(elements, browserEvent) {\n      var _this3 = this;\n      var nodes = elements.map(function (e) {\n        return _this3.getDataNode(e);\n      });\n      this.tree.setSelection(nodes, browserEvent);\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      var nodes = this.tree.getSelection();\n      return nodes.map(function (n) {\n        return n.element;\n      });\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(elements, browserEvent) {\n      var _this4 = this;\n      var nodes = elements.map(function (e) {\n        return _this4.getDataNode(e);\n      });\n      this.tree.setFocus(nodes, browserEvent);\n    }\n  }, {\n    key: \"getFocus\",\n    value: function getFocus() {\n      var nodes = this.tree.getFocus();\n      return nodes.map(function (n) {\n        return n.element;\n      });\n    }\n  }, {\n    key: \"reveal\",\n    value: function reveal(element, relativeTop) {\n      this.tree.reveal(this.getDataNode(element), relativeTop);\n    }\n    // Tree navigation\n  }, {\n    key: \"getParentElement\",\n    value: function getParentElement(element) {\n      var node = this.tree.getParentElement(this.getDataNode(element));\n      return node && node.element;\n    }\n  }, {\n    key: \"getFirstElementChild\",\n    value: function getFirstElementChild() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root.element;\n      var dataNode = this.getDataNode(element);\n      var node = this.tree.getFirstElementChild(dataNode === this.root ? null : dataNode);\n      return node && node.element;\n    }\n    // Implementation\n  }, {\n    key: \"getDataNode\",\n    value: function getDataNode(element) {\n      var node = this.nodes.get(element === this.root.element ? null : element);\n      if (!node) {\n        throw new TreeError(this.user, \"Data tree node not found: \".concat(element));\n      }\n      return node;\n    }\n  }, {\n    key: \"refreshAndRenderNode\",\n    value: function () {\n      var _refreshAndRenderNode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(node, recursive, viewStateContext, options) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.refreshNode(node, recursive, viewStateContext);\n            case 2:\n              if (!this.disposables.isDisposed) {\n                _context4.next = 4;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 4:\n              this.render(node, viewStateContext, options);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function refreshAndRenderNode(_x4, _x5, _x6, _x7) {\n        return _refreshAndRenderNode.apply(this, arguments);\n      }\n      return refreshAndRenderNode;\n    }()\n  }, {\n    key: \"refreshNode\",\n    value: function () {\n      var _refreshNode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(node, recursive, viewStateContext) {\n        var _this5 = this;\n        var result, treeNode;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              this.subTreeRefreshPromises.forEach(function (refreshPromise, refreshNode) {\n                if (!result && intersects(refreshNode, node)) {\n                  result = refreshPromise.then(function () {\n                    return _this5.refreshNode(node, recursive, viewStateContext);\n                  });\n                }\n              });\n              if (!result) {\n                _context5.next = 3;\n                break;\n              }\n              return _context5.abrupt(\"return\", result);\n            case 3:\n              if (!(node !== this.root)) {\n                _context5.next = 10;\n                break;\n              }\n              treeNode = this.tree.getNode(node);\n              if (!treeNode.collapsed) {\n                _context5.next = 10;\n                break;\n              }\n              node.hasChildren = !!this.dataSource.hasChildren(node.element);\n              node.stale = true;\n              this.setChildren(node, [], recursive, viewStateContext);\n              return _context5.abrupt(\"return\");\n            case 10:\n              return _context5.abrupt(\"return\", this.doRefreshSubTree(node, recursive, viewStateContext));\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function refreshNode(_x8, _x9, _x10) {\n        return _refreshNode.apply(this, arguments);\n      }\n      return refreshNode;\n    }()\n  }, {\n    key: \"doRefreshSubTree\",\n    value: function () {\n      var _doRefreshSubTree = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(node, recursive, viewStateContext) {\n        var _this6 = this;\n        var done, childrenToRefresh;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              node.refreshPromise = new Promise(function (c) {\n                return done = c;\n              });\n              this.subTreeRefreshPromises.set(node, node.refreshPromise);\n              node.refreshPromise[\"finally\"](function () {\n                node.refreshPromise = undefined;\n                _this6.subTreeRefreshPromises[\"delete\"](node);\n              });\n              _context6.prev = 3;\n              _context6.next = 6;\n              return this.doRefreshNode(node, recursive, viewStateContext);\n            case 6:\n              childrenToRefresh = _context6.sent;\n              node.stale = false;\n              _context6.next = 10;\n              return Promises.settled(childrenToRefresh.map(function (child) {\n                return _this6.doRefreshSubTree(child, recursive, viewStateContext);\n              }));\n            case 10:\n              _context6.prev = 10;\n              done();\n              return _context6.finish(10);\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[3,, 10, 13]]);\n      }));\n      function doRefreshSubTree(_x11, _x12, _x13) {\n        return _doRefreshSubTree.apply(this, arguments);\n      }\n      return doRefreshSubTree;\n    }()\n  }, {\n    key: \"doRefreshNode\",\n    value: function () {\n      var _doRefreshNode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(node, recursive, viewStateContext) {\n        var _this7 = this;\n        var childrenPromise, children, slowTimeout, _children;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              node.hasChildren = !!this.dataSource.hasChildren(node.element);\n              if (!node.hasChildren) {\n                childrenPromise = Promise.resolve(Iterable.empty());\n              } else {\n                children = this.doGetChildren(node);\n                if (isIterable(children)) {\n                  childrenPromise = Promise.resolve(children);\n                } else {\n                  slowTimeout = timeout(800);\n                  slowTimeout.then(function () {\n                    node.slow = true;\n                    _this7._onDidChangeNodeSlowState.fire(node);\n                  }, function (_) {\n                    return null;\n                  });\n                  childrenPromise = children[\"finally\"](function () {\n                    return slowTimeout.cancel();\n                  });\n                }\n              }\n              _context7.prev = 2;\n              _context7.next = 5;\n              return childrenPromise;\n            case 5:\n              _children = _context7.sent;\n              return _context7.abrupt(\"return\", this.setChildren(node, _children, recursive, viewStateContext));\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](2);\n              if (node !== this.root && this.tree.hasElement(node)) {\n                this.tree.collapse(node);\n              }\n              if (!isCancellationError(_context7.t0)) {\n                _context7.next = 14;\n                break;\n              }\n              return _context7.abrupt(\"return\", []);\n            case 14:\n              throw _context7.t0;\n            case 15:\n              _context7.prev = 15;\n              if (node.slow) {\n                node.slow = false;\n                this._onDidChangeNodeSlowState.fire(node);\n              }\n              return _context7.finish(15);\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[2, 9, 15, 18]]);\n      }));\n      function doRefreshNode(_x14, _x15, _x16) {\n        return _doRefreshNode.apply(this, arguments);\n      }\n      return doRefreshNode;\n    }()\n  }, {\n    key: \"doGetChildren\",\n    value: function doGetChildren(node) {\n      var _this8 = this;\n      var result = this.refreshPromises.get(node);\n      if (result) {\n        return result;\n      }\n      var children = this.dataSource.getChildren(node.element);\n      if (isIterable(children)) {\n        return this.processChildren(children);\n      } else {\n        result = createCancelablePromise( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.t0 = _this8;\n                _context8.next = 3;\n                return children;\n              case 3:\n                _context8.t1 = _context8.sent;\n                return _context8.abrupt(\"return\", _context8.t0.processChildren.call(_context8.t0, _context8.t1));\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8);\n        })));\n        this.refreshPromises.set(node, result);\n        return result[\"finally\"](function () {\n          _this8.refreshPromises[\"delete\"](node);\n        });\n      }\n    }\n  }, {\n    key: \"_onDidChangeCollapseState\",\n    value: function _onDidChangeCollapseState(_ref2) {\n      var node = _ref2.node,\n        deep = _ref2.deep;\n      if (node.element === null) {\n        return;\n      }\n      if (!node.collapsed && node.element.stale) {\n        if (deep) {\n          this.collapse(node.element.element);\n        } else {\n          this.refreshAndRenderNode(node.element, false)[\"catch\"](onUnexpectedError);\n        }\n      }\n    }\n  }, {\n    key: \"setChildren\",\n    value: function setChildren(node, childrenElementsIterable, recursive, viewStateContext) {\n      var _this9 = this,\n        _node$children;\n      var childrenElements = _toConsumableArray(childrenElementsIterable);\n      // perf: if the node was and still is a leaf, avoid all this hassle\n      if (node.children.length === 0 && childrenElements.length === 0) {\n        return [];\n      }\n      var nodesToForget = new Map();\n      var childrenTreeNodesById = new Map();\n      var _iterator = _createForOfIteratorHelper(node.children),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          nodesToForget.set(child.element, child);\n          if (this.identityProvider) {\n            childrenTreeNodesById.set(child.id, {\n              node: child,\n              collapsed: this.tree.hasElement(child) && this.tree.isCollapsed(child)\n            });\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var childrenToRefresh = [];\n      var children = childrenElements.map(function (element) {\n        var hasChildren = !!_this9.dataSource.hasChildren(element);\n        if (!_this9.identityProvider) {\n          var asyncDataTreeNode = createAsyncDataTreeNode({\n            element: element,\n            parent: node,\n            hasChildren: hasChildren,\n            defaultCollapseState: _this9.getDefaultCollapseState(element)\n          });\n          if (hasChildren && asyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n            childrenToRefresh.push(asyncDataTreeNode);\n          }\n          return asyncDataTreeNode;\n        }\n        var id = _this9.identityProvider.getId(element).toString();\n        var result = childrenTreeNodesById.get(id);\n        if (result) {\n          var _asyncDataTreeNode = result.node;\n          nodesToForget[\"delete\"](_asyncDataTreeNode.element);\n          _this9.nodes[\"delete\"](_asyncDataTreeNode.element);\n          _this9.nodes.set(element, _asyncDataTreeNode);\n          _asyncDataTreeNode.element = element;\n          _asyncDataTreeNode.hasChildren = hasChildren;\n          if (recursive) {\n            if (result.collapsed) {\n              _asyncDataTreeNode.children.forEach(function (node) {\n                return dfs(node, function (node) {\n                  return _this9.nodes[\"delete\"](node.element);\n                });\n              });\n              _asyncDataTreeNode.children.splice(0, _asyncDataTreeNode.children.length);\n              _asyncDataTreeNode.stale = true;\n            } else {\n              childrenToRefresh.push(_asyncDataTreeNode);\n            }\n          } else if (hasChildren && !result.collapsed) {\n            childrenToRefresh.push(_asyncDataTreeNode);\n          }\n          return _asyncDataTreeNode;\n        }\n        var childAsyncDataTreeNode = createAsyncDataTreeNode({\n          element: element,\n          parent: node,\n          id: id,\n          hasChildren: hasChildren,\n          defaultCollapseState: _this9.getDefaultCollapseState(element)\n        });\n        if (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\n          viewStateContext.focus.push(childAsyncDataTreeNode);\n        }\n        if (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\n          viewStateContext.selection.push(childAsyncDataTreeNode);\n        }\n        if (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\n          childrenToRefresh.push(childAsyncDataTreeNode);\n        } else if (hasChildren && childAsyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n          childrenToRefresh.push(childAsyncDataTreeNode);\n        }\n        return childAsyncDataTreeNode;\n      });\n      var _iterator2 = _createForOfIteratorHelper(nodesToForget.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _node = _step2.value;\n          dfs(_node, function (node) {\n            return _this9.nodes[\"delete\"](node.element);\n          });\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var _iterator3 = _createForOfIteratorHelper(children),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _child = _step3.value;\n          this.nodes.set(_child.element, _child);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      (_node$children = node.children).splice.apply(_node$children, [0, node.children.length].concat(_toConsumableArray(children)));\n      // TODO@joao this doesn't take filter into account\n      if (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\n        children[0].forceExpanded = true;\n        childrenToRefresh.push(children[0]);\n      }\n      return childrenToRefresh;\n    }\n  }, {\n    key: \"render\",\n    value: function render(node, viewStateContext, options) {\n      var _this10 = this;\n      var children = node.children.map(function (node) {\n        return _this10.asTreeElement(node, viewStateContext);\n      });\n      var objectTreeOptions = options && _objectSpread(_objectSpread({}, options), {}, {\n        diffIdentityProvider: options.diffIdentityProvider && {\n          getId: function getId(node) {\n            return options.diffIdentityProvider.getId(node.element);\n          }\n        }\n      });\n      this.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\n      if (node !== this.root) {\n        this.tree.setCollapsible(node, node.hasChildren);\n      }\n      this._onDidRender.fire();\n    }\n  }, {\n    key: \"asTreeElement\",\n    value: function asTreeElement(node, viewStateContext) {\n      var _this11 = this;\n      if (node.stale) {\n        return {\n          element: node,\n          collapsible: node.hasChildren,\n          collapsed: true\n        };\n      }\n      var collapsed;\n      if (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\n        collapsed = false;\n      } else if (node.forceExpanded) {\n        collapsed = false;\n        node.forceExpanded = false;\n      } else {\n        collapsed = node.defaultCollapseState;\n      }\n      return {\n        element: node,\n        children: node.hasChildren ? Iterable.map(node.children, function (child) {\n          return _this11.asTreeElement(child, viewStateContext);\n        }) : [],\n        collapsible: node.hasChildren,\n        collapsed: collapsed\n      };\n    }\n  }, {\n    key: \"processChildren\",\n    value: function processChildren(children) {\n      if (this.sorter) {\n        children = _toConsumableArray(children).sort(this.sorter.compare.bind(this.sorter));\n      }\n      return children;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables.dispose();\n      this.tree.dispose();\n    }\n  }]);\n}();\nvar CompressibleAsyncDataTreeNodeWrapper = /*#__PURE__*/function () {\n  function CompressibleAsyncDataTreeNodeWrapper(node) {\n    _classCallCheck(this, CompressibleAsyncDataTreeNodeWrapper);\n    this.node = node;\n  }\n  return _createClass(CompressibleAsyncDataTreeNodeWrapper, [{\n    key: \"element\",\n    get: function get() {\n      return {\n        elements: this.node.element.elements.map(function (e) {\n          return e.element;\n        }),\n        incompressible: this.node.element.incompressible\n      };\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this.node.children.map(function (node) {\n        return new CompressibleAsyncDataTreeNodeWrapper(node);\n      });\n    }\n  }, {\n    key: \"depth\",\n    get: function get() {\n      return this.node.depth;\n    }\n  }, {\n    key: \"visibleChildrenCount\",\n    get: function get() {\n      return this.node.visibleChildrenCount;\n    }\n  }, {\n    key: \"visibleChildIndex\",\n    get: function get() {\n      return this.node.visibleChildIndex;\n    }\n  }, {\n    key: \"collapsible\",\n    get: function get() {\n      return this.node.collapsible;\n    }\n  }, {\n    key: \"collapsed\",\n    get: function get() {\n      return this.node.collapsed;\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this.node.visible;\n    }\n  }, {\n    key: \"filterData\",\n    get: function get() {\n      return this.node.filterData;\n    }\n  }]);\n}();\nvar CompressibleAsyncDataTreeRenderer = /*#__PURE__*/function () {\n  function CompressibleAsyncDataTreeRenderer(renderer, nodeMapper, compressibleNodeMapperProvider, onDidChangeTwistieState) {\n    _classCallCheck(this, CompressibleAsyncDataTreeRenderer);\n    this.renderer = renderer;\n    this.nodeMapper = nodeMapper;\n    this.compressibleNodeMapperProvider = compressibleNodeMapperProvider;\n    this.onDidChangeTwistieState = onDidChangeTwistieState;\n    this.renderedNodes = new Map();\n    this.disposables = [];\n    this.templateId = renderer.templateId;\n  }\n  return _createClass(CompressibleAsyncDataTreeRenderer, [{\n    key: \"renderTemplate\",\n    value: function renderTemplate(container) {\n      var templateData = this.renderer.renderTemplate(container);\n      return {\n        templateData: templateData\n      };\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(node, index, templateData, height) {\n      this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n  }, {\n    key: \"renderCompressedElements\",\n    value: function renderCompressedElements(node, index, templateData, height) {\n      this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n  }, {\n    key: \"renderTwistie\",\n    value: function renderTwistie(element, twistieElement) {\n      if (element.slow) {\n        var _twistieElement$class3;\n        (_twistieElement$class3 = twistieElement.classList).add.apply(_twistieElement$class3, _toConsumableArray(ThemeIcon.asClassNameArray(Codicon.treeItemLoading)));\n        return true;\n      } else {\n        var _twistieElement$class4;\n        (_twistieElement$class4 = twistieElement.classList).remove.apply(_twistieElement$class4, _toConsumableArray(ThemeIcon.asClassNameArray(Codicon.treeItemLoading)));\n        return false;\n      }\n    }\n  }, {\n    key: \"disposeElement\",\n    value: function disposeElement(node, index, templateData, height) {\n      var _a, _b;\n      (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n  }, {\n    key: \"disposeCompressedElements\",\n    value: function disposeCompressedElements(node, index, templateData, height) {\n      var _a, _b;\n      (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n  }, {\n    key: \"disposeTemplate\",\n    value: function disposeTemplate(templateData) {\n      this.renderer.disposeTemplate(templateData.templateData);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderedNodes.clear();\n      this.disposables = _dispose(this.disposables);\n    }\n  }]);\n}();\nfunction asCompressibleObjectTreeOptions(options) {\n  var objectTreeOptions = options && asObjectTreeOptions(options);\n  return objectTreeOptions && _objectSpread(_objectSpread({}, objectTreeOptions), {}, {\n    keyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && _objectSpread(_objectSpread({}, objectTreeOptions.keyboardNavigationLabelProvider), {}, {\n      getCompressedNodeKeyboardNavigationLabel: function getCompressedNodeKeyboardNavigationLabel(els) {\n        return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(els.map(function (e) {\n          return e.element;\n        }));\n      }\n    })\n  });\n}\nexport var CompressibleAsyncDataTree = /*#__PURE__*/function (_AsyncDataTree) {\n  function CompressibleAsyncDataTree(user, container, virtualDelegate, compressionDelegate, renderers, dataSource) {\n    var _this12;\n    var options = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n    _classCallCheck(this, CompressibleAsyncDataTree);\n    _this12 = _callSuper(this, CompressibleAsyncDataTree, [user, container, virtualDelegate, renderers, dataSource, options]);\n    _this12.compressionDelegate = compressionDelegate;\n    _this12.compressibleNodeMapper = new WeakMapper(function (node) {\n      return new CompressibleAsyncDataTreeNodeWrapper(node);\n    });\n    _this12.filter = options.filter;\n    return _this12;\n  }\n  _inherits(CompressibleAsyncDataTree, _AsyncDataTree);\n  return _createClass(CompressibleAsyncDataTree, [{\n    key: \"createTree\",\n    value: function createTree(user, container, delegate, renderers, options) {\n      var _this13 = this;\n      var objectTreeDelegate = new ComposedTreeDelegate(delegate);\n      var objectTreeRenderers = renderers.map(function (r) {\n        return new CompressibleAsyncDataTreeRenderer(r, _this13.nodeMapper, function () {\n          return _this13.compressibleNodeMapper;\n        }, _this13._onDidChangeNodeSlowState.event);\n      });\n      var objectTreeOptions = asCompressibleObjectTreeOptions(options) || {};\n      return new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n  }, {\n    key: \"asTreeElement\",\n    value: function asTreeElement(node, viewStateContext) {\n      return _objectSpread({\n        incompressible: this.compressionDelegate.isIncompressible(node.element)\n      }, _get(_getPrototypeOf(CompressibleAsyncDataTree.prototype), \"asTreeElement\", this).call(this, node, viewStateContext));\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.tree.updateOptions(options);\n    }\n  }, {\n    key: \"render\",\n    value: function render(node, viewStateContext, options) {\n      var _this14 = this;\n      if (!this.identityProvider) {\n        return _get(_getPrototypeOf(CompressibleAsyncDataTree.prototype), \"render\", this).call(this, node, viewStateContext);\n      }\n      // Preserve traits across compressions. Hacky but does the trick.\n      // This is hard to fix properly since it requires rewriting the traits\n      // across trees and lists. Let's just keep it this way for now.\n      var getId = function getId(element) {\n        return _this14.identityProvider.getId(element).toString();\n      };\n      var getUncompressedIds = function getUncompressedIds(nodes) {\n        var result = new Set();\n        var _iterator4 = _createForOfIteratorHelper(nodes),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _node2 = _step4.value;\n            var compressedNode = _this14.tree.getCompressedTreeNode(_node2 === _this14.root ? null : _node2);\n            if (!compressedNode.element) {\n              continue;\n            }\n            var _iterator5 = _createForOfIteratorHelper(compressedNode.element.elements),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var _node3 = _step5.value;\n                result.add(getId(_node3.element));\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        return result;\n      };\n      var oldSelection = getUncompressedIds(this.tree.getSelection());\n      var oldFocus = getUncompressedIds(this.tree.getFocus());\n      _get(_getPrototypeOf(CompressibleAsyncDataTree.prototype), \"render\", this).call(this, node, viewStateContext, options);\n      var selection = this.getSelection();\n      var didChangeSelection = false;\n      var focus = this.getFocus();\n      var didChangeFocus = false;\n      var visit = function visit(node) {\n        var compressedNode = node.element;\n        if (compressedNode) {\n          for (var i = 0; i < compressedNode.elements.length; i++) {\n            var id = getId(compressedNode.elements[i].element);\n            var element = compressedNode.elements[compressedNode.elements.length - 1].element;\n            // github.com/microsoft/vscode/issues/85938\n            if (oldSelection.has(id) && selection.indexOf(element) === -1) {\n              selection.push(element);\n              didChangeSelection = true;\n            }\n            if (oldFocus.has(id) && focus.indexOf(element) === -1) {\n              focus.push(element);\n              didChangeFocus = true;\n            }\n          }\n        }\n        node.children.forEach(visit);\n      };\n      visit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\n      if (didChangeSelection) {\n        this.setSelection(selection);\n      }\n      if (didChangeFocus) {\n        this.setFocus(focus);\n      }\n    }\n    // For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\n    // and we have to filter everything beforehand\n    // Related to #85193 and #85835\n  }, {\n    key: \"processChildren\",\n    value: function processChildren(children) {\n      var _this15 = this;\n      if (this.filter) {\n        children = Iterable.filter(children, function (e) {\n          var result = _this15.filter.filter(e, 1 /* TreeVisibility.Visible */);\n          var visibility = getVisibility(result);\n          if (visibility === 2 /* TreeVisibility.Recurse */) {\n            throw new Error('Recursive tree visibility not supported in async data compressed trees');\n          }\n          return visibility === 1 /* TreeVisibility.Visible */;\n        });\n      }\n      return _get(_getPrototypeOf(CompressibleAsyncDataTree.prototype), \"processChildren\", this).call(this, children);\n    }\n  }]);\n}(AsyncDataTree);\nfunction getVisibility(filterResult) {\n  if (typeof filterResult === 'boolean') {\n    return filterResult ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n  } else if (isFilterResult(filterResult)) {\n    return getVisibleState(filterResult.visibility);\n  } else {\n    return getVisibleState(filterResult);\n  }\n}","map":{"version":3,"names":["ElementsDragAndDropData","ComposedTreeDelegate","getVisibleState","isFilterResult","CompressibleObjectTree","ObjectTree","ObjectTreeElementCollapseState","TreeError","WeakMapper","createCancelablePromise","Promises","timeout","Codicon","ThemeIcon","isCancellationError","onUnexpectedError","Emitter","Event","Iterable","DisposableStore","dispose","isIterable","createAsyncDataTreeNode","props","_objectSpread","children","refreshPromise","undefined","stale","slow","forceExpanded","isAncestor","ancestor","descendant","parent","intersects","node","other","AsyncDataTreeNodeWrapper","_classCallCheck","_createClass","key","get","element","map","depth","visibleChildrenCount","visibleChildIndex","collapsible","collapsed","visible","filterData","AsyncDataTreeRenderer","renderer","nodeMapper","onDidChangeTwistieState","renderedNodes","Map","templateId","value","renderTemplate","container","templateData","renderElement","index","height","renderTwistie","twistieElement","_twistieElement$class","classList","add","apply","_toConsumableArray","asClassNameArray","treeItemLoading","_twistieElement$class2","remove","disposeElement","_a","_b","call","disposeTemplate","clear","asTreeEvent","e","browserEvent","elements","asTreeMouseEvent","target","AsyncDataTreeElementsDragAndDropData","_ElementsDragAndDropD","data","_this","_callSuper","_inherits","asAsyncDataTreeDragAndDropData","AsyncDataTreeNodeListDragAndDrop","dnd","getDragURI","getDragLabel","nodes","originalEvent","onDragStart","onDragOver","targetNode","targetIndex","targetSector","raw","arguments","length","drop","onDragEnd","asObjectTreeOptions","options","collapseByDefault","identityProvider","getId","el","multipleSelectionController","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","accessibilityProvider","getPosInSet","getSetSize","getRole","isChecked","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","getActiveDescendantId","filter","parentVisibility","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","sorter","expandOnlyOnTwistieClick","defaultFindVisibility","hasChildren","dfs","fn","forEach","child","AsyncDataTree","user","delegate","renderers","dataSource","subTreeRefreshPromises","refreshPromises","_onDidRender","_onDidChangeNodeSlowState","disposables","autoExpandSingleChildren","getDefaultCollapseState","PreserveOrCollapsed","PreserveOrExpanded","tree","createTree","onDidChangeFindMode","onDidChangeFindMatchType","root","defaultCollapseState","id","set","onDidChangeCollapseState","_onDidChangeCollapseState","onDidScroll","onDidChangeFocus","onDidChangeSelection","onMouseDblClick","onPointer","onDidFocus","onDidChangeModel","onDidChangeFindOpenState","onDidChangeStickyScrollFocused","onDidDispose","_this2","objectTreeDelegate","objectTreeRenderers","r","event","objectTreeOptions","updateOptions","getHTMLElement","scrollTop","scrollHeight","renderHeight","domFocus","layout","width","style","styles","getInput","_setInput","_asyncToGenerator","_regeneratorRuntime","mark","_callee","input","viewState","viewStateContext","wrap","_callee$","_context","prev","next","promise","cancel","focus","selection","_updateChildren","setFocus","setSelection","stop","setInput","_x","_x2","_updateChildren2","_callee2","recursive","rerender","_args2","_callee2$","_context2","toPromise","getDataNode","refreshAndRenderNode","getNode","dataNode","collapse","_expand","_callee3","result","_args3","_callee3$","_context3","hasElement","isCollapsible","abrupt","isCollapsed","expand","_x3","_this3","getSelection","n","_this4","getFocus","reveal","relativeTop","getParentElement","getFirstElementChild","concat","_refreshAndRenderNode","_callee4","_callee4$","_context4","refreshNode","isDisposed","render","_x4","_x5","_x6","_x7","_refreshNode","_callee5","_this5","treeNode","_callee5$","_context5","then","setChildren","doRefreshSubTree","_x8","_x9","_x10","_doRefreshSubTree","_callee6","_this6","done","childrenToRefresh","_callee6$","_context6","Promise","c","doRefreshNode","sent","settled","finish","_x11","_x12","_x13","_doRefreshNode","_callee7","_this7","childrenPromise","slowTimeout","_children","_callee7$","_context7","resolve","empty","doGetChildren","fire","_","t0","_x14","_x15","_x16","_this8","getChildren","processChildren","_callee8","_callee8$","_context8","t1","_ref2","deep","childrenElementsIterable","_this9","_node$children","childrenElements","nodesToForget","childrenTreeNodesById","_iterator","_createForOfIteratorHelper","_step","s","err","f","asyncDataTreeNode","push","toString","splice","childAsyncDataTreeNode","indexOf","expanded","_iterator2","values","_step2","_iterator3","_step3","_this10","asTreeElement","diffIdentityProvider","setCollapsible","_this11","sort","compare","bind","CompressibleAsyncDataTreeNodeWrapper","incompressible","CompressibleAsyncDataTreeRenderer","compressibleNodeMapperProvider","renderCompressedElements","_twistieElement$class3","_twistieElement$class4","disposeCompressedElements","asCompressibleObjectTreeOptions","getCompressedNodeKeyboardNavigationLabel","els","CompressibleAsyncDataTree","_AsyncDataTree","virtualDelegate","compressionDelegate","_this12","compressibleNodeMapper","_this13","isIncompressible","_get","_getPrototypeOf","prototype","_this14","getUncompressedIds","Set","_iterator4","_step4","compressedNode","getCompressedTreeNode","_iterator5","_step5","oldSelection","oldFocus","didChangeSelection","didChangeFocus","visit","i","has","_this15","visibility","getVisibility","Error","filterResult"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/asyncDataTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { ComposedTreeDelegate } from './abstractTree.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { CompressibleObjectTree, ObjectTree } from './objectTree.js';\nimport { ObjectTreeElementCollapseState, TreeError, WeakMapper } from './tree.js';\nimport { createCancelablePromise, Promises, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { isCancellationError, onUnexpectedError } from '../../../common/errors.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nimport { DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIterable } from '../../../common/types.js';\nfunction createAsyncDataTreeNode(props) {\n    return {\n        ...props,\n        children: [],\n        refreshPromise: undefined,\n        stale: true,\n        slow: false,\n        forceExpanded: false\n    };\n}\nfunction isAncestor(ancestor, descendant) {\n    if (!descendant.parent) {\n        return false;\n    }\n    else if (descendant.parent === ancestor) {\n        return true;\n    }\n    else {\n        return isAncestor(ancestor, descendant.parent);\n    }\n}\nfunction intersects(node, other) {\n    return node === other || isAncestor(node, other) || isAncestor(other, node);\n}\nclass AsyncDataTreeNodeWrapper {\n    get element() { return this.node.element.element; }\n    get children() { return this.node.children.map(node => new AsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(node) {\n        this.node = node;\n    }\n}\nclass AsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n    }\n}\nfunction asTreeEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        elements: e.elements.map(e => e.element)\n    };\n}\nfunction asTreeMouseEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        element: e.element && e.element.element,\n        target: e.target\n    };\n}\nclass AsyncDataTreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asAsyncDataTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new AsyncDataTreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass AsyncDataTreeNodeListDragAndDrop {\n    constructor(dnd) {\n        this.dnd = dnd;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asAsyncDataTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, targetSector, originalEvent, raw = true) {\n        return this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n        this.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n    dispose() {\n        this.dnd.dispose();\n    }\n}\nfunction asObjectTreeOptions(options) {\n    return options && {\n        ...options,\n        collapseByDefault: true,\n        identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        },\n        dnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd),\n        multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent({ ...e, element: e.element });\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent({ ...e, element: e.element });\n            }\n        },\n        accessibilityProvider: options.accessibilityProvider && {\n            ...options.accessibilityProvider,\n            getPosInSet: undefined,\n            getSetSize: undefined,\n            getRole: options.accessibilityProvider.getRole ? (el) => {\n                return options.accessibilityProvider.getRole(el.element);\n            } : () => 'treeitem',\n            isChecked: options.accessibilityProvider.isChecked ? (e) => {\n                var _a;\n                return !!((_a = options.accessibilityProvider) === null || _a === void 0 ? void 0 : _a.isChecked(e.element));\n            } : undefined,\n            getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            },\n            getWidgetRole: options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n            getAriaLevel: options.accessibilityProvider.getAriaLevel && (node => {\n                return options.accessibilityProvider.getAriaLevel(node.element);\n            }),\n            getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            })\n        },\n        filter: options.filter && {\n            filter(e, parentVisibility) {\n                return options.filter.filter(e.element, parentVisibility);\n            }\n        },\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            ...options.keyboardNavigationLabelProvider,\n            getKeyboardNavigationLabel(e) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element);\n            }\n        },\n        sorter: undefined,\n        expandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : (typeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : (e => options.expandOnlyOnTwistieClick(e.element))),\n        defaultFindVisibility: e => {\n            if (e.hasChildren && e.stale) {\n                return 1 /* TreeVisibility.Visible */;\n            }\n            else if (typeof options.defaultFindVisibility === 'number') {\n                return options.defaultFindVisibility;\n            }\n            else if (typeof options.defaultFindVisibility === 'undefined') {\n                return 2 /* TreeVisibility.Recurse */;\n            }\n            else {\n                return options.defaultFindVisibility(e.element);\n            }\n        }\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\nexport class AsyncDataTree {\n    get onDidScroll() { return this.tree.onDidScroll; }\n    get onDidChangeFocus() { return Event.map(this.tree.onDidChangeFocus, asTreeEvent); }\n    get onDidChangeSelection() { return Event.map(this.tree.onDidChangeSelection, asTreeEvent); }\n    get onMouseDblClick() { return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent); }\n    get onPointer() { return Event.map(this.tree.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.tree.onDidFocus; }\n    /**\n     * To be used internally only!\n     * @deprecated\n     */\n    get onDidChangeModel() { return this.tree.onDidChangeModel; }\n    get onDidChangeCollapseState() { return this.tree.onDidChangeCollapseState; }\n    get onDidChangeFindOpenState() { return this.tree.onDidChangeFindOpenState; }\n    get onDidChangeStickyScrollFocused() { return this.tree.onDidChangeStickyScrollFocused; }\n    get onDidDispose() { return this.tree.onDidDispose; }\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        this.user = user;\n        this.dataSource = dataSource;\n        this.nodes = new Map();\n        this.subTreeRefreshPromises = new Map();\n        this.refreshPromises = new Map();\n        this._onDidRender = new Emitter();\n        this._onDidChangeNodeSlowState = new Emitter();\n        this.nodeMapper = new WeakMapper(node => new AsyncDataTreeNodeWrapper(node));\n        this.disposables = new DisposableStore();\n        this.identityProvider = options.identityProvider;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.sorter = options.sorter;\n        this.getDefaultCollapseState = e => options.collapseByDefault ? (options.collapseByDefault(e) ? ObjectTreeElementCollapseState.PreserveOrCollapsed : ObjectTreeElementCollapseState.PreserveOrExpanded) : undefined;\n        this.tree = this.createTree(user, container, delegate, renderers, options);\n        this.onDidChangeFindMode = this.tree.onDidChangeFindMode;\n        this.onDidChangeFindMatchType = this.tree.onDidChangeFindMatchType;\n        this.root = createAsyncDataTreeNode({\n            element: undefined,\n            parent: null,\n            hasChildren: true,\n            defaultCollapseState: undefined\n        });\n        if (this.identityProvider) {\n            this.root = {\n                ...this.root,\n                id: null\n            };\n        }\n        this.nodes.set(null, this.root);\n        this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new AsyncDataTreeRenderer(r, this.nodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asObjectTreeOptions(options) || {};\n        return new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.tree.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.tree.scrollTop = scrollTop;\n    }\n    get scrollHeight() {\n        return this.tree.scrollHeight;\n    }\n    get renderHeight() {\n        return this.tree.renderHeight;\n    }\n    domFocus() {\n        this.tree.domFocus();\n    }\n    layout(height, width) {\n        this.tree.layout(height, width);\n    }\n    style(styles) {\n        this.tree.style(styles);\n    }\n    // Model\n    getInput() {\n        return this.root.element;\n    }\n    async setInput(input, viewState) {\n        this.refreshPromises.forEach(promise => promise.cancel());\n        this.refreshPromises.clear();\n        this.root.element = input;\n        const viewStateContext = viewState && { viewState, focus: [], selection: [] };\n        await this._updateChildren(input, true, false, viewStateContext);\n        if (viewStateContext) {\n            this.tree.setFocus(viewStateContext.focus);\n            this.tree.setSelection(viewStateContext.selection);\n        }\n        if (viewState && typeof viewState.scrollTop === 'number') {\n            this.scrollTop = viewState.scrollTop;\n        }\n    }\n    async _updateChildren(element = this.root.element, recursive = true, rerender = false, viewStateContext, options) {\n        if (typeof this.root.element === 'undefined') {\n            throw new TreeError(this.user, 'Tree input not set');\n        }\n        if (this.root.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        const node = this.getDataNode(element);\n        await this.refreshAndRenderNode(node, recursive, viewStateContext, options);\n        if (rerender) {\n            try {\n                this.tree.rerender(node);\n            }\n            catch (_a) {\n                // missing nodes are fine, this could've resulted from\n                // parallel refresh calls, removing `node` altogether\n            }\n        }\n    }\n    // View\n    rerender(element) {\n        if (element === undefined || element === this.root.element) {\n            this.tree.rerender();\n            return;\n        }\n        const node = this.getDataNode(element);\n        this.tree.rerender(node);\n    }\n    // Tree\n    getNode(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getNode(dataNode === this.root ? null : dataNode);\n        return this.nodeMapper.map(node);\n    }\n    collapse(element, recursive = false) {\n        const node = this.getDataNode(element);\n        return this.tree.collapse(node === this.root ? null : node, recursive);\n    }\n    async expand(element, recursive = false) {\n        if (typeof this.root.element === 'undefined') {\n            throw new TreeError(this.user, 'Tree input not set');\n        }\n        if (this.root.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        const node = this.getDataNode(element);\n        if (this.tree.hasElement(node) && !this.tree.isCollapsible(node)) {\n            return false;\n        }\n        if (node.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        if (node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node)) {\n            return false;\n        }\n        const result = this.tree.expand(node === this.root ? null : node, recursive);\n        if (node.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        return result;\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setSelection(nodes, browserEvent);\n    }\n    getSelection() {\n        const nodes = this.tree.getSelection();\n        return nodes.map(n => n.element);\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setFocus(nodes, browserEvent);\n    }\n    getFocus() {\n        const nodes = this.tree.getFocus();\n        return nodes.map(n => n.element);\n    }\n    reveal(element, relativeTop) {\n        this.tree.reveal(this.getDataNode(element), relativeTop);\n    }\n    // Tree navigation\n    getParentElement(element) {\n        const node = this.tree.getParentElement(this.getDataNode(element));\n        return (node && node.element);\n    }\n    getFirstElementChild(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getFirstElementChild(dataNode === this.root ? null : dataNode);\n        return (node && node.element);\n    }\n    // Implementation\n    getDataNode(element) {\n        const node = this.nodes.get((element === this.root.element ? null : element));\n        if (!node) {\n            throw new TreeError(this.user, `Data tree node not found: ${element}`);\n        }\n        return node;\n    }\n    async refreshAndRenderNode(node, recursive, viewStateContext, options) {\n        await this.refreshNode(node, recursive, viewStateContext);\n        if (this.disposables.isDisposed) {\n            return; // tree disposed during refresh (#199264)\n        }\n        this.render(node, viewStateContext, options);\n    }\n    async refreshNode(node, recursive, viewStateContext) {\n        let result;\n        this.subTreeRefreshPromises.forEach((refreshPromise, refreshNode) => {\n            if (!result && intersects(refreshNode, node)) {\n                result = refreshPromise.then(() => this.refreshNode(node, recursive, viewStateContext));\n            }\n        });\n        if (result) {\n            return result;\n        }\n        if (node !== this.root) {\n            const treeNode = this.tree.getNode(node);\n            if (treeNode.collapsed) {\n                node.hasChildren = !!this.dataSource.hasChildren(node.element);\n                node.stale = true;\n                this.setChildren(node, [], recursive, viewStateContext);\n                return;\n            }\n        }\n        return this.doRefreshSubTree(node, recursive, viewStateContext);\n    }\n    async doRefreshSubTree(node, recursive, viewStateContext) {\n        let done;\n        node.refreshPromise = new Promise(c => done = c);\n        this.subTreeRefreshPromises.set(node, node.refreshPromise);\n        node.refreshPromise.finally(() => {\n            node.refreshPromise = undefined;\n            this.subTreeRefreshPromises.delete(node);\n        });\n        try {\n            const childrenToRefresh = await this.doRefreshNode(node, recursive, viewStateContext);\n            node.stale = false;\n            await Promises.settled(childrenToRefresh.map(child => this.doRefreshSubTree(child, recursive, viewStateContext)));\n        }\n        finally {\n            done();\n        }\n    }\n    async doRefreshNode(node, recursive, viewStateContext) {\n        node.hasChildren = !!this.dataSource.hasChildren(node.element);\n        let childrenPromise;\n        if (!node.hasChildren) {\n            childrenPromise = Promise.resolve(Iterable.empty());\n        }\n        else {\n            const children = this.doGetChildren(node);\n            if (isIterable(children)) {\n                childrenPromise = Promise.resolve(children);\n            }\n            else {\n                const slowTimeout = timeout(800);\n                slowTimeout.then(() => {\n                    node.slow = true;\n                    this._onDidChangeNodeSlowState.fire(node);\n                }, _ => null);\n                childrenPromise = children.finally(() => slowTimeout.cancel());\n            }\n        }\n        try {\n            const children = await childrenPromise;\n            return this.setChildren(node, children, recursive, viewStateContext);\n        }\n        catch (err) {\n            if (node !== this.root && this.tree.hasElement(node)) {\n                this.tree.collapse(node);\n            }\n            if (isCancellationError(err)) {\n                return [];\n            }\n            throw err;\n        }\n        finally {\n            if (node.slow) {\n                node.slow = false;\n                this._onDidChangeNodeSlowState.fire(node);\n            }\n        }\n    }\n    doGetChildren(node) {\n        let result = this.refreshPromises.get(node);\n        if (result) {\n            return result;\n        }\n        const children = this.dataSource.getChildren(node.element);\n        if (isIterable(children)) {\n            return this.processChildren(children);\n        }\n        else {\n            result = createCancelablePromise(async () => this.processChildren(await children));\n            this.refreshPromises.set(node, result);\n            return result.finally(() => { this.refreshPromises.delete(node); });\n        }\n    }\n    _onDidChangeCollapseState({ node, deep }) {\n        if (node.element === null) {\n            return;\n        }\n        if (!node.collapsed && node.element.stale) {\n            if (deep) {\n                this.collapse(node.element.element);\n            }\n            else {\n                this.refreshAndRenderNode(node.element, false)\n                    .catch(onUnexpectedError);\n            }\n        }\n    }\n    setChildren(node, childrenElementsIterable, recursive, viewStateContext) {\n        const childrenElements = [...childrenElementsIterable];\n        // perf: if the node was and still is a leaf, avoid all this hassle\n        if (node.children.length === 0 && childrenElements.length === 0) {\n            return [];\n        }\n        const nodesToForget = new Map();\n        const childrenTreeNodesById = new Map();\n        for (const child of node.children) {\n            nodesToForget.set(child.element, child);\n            if (this.identityProvider) {\n                childrenTreeNodesById.set(child.id, { node: child, collapsed: this.tree.hasElement(child) && this.tree.isCollapsed(child) });\n            }\n        }\n        const childrenToRefresh = [];\n        const children = childrenElements.map(element => {\n            const hasChildren = !!this.dataSource.hasChildren(element);\n            if (!this.identityProvider) {\n                const asyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, hasChildren, defaultCollapseState: this.getDefaultCollapseState(element) });\n                if (hasChildren && asyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const id = this.identityProvider.getId(element).toString();\n            const result = childrenTreeNodesById.get(id);\n            if (result) {\n                const asyncDataTreeNode = result.node;\n                nodesToForget.delete(asyncDataTreeNode.element);\n                this.nodes.delete(asyncDataTreeNode.element);\n                this.nodes.set(element, asyncDataTreeNode);\n                asyncDataTreeNode.element = element;\n                asyncDataTreeNode.hasChildren = hasChildren;\n                if (recursive) {\n                    if (result.collapsed) {\n                        asyncDataTreeNode.children.forEach(node => dfs(node, node => this.nodes.delete(node.element)));\n                        asyncDataTreeNode.children.splice(0, asyncDataTreeNode.children.length);\n                        asyncDataTreeNode.stale = true;\n                    }\n                    else {\n                        childrenToRefresh.push(asyncDataTreeNode);\n                    }\n                }\n                else if (hasChildren && !result.collapsed) {\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const childAsyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, id, hasChildren, defaultCollapseState: this.getDefaultCollapseState(element) });\n            if (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\n                viewStateContext.focus.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\n                viewStateContext.selection.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            else if (hasChildren && childAsyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            return childAsyncDataTreeNode;\n        });\n        for (const node of nodesToForget.values()) {\n            dfs(node, node => this.nodes.delete(node.element));\n        }\n        for (const child of children) {\n            this.nodes.set(child.element, child);\n        }\n        node.children.splice(0, node.children.length, ...children);\n        // TODO@joao this doesn't take filter into account\n        if (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\n            children[0].forceExpanded = true;\n            childrenToRefresh.push(children[0]);\n        }\n        return childrenToRefresh;\n    }\n    render(node, viewStateContext, options) {\n        const children = node.children.map(node => this.asTreeElement(node, viewStateContext));\n        const objectTreeOptions = options && {\n            ...options,\n            diffIdentityProvider: options.diffIdentityProvider && {\n                getId(node) {\n                    return options.diffIdentityProvider.getId(node.element);\n                }\n            }\n        };\n        this.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\n        if (node !== this.root) {\n            this.tree.setCollapsible(node, node.hasChildren);\n        }\n        this._onDidRender.fire();\n    }\n    asTreeElement(node, viewStateContext) {\n        if (node.stale) {\n            return {\n                element: node,\n                collapsible: node.hasChildren,\n                collapsed: true\n            };\n        }\n        let collapsed;\n        if (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\n            collapsed = false;\n        }\n        else if (node.forceExpanded) {\n            collapsed = false;\n            node.forceExpanded = false;\n        }\n        else {\n            collapsed = node.defaultCollapseState;\n        }\n        return {\n            element: node,\n            children: node.hasChildren ? Iterable.map(node.children, child => this.asTreeElement(child, viewStateContext)) : [],\n            collapsible: node.hasChildren,\n            collapsed\n        };\n    }\n    processChildren(children) {\n        if (this.sorter) {\n            children = [...children].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return children;\n    }\n    dispose() {\n        this.disposables.dispose();\n        this.tree.dispose();\n    }\n}\nclass CompressibleAsyncDataTreeNodeWrapper {\n    get element() {\n        return {\n            elements: this.node.element.elements.map(e => e.element),\n            incompressible: this.node.element.incompressible\n        };\n    }\n    get children() { return this.node.children.map(node => new CompressibleAsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(node) {\n        this.node = node;\n    }\n}\nclass CompressibleAsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, compressibleNodeMapperProvider, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.compressibleNodeMapperProvider = compressibleNodeMapperProvider;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.disposables = [];\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeCompressedElements(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.disposables = dispose(this.disposables);\n    }\n}\nfunction asCompressibleObjectTreeOptions(options) {\n    const objectTreeOptions = options && asObjectTreeOptions(options);\n    return objectTreeOptions && {\n        ...objectTreeOptions,\n        keyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && {\n            ...objectTreeOptions.keyboardNavigationLabelProvider,\n            getCompressedNodeKeyboardNavigationLabel(els) {\n                return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(els.map(e => e.element));\n            }\n        }\n    };\n}\nexport class CompressibleAsyncDataTree extends AsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options = {}) {\n        super(user, container, virtualDelegate, renderers, dataSource, options);\n        this.compressionDelegate = compressionDelegate;\n        this.compressibleNodeMapper = new WeakMapper(node => new CompressibleAsyncDataTreeNodeWrapper(node));\n        this.filter = options.filter;\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new CompressibleAsyncDataTreeRenderer(r, this.nodeMapper, () => this.compressibleNodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asCompressibleObjectTreeOptions(options) || {};\n        return new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    asTreeElement(node, viewStateContext) {\n        return {\n            incompressible: this.compressionDelegate.isIncompressible(node.element),\n            ...super.asTreeElement(node, viewStateContext)\n        };\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    render(node, viewStateContext, options) {\n        if (!this.identityProvider) {\n            return super.render(node, viewStateContext);\n        }\n        // Preserve traits across compressions. Hacky but does the trick.\n        // This is hard to fix properly since it requires rewriting the traits\n        // across trees and lists. Let's just keep it this way for now.\n        const getId = (element) => this.identityProvider.getId(element).toString();\n        const getUncompressedIds = (nodes) => {\n            const result = new Set();\n            for (const node of nodes) {\n                const compressedNode = this.tree.getCompressedTreeNode(node === this.root ? null : node);\n                if (!compressedNode.element) {\n                    continue;\n                }\n                for (const node of compressedNode.element.elements) {\n                    result.add(getId(node.element));\n                }\n            }\n            return result;\n        };\n        const oldSelection = getUncompressedIds(this.tree.getSelection());\n        const oldFocus = getUncompressedIds(this.tree.getFocus());\n        super.render(node, viewStateContext, options);\n        const selection = this.getSelection();\n        let didChangeSelection = false;\n        const focus = this.getFocus();\n        let didChangeFocus = false;\n        const visit = (node) => {\n            const compressedNode = node.element;\n            if (compressedNode) {\n                for (let i = 0; i < compressedNode.elements.length; i++) {\n                    const id = getId(compressedNode.elements[i].element);\n                    const element = compressedNode.elements[compressedNode.elements.length - 1].element;\n                    // github.com/microsoft/vscode/issues/85938\n                    if (oldSelection.has(id) && selection.indexOf(element) === -1) {\n                        selection.push(element);\n                        didChangeSelection = true;\n                    }\n                    if (oldFocus.has(id) && focus.indexOf(element) === -1) {\n                        focus.push(element);\n                        didChangeFocus = true;\n                    }\n                }\n            }\n            node.children.forEach(visit);\n        };\n        visit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\n        if (didChangeSelection) {\n            this.setSelection(selection);\n        }\n        if (didChangeFocus) {\n            this.setFocus(focus);\n        }\n    }\n    // For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\n    // and we have to filter everything beforehand\n    // Related to #85193 and #85835\n    processChildren(children) {\n        if (this.filter) {\n            children = Iterable.filter(children, e => {\n                const result = this.filter.filter(e, 1 /* TreeVisibility.Visible */);\n                const visibility = getVisibility(result);\n                if (visibility === 2 /* TreeVisibility.Recurse */) {\n                    throw new Error('Recursive tree visibility not supported in async data compressed trees');\n                }\n                return visibility === 1 /* TreeVisibility.Visible */;\n            });\n        }\n        return super.processChildren(children);\n    }\n}\nfunction getVisibility(filterResult) {\n    if (typeof filterResult === 'boolean') {\n        return filterResult ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n    }\n    else if (isFilterResult(filterResult)) {\n        return getVisibleState(filterResult.visibility);\n    }\n    else {\n        return getVisibleState(filterResult);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}