{"ast":null,"code":"import _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nimport { DisposableStore, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { getCodeEditor, isDiffEditor } from '../../../browser/editorBrowser.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\n/**\n * A reusable quick access provider for the editor with support\n * for adding decorations for navigating in the currently active file\n * (for example \"Go to line\", \"Go to symbol\").\n */\nexport var AbstractEditorNavigationQuickAccessProvider = /*#__PURE__*/function () {\n  function AbstractEditorNavigationQuickAccessProvider(options) {\n    _classCallCheck(this, AbstractEditorNavigationQuickAccessProvider);\n    this.options = options;\n    //#endregion\n    //#region Decorations Utils\n    this.rangeHighlightDecorationId = undefined;\n  }\n  //#region Provider methods\n  return _createClass(AbstractEditorNavigationQuickAccessProvider, [{\n    key: \"provide\",\n    value: function provide(picker, token) {\n      var _this = this;\n      var _a;\n      var disposables = new DisposableStore();\n      // Apply options if any\n      picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\n      // Disable filtering & sorting, we control the results\n      picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n      // Provide based on current active editor\n      var pickerDisposable = disposables.add(new MutableDisposable());\n      pickerDisposable.value = this.doProvide(picker, token);\n      // Re-create whenever the active editor changes\n      disposables.add(this.onDidActiveTextEditorControlChange(function () {\n        // Clear old\n        pickerDisposable.value = undefined;\n        // Add new\n        pickerDisposable.value = _this.doProvide(picker, token);\n      }));\n      return disposables;\n    }\n  }, {\n    key: \"doProvide\",\n    value: function doProvide(picker, token) {\n      var _this2 = this;\n      var _a;\n      var disposables = new DisposableStore();\n      // With text control\n      var editor = this.activeTextEditorControl;\n      if (editor && this.canProvideWithTextEditor(editor)) {\n        var context = {\n          editor: editor\n        };\n        // Restore any view state if this picker was closed\n        // without actually going to a line\n        var codeEditor = getCodeEditor(editor);\n        if (codeEditor) {\n          // Remember view state and update it when the cursor position\n          // changes even later because it could be that the user has\n          // configured quick access to remain open when focus is lost and\n          // we always want to restore the current location.\n          var lastKnownEditorViewState = (_a = editor.saveViewState()) !== null && _a !== void 0 ? _a : undefined;\n          disposables.add(codeEditor.onDidChangeCursorPosition(function () {\n            var _a;\n            lastKnownEditorViewState = (_a = editor.saveViewState()) !== null && _a !== void 0 ? _a : undefined;\n          }));\n          context.restoreViewState = function () {\n            if (lastKnownEditorViewState && editor === _this2.activeTextEditorControl) {\n              editor.restoreViewState(lastKnownEditorViewState);\n            }\n          };\n          disposables.add(createSingleCallFunction(token.onCancellationRequested)(function () {\n            var _a;\n            return (_a = context.restoreViewState) === null || _a === void 0 ? void 0 : _a.call(context);\n          }));\n        }\n        // Clean up decorations on dispose\n        disposables.add(toDisposable(function () {\n          return _this2.clearDecorations(editor);\n        }));\n        // Ask subclass for entries\n        disposables.add(this.provideWithTextEditor(context, picker, token));\n      }\n      // Without text control\n      else {\n        disposables.add(this.provideWithoutTextEditor(picker, token));\n      }\n      return disposables;\n    }\n    /**\n     * Subclasses to implement if they can operate on the text editor.\n     */\n  }, {\n    key: \"canProvideWithTextEditor\",\n    value: function canProvideWithTextEditor(editor) {\n      return true;\n    }\n  }, {\n    key: \"gotoLocation\",\n    value: function gotoLocation(_ref, options) {\n      var editor = _ref.editor;\n      editor.setSelection(options.range, \"code.jump\" /* TextEditorSelectionSource.JUMP */);\n      editor.revealRangeInCenter(options.range, 0 /* ScrollType.Smooth */);\n      if (!options.preserveFocus) {\n        editor.focus();\n      }\n      var model = editor.getModel();\n      if (model && 'getLineContent' in model) {\n        status(\"\".concat(model.getLineContent(options.range.startLineNumber)));\n      }\n    }\n  }, {\n    key: \"getModel\",\n    value: function getModel(editor) {\n      var _a;\n      return isDiffEditor(editor) ? (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified : editor.getModel();\n    }\n  }, {\n    key: \"addDecorations\",\n    value: function addDecorations(editor, range) {\n      var _this3 = this;\n      editor.changeDecorations(function (changeAccessor) {\n        // Reset old decorations if any\n        var deleteDecorations = [];\n        if (_this3.rangeHighlightDecorationId) {\n          deleteDecorations.push(_this3.rangeHighlightDecorationId.overviewRulerDecorationId);\n          deleteDecorations.push(_this3.rangeHighlightDecorationId.rangeHighlightId);\n          _this3.rangeHighlightDecorationId = undefined;\n        }\n        // Add new decorations for the range\n        var newDecorations = [\n        // highlight the entire line on the range\n        {\n          range: range,\n          options: {\n            description: 'quick-access-range-highlight',\n            className: 'rangeHighlight',\n            isWholeLine: true\n          }\n        },\n        // also add overview ruler highlight\n        {\n          range: range,\n          options: {\n            description: 'quick-access-range-highlight-overview',\n            overviewRuler: {\n              color: themeColorFromId(overviewRulerRangeHighlight),\n              position: OverviewRulerLane.Full\n            }\n          }\n        }];\n        var _changeAccessor$delta = changeAccessor.deltaDecorations(deleteDecorations, newDecorations),\n          _changeAccessor$delta2 = _slicedToArray(_changeAccessor$delta, 2),\n          rangeHighlightId = _changeAccessor$delta2[0],\n          overviewRulerDecorationId = _changeAccessor$delta2[1];\n        _this3.rangeHighlightDecorationId = {\n          rangeHighlightId: rangeHighlightId,\n          overviewRulerDecorationId: overviewRulerDecorationId\n        };\n      });\n    }\n  }, {\n    key: \"clearDecorations\",\n    value: function clearDecorations(editor) {\n      var rangeHighlightDecorationId = this.rangeHighlightDecorationId;\n      if (rangeHighlightDecorationId) {\n        editor.changeDecorations(function (changeAccessor) {\n          changeAccessor.deltaDecorations([rangeHighlightDecorationId.overviewRulerDecorationId, rangeHighlightDecorationId.rangeHighlightId], []);\n        });\n        this.rangeHighlightDecorationId = undefined;\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["createSingleCallFunction","DisposableStore","MutableDisposable","toDisposable","getCodeEditor","isDiffEditor","OverviewRulerLane","overviewRulerRangeHighlight","themeColorFromId","status","AbstractEditorNavigationQuickAccessProvider","options","_classCallCheck","rangeHighlightDecorationId","undefined","_createClass","key","value","provide","picker","token","_this","_a","disposables","canAcceptInBackground","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","pickerDisposable","add","doProvide","onDidActiveTextEditorControlChange","_this2","editor","activeTextEditorControl","canProvideWithTextEditor","context","codeEditor","lastKnownEditorViewState","saveViewState","onDidChangeCursorPosition","restoreViewState","onCancellationRequested","call","clearDecorations","provideWithTextEditor","provideWithoutTextEditor","gotoLocation","_ref","setSelection","range","revealRangeInCenter","preserveFocus","focus","model","getModel","concat","getLineContent","startLineNumber","modified","addDecorations","_this3","changeDecorations","changeAccessor","deleteDecorations","push","overviewRulerDecorationId","rangeHighlightId","newDecorations","description","className","isWholeLine","overviewRuler","color","position","Full","_changeAccessor$delta","deltaDecorations","_changeAccessor$delta2","_slicedToArray"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/browser/editorNavigationQuickAccess.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nimport { DisposableStore, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { getCodeEditor, isDiffEditor } from '../../../browser/editorBrowser.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\n/**\n * A reusable quick access provider for the editor with support\n * for adding decorations for navigating in the currently active file\n * (for example \"Go to line\", \"Go to symbol\").\n */\nexport class AbstractEditorNavigationQuickAccessProvider {\n    constructor(options) {\n        this.options = options;\n        //#endregion\n        //#region Decorations Utils\n        this.rangeHighlightDecorationId = undefined;\n    }\n    //#region Provider methods\n    provide(picker, token) {\n        var _a;\n        const disposables = new DisposableStore();\n        // Apply options if any\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\n        // Disable filtering & sorting, we control the results\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n        // Provide based on current active editor\n        const pickerDisposable = disposables.add(new MutableDisposable());\n        pickerDisposable.value = this.doProvide(picker, token);\n        // Re-create whenever the active editor changes\n        disposables.add(this.onDidActiveTextEditorControlChange(() => {\n            // Clear old\n            pickerDisposable.value = undefined;\n            // Add new\n            pickerDisposable.value = this.doProvide(picker, token);\n        }));\n        return disposables;\n    }\n    doProvide(picker, token) {\n        var _a;\n        const disposables = new DisposableStore();\n        // With text control\n        const editor = this.activeTextEditorControl;\n        if (editor && this.canProvideWithTextEditor(editor)) {\n            const context = { editor };\n            // Restore any view state if this picker was closed\n            // without actually going to a line\n            const codeEditor = getCodeEditor(editor);\n            if (codeEditor) {\n                // Remember view state and update it when the cursor position\n                // changes even later because it could be that the user has\n                // configured quick access to remain open when focus is lost and\n                // we always want to restore the current location.\n                let lastKnownEditorViewState = (_a = editor.saveViewState()) !== null && _a !== void 0 ? _a : undefined;\n                disposables.add(codeEditor.onDidChangeCursorPosition(() => {\n                    var _a;\n                    lastKnownEditorViewState = (_a = editor.saveViewState()) !== null && _a !== void 0 ? _a : undefined;\n                }));\n                context.restoreViewState = () => {\n                    if (lastKnownEditorViewState && editor === this.activeTextEditorControl) {\n                        editor.restoreViewState(lastKnownEditorViewState);\n                    }\n                };\n                disposables.add(createSingleCallFunction(token.onCancellationRequested)(() => { var _a; return (_a = context.restoreViewState) === null || _a === void 0 ? void 0 : _a.call(context); }));\n            }\n            // Clean up decorations on dispose\n            disposables.add(toDisposable(() => this.clearDecorations(editor)));\n            // Ask subclass for entries\n            disposables.add(this.provideWithTextEditor(context, picker, token));\n        }\n        // Without text control\n        else {\n            disposables.add(this.provideWithoutTextEditor(picker, token));\n        }\n        return disposables;\n    }\n    /**\n     * Subclasses to implement if they can operate on the text editor.\n     */\n    canProvideWithTextEditor(editor) {\n        return true;\n    }\n    gotoLocation({ editor }, options) {\n        editor.setSelection(options.range, \"code.jump\" /* TextEditorSelectionSource.JUMP */);\n        editor.revealRangeInCenter(options.range, 0 /* ScrollType.Smooth */);\n        if (!options.preserveFocus) {\n            editor.focus();\n        }\n        const model = editor.getModel();\n        if (model && 'getLineContent' in model) {\n            status(`${model.getLineContent(options.range.startLineNumber)}`);\n        }\n    }\n    getModel(editor) {\n        var _a;\n        return isDiffEditor(editor) ?\n            (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified :\n            editor.getModel();\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            // Reset old decorations if any\n            const deleteDecorations = [];\n            if (this.rangeHighlightDecorationId) {\n                deleteDecorations.push(this.rangeHighlightDecorationId.overviewRulerDecorationId);\n                deleteDecorations.push(this.rangeHighlightDecorationId.rangeHighlightId);\n                this.rangeHighlightDecorationId = undefined;\n            }\n            // Add new decorations for the range\n            const newDecorations = [\n                // highlight the entire line on the range\n                {\n                    range,\n                    options: {\n                        description: 'quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                // also add overview ruler highlight\n                {\n                    range,\n                    options: {\n                        description: 'quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ];\n            const [rangeHighlightId, overviewRulerDecorationId] = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\n            this.rangeHighlightDecorationId = { rangeHighlightId, overviewRulerDecorationId };\n        });\n    }\n    clearDecorations(editor) {\n        const rangeHighlightDecorationId = this.rangeHighlightDecorationId;\n        if (rangeHighlightDecorationId) {\n            editor.changeDecorations(changeAccessor => {\n                changeAccessor.deltaDecorations([\n                    rangeHighlightDecorationId.overviewRulerDecorationId,\n                    rangeHighlightDecorationId.rangeHighlightId\n                ], []);\n            });\n            this.rangeHighlightDecorationId = undefined;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}