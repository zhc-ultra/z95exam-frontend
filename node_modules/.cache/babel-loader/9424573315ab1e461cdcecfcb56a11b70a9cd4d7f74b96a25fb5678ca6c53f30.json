{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { formatDocumentRangesWithSelectedProvider, formatDocumentWithSelectedProvider, getOnTypeFormattingEdits } from './format.js';\nimport { FormattingEdit } from './formattingEdit.js';\nimport * as nls from '../../../../nls.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IEditorProgressService, Progress } from '../../../../platform/progress/common/progress.js';\nvar FormatOnType = /*#__PURE__*/function () {\n  function FormatOnType(_editor, _languageFeaturesService, _workerService, _accessibilitySignalService) {\n    var _this = this;\n    _classCallCheck(this, FormatOnType);\n    this._editor = _editor;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._workerService = _workerService;\n    this._accessibilitySignalService = _accessibilitySignalService;\n    this._disposables = new DisposableStore();\n    this._sessionDisposables = new DisposableStore();\n    this._disposables.add(_languageFeaturesService.onTypeFormattingEditProvider.onDidChange(this._update, this));\n    this._disposables.add(_editor.onDidChangeModel(function () {\n      return _this._update();\n    }));\n    this._disposables.add(_editor.onDidChangeModelLanguage(function () {\n      return _this._update();\n    }));\n    this._disposables.add(_editor.onDidChangeConfiguration(function (e) {\n      if (e.hasChanged(56 /* EditorOption.formatOnType */)) {\n        _this._update();\n      }\n    }));\n    this._update();\n  }\n  return _createClass(FormatOnType, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._disposables.dispose();\n      this._sessionDisposables.dispose();\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      // clean up\n      this._sessionDisposables.clear();\n      // we are disabled\n      if (!this._editor.getOption(56 /* EditorOption.formatOnType */)) {\n        return;\n      }\n      // no model\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      var model = this._editor.getModel();\n      // no support\n      var _this$_languageFeatur = this._languageFeaturesService.onTypeFormattingEditProvider.ordered(model),\n        _this$_languageFeatur2 = _slicedToArray(_this$_languageFeatur, 1),\n        support = _this$_languageFeatur2[0];\n      if (!support || !support.autoFormatTriggerCharacters) {\n        return;\n      }\n      // register typing listeners that will trigger the format\n      var triggerChars = new CharacterSet();\n      var _iterator = _createForOfIteratorHelper(support.autoFormatTriggerCharacters),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ch = _step.value;\n          triggerChars.add(ch.charCodeAt(0));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._sessionDisposables.add(this._editor.onDidType(function (text) {\n        var lastCharCode = text.charCodeAt(text.length - 1);\n        if (triggerChars.has(lastCharCode)) {\n          _this2._trigger(String.fromCharCode(lastCharCode));\n        }\n      }));\n    }\n  }, {\n    key: \"_trigger\",\n    value: function _trigger(ch) {\n      var _this3 = this;\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      if (this._editor.getSelections().length > 1 || !this._editor.getSelection().isEmpty()) {\n        return;\n      }\n      var model = this._editor.getModel();\n      var position = this._editor.getPosition();\n      var cts = new CancellationTokenSource();\n      // install a listener that checks if edits happens before the\n      // position on which we format right now. If so, we won't\n      // apply the format edits\n      var unbind = this._editor.onDidChangeModelContent(function (e) {\n        if (e.isFlush) {\n          // a model.setValue() was called\n          // cancel only once\n          cts.cancel();\n          unbind.dispose();\n          return;\n        }\n        for (var i = 0, len = e.changes.length; i < len; i++) {\n          var change = e.changes[i];\n          if (change.range.endLineNumber <= position.lineNumber) {\n            // cancel only once\n            cts.cancel();\n            unbind.dispose();\n            return;\n          }\n        }\n      });\n      getOnTypeFormattingEdits(this._workerService, this._languageFeaturesService, model, position, ch, model.getFormattingOptions(), cts.token).then(function (edits) {\n        if (cts.token.isCancellationRequested) {\n          return;\n        }\n        if (isNonEmptyArray(edits)) {\n          _this3._accessibilitySignalService.playSignal(AccessibilitySignal.format, {\n            userGesture: false\n          });\n          FormattingEdit.execute(_this3._editor, edits, true);\n        }\n      })[\"finally\"](function () {\n        unbind.dispose();\n      });\n    }\n  }]);\n}();\nFormatOnType.ID = 'editor.contrib.autoFormat';\nFormatOnType = __decorate([__param(1, ILanguageFeaturesService), __param(2, IEditorWorkerService), __param(3, IAccessibilitySignalService)], FormatOnType);\nexport { FormatOnType };\nvar FormatOnPaste = /*#__PURE__*/function () {\n  function FormatOnPaste(editor, _languageFeaturesService, _instantiationService) {\n    var _this4 = this;\n    _classCallCheck(this, FormatOnPaste);\n    this.editor = editor;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._instantiationService = _instantiationService;\n    this._callOnDispose = new DisposableStore();\n    this._callOnModel = new DisposableStore();\n    this._callOnDispose.add(editor.onDidChangeConfiguration(function () {\n      return _this4._update();\n    }));\n    this._callOnDispose.add(editor.onDidChangeModel(function () {\n      return _this4._update();\n    }));\n    this._callOnDispose.add(editor.onDidChangeModelLanguage(function () {\n      return _this4._update();\n    }));\n    this._callOnDispose.add(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(this._update, this));\n  }\n  return _createClass(FormatOnPaste, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._callOnDispose.dispose();\n      this._callOnModel.dispose();\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this5 = this;\n      // clean up\n      this._callOnModel.clear();\n      // we are disabled\n      if (!this.editor.getOption(55 /* EditorOption.formatOnPaste */)) {\n        return;\n      }\n      // no model\n      if (!this.editor.hasModel()) {\n        return;\n      }\n      // no formatter\n      if (!this._languageFeaturesService.documentRangeFormattingEditProvider.has(this.editor.getModel())) {\n        return;\n      }\n      this._callOnModel.add(this.editor.onDidPaste(function (_ref) {\n        var range = _ref.range;\n        return _this5._trigger(range);\n      }));\n    }\n  }, {\n    key: \"_trigger\",\n    value: function _trigger(range) {\n      if (!this.editor.hasModel()) {\n        return;\n      }\n      if (this.editor.getSelections().length > 1) {\n        return;\n      }\n      this._instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, this.editor, range, 2 /* FormattingMode.Silent */, Progress.None, CancellationToken.None, false)[\"catch\"](onUnexpectedError);\n    }\n  }]);\n}();\nFormatOnPaste.ID = 'editor.contrib.formatOnPaste';\nFormatOnPaste = __decorate([__param(1, ILanguageFeaturesService), __param(2, IInstantiationService)], FormatOnPaste);\nvar FormatDocumentAction = /*#__PURE__*/function (_EditorAction) {\n  function FormatDocumentAction() {\n    _classCallCheck(this, FormatDocumentAction);\n    return _callSuper(this, FormatDocumentAction, [{\n      id: 'editor.action.formatDocument',\n      label: nls.localize('formatDocument.label', \"Format Document\"),\n      alias: 'Format Document',\n      precondition: ContextKeyExpr.and(EditorContextKeys.notInCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */,\n        linux: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 39 /* KeyCode.KeyI */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 1.3\n      }\n    }]);\n  }\n  _inherits(FormatDocumentAction, _EditorAction);\n  return _createClass(FormatDocumentAction, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(accessor, editor) {\n        var instaService, progressService;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!editor.hasModel()) {\n                _context.next = 5;\n                break;\n              }\n              instaService = accessor.get(IInstantiationService);\n              progressService = accessor.get(IEditorProgressService);\n              _context.next = 5;\n              return progressService.showWhile(instaService.invokeFunction(formatDocumentWithSelectedProvider, editor, 1 /* FormattingMode.Explicit */, Progress.None, CancellationToken.None, true), 250);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function run(_x, _x2) {\n        return _run.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nvar FormatSelectionAction = /*#__PURE__*/function (_EditorAction2) {\n  function FormatSelectionAction() {\n    _classCallCheck(this, FormatSelectionAction);\n    return _callSuper(this, FormatSelectionAction, [{\n      id: 'editor.action.formatSelection',\n      label: nls.localize('formatSelection.label', \"Format Selection\"),\n      alias: 'Format Selection',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasDocumentSelectionFormattingProvider),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      contextMenuOpts: {\n        when: EditorContextKeys.hasNonEmptySelection,\n        group: '1_modification',\n        order: 1.31\n      }\n    }]);\n  }\n  _inherits(FormatSelectionAction, _EditorAction2);\n  return _createClass(FormatSelectionAction, [{\n    key: \"run\",\n    value: function () {\n      var _run2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accessor, editor) {\n        var instaService, model, ranges, progressService;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (editor.hasModel()) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              instaService = accessor.get(IInstantiationService);\n              model = editor.getModel();\n              ranges = editor.getSelections().map(function (range) {\n                return range.isEmpty() ? new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber)) : range;\n              });\n              progressService = accessor.get(IEditorProgressService);\n              _context2.next = 8;\n              return progressService.showWhile(instaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, 1 /* FormattingMode.Explicit */, Progress.None, CancellationToken.None, true), 250);\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function run(_x3, _x4) {\n        return _run2.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nregisterEditorContribution(FormatOnType.ID, FormatOnType, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorContribution(FormatOnPaste.ID, FormatOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(FormatDocumentAction);\nregisterEditorAction(FormatSelectionAction);\n// this is the old format action that does both (format document OR format selection)\n// and we keep it here such that existing keybinding configurations etc will still work\nCommandsRegistry.registerCommand('editor.action.format', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(accessor) {\n    var editor, commandService;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n          if (!(!editor || !editor.hasModel())) {\n            _context3.next = 3;\n            break;\n          }\n          return _context3.abrupt(\"return\");\n        case 3:\n          commandService = accessor.get(ICommandService);\n          if (!editor.getSelection().isEmpty()) {\n            _context3.next = 9;\n            break;\n          }\n          _context3.next = 7;\n          return commandService.executeCommand('editor.action.formatDocument');\n        case 7:\n          _context3.next = 11;\n          break;\n        case 9:\n          _context3.next = 11;\n          return commandService.executeCommand('editor.action.formatSelection');\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function (_x5) {\n    return _ref2.apply(this, arguments);\n  };\n}());","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","isNonEmptyArray","CancellationToken","CancellationTokenSource","onUnexpectedError","KeyChord","DisposableStore","EditorAction","registerEditorAction","registerEditorContribution","ICodeEditorService","CharacterSet","Range","EditorContextKeys","IEditorWorkerService","ILanguageFeaturesService","formatDocumentRangesWithSelectedProvider","formatDocumentWithSelectedProvider","getOnTypeFormattingEdits","FormattingEdit","nls","AccessibilitySignal","IAccessibilitySignalService","CommandsRegistry","ICommandService","ContextKeyExpr","IInstantiationService","IEditorProgressService","Progress","FormatOnType","_editor","_languageFeaturesService","_workerService","_accessibilitySignalService","_this","_classCallCheck","_disposables","_sessionDisposables","add","onTypeFormattingEditProvider","onDidChange","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","e","hasChanged","_createClass","value","dispose","_this2","clear","getOption","hasModel","model","getModel","_this$_languageFeatur","ordered","_this$_languageFeatur2","_slicedToArray","support","autoFormatTriggerCharacters","triggerChars","_iterator","_createForOfIteratorHelper","_step","s","n","done","ch","charCodeAt","err","f","onDidType","text","lastCharCode","has","_trigger","String","fromCharCode","_this3","getSelections","getSelection","isEmpty","position","getPosition","cts","unbind","onDidChangeModelContent","isFlush","cancel","len","changes","change","range","endLineNumber","lineNumber","getFormattingOptions","token","then","edits","isCancellationRequested","playSignal","format","userGesture","execute","ID","FormatOnPaste","editor","_instantiationService","_this4","_callOnDispose","_callOnModel","documentRangeFormattingEditProvider","_this5","onDidPaste","_ref","invokeFunction","None","FormatDocumentAction","_EditorAction","_callSuper","id","label","localize","alias","precondition","and","notInCompositeEditor","writable","hasDocumentFormattingProvider","kbOpts","kbExpr","editorTextFocus","primary","linux","weight","contextMenuOpts","group","order","_inherits","_run","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accessor","instaService","progressService","wrap","_callee$","_context","prev","next","get","showWhile","stop","run","_x","_x2","apply","FormatSelectionAction","_EditorAction2","hasDocumentSelectionFormattingProvider","when","hasNonEmptySelection","_run2","_callee2","ranges","_callee2$","_context2","abrupt","map","startLineNumber","getLineMaxColumn","_x3","_x4","registerCommand","_ref2","_callee3","commandService","_callee3$","_context3","getFocusedCodeEditor","executeCommand","_x5"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/format/browser/formatActions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { formatDocumentRangesWithSelectedProvider, formatDocumentWithSelectedProvider, getOnTypeFormattingEdits } from './format.js';\nimport { FormattingEdit } from './formattingEdit.js';\nimport * as nls from '../../../../nls.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IEditorProgressService, Progress } from '../../../../platform/progress/common/progress.js';\nlet FormatOnType = class FormatOnType {\n    constructor(_editor, _languageFeaturesService, _workerService, _accessibilitySignalService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._workerService = _workerService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._disposables.add(_languageFeaturesService.onTypeFormattingEditProvider.onDidChange(this._update, this));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(56 /* EditorOption.formatOnType */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._sessionDisposables.dispose();\n    }\n    _update() {\n        // clean up\n        this._sessionDisposables.clear();\n        // we are disabled\n        if (!this._editor.getOption(56 /* EditorOption.formatOnType */)) {\n            return;\n        }\n        // no model\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        // no support\n        const [support] = this._languageFeaturesService.onTypeFormattingEditProvider.ordered(model);\n        if (!support || !support.autoFormatTriggerCharacters) {\n            return;\n        }\n        // register typing listeners that will trigger the format\n        const triggerChars = new CharacterSet();\n        for (const ch of support.autoFormatTriggerCharacters) {\n            triggerChars.add(ch.charCodeAt(0));\n        }\n        this._sessionDisposables.add(this._editor.onDidType((text) => {\n            const lastCharCode = text.charCodeAt(text.length - 1);\n            if (triggerChars.has(lastCharCode)) {\n                this._trigger(String.fromCharCode(lastCharCode));\n            }\n        }));\n    }\n    _trigger(ch) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (this._editor.getSelections().length > 1 || !this._editor.getSelection().isEmpty()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const position = this._editor.getPosition();\n        const cts = new CancellationTokenSource();\n        // install a listener that checks if edits happens before the\n        // position on which we format right now. If so, we won't\n        // apply the format edits\n        const unbind = this._editor.onDidChangeModelContent((e) => {\n            if (e.isFlush) {\n                // a model.setValue() was called\n                // cancel only once\n                cts.cancel();\n                unbind.dispose();\n                return;\n            }\n            for (let i = 0, len = e.changes.length; i < len; i++) {\n                const change = e.changes[i];\n                if (change.range.endLineNumber <= position.lineNumber) {\n                    // cancel only once\n                    cts.cancel();\n                    unbind.dispose();\n                    return;\n                }\n            }\n        });\n        getOnTypeFormattingEdits(this._workerService, this._languageFeaturesService, model, position, ch, model.getFormattingOptions(), cts.token).then(edits => {\n            if (cts.token.isCancellationRequested) {\n                return;\n            }\n            if (isNonEmptyArray(edits)) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.format, { userGesture: false });\n                FormattingEdit.execute(this._editor, edits, true);\n            }\n        }).finally(() => {\n            unbind.dispose();\n        });\n    }\n};\nFormatOnType.ID = 'editor.contrib.autoFormat';\nFormatOnType = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, IEditorWorkerService),\n    __param(3, IAccessibilitySignalService)\n], FormatOnType);\nexport { FormatOnType };\nlet FormatOnPaste = class FormatOnPaste {\n    constructor(editor, _languageFeaturesService, _instantiationService) {\n        this.editor = editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._instantiationService = _instantiationService;\n        this._callOnDispose = new DisposableStore();\n        this._callOnModel = new DisposableStore();\n        this._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\n        this._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\n        this._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\n        this._callOnDispose.add(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(this._update, this));\n    }\n    dispose() {\n        this._callOnDispose.dispose();\n        this._callOnModel.dispose();\n    }\n    _update() {\n        // clean up\n        this._callOnModel.clear();\n        // we are disabled\n        if (!this.editor.getOption(55 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        // no formatter\n        if (!this._languageFeaturesService.documentRangeFormattingEditProvider.has(this.editor.getModel())) {\n            return;\n        }\n        this._callOnModel.add(this.editor.onDidPaste(({ range }) => this._trigger(range)));\n    }\n    _trigger(range) {\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        if (this.editor.getSelections().length > 1) {\n            return;\n        }\n        this._instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, this.editor, range, 2 /* FormattingMode.Silent */, Progress.None, CancellationToken.None, false).catch(onUnexpectedError);\n    }\n};\nFormatOnPaste.ID = 'editor.contrib.formatOnPaste';\nFormatOnPaste = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, IInstantiationService)\n], FormatOnPaste);\nclass FormatDocumentAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.formatDocument',\n            label: nls.localize('formatDocument.label', \"Format Document\"),\n            alias: 'Format Document',\n            precondition: ContextKeyExpr.and(EditorContextKeys.notInCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 39 /* KeyCode.KeyI */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 1.3\n            }\n        });\n    }\n    async run(accessor, editor) {\n        if (editor.hasModel()) {\n            const instaService = accessor.get(IInstantiationService);\n            const progressService = accessor.get(IEditorProgressService);\n            await progressService.showWhile(instaService.invokeFunction(formatDocumentWithSelectedProvider, editor, 1 /* FormattingMode.Explicit */, Progress.None, CancellationToken.None, true), 250);\n        }\n    }\n}\nclass FormatSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.formatSelection',\n            label: nls.localize('formatSelection.label', \"Format Selection\"),\n            alias: 'Format Selection',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasDocumentSelectionFormattingProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                when: EditorContextKeys.hasNonEmptySelection,\n                group: '1_modification',\n                order: 1.31\n            }\n        });\n    }\n    async run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const instaService = accessor.get(IInstantiationService);\n        const model = editor.getModel();\n        const ranges = editor.getSelections().map(range => {\n            return range.isEmpty()\n                ? new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber))\n                : range;\n        });\n        const progressService = accessor.get(IEditorProgressService);\n        await progressService.showWhile(instaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, 1 /* FormattingMode.Explicit */, Progress.None, CancellationToken.None, true), 250);\n    }\n}\nregisterEditorContribution(FormatOnType.ID, FormatOnType, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorContribution(FormatOnPaste.ID, FormatOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(FormatDocumentAction);\nregisterEditorAction(FormatSelectionAction);\n// this is the old format action that does both (format document OR format selection)\n// and we keep it here such that existing keybinding configurations etc will still work\nCommandsRegistry.registerCommand('editor.action.format', async (accessor) => {\n    const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n    if (!editor || !editor.hasModel()) {\n        return;\n    }\n    const commandService = accessor.get(ICommandService);\n    if (editor.getSelection().isEmpty()) {\n        await commandService.executeCommand('editor.action.formatDocument');\n    }\n    else {\n        await commandService.executeCommand('editor.action.formatSelection');\n    }\n});\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,QAAOC,OAAO,iCAAAC,OAAA,CAAPD,OAAO,OAAK,QAAQ,IAAI,OAAOA,OAAO,CAACE,QAAQ,KAAK,UAAU,EAAEN,CAAC,GAAGI,OAAO,CAACE,QAAQ,CAACb,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIW,CAAC,GAAGd,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEQ,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIJ,CAAC,GAAGV,UAAU,CAACc,CAAC,CAAC,EAAEP,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACO,cAAc,CAACd,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,IAAIS,OAAO,GAAI,IAAI,IAAI,IAAI,CAACA,OAAO,IAAK,UAAUC,UAAU,EAAEC,SAAS,EAAE;EACrE,OAAO,UAAUjB,MAAM,EAAEC,GAAG,EAAE;IAAEgB,SAAS,CAACjB,MAAM,EAAEC,GAAG,EAAEe,UAAU,CAAC;EAAE,CAAC;AACzE,CAAC;AACD,SAASE,eAAe,QAAQ,mCAAmC;AACnE,SAASC,iBAAiB,EAAEC,uBAAuB,QAAQ,yCAAyC;AACpG,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,QAAQ,QAAQ,qCAAqC;AAC9D,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,YAAY,EAAEC,oBAAoB,EAAEC,0BAA0B,QAAQ,sCAAsC;AACrH,SAASC,kBAAkB,QAAQ,gDAAgD;AACnF,SAASC,YAAY,QAAQ,6CAA6C;AAC1E,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,wBAAwB,QAAQ,8CAA8C;AACvF,SAASC,wCAAwC,EAAEC,kCAAkC,EAAEC,wBAAwB,QAAQ,aAAa;AACpI,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,SAASC,mBAAmB,EAAEC,2BAA2B,QAAQ,gFAAgF;AACjJ,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,kDAAkD;AACpG,SAASC,cAAc,QAAQ,sDAAsD;AACrF,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,sBAAsB,EAAEC,QAAQ,QAAQ,kDAAkD;AACnG,IAAIC,YAAY;EACZ,SAAAA,aAAYC,OAAO,EAAEC,wBAAwB,EAAEC,cAAc,EAAEC,2BAA2B,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,YAAA;IACxF,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,2BAA2B,GAAGA,2BAA2B;IAC9D,IAAI,CAACG,YAAY,GAAG,IAAI9B,eAAe,CAAC,CAAC;IACzC,IAAI,CAAC+B,mBAAmB,GAAG,IAAI/B,eAAe,CAAC,CAAC;IAChD,IAAI,CAAC8B,YAAY,CAACE,GAAG,CAACP,wBAAwB,CAACQ,4BAA4B,CAACC,WAAW,CAAC,IAAI,CAACC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC5G,IAAI,CAACL,YAAY,CAACE,GAAG,CAACR,OAAO,CAACY,gBAAgB,CAAC;MAAA,OAAMR,KAAI,CAACO,OAAO,CAAC,CAAC;IAAA,EAAC,CAAC;IACrE,IAAI,CAACL,YAAY,CAACE,GAAG,CAACR,OAAO,CAACa,wBAAwB,CAAC;MAAA,OAAMT,KAAI,CAACO,OAAO,CAAC,CAAC;IAAA,EAAC,CAAC;IAC7E,IAAI,CAACL,YAAY,CAACE,GAAG,CAACR,OAAO,CAACc,wBAAwB,CAAC,UAAAC,CAAC,EAAI;MACxD,IAAIA,CAAC,CAACC,UAAU,CAAC,EAAE,CAAC,+BAA+B,CAAC,EAAE;QAClDZ,KAAI,CAACO,OAAO,CAAC,CAAC;MAClB;IACJ,CAAC,CAAC,CAAC;IACH,IAAI,CAACA,OAAO,CAAC,CAAC;EAClB;EAAC,OAAAM,YAAA,CAAAlB,YAAA;IAAA7C,GAAA;IAAAgE,KAAA,EACD,SAAAC,QAAA,EAAU;MACN,IAAI,CAACb,YAAY,CAACa,OAAO,CAAC,CAAC;MAC3B,IAAI,CAACZ,mBAAmB,CAACY,OAAO,CAAC,CAAC;IACtC;EAAC;IAAAjE,GAAA;IAAAgE,KAAA,EACD,SAAAP,QAAA,EAAU;MAAA,IAAAS,MAAA;MACN;MACA,IAAI,CAACb,mBAAmB,CAACc,KAAK,CAAC,CAAC;MAChC;MACA,IAAI,CAAC,IAAI,CAACrB,OAAO,CAACsB,SAAS,CAAC,EAAE,CAAC,+BAA+B,CAAC,EAAE;QAC7D;MACJ;MACA;MACA,IAAI,CAAC,IAAI,CAACtB,OAAO,CAACuB,QAAQ,CAAC,CAAC,EAAE;QAC1B;MACJ;MACA,IAAMC,KAAK,GAAG,IAAI,CAACxB,OAAO,CAACyB,QAAQ,CAAC,CAAC;MACrC;MACA,IAAAC,qBAAA,GAAkB,IAAI,CAACzB,wBAAwB,CAACQ,4BAA4B,CAACkB,OAAO,CAACH,KAAK,CAAC;QAAAI,sBAAA,GAAAC,cAAA,CAAAH,qBAAA;QAApFI,OAAO,GAAAF,sBAAA;MACd,IAAI,CAACE,OAAO,IAAI,CAACA,OAAO,CAACC,2BAA2B,EAAE;QAClD;MACJ;MACA;MACA,IAAMC,YAAY,GAAG,IAAInD,YAAY,CAAC,CAAC;MAAC,IAAAoD,SAAA,GAAAC,0BAAA,CACvBJ,OAAO,CAACC,2BAA2B;QAAAI,KAAA;MAAA;QAApD,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAsD;UAAA,IAA3CC,EAAE,GAAAJ,KAAA,CAAAjB,KAAA;UACTc,YAAY,CAACxB,GAAG,CAAC+B,EAAE,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;QACtC;MAAC,SAAAC,GAAA;QAAAR,SAAA,CAAAlB,CAAA,CAAA0B,GAAA;MAAA;QAAAR,SAAA,CAAAS,CAAA;MAAA;MACD,IAAI,CAACnC,mBAAmB,CAACC,GAAG,CAAC,IAAI,CAACR,OAAO,CAAC2C,SAAS,CAAC,UAACC,IAAI,EAAK;QAC1D,IAAMC,YAAY,GAAGD,IAAI,CAACJ,UAAU,CAACI,IAAI,CAACtF,MAAM,GAAG,CAAC,CAAC;QACrD,IAAI0E,YAAY,CAACc,GAAG,CAACD,YAAY,CAAC,EAAE;UAChCzB,MAAI,CAAC2B,QAAQ,CAACC,MAAM,CAACC,YAAY,CAACJ,YAAY,CAAC,CAAC;QACpD;MACJ,CAAC,CAAC,CAAC;IACP;EAAC;IAAA3F,GAAA;IAAAgE,KAAA,EACD,SAAA6B,SAASR,EAAE,EAAE;MAAA,IAAAW,MAAA;MACT,IAAI,CAAC,IAAI,CAAClD,OAAO,CAACuB,QAAQ,CAAC,CAAC,EAAE;QAC1B;MACJ;MACA,IAAI,IAAI,CAACvB,OAAO,CAACmD,aAAa,CAAC,CAAC,CAAC7F,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC0C,OAAO,CAACoD,YAAY,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;QACnF;MACJ;MACA,IAAM7B,KAAK,GAAG,IAAI,CAACxB,OAAO,CAACyB,QAAQ,CAAC,CAAC;MACrC,IAAM6B,QAAQ,GAAG,IAAI,CAACtD,OAAO,CAACuD,WAAW,CAAC,CAAC;MAC3C,IAAMC,GAAG,GAAG,IAAInF,uBAAuB,CAAC,CAAC;MACzC;MACA;MACA;MACA,IAAMoF,MAAM,GAAG,IAAI,CAACzD,OAAO,CAAC0D,uBAAuB,CAAC,UAAC3C,CAAC,EAAK;QACvD,IAAIA,CAAC,CAAC4C,OAAO,EAAE;UACX;UACA;UACAH,GAAG,CAACI,MAAM,CAAC,CAAC;UACZH,MAAM,CAACtC,OAAO,CAAC,CAAC;UAChB;QACJ;QACA,KAAK,IAAIrD,CAAC,GAAG,CAAC,EAAE+F,GAAG,GAAG9C,CAAC,CAAC+C,OAAO,CAACxG,MAAM,EAAEQ,CAAC,GAAG+F,GAAG,EAAE/F,CAAC,EAAE,EAAE;UAClD,IAAMiG,MAAM,GAAGhD,CAAC,CAAC+C,OAAO,CAAChG,CAAC,CAAC;UAC3B,IAAIiG,MAAM,CAACC,KAAK,CAACC,aAAa,IAAIX,QAAQ,CAACY,UAAU,EAAE;YACnD;YACAV,GAAG,CAACI,MAAM,CAAC,CAAC;YACZH,MAAM,CAACtC,OAAO,CAAC,CAAC;YAChB;UACJ;QACJ;MACJ,CAAC,CAAC;MACF/B,wBAAwB,CAAC,IAAI,CAACc,cAAc,EAAE,IAAI,CAACD,wBAAwB,EAAEuB,KAAK,EAAE8B,QAAQ,EAAEf,EAAE,EAAEf,KAAK,CAAC2C,oBAAoB,CAAC,CAAC,EAAEX,GAAG,CAACY,KAAK,CAAC,CAACC,IAAI,CAAC,UAAAC,KAAK,EAAI;QACrJ,IAAId,GAAG,CAACY,KAAK,CAACG,uBAAuB,EAAE;UACnC;QACJ;QACA,IAAIpG,eAAe,CAACmG,KAAK,CAAC,EAAE;UACxBpB,MAAI,CAAC/C,2BAA2B,CAACqE,UAAU,CAACjF,mBAAmB,CAACkF,MAAM,EAAE;YAAEC,WAAW,EAAE;UAAM,CAAC,CAAC;UAC/FrF,cAAc,CAACsF,OAAO,CAACzB,MAAI,CAAClD,OAAO,EAAEsE,KAAK,EAAE,IAAI,CAAC;QACrD;MACJ,CAAC,CAAC,WAAQ,CAAC,YAAM;QACbb,MAAM,CAACtC,OAAO,CAAC,CAAC;MACpB,CAAC,CAAC;IACN;EAAC;AAAA,GACJ;AACDpB,YAAY,CAAC6E,EAAE,GAAG,2BAA2B;AAC7C7E,YAAY,GAAGhD,UAAU,CAAC,CACtBiB,OAAO,CAAC,CAAC,EAAEiB,wBAAwB,CAAC,EACpCjB,OAAO,CAAC,CAAC,EAAEgB,oBAAoB,CAAC,EAChChB,OAAO,CAAC,CAAC,EAAEwB,2BAA2B,CAAC,CAC1C,EAAEO,YAAY,CAAC;AAChB,SAASA,YAAY;AACrB,IAAI8E,aAAa;EACb,SAAAA,cAAYC,MAAM,EAAE7E,wBAAwB,EAAE8E,qBAAqB,EAAE;IAAA,IAAAC,MAAA;IAAA3E,eAAA,OAAAwE,aAAA;IACjE,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC7E,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAAC8E,qBAAqB,GAAGA,qBAAqB;IAClD,IAAI,CAACE,cAAc,GAAG,IAAIzG,eAAe,CAAC,CAAC;IAC3C,IAAI,CAAC0G,YAAY,GAAG,IAAI1G,eAAe,CAAC,CAAC;IACzC,IAAI,CAACyG,cAAc,CAACzE,GAAG,CAACsE,MAAM,CAAChE,wBAAwB,CAAC;MAAA,OAAMkE,MAAI,CAACrE,OAAO,CAAC,CAAC;IAAA,EAAC,CAAC;IAC9E,IAAI,CAACsE,cAAc,CAACzE,GAAG,CAACsE,MAAM,CAAClE,gBAAgB,CAAC;MAAA,OAAMoE,MAAI,CAACrE,OAAO,CAAC,CAAC;IAAA,EAAC,CAAC;IACtE,IAAI,CAACsE,cAAc,CAACzE,GAAG,CAACsE,MAAM,CAACjE,wBAAwB,CAAC;MAAA,OAAMmE,MAAI,CAACrE,OAAO,CAAC,CAAC;IAAA,EAAC,CAAC;IAC9E,IAAI,CAACsE,cAAc,CAACzE,GAAG,CAACP,wBAAwB,CAACkF,mCAAmC,CAACzE,WAAW,CAAC,IAAI,CAACC,OAAO,EAAE,IAAI,CAAC,CAAC;EACzH;EAAC,OAAAM,YAAA,CAAA4D,aAAA;IAAA3H,GAAA;IAAAgE,KAAA,EACD,SAAAC,QAAA,EAAU;MACN,IAAI,CAAC8D,cAAc,CAAC9D,OAAO,CAAC,CAAC;MAC7B,IAAI,CAAC+D,YAAY,CAAC/D,OAAO,CAAC,CAAC;IAC/B;EAAC;IAAAjE,GAAA;IAAAgE,KAAA,EACD,SAAAP,QAAA,EAAU;MAAA,IAAAyE,MAAA;MACN;MACA,IAAI,CAACF,YAAY,CAAC7D,KAAK,CAAC,CAAC;MACzB;MACA,IAAI,CAAC,IAAI,CAACyD,MAAM,CAACxD,SAAS,CAAC,EAAE,CAAC,gCAAgC,CAAC,EAAE;QAC7D;MACJ;MACA;MACA,IAAI,CAAC,IAAI,CAACwD,MAAM,CAACvD,QAAQ,CAAC,CAAC,EAAE;QACzB;MACJ;MACA;MACA,IAAI,CAAC,IAAI,CAACtB,wBAAwB,CAACkF,mCAAmC,CAACrC,GAAG,CAAC,IAAI,CAACgC,MAAM,CAACrD,QAAQ,CAAC,CAAC,CAAC,EAAE;QAChG;MACJ;MACA,IAAI,CAACyD,YAAY,CAAC1E,GAAG,CAAC,IAAI,CAACsE,MAAM,CAACO,UAAU,CAAC,UAAAC,IAAA;QAAA,IAAGtB,KAAK,GAAAsB,IAAA,CAALtB,KAAK;QAAA,OAAOoB,MAAI,CAACrC,QAAQ,CAACiB,KAAK,CAAC;MAAA,EAAC,CAAC;IACtF;EAAC;IAAA9G,GAAA;IAAAgE,KAAA,EACD,SAAA6B,SAASiB,KAAK,EAAE;MACZ,IAAI,CAAC,IAAI,CAACc,MAAM,CAACvD,QAAQ,CAAC,CAAC,EAAE;QACzB;MACJ;MACA,IAAI,IAAI,CAACuD,MAAM,CAAC3B,aAAa,CAAC,CAAC,CAAC7F,MAAM,GAAG,CAAC,EAAE;QACxC;MACJ;MACA,IAAI,CAACyH,qBAAqB,CAACQ,cAAc,CAACrG,wCAAwC,EAAE,IAAI,CAAC4F,MAAM,EAAEd,KAAK,EAAE,CAAC,CAAC,6BAA6BlE,QAAQ,CAAC0F,IAAI,EAAEpH,iBAAiB,CAACoH,IAAI,EAAE,KAAK,CAAC,SAAM,CAAClH,iBAAiB,CAAC;IACjN;EAAC;AAAA,GACJ;AACDuG,aAAa,CAACD,EAAE,GAAG,8BAA8B;AACjDC,aAAa,GAAG9H,UAAU,CAAC,CACvBiB,OAAO,CAAC,CAAC,EAAEiB,wBAAwB,CAAC,EACpCjB,OAAO,CAAC,CAAC,EAAE4B,qBAAqB,CAAC,CACpC,EAAEiF,aAAa,CAAC;AAAC,IACZY,oBAAoB,0BAAAC,aAAA;EACtB,SAAAD,qBAAA,EAAc;IAAApF,eAAA,OAAAoF,oBAAA;IAAA,OAAAE,UAAA,OAAAF,oBAAA,GACJ;MACFG,EAAE,EAAE,8BAA8B;MAClCC,KAAK,EAAEvG,GAAG,CAACwG,QAAQ,CAAC,sBAAsB,EAAE,iBAAiB,CAAC;MAC9DC,KAAK,EAAE,iBAAiB;MACxBC,YAAY,EAAErG,cAAc,CAACsG,GAAG,CAAClH,iBAAiB,CAACmH,oBAAoB,EAAEnH,iBAAiB,CAACoH,QAAQ,EAAEpH,iBAAiB,CAACqH,6BAA6B,CAAC;MACrJC,MAAM,EAAE;QACJC,MAAM,EAAEvH,iBAAiB,CAACwH,eAAe;QACzCC,OAAO,EAAE,IAAI,CAAC,qBAAqB,GAAG,CAAC,mBAAmB,EAAE,CAAC;QAC7DC,KAAK,EAAE;UAAED,OAAO,EAAE,IAAI,CAAC,uBAAuB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAAmB,CAAC;QAC/FE,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDC,eAAe,EAAE;QACbC,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE;MACX;IACJ,CAAC;EACL;EAACC,SAAA,CAAArB,oBAAA,EAAAC,aAAA;EAAA,OAAAzE,YAAA,CAAAwE,oBAAA;IAAAvI,GAAA;IAAAgE,KAAA;MAAA,IAAA6F,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAC,QAAUC,QAAQ,EAAEtC,MAAM;QAAA,IAAAuC,YAAA,EAAAC,eAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,KAClB7C,MAAM,CAACvD,QAAQ,CAAC,CAAC;gBAAAkG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACXN,YAAY,GAAGD,QAAQ,CAACQ,GAAG,CAAChI,qBAAqB,CAAC;cAClD0H,eAAe,GAAGF,QAAQ,CAACQ,GAAG,CAAC/H,sBAAsB,CAAC;cAAA4H,QAAA,CAAAE,IAAA;cAAA,OACtDL,eAAe,CAACO,SAAS,CAACR,YAAY,CAAC9B,cAAc,CAACpG,kCAAkC,EAAE2F,MAAM,EAAE,CAAC,CAAC,+BAA+BhF,QAAQ,CAAC0F,IAAI,EAAEpH,iBAAiB,CAACoH,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;YAAA;YAAA;cAAA,OAAAiC,QAAA,CAAAK,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA,CAElM;MAAA,SAAAY,IAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAlB,IAAA,CAAAmB,KAAA,OAAA7K,SAAA;MAAA;MAAA,OAAA0K,GAAA;IAAA;EAAA;AAAA,EAzB8BtJ,YAAY;AAAA,IA2BzC0J,qBAAqB,0BAAAC,cAAA;EACvB,SAAAD,sBAAA,EAAc;IAAA9H,eAAA,OAAA8H,qBAAA;IAAA,OAAAxC,UAAA,OAAAwC,qBAAA,GACJ;MACFvC,EAAE,EAAE,+BAA+B;MACnCC,KAAK,EAAEvG,GAAG,CAACwG,QAAQ,CAAC,uBAAuB,EAAE,kBAAkB,CAAC;MAChEC,KAAK,EAAE,kBAAkB;MACzBC,YAAY,EAAErG,cAAc,CAACsG,GAAG,CAAClH,iBAAiB,CAACoH,QAAQ,EAAEpH,iBAAiB,CAACsJ,sCAAsC,CAAC;MACtHhC,MAAM,EAAE;QACJC,MAAM,EAAEvH,iBAAiB,CAACwH,eAAe;QACzCC,OAAO,EAAEjI,QAAQ,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,oBAAoB,IAAI,CAAC,uBAAuB,EAAE,CAAC,kBAAkB,CAAC;QACvHmI,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDC,eAAe,EAAE;QACb2B,IAAI,EAAEvJ,iBAAiB,CAACwJ,oBAAoB;QAC5C3B,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE;MACX;IACJ,CAAC;EACL;EAACC,SAAA,CAAAqB,qBAAA,EAAAC,cAAA;EAAA,OAAAnH,YAAA,CAAAkH,qBAAA;IAAAjL,GAAA;IAAAgE,KAAA;MAAA,IAAAsH,KAAA,GAAAxB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAuB,SAAUrB,QAAQ,EAAEtC,MAAM;QAAA,IAAAuC,YAAA,EAAA7F,KAAA,EAAAkH,MAAA,EAAApB,eAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAoB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA;YAAA;cAAA,IACjB7C,MAAM,CAACvD,QAAQ,CAAC,CAAC;gBAAAqH,SAAA,CAAAjB,IAAA;gBAAA;cAAA;cAAA,OAAAiB,SAAA,CAAAC,MAAA;YAAA;cAGhBxB,YAAY,GAAGD,QAAQ,CAACQ,GAAG,CAAChI,qBAAqB,CAAC;cAClD4B,KAAK,GAAGsD,MAAM,CAACrD,QAAQ,CAAC,CAAC;cACzBiH,MAAM,GAAG5D,MAAM,CAAC3B,aAAa,CAAC,CAAC,CAAC2F,GAAG,CAAC,UAAA9E,KAAK,EAAI;gBAC/C,OAAOA,KAAK,CAACX,OAAO,CAAC,CAAC,GAChB,IAAIvE,KAAK,CAACkF,KAAK,CAAC+E,eAAe,EAAE,CAAC,EAAE/E,KAAK,CAAC+E,eAAe,EAAEvH,KAAK,CAACwH,gBAAgB,CAAChF,KAAK,CAAC+E,eAAe,CAAC,CAAC,GACzG/E,KAAK;cACf,CAAC,CAAC;cACIsD,eAAe,GAAGF,QAAQ,CAACQ,GAAG,CAAC/H,sBAAsB,CAAC;cAAA+I,SAAA,CAAAjB,IAAA;cAAA,OACtDL,eAAe,CAACO,SAAS,CAACR,YAAY,CAAC9B,cAAc,CAACrG,wCAAwC,EAAE4F,MAAM,EAAE4D,MAAM,EAAE,CAAC,CAAC,+BAA+B5I,QAAQ,CAAC0F,IAAI,EAAEpH,iBAAiB,CAACoH,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;YAAA;YAAA;cAAA,OAAAoD,SAAA,CAAAd,IAAA;UAAA;QAAA,GAAAW,QAAA;MAAA,CAC5M;MAAA,SAAAV,IAAAkB,GAAA,EAAAC,GAAA;QAAA,OAAAV,KAAA,CAAAN,KAAA,OAAA7K,SAAA;MAAA;MAAA,OAAA0K,GAAA;IAAA;EAAA;AAAA,EAhC+BtJ,YAAY;AAkChDE,0BAA0B,CAACoB,YAAY,CAAC6E,EAAE,EAAE7E,YAAY,EAAE,CAAC,CAAC,4DAA4D,CAAC;AACzHpB,0BAA0B,CAACkG,aAAa,CAACD,EAAE,EAAEC,aAAa,EAAE,CAAC,CAAC,4DAA4D,CAAC;AAC3HnG,oBAAoB,CAAC+G,oBAAoB,CAAC;AAC1C/G,oBAAoB,CAACyJ,qBAAqB,CAAC;AAC3C;AACA;AACA1I,gBAAgB,CAAC0J,eAAe,CAAC,sBAAsB;EAAA,IAAAC,KAAA,GAAApC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAmC,SAAOjC,QAAQ;IAAA,IAAAtC,MAAA,EAAAwE,cAAA;IAAA,OAAArC,mBAAA,GAAAM,IAAA,UAAAgC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA9B,IAAA,GAAA8B,SAAA,CAAA7B,IAAA;QAAA;UAC9D7C,MAAM,GAAGsC,QAAQ,CAACQ,GAAG,CAAChJ,kBAAkB,CAAC,CAAC6K,oBAAoB,CAAC,CAAC;UAAA,MAClE,CAAC3E,MAAM,IAAI,CAACA,MAAM,CAACvD,QAAQ,CAAC,CAAC;YAAAiI,SAAA,CAAA7B,IAAA;YAAA;UAAA;UAAA,OAAA6B,SAAA,CAAAX,MAAA;QAAA;UAG3BS,cAAc,GAAGlC,QAAQ,CAACQ,GAAG,CAAClI,eAAe,CAAC;UAAA,KAChDoF,MAAM,CAAC1B,YAAY,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;YAAAmG,SAAA,CAAA7B,IAAA;YAAA;UAAA;UAAA6B,SAAA,CAAA7B,IAAA;UAAA,OACzB2B,cAAc,CAACI,cAAc,CAAC,8BAA8B,CAAC;QAAA;UAAAF,SAAA,CAAA7B,IAAA;UAAA;QAAA;UAAA6B,SAAA,CAAA7B,IAAA;UAAA,OAG7D2B,cAAc,CAACI,cAAc,CAAC,+BAA+B,CAAC;QAAA;QAAA;UAAA,OAAAF,SAAA,CAAA1B,IAAA;MAAA;IAAA,GAAAuB,QAAA;EAAA,CAE3E;EAAA,iBAAAM,GAAA;IAAA,OAAAP,KAAA,CAAAlB,KAAA,OAAA7K,SAAA;EAAA;AAAA,IAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}