{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.anchor.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append, clearNode, createStyleSheet, getWindow, h, hasParentWithClass, asCssValueWithDefault, isKeyboardEvent } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { unthemedInboxStyles } from '../inputbox/inputBox.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isActionItem, isButton, isInputElement, isMonacoCustomToggle, isMonacoEditor, isStickyScrollContainer, isStickyScrollElement, List, MouseController } from '../list/listWidget.js';\nimport { Toggle, unthemedToggleStyles } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { Delayer, disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { SetMap } from '../../../common/map.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose as _dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { autorun, constObservable } from '../../../common/observable.js';\nvar TreeElementsDragAndDropData = /*#__PURE__*/function (_ElementsDragAndDropD) {\n  function TreeElementsDragAndDropData(data) {\n    var _this;\n    _classCallCheck(this, TreeElementsDragAndDropData);\n    _this = _callSuper(this, TreeElementsDragAndDropData, [data.elements.map(function (node) {\n      return node.element;\n    })]);\n    _this.data = data;\n    return _this;\n  }\n  _inherits(TreeElementsDragAndDropData, _ElementsDragAndDropD);\n  return _createClass(TreeElementsDragAndDropData);\n}(ElementsDragAndDropData);\nfunction asTreeDragAndDropData(data) {\n  if (data instanceof ElementsDragAndDropData) {\n    return new TreeElementsDragAndDropData(data);\n  }\n  return data;\n}\nvar TreeNodeListDragAndDrop = /*#__PURE__*/function () {\n  function TreeNodeListDragAndDrop(modelProvider, dnd) {\n    _classCallCheck(this, TreeNodeListDragAndDrop);\n    this.modelProvider = modelProvider;\n    this.dnd = dnd;\n    this.autoExpandDisposable = Disposable.None;\n    this.disposables = new DisposableStore();\n  }\n  return _createClass(TreeNodeListDragAndDrop, [{\n    key: \"getDragURI\",\n    value: function getDragURI(node) {\n      return this.dnd.getDragURI(node.element);\n    }\n  }, {\n    key: \"getDragLabel\",\n    value: function getDragLabel(nodes, originalEvent) {\n      if (this.dnd.getDragLabel) {\n        return this.dnd.getDragLabel(nodes.map(function (node) {\n          return node.element;\n        }), originalEvent);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(data, originalEvent) {\n      var _a, _b;\n      (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(data, targetNode, targetIndex, targetSector, originalEvent) {\n      var _this2 = this;\n      var raw = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n      var result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n      var didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n      if (didChangeAutoExpandNode) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = targetNode;\n      }\n      if (typeof targetNode === 'undefined') {\n        return result;\n      }\n      if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n        this.autoExpandDisposable = disposableTimeout(function () {\n          var model = _this2.modelProvider();\n          var ref = model.getNodeLocation(targetNode);\n          if (model.isCollapsed(ref)) {\n            model.setCollapsed(ref, false);\n          }\n          _this2.autoExpandNode = undefined;\n        }, 500, this.disposables);\n      }\n      if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n        if (!raw) {\n          var accept = typeof result === 'boolean' ? result : result.accept;\n          var effect = typeof result === 'boolean' ? undefined : result.effect;\n          return {\n            accept: accept,\n            effect: effect,\n            feedback: [targetIndex]\n          };\n        }\n        return result;\n      }\n      if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n        var _model = this.modelProvider();\n        var _ref = _model.getNodeLocation(targetNode);\n        var parentRef = _model.getParentNodeLocation(_ref);\n        var parentNode = _model.getNode(parentRef);\n        var parentIndex = parentRef && _model.getListIndex(parentRef);\n        return this.onDragOver(data, parentNode, parentIndex, targetSector, originalEvent, false);\n      }\n      var model = this.modelProvider();\n      var ref = model.getNodeLocation(targetNode);\n      var start = model.getListIndex(ref);\n      var length = model.getListRenderCount(ref);\n      return _objectSpread(_objectSpread({}, result), {}, {\n        feedback: range(start, start + length)\n      });\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n      this.autoExpandDisposable.dispose();\n      this.autoExpandNode = undefined;\n      this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(originalEvent) {\n      var _a, _b;\n      (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables.dispose();\n      this.dnd.dispose();\n    }\n  }]);\n}();\nfunction asListOptions(modelProvider, options) {\n  return options && _objectSpread(_objectSpread({}, options), {}, {\n    identityProvider: options.identityProvider && {\n      getId: function getId(el) {\n        return options.identityProvider.getId(el.element);\n      }\n    },\n    dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n    multipleSelectionController: options.multipleSelectionController && {\n      isSelectionSingleChangeEvent: function isSelectionSingleChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionSingleChangeEvent(_objectSpread(_objectSpread({}, e), {}, {\n          element: e.element\n        }));\n      },\n      isSelectionRangeChangeEvent: function isSelectionRangeChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionRangeChangeEvent(_objectSpread(_objectSpread({}, e), {}, {\n          element: e.element\n        }));\n      }\n    },\n    accessibilityProvider: options.accessibilityProvider && _objectSpread(_objectSpread({}, options.accessibilityProvider), {}, {\n      getSetSize: function getSetSize(node) {\n        var model = modelProvider();\n        var ref = model.getNodeLocation(node);\n        var parentRef = model.getParentNodeLocation(ref);\n        var parentNode = model.getNode(parentRef);\n        return parentNode.visibleChildrenCount;\n      },\n      getPosInSet: function getPosInSet(node) {\n        return node.visibleChildIndex + 1;\n      },\n      isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? function (node) {\n        return options.accessibilityProvider.isChecked(node.element);\n      } : undefined,\n      getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? function (node) {\n        return options.accessibilityProvider.getRole(node.element);\n      } : function () {\n        return 'treeitem';\n      },\n      getAriaLabel: function getAriaLabel(e) {\n        return options.accessibilityProvider.getAriaLabel(e.element);\n      },\n      getWidgetAriaLabel: function getWidgetAriaLabel() {\n        return options.accessibilityProvider.getWidgetAriaLabel();\n      },\n      getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? function () {\n        return options.accessibilityProvider.getWidgetRole();\n      } : function () {\n        return 'tree';\n      },\n      getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? function (node) {\n        return options.accessibilityProvider.getAriaLevel(node.element);\n      } : function (node) {\n        return node.depth;\n      },\n      getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && function (node) {\n        return options.accessibilityProvider.getActiveDescendantId(node.element);\n      }\n    }),\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && _objectSpread(_objectSpread({}, options.keyboardNavigationLabelProvider), {}, {\n      getKeyboardNavigationLabel: function getKeyboardNavigationLabel(node) {\n        return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n      }\n    })\n  });\n}\nexport var ComposedTreeDelegate = /*#__PURE__*/function () {\n  function ComposedTreeDelegate(delegate) {\n    _classCallCheck(this, ComposedTreeDelegate);\n    this.delegate = delegate;\n  }\n  return _createClass(ComposedTreeDelegate, [{\n    key: \"getHeight\",\n    value: function getHeight(element) {\n      return this.delegate.getHeight(element.element);\n    }\n  }, {\n    key: \"getTemplateId\",\n    value: function getTemplateId(element) {\n      return this.delegate.getTemplateId(element.element);\n    }\n  }, {\n    key: \"hasDynamicHeight\",\n    value: function hasDynamicHeight(element) {\n      return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n  }, {\n    key: \"setDynamicHeight\",\n    value: function setDynamicHeight(element, height) {\n      var _a, _b;\n      (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n    }\n  }]);\n}();\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n  RenderIndentGuides[\"None\"] = \"none\";\n  RenderIndentGuides[\"OnHover\"] = \"onHover\";\n  RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nvar EventCollection = /*#__PURE__*/function () {\n  function EventCollection(onDidChange) {\n    var _this3 = this;\n    var _elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, EventCollection);\n    this._elements = _elements;\n    this.disposables = new DisposableStore();\n    this.onDidChange = Event.forEach(onDidChange, function (elements) {\n      return _this3._elements = elements;\n    }, this.disposables);\n  }\n  return _createClass(EventCollection, [{\n    key: \"elements\",\n    get: function get() {\n      return this._elements;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables.dispose();\n    }\n  }]);\n}();\nexport var TreeRenderer = /*#__PURE__*/function () {\n  function TreeRenderer(renderer, modelProvider, onDidChangeCollapseState, activeNodes, renderedIndentGuides) {\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    _classCallCheck(this, TreeRenderer);\n    var _a;\n    this.renderer = renderer;\n    this.modelProvider = modelProvider;\n    this.activeNodes = activeNodes;\n    this.renderedIndentGuides = renderedIndentGuides;\n    this.renderedElements = new Map();\n    this.renderedNodes = new Map();\n    this.indent = TreeRenderer.DefaultIndent;\n    this.hideTwistiesOfChildlessElements = false;\n    this.shouldRenderIndentGuides = false;\n    this.activeIndentNodes = new Set();\n    this.indentGuidesDisposable = Disposable.None;\n    this.disposables = new DisposableStore();\n    this.templateId = renderer.templateId;\n    this.updateOptions(options);\n    Event.map(onDidChangeCollapseState, function (e) {\n      return e.node;\n    })(this.onDidChangeNodeTwistieState, this, this.disposables);\n    (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n  }\n  return _createClass(TreeRenderer, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (typeof options.indent !== 'undefined') {\n        var indent = clamp(options.indent, 0, 40);\n        if (indent !== this.indent) {\n          this.indent = indent;\n          var _iterator = _createForOfIteratorHelper(this.renderedNodes),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                node = _step$value[0],\n                templateData = _step$value[1];\n              this.renderTreeElement(node, templateData);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n      if (typeof options.renderIndentGuides !== 'undefined') {\n        var shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n        if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n          this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n          var _iterator2 = _createForOfIteratorHelper(this.renderedNodes),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _step2$value = _slicedToArray(_step2.value, 2),\n                _node = _step2$value[0],\n                _templateData = _step2$value[1];\n              this._renderIndentGuides(_node, _templateData);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          this.indentGuidesDisposable.dispose();\n          if (shouldRenderIndentGuides) {\n            var disposables = new DisposableStore();\n            this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n            this.indentGuidesDisposable = disposables;\n            this._onDidChangeActiveNodes(this.activeNodes.elements);\n          }\n        }\n      }\n      if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n        this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n      }\n    }\n  }, {\n    key: \"renderTemplate\",\n    value: function renderTemplate(container) {\n      var el = append(container, $('.monaco-tl-row'));\n      var indent = append(el, $('.monaco-tl-indent'));\n      var twistie = append(el, $('.monaco-tl-twistie'));\n      var contents = append(el, $('.monaco-tl-contents'));\n      var templateData = this.renderer.renderTemplate(contents);\n      return {\n        container: container,\n        indent: indent,\n        twistie: twistie,\n        indentGuidesDisposable: Disposable.None,\n        templateData: templateData\n      };\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(node, index, templateData, height) {\n      this.renderedNodes.set(node, templateData);\n      this.renderedElements.set(node.element, node);\n      this.renderTreeElement(node, templateData);\n      this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n  }, {\n    key: \"disposeElement\",\n    value: function disposeElement(node, index, templateData, height) {\n      var _a, _b;\n      templateData.indentGuidesDisposable.dispose();\n      (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n      if (typeof height === 'number') {\n        this.renderedNodes[\"delete\"](node);\n        this.renderedElements[\"delete\"](node.element);\n      }\n    }\n  }, {\n    key: \"disposeTemplate\",\n    value: function disposeTemplate(templateData) {\n      this.renderer.disposeTemplate(templateData.templateData);\n    }\n  }, {\n    key: \"onDidChangeTwistieState\",\n    value: function onDidChangeTwistieState(element) {\n      var node = this.renderedElements.get(element);\n      if (!node) {\n        return;\n      }\n      this.onDidChangeNodeTwistieState(node);\n    }\n  }, {\n    key: \"onDidChangeNodeTwistieState\",\n    value: function onDidChangeNodeTwistieState(node) {\n      var templateData = this.renderedNodes.get(node);\n      if (!templateData) {\n        return;\n      }\n      this._onDidChangeActiveNodes(this.activeNodes.elements);\n      this.renderTreeElement(node, templateData);\n    }\n  }, {\n    key: \"renderTreeElement\",\n    value: function renderTreeElement(node, templateData) {\n      var _templateData$twistie;\n      var indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n      templateData.twistie.style.paddingLeft = \"\".concat(indent, \"px\");\n      templateData.indent.style.width = \"\".concat(indent + this.indent - 16, \"px\");\n      if (node.collapsible) {\n        templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n      } else {\n        templateData.container.removeAttribute('aria-expanded');\n      }\n      (_templateData$twistie = templateData.twistie.classList).remove.apply(_templateData$twistie, _toConsumableArray(ThemeIcon.asClassNameArray(Codicon.treeItemExpanded)));\n      var twistieRendered = false;\n      if (this.renderer.renderTwistie) {\n        twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n      }\n      if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n        if (!twistieRendered) {\n          var _templateData$twistie2;\n          (_templateData$twistie2 = templateData.twistie.classList).add.apply(_templateData$twistie2, _toConsumableArray(ThemeIcon.asClassNameArray(Codicon.treeItemExpanded)));\n        }\n        templateData.twistie.classList.add('collapsible');\n        templateData.twistie.classList.toggle('collapsed', node.collapsed);\n      } else {\n        templateData.twistie.classList.remove('collapsible', 'collapsed');\n      }\n      this._renderIndentGuides(node, templateData);\n    }\n  }, {\n    key: \"_renderIndentGuides\",\n    value: function _renderIndentGuides(node, templateData) {\n      var _this4 = this;\n      clearNode(templateData.indent);\n      templateData.indentGuidesDisposable.dispose();\n      if (!this.shouldRenderIndentGuides) {\n        return;\n      }\n      var disposableStore = new DisposableStore();\n      var model = this.modelProvider();\n      var _loop = function _loop() {\n        var ref = model.getNodeLocation(node);\n        var parentRef = model.getParentNodeLocation(ref);\n        if (!parentRef) {\n          return 1; // break\n        }\n        var parent = model.getNode(parentRef);\n        var guide = $('.indent-guide', {\n          style: \"width: \".concat(_this4.indent, \"px\")\n        });\n        if (_this4.activeIndentNodes.has(parent)) {\n          guide.classList.add('active');\n        }\n        if (templateData.indent.childElementCount === 0) {\n          templateData.indent.appendChild(guide);\n        } else {\n          templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n        }\n        _this4.renderedIndentGuides.add(parent, guide);\n        disposableStore.add(toDisposable(function () {\n          return _this4.renderedIndentGuides[\"delete\"](parent, guide);\n        }));\n        node = parent;\n      };\n      while (true) {\n        if (_loop()) break;\n      }\n      templateData.indentGuidesDisposable = disposableStore;\n    }\n  }, {\n    key: \"_onDidChangeActiveNodes\",\n    value: function _onDidChangeActiveNodes(nodes) {\n      var _this5 = this;\n      if (!this.shouldRenderIndentGuides) {\n        return;\n      }\n      var set = new Set();\n      var model = this.modelProvider();\n      nodes.forEach(function (node) {\n        var ref = model.getNodeLocation(node);\n        try {\n          var parentRef = model.getParentNodeLocation(ref);\n          if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n            set.add(node);\n          } else if (parentRef) {\n            set.add(model.getNode(parentRef));\n          }\n        } catch (_a) {\n          // noop\n        }\n      });\n      this.activeIndentNodes.forEach(function (node) {\n        if (!set.has(node)) {\n          _this5.renderedIndentGuides.forEach(node, function (line) {\n            return line.classList.remove('active');\n          });\n        }\n      });\n      set.forEach(function (node) {\n        if (!_this5.activeIndentNodes.has(node)) {\n          _this5.renderedIndentGuides.forEach(node, function (line) {\n            return line.classList.add('active');\n          });\n        }\n      });\n      this.activeIndentNodes = set;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.renderedNodes.clear();\n      this.renderedElements.clear();\n      this.indentGuidesDisposable.dispose();\n      _dispose(this.disposables);\n    }\n  }]);\n}();\nTreeRenderer.DefaultIndent = 8;\nvar FindFilter = /*#__PURE__*/function () {\n  function FindFilter(tree, keyboardNavigationLabelProvider, _filter) {\n    _classCallCheck(this, FindFilter);\n    this.tree = tree;\n    this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n    this._filter = _filter;\n    this._totalCount = 0;\n    this._matchCount = 0;\n    this._pattern = '';\n    this._lowercasePattern = '';\n    this.disposables = new DisposableStore();\n    tree.onWillRefilter(this.reset, this, this.disposables);\n  }\n  return _createClass(FindFilter, [{\n    key: \"totalCount\",\n    get: function get() {\n      return this._totalCount;\n    }\n  }, {\n    key: \"matchCount\",\n    get: function get() {\n      return this._matchCount;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(element, parentVisibility) {\n      var visibility = 1 /* TreeVisibility.Visible */;\n      if (this._filter) {\n        var result = this._filter.filter(element, parentVisibility);\n        if (typeof result === 'boolean') {\n          visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n        } else if (isFilterResult(result)) {\n          visibility = getVisibleState(result.visibility);\n        } else {\n          visibility = result;\n        }\n        if (visibility === 0 /* TreeVisibility.Hidden */) {\n          return false;\n        }\n      }\n      this._totalCount++;\n      if (!this._pattern) {\n        this._matchCount++;\n        return {\n          data: FuzzyScore.Default,\n          visibility: visibility\n        };\n      }\n      var label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n      var labels = Array.isArray(label) ? label : [label];\n      var _iterator3 = _createForOfIteratorHelper(labels),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var l = _step3.value;\n          var labelStr = l && l.toString();\n          if (typeof labelStr === 'undefined') {\n            return {\n              data: FuzzyScore.Default,\n              visibility: visibility\n            };\n          }\n          var score = void 0;\n          if (this.tree.findMatchType === TreeFindMatchType.Contiguous) {\n            var index = labelStr.toLowerCase().indexOf(this._lowercasePattern);\n            if (index > -1) {\n              score = [Number.MAX_SAFE_INTEGER, 0];\n              for (var i = this._lowercasePattern.length; i > 0; i--) {\n                score.push(index + i - 1);\n              }\n            }\n          } else {\n            score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, {\n              firstMatchCanBeWeak: true,\n              boostFullMatch: true\n            });\n          }\n          if (score) {\n            this._matchCount++;\n            return labels.length === 1 ? {\n              data: score,\n              visibility: visibility\n            } : {\n              data: {\n                label: labelStr,\n                score: score\n              },\n              visibility: visibility\n            };\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      if (this.tree.findMode === TreeFindMode.Filter) {\n        if (typeof this.tree.options.defaultFindVisibility === 'number') {\n          return this.tree.options.defaultFindVisibility;\n        } else if (this.tree.options.defaultFindVisibility) {\n          return this.tree.options.defaultFindVisibility(element);\n        } else {\n          return 2 /* TreeVisibility.Recurse */;\n        }\n      } else {\n        return {\n          data: FuzzyScore.Default,\n          visibility: visibility\n        };\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._totalCount = 0;\n      this._matchCount = 0;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _dispose(this.disposables);\n    }\n  }]);\n}();\nexport var ModeToggle = /*#__PURE__*/function (_Toggle) {\n  function ModeToggle(opts) {\n    _classCallCheck(this, ModeToggle);\n    var _a, _b;\n    return _callSuper(this, ModeToggle, [{\n      icon: Codicon.listFilter,\n      title: localize('filter', \"Filter\"),\n      isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n      hoverDelegate: (_b = opts.hoverDelegate) !== null && _b !== void 0 ? _b : getDefaultHoverDelegate('element'),\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionForeground: opts.inputActiveOptionForeground,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    }]);\n  }\n  _inherits(ModeToggle, _Toggle);\n  return _createClass(ModeToggle);\n}(Toggle);\nexport var FuzzyToggle = /*#__PURE__*/function (_Toggle2) {\n  function FuzzyToggle(opts) {\n    _classCallCheck(this, FuzzyToggle);\n    var _a, _b;\n    return _callSuper(this, FuzzyToggle, [{\n      icon: Codicon.searchFuzzy,\n      title: localize('fuzzySearch', \"Fuzzy Match\"),\n      isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n      hoverDelegate: (_b = opts.hoverDelegate) !== null && _b !== void 0 ? _b : getDefaultHoverDelegate('element'),\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionForeground: opts.inputActiveOptionForeground,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    }]);\n  }\n  _inherits(FuzzyToggle, _Toggle2);\n  return _createClass(FuzzyToggle);\n}(Toggle);\nvar unthemedFindWidgetStyles = {\n  inputBoxStyles: unthemedInboxStyles,\n  toggleStyles: unthemedToggleStyles,\n  listFilterWidgetBackground: undefined,\n  listFilterWidgetNoMatchesOutline: undefined,\n  listFilterWidgetOutline: undefined,\n  listFilterWidgetShadow: undefined\n};\nexport var TreeFindMode;\n(function (TreeFindMode) {\n  TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n  TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nexport var TreeFindMatchType;\n(function (TreeFindMatchType) {\n  TreeFindMatchType[TreeFindMatchType[\"Fuzzy\"] = 0] = \"Fuzzy\";\n  TreeFindMatchType[TreeFindMatchType[\"Contiguous\"] = 1] = \"Contiguous\";\n})(TreeFindMatchType || (TreeFindMatchType = {}));\nvar FindWidget = /*#__PURE__*/function (_Disposable) {\n  function FindWidget(container, tree, contextViewProvider, mode, matchType, options) {\n    var _this6;\n    _classCallCheck(this, FindWidget);\n    var _a;\n    _this6 = _callSuper(this, FindWidget);\n    _this6.tree = tree;\n    _this6.elements = h('.monaco-tree-type-filter', [h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', {\n      tabIndex: 0\n    }), h('.monaco-tree-type-filter-input@findInput'), h('.monaco-tree-type-filter-actionbar@actionbar')]);\n    _this6.width = 0;\n    _this6.right = 0;\n    _this6.top = 0;\n    _this6._onDidDisable = new Emitter();\n    container.appendChild(_this6.elements.root);\n    _this6._register(toDisposable(function () {\n      return container.removeChild(_this6.elements.root);\n    }));\n    var styles = (_a = options === null || options === void 0 ? void 0 : options.styles) !== null && _a !== void 0 ? _a : unthemedFindWidgetStyles;\n    if (styles.listFilterWidgetBackground) {\n      _this6.elements.root.style.backgroundColor = styles.listFilterWidgetBackground;\n    }\n    if (styles.listFilterWidgetShadow) {\n      _this6.elements.root.style.boxShadow = \"0 0 8px 2px \".concat(styles.listFilterWidgetShadow);\n    }\n    var toggleHoverDelegate = _this6._register(createInstantHoverDelegate());\n    _this6.modeToggle = _this6._register(new ModeToggle(_objectSpread(_objectSpread({}, styles.toggleStyles), {}, {\n      isChecked: mode === TreeFindMode.Filter,\n      hoverDelegate: toggleHoverDelegate\n    })));\n    _this6.matchTypeToggle = _this6._register(new FuzzyToggle(_objectSpread(_objectSpread({}, styles.toggleStyles), {}, {\n      isChecked: matchType === TreeFindMatchType.Fuzzy,\n      hoverDelegate: toggleHoverDelegate\n    })));\n    _this6.onDidChangeMode = Event.map(_this6.modeToggle.onChange, function () {\n      return _this6.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight;\n    }, _this6._store);\n    _this6.onDidChangeMatchType = Event.map(_this6.matchTypeToggle.onChange, function () {\n      return _this6.matchTypeToggle.checked ? TreeFindMatchType.Fuzzy : TreeFindMatchType.Contiguous;\n    }, _this6._store);\n    _this6.findInput = _this6._register(new FindInput(_this6.elements.findInput, contextViewProvider, {\n      label: localize('type to search', \"Type to search\"),\n      additionalToggles: [_this6.modeToggle, _this6.matchTypeToggle],\n      showCommonFindToggles: false,\n      inputBoxStyles: styles.inputBoxStyles,\n      toggleStyles: styles.toggleStyles,\n      history: options === null || options === void 0 ? void 0 : options.history\n    }));\n    _this6.actionbar = _this6._register(new ActionBar(_this6.elements.actionbar));\n    _this6.mode = mode;\n    var emitter = _this6._register(new DomEmitter(_this6.findInput.inputBox.inputElement, 'keydown'));\n    var onKeyDown = Event.chain(emitter.event, function ($) {\n      return $.map(function (e) {\n        return new StandardKeyboardEvent(e);\n      });\n    });\n    _this6._register(onKeyDown(function (e) {\n      // Using equals() so we reserve modified keys for future use\n      if (e.equals(3 /* KeyCode.Enter */)) {\n        // This is the only keyboard way to return to the tree from a history item that isn't the last one\n        e.preventDefault();\n        e.stopPropagation();\n        _this6.findInput.inputBox.addToHistory();\n        _this6.tree.domFocus();\n        return;\n      }\n      if (e.equals(18 /* KeyCode.DownArrow */)) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (_this6.findInput.inputBox.isAtLastInHistory() || _this6.findInput.inputBox.isNowhereInHistory()) {\n          // Retain original pre-history DownArrow behavior\n          _this6.findInput.inputBox.addToHistory();\n          _this6.tree.domFocus();\n        } else {\n          // Downward through history\n          _this6.findInput.inputBox.showNextValue();\n        }\n        return;\n      }\n      if (e.equals(16 /* KeyCode.UpArrow */)) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Upward through history\n        _this6.findInput.inputBox.showPreviousValue();\n        return;\n      }\n    }));\n    var closeAction = _this6._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, function () {\n      return _this6.dispose();\n    }));\n    _this6.actionbar.push(closeAction, {\n      icon: true,\n      label: false\n    });\n    var onGrabMouseDown = _this6._register(new DomEmitter(_this6.elements.grab, 'mousedown'));\n    _this6._register(onGrabMouseDown.event(function (e) {\n      var disposables = new DisposableStore();\n      var onWindowMouseMove = disposables.add(new DomEmitter(getWindow(e), 'mousemove'));\n      var onWindowMouseUp = disposables.add(new DomEmitter(getWindow(e), 'mouseup'));\n      var startRight = _this6.right;\n      var startX = e.pageX;\n      var startTop = _this6.top;\n      var startY = e.pageY;\n      _this6.elements.grab.classList.add('grabbing');\n      var transition = _this6.elements.root.style.transition;\n      _this6.elements.root.style.transition = 'unset';\n      var update = function update(e) {\n        var deltaX = e.pageX - startX;\n        _this6.right = startRight - deltaX;\n        var deltaY = e.pageY - startY;\n        _this6.top = startTop + deltaY;\n        _this6.layout();\n      };\n      disposables.add(onWindowMouseMove.event(update));\n      disposables.add(onWindowMouseUp.event(function (e) {\n        update(e);\n        _this6.elements.grab.classList.remove('grabbing');\n        _this6.elements.root.style.transition = transition;\n        disposables.dispose();\n      }));\n    }));\n    var onGrabKeyDown = Event.chain(_this6._register(new DomEmitter(_this6.elements.grab, 'keydown')).event, function ($) {\n      return $.map(function (e) {\n        return new StandardKeyboardEvent(e);\n      });\n    });\n    _this6._register(onGrabKeyDown(function (e) {\n      var right;\n      var top;\n      if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n        right = Number.POSITIVE_INFINITY;\n      } else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n        right = 0;\n      } else if (e.keyCode === 10 /* KeyCode.Space */) {\n        right = _this6.right === 0 ? Number.POSITIVE_INFINITY : 0;\n      }\n      if (e.keyCode === 16 /* KeyCode.UpArrow */) {\n        top = 0;\n      } else if (e.keyCode === 18 /* KeyCode.DownArrow */) {\n        top = Number.POSITIVE_INFINITY;\n      }\n      if (right !== undefined) {\n        e.preventDefault();\n        e.stopPropagation();\n        _this6.right = right;\n        _this6.layout();\n      }\n      if (top !== undefined) {\n        e.preventDefault();\n        e.stopPropagation();\n        _this6.top = top;\n        var transition = _this6.elements.root.style.transition;\n        _this6.elements.root.style.transition = 'unset';\n        _this6.layout();\n        setTimeout(function () {\n          _this6.elements.root.style.transition = transition;\n        }, 0);\n      }\n    }));\n    _this6.onDidChangeValue = _this6.findInput.onDidChange;\n    return _this6;\n  }\n  _inherits(FindWidget, _Disposable);\n  return _createClass(FindWidget, [{\n    key: \"mode\",\n    set: function set(mode) {\n      this.modeToggle.checked = mode === TreeFindMode.Filter;\n      this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n  }, {\n    key: \"matchType\",\n    set: function set(matchType) {\n      this.matchTypeToggle.checked = matchType === TreeFindMatchType.Fuzzy;\n    }\n  }, {\n    key: \"layout\",\n    value: function layout() {\n      var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.width;\n      this.width = width;\n      this.right = clamp(this.right, 0, Math.max(0, width - 212));\n      this.elements.root.style.right = \"\".concat(this.right, \"px\");\n      this.top = clamp(this.top, 0, 24);\n      this.elements.root.style.top = \"\".concat(this.top, \"px\");\n    }\n  }, {\n    key: \"showMessage\",\n    value: function showMessage(message) {\n      this.findInput.showMessage(message);\n    }\n  }, {\n    key: \"clearMessage\",\n    value: function clearMessage() {\n      this.findInput.clearMessage();\n    }\n  }, {\n    key: \"dispose\",\n    value: function () {\n      var _dispose2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this._onDidDisable.fire();\n              this.elements.root.classList.add('disabled');\n              _context.next = 4;\n              return timeout(300);\n            case 4:\n              _get(_getPrototypeOf(FindWidget.prototype), \"dispose\", this).call(this);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function dispose() {\n        return _dispose2.apply(this, arguments);\n      }\n      return dispose;\n    }()\n  }]);\n}(Disposable);\nvar FindController = /*#__PURE__*/function () {\n  function FindController(tree, model, view, filter, contextViewProvider) {\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    _classCallCheck(this, FindController);\n    var _a, _b;\n    this.tree = tree;\n    this.view = view;\n    this.filter = filter;\n    this.contextViewProvider = contextViewProvider;\n    this.options = options;\n    this._pattern = '';\n    this.width = 0;\n    this._onDidChangeMode = new Emitter();\n    this.onDidChangeMode = this._onDidChangeMode.event;\n    this._onDidChangeMatchType = new Emitter();\n    this.onDidChangeMatchType = this._onDidChangeMatchType.event;\n    this._onDidChangePattern = new Emitter();\n    this._onDidChangeOpenState = new Emitter();\n    this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n    this.enabledDisposables = new DisposableStore();\n    this.disposables = new DisposableStore();\n    this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n    this._matchType = (_b = tree.options.defaultFindMatchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy;\n    model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n  }\n  return _createClass(FindController, [{\n    key: \"pattern\",\n    get: function get() {\n      return this._pattern;\n    }\n  }, {\n    key: \"mode\",\n    get: function get() {\n      return this._mode;\n    },\n    set: function set(mode) {\n      if (mode === this._mode) {\n        return;\n      }\n      this._mode = mode;\n      if (this.widget) {\n        this.widget.mode = this._mode;\n      }\n      this.tree.refilter();\n      this.render();\n      this._onDidChangeMode.fire(mode);\n    }\n  }, {\n    key: \"matchType\",\n    get: function get() {\n      return this._matchType;\n    },\n    set: function set(matchType) {\n      if (matchType === this._matchType) {\n        return;\n      }\n      this._matchType = matchType;\n      if (this.widget) {\n        this.widget.matchType = this._matchType;\n      }\n      this.tree.refilter();\n      this.render();\n      this._onDidChangeMatchType.fire(matchType);\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (optionsUpdate.defaultFindMode !== undefined) {\n        this.mode = optionsUpdate.defaultFindMode;\n      }\n      if (optionsUpdate.defaultFindMatchType !== undefined) {\n        this.matchType = optionsUpdate.defaultFindMatchType;\n      }\n    }\n  }, {\n    key: \"onDidSpliceModel\",\n    value: function onDidSpliceModel() {\n      if (!this.widget || this.pattern.length === 0) {\n        return;\n      }\n      this.tree.refilter();\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a, _b, _c, _d;\n      var noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n      if (this.pattern && noMatches) {\n        if ((_a = this.tree.options.showNotFoundMessage) !== null && _a !== void 0 ? _a : true) {\n          (_b = this.widget) === null || _b === void 0 ? void 0 : _b.showMessage({\n            type: 2 /* MessageType.WARNING */,\n            content: localize('not found', \"No elements found.\")\n          });\n        } else {\n          (_c = this.widget) === null || _c === void 0 ? void 0 : _c.showMessage({\n            type: 2 /* MessageType.WARNING */\n          });\n        }\n      } else {\n        (_d = this.widget) === null || _d === void 0 ? void 0 : _d.clearMessage();\n      }\n    }\n  }, {\n    key: \"shouldAllowFocus\",\n    value: function shouldAllowFocus(node) {\n      if (!this.widget || !this.pattern) {\n        return true;\n      }\n      if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n        return true;\n      }\n      return !FuzzyScore.isDefault(node.filterData);\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(width) {\n      var _a;\n      this.width = width;\n      (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._history = undefined;\n      this._onDidChangePattern.dispose();\n      this.enabledDisposables.dispose();\n      this.disposables.dispose();\n    }\n  }]);\n}();\nfunction stickyScrollNodeStateEquals(node1, node2) {\n  return node1.position === node2.position && stickyScrollNodeEquals(node1, node2);\n}\nfunction stickyScrollNodeEquals(node1, node2) {\n  return node1.node.element === node2.node.element && node1.startIndex === node2.startIndex && node1.height === node2.height && node1.endIndex === node2.endIndex;\n}\nvar StickyScrollState = /*#__PURE__*/function () {\n  function StickyScrollState() {\n    var stickyNodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classCallCheck(this, StickyScrollState);\n    this.stickyNodes = stickyNodes;\n  }\n  return _createClass(StickyScrollState, [{\n    key: \"count\",\n    get: function get() {\n      return this.stickyNodes.length;\n    }\n  }, {\n    key: \"equal\",\n    value: function equal(state) {\n      return equals(this.stickyNodes, state.stickyNodes, stickyScrollNodeStateEquals);\n    }\n  }, {\n    key: \"lastNodePartiallyVisible\",\n    value: function lastNodePartiallyVisible() {\n      if (this.count === 0) {\n        return false;\n      }\n      var lastStickyNode = this.stickyNodes[this.count - 1];\n      if (this.count === 1) {\n        return lastStickyNode.position !== 0;\n      }\n      var secondLastStickyNode = this.stickyNodes[this.count - 2];\n      return secondLastStickyNode.position + secondLastStickyNode.height !== lastStickyNode.position;\n    }\n  }, {\n    key: \"animationStateChanged\",\n    value: function animationStateChanged(previousState) {\n      if (!equals(this.stickyNodes, previousState.stickyNodes, stickyScrollNodeEquals)) {\n        return false;\n      }\n      if (this.count === 0) {\n        return false;\n      }\n      var lastStickyNode = this.stickyNodes[this.count - 1];\n      var previousLastStickyNode = previousState.stickyNodes[previousState.count - 1];\n      return lastStickyNode.position !== previousLastStickyNode.position;\n    }\n  }]);\n}();\nvar DefaultStickyScrollDelegate = /*#__PURE__*/function () {\n  function DefaultStickyScrollDelegate() {\n    _classCallCheck(this, DefaultStickyScrollDelegate);\n  }\n  return _createClass(DefaultStickyScrollDelegate, [{\n    key: \"constrainStickyScrollNodes\",\n    value: function constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n      for (var i = 0; i < stickyNodes.length; i++) {\n        var stickyNode = stickyNodes[i];\n        var stickyNodeBottom = stickyNode.position + stickyNode.height;\n        if (stickyNodeBottom > maxWidgetHeight || i >= stickyScrollMaxItemCount) {\n          return stickyNodes.slice(0, i);\n        }\n      }\n      return stickyNodes;\n    }\n  }]);\n}();\nvar StickyScrollController = /*#__PURE__*/function (_Disposable2) {\n  function StickyScrollController(tree, model, view, renderers, treeDelegate) {\n    var _this7;\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    _classCallCheck(this, StickyScrollController);\n    var _a;\n    _this7 = _callSuper(this, StickyScrollController);\n    _this7.tree = tree;\n    _this7.model = model;\n    _this7.view = view;\n    _this7.treeDelegate = treeDelegate;\n    _this7.maxWidgetViewRatio = 0.4;\n    var stickyScrollOptions = _this7.validateStickySettings(options);\n    _this7.stickyScrollMaxItemCount = stickyScrollOptions.stickyScrollMaxItemCount;\n    _this7.stickyScrollDelegate = (_a = options.stickyScrollDelegate) !== null && _a !== void 0 ? _a : new DefaultStickyScrollDelegate();\n    _this7._widget = _this7._register(new StickyScrollWidget(view.getScrollableElement(), view, tree, renderers, treeDelegate, options.accessibilityProvider));\n    _this7.onDidChangeHasFocus = _this7._widget.onDidChangeHasFocus;\n    _this7.onContextMenu = _this7._widget.onContextMenu;\n    _this7._register(view.onDidScroll(function () {\n      return _this7.update();\n    }));\n    _this7._register(view.onDidChangeContentHeight(function () {\n      return _this7.update();\n    }));\n    _this7._register(tree.onDidChangeCollapseState(function () {\n      return _this7.update();\n    }));\n    _this7.update();\n    return _this7;\n  }\n  _inherits(StickyScrollController, _Disposable2);\n  return _createClass(StickyScrollController, [{\n    key: \"height\",\n    get: function get() {\n      return this._widget.height;\n    }\n  }, {\n    key: \"getNodeAtHeight\",\n    value: function getNodeAtHeight(height) {\n      var index;\n      if (height === 0) {\n        index = this.view.firstVisibleIndex;\n      } else {\n        index = this.view.indexAt(height + this.view.scrollTop);\n      }\n      if (index < 0 || index >= this.view.length) {\n        return undefined;\n      }\n      return this.view.element(index);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var firstVisibleNode = this.getNodeAtHeight(0);\n      // Don't render anything if there are no elements\n      if (!firstVisibleNode || this.tree.scrollTop === 0) {\n        this._widget.setState(undefined);\n        return;\n      }\n      var stickyState = this.findStickyState(firstVisibleNode);\n      this._widget.setState(stickyState);\n    }\n  }, {\n    key: \"findStickyState\",\n    value: function findStickyState(firstVisibleNode) {\n      var stickyNodes = [];\n      var firstVisibleNodeUnderWidget = firstVisibleNode;\n      var stickyNodesHeight = 0;\n      var nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, undefined, stickyNodesHeight);\n      while (nextStickyNode) {\n        stickyNodes.push(nextStickyNode);\n        stickyNodesHeight += nextStickyNode.height;\n        if (stickyNodes.length <= this.stickyScrollMaxItemCount) {\n          firstVisibleNodeUnderWidget = this.getNextVisibleNode(nextStickyNode);\n          if (!firstVisibleNodeUnderWidget) {\n            break;\n          }\n        }\n        nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, nextStickyNode.node, stickyNodesHeight);\n      }\n      var contrainedStickyNodes = this.constrainStickyNodes(stickyNodes);\n      return contrainedStickyNodes.length ? new StickyScrollState(contrainedStickyNodes) : undefined;\n    }\n  }, {\n    key: \"getNextVisibleNode\",\n    value: function getNextVisibleNode(previousStickyNode) {\n      return this.getNodeAtHeight(previousStickyNode.position + previousStickyNode.height);\n    }\n  }, {\n    key: \"getNextStickyNode\",\n    value: function getNextStickyNode(firstVisibleNodeUnderWidget, previousStickyNode, stickyNodesHeight) {\n      var nextStickyNode = this.getAncestorUnderPrevious(firstVisibleNodeUnderWidget, previousStickyNode);\n      if (!nextStickyNode) {\n        return undefined;\n      }\n      if (nextStickyNode === firstVisibleNodeUnderWidget) {\n        if (!this.nodeIsUncollapsedParent(firstVisibleNodeUnderWidget)) {\n          return undefined;\n        }\n        if (this.nodeTopAlignsWithStickyNodesBottom(firstVisibleNodeUnderWidget, stickyNodesHeight)) {\n          return undefined;\n        }\n      }\n      return this.createStickyScrollNode(nextStickyNode, stickyNodesHeight);\n    }\n  }, {\n    key: \"nodeTopAlignsWithStickyNodesBottom\",\n    value: function nodeTopAlignsWithStickyNodesBottom(node, stickyNodesHeight) {\n      var nodeIndex = this.getNodeIndex(node);\n      var elementTop = this.view.getElementTop(nodeIndex);\n      var stickyPosition = stickyNodesHeight;\n      return this.view.scrollTop === elementTop - stickyPosition;\n    }\n  }, {\n    key: \"createStickyScrollNode\",\n    value: function createStickyScrollNode(node, currentStickyNodesHeight) {\n      var height = this.treeDelegate.getHeight(node);\n      var _this$getNodeRange = this.getNodeRange(node),\n        startIndex = _this$getNodeRange.startIndex,\n        endIndex = _this$getNodeRange.endIndex;\n      var position = this.calculateStickyNodePosition(endIndex, currentStickyNodesHeight, height);\n      return {\n        node: node,\n        position: position,\n        height: height,\n        startIndex: startIndex,\n        endIndex: endIndex\n      };\n    }\n  }, {\n    key: \"getAncestorUnderPrevious\",\n    value: function getAncestorUnderPrevious(node) {\n      var previousAncestor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var currentAncestor = node;\n      var parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n      while (parentOfcurrentAncestor) {\n        if (parentOfcurrentAncestor === previousAncestor) {\n          return currentAncestor;\n        }\n        currentAncestor = parentOfcurrentAncestor;\n        parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n      }\n      if (previousAncestor === undefined) {\n        return currentAncestor;\n      }\n      return undefined;\n    }\n  }, {\n    key: \"calculateStickyNodePosition\",\n    value: function calculateStickyNodePosition(lastDescendantIndex, stickyRowPositionTop, stickyNodeHeight) {\n      var lastChildRelativeTop = this.view.getRelativeTop(lastDescendantIndex);\n      // If the last descendant is only partially visible at the top of the view, getRelativeTop() returns null\n      // In that case, utilize the next node's relative top to calculate the sticky node's position\n      if (lastChildRelativeTop === null && this.view.firstVisibleIndex === lastDescendantIndex && lastDescendantIndex + 1 < this.view.length) {\n        var nodeHeight = this.treeDelegate.getHeight(this.view.element(lastDescendantIndex));\n        var nextNodeRelativeTop = this.view.getRelativeTop(lastDescendantIndex + 1);\n        lastChildRelativeTop = nextNodeRelativeTop ? nextNodeRelativeTop - nodeHeight / this.view.renderHeight : null;\n      }\n      if (lastChildRelativeTop === null) {\n        return stickyRowPositionTop;\n      }\n      var lastChildNode = this.view.element(lastDescendantIndex);\n      var lastChildHeight = this.treeDelegate.getHeight(lastChildNode);\n      var topOfLastChild = lastChildRelativeTop * this.view.renderHeight;\n      var bottomOfLastChild = topOfLastChild + lastChildHeight;\n      if (stickyRowPositionTop + stickyNodeHeight > bottomOfLastChild && stickyRowPositionTop <= bottomOfLastChild) {\n        return bottomOfLastChild - stickyNodeHeight;\n      }\n      return stickyRowPositionTop;\n    }\n  }, {\n    key: \"constrainStickyNodes\",\n    value: function constrainStickyNodes(stickyNodes) {\n      if (stickyNodes.length === 0) {\n        return [];\n      }\n      // Check if sticky nodes need to be constrained\n      var maximumStickyWidgetHeight = this.view.renderHeight * this.maxWidgetViewRatio;\n      var lastStickyNode = stickyNodes[stickyNodes.length - 1];\n      if (stickyNodes.length <= this.stickyScrollMaxItemCount && lastStickyNode.position + lastStickyNode.height <= maximumStickyWidgetHeight) {\n        return stickyNodes;\n      }\n      // constrain sticky nodes\n      var constrainedStickyNodes = this.stickyScrollDelegate.constrainStickyScrollNodes(stickyNodes, this.stickyScrollMaxItemCount, maximumStickyWidgetHeight);\n      if (!constrainedStickyNodes.length) {\n        return [];\n      }\n      // Validate constraints\n      var lastConstrainedStickyNode = constrainedStickyNodes[constrainedStickyNodes.length - 1];\n      if (constrainedStickyNodes.length > this.stickyScrollMaxItemCount || lastConstrainedStickyNode.position + lastConstrainedStickyNode.height > maximumStickyWidgetHeight) {\n        throw new Error('stickyScrollDelegate violates constraints');\n      }\n      return constrainedStickyNodes;\n    }\n  }, {\n    key: \"getParentNode\",\n    value: function getParentNode(node) {\n      var nodeLocation = this.model.getNodeLocation(node);\n      var parentLocation = this.model.getParentNodeLocation(nodeLocation);\n      return parentLocation ? this.model.getNode(parentLocation) : undefined;\n    }\n  }, {\n    key: \"nodeIsUncollapsedParent\",\n    value: function nodeIsUncollapsedParent(node) {\n      var nodeLocation = this.model.getNodeLocation(node);\n      return this.model.getListRenderCount(nodeLocation) > 1;\n    }\n  }, {\n    key: \"getNodeIndex\",\n    value: function getNodeIndex(node) {\n      var nodeLocation = this.model.getNodeLocation(node);\n      var nodeIndex = this.model.getListIndex(nodeLocation);\n      return nodeIndex;\n    }\n  }, {\n    key: \"getNodeRange\",\n    value: function getNodeRange(node) {\n      var nodeLocation = this.model.getNodeLocation(node);\n      var startIndex = this.model.getListIndex(nodeLocation);\n      if (startIndex < 0) {\n        throw new Error('Node not found in tree');\n      }\n      var renderCount = this.model.getListRenderCount(nodeLocation);\n      var endIndex = startIndex + renderCount - 1;\n      return {\n        startIndex: startIndex,\n        endIndex: endIndex\n      };\n    }\n  }, {\n    key: \"nodePositionTopBelowWidget\",\n    value: function nodePositionTopBelowWidget(node) {\n      var ancestors = [];\n      var currentAncestor = this.getParentNode(node);\n      while (currentAncestor) {\n        ancestors.push(currentAncestor);\n        currentAncestor = this.getParentNode(currentAncestor);\n      }\n      var widgetHeight = 0;\n      for (var i = 0; i < ancestors.length && i < this.stickyScrollMaxItemCount; i++) {\n        widgetHeight += this.treeDelegate.getHeight(ancestors[i]);\n      }\n      return widgetHeight;\n    }\n  }, {\n    key: \"domFocus\",\n    value: function domFocus() {\n      this._widget.domFocus();\n    }\n    // Whether sticky scroll was the last focused part in the tree or not\n  }, {\n    key: \"focusedLast\",\n    value: function focusedLast() {\n      return this._widget.focusedLast();\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!optionsUpdate.stickyScrollMaxItemCount) {\n        return;\n      }\n      var validatedOptions = this.validateStickySettings(optionsUpdate);\n      if (this.stickyScrollMaxItemCount !== validatedOptions.stickyScrollMaxItemCount) {\n        this.stickyScrollMaxItemCount = validatedOptions.stickyScrollMaxItemCount;\n        this.update();\n      }\n    }\n  }, {\n    key: \"validateStickySettings\",\n    value: function validateStickySettings(options) {\n      var stickyScrollMaxItemCount = 7;\n      if (typeof options.stickyScrollMaxItemCount === 'number') {\n        stickyScrollMaxItemCount = Math.max(options.stickyScrollMaxItemCount, 1);\n      }\n      return {\n        stickyScrollMaxItemCount: stickyScrollMaxItemCount\n      };\n    }\n  }]);\n}(Disposable);\nvar StickyScrollWidget = /*#__PURE__*/function () {\n  function StickyScrollWidget(container, view, tree, treeRenderers, treeDelegate, accessibilityProvider) {\n    _classCallCheck(this, StickyScrollWidget);\n    this.view = view;\n    this.tree = tree;\n    this.treeRenderers = treeRenderers;\n    this.treeDelegate = treeDelegate;\n    this.accessibilityProvider = accessibilityProvider;\n    this._previousElements = [];\n    this._previousStateDisposables = new DisposableStore();\n    this._rootDomNode = $('.monaco-tree-sticky-container.empty');\n    container.appendChild(this._rootDomNode);\n    var shadow = $('.monaco-tree-sticky-container-shadow');\n    this._rootDomNode.appendChild(shadow);\n    this.stickyScrollFocus = new StickyScrollFocus(this._rootDomNode, view);\n    this.onDidChangeHasFocus = this.stickyScrollFocus.onDidChangeHasFocus;\n    this.onContextMenu = this.stickyScrollFocus.onContextMenu;\n  }\n  return _createClass(StickyScrollWidget, [{\n    key: \"height\",\n    get: function get() {\n      if (!this._previousState) {\n        return 0;\n      }\n      var lastElement = this._previousState.stickyNodes[this._previousState.count - 1];\n      return lastElement.position + lastElement.height;\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      var wasVisible = !!this._previousState && this._previousState.count > 0;\n      var isVisible = !!state && state.count > 0;\n      // If state has not changed, do nothing\n      if (!wasVisible && !isVisible || wasVisible && isVisible && this._previousState.equal(state)) {\n        return;\n      }\n      // Update visibility of the widget if changed\n      if (wasVisible !== isVisible) {\n        this.setVisible(isVisible);\n      }\n      if (!isVisible) {\n        this._previousState = undefined;\n        this._previousElements = [];\n        this._previousStateDisposables.clear();\n        return;\n      }\n      var lastStickyNode = state.stickyNodes[state.count - 1];\n      // If the new state is only a change in the last node's position, update the position of the last element\n      if (this._previousState && state.animationStateChanged(this._previousState)) {\n        this._previousElements[this._previousState.count - 1].style.top = \"\".concat(lastStickyNode.position, \"px\");\n      }\n      // create new dom elements\n      else {\n        this._previousStateDisposables.clear();\n        var elements = Array(state.count);\n        for (var stickyIndex = state.count - 1; stickyIndex >= 0; stickyIndex--) {\n          var stickyNode = state.stickyNodes[stickyIndex];\n          var _this$createElement = this.createElement(stickyNode, stickyIndex, state.count),\n            element = _this$createElement.element,\n            disposable = _this$createElement.disposable;\n          elements[stickyIndex] = element;\n          this._rootDomNode.appendChild(element);\n          this._previousStateDisposables.add(disposable);\n        }\n        this.stickyScrollFocus.updateElements(elements, state);\n        this._previousElements = elements;\n      }\n      this._previousState = state;\n      // Set the height of the widget to the bottom of the last sticky node\n      this._rootDomNode.style.height = \"\".concat(lastStickyNode.position + lastStickyNode.height, \"px\");\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(stickyNode, stickyIndex, stickyNodesTotal) {\n      var nodeIndex = stickyNode.startIndex;\n      // Sticky element container\n      var stickyElement = document.createElement('div');\n      stickyElement.style.top = \"\".concat(stickyNode.position, \"px\");\n      if (this.tree.options.setRowHeight !== false) {\n        stickyElement.style.height = \"\".concat(stickyNode.height, \"px\");\n      }\n      if (this.tree.options.setRowLineHeight !== false) {\n        stickyElement.style.lineHeight = \"\".concat(stickyNode.height, \"px\");\n      }\n      stickyElement.classList.add('monaco-tree-sticky-row');\n      stickyElement.classList.add('monaco-list-row');\n      stickyElement.setAttribute('data-index', \"\".concat(nodeIndex));\n      stickyElement.setAttribute('data-parity', nodeIndex % 2 === 0 ? 'even' : 'odd');\n      stickyElement.setAttribute('id', this.view.getElementID(nodeIndex));\n      var accessibilityDisposable = this.setAccessibilityAttributes(stickyElement, stickyNode.node.element, stickyIndex, stickyNodesTotal);\n      // Get the renderer for the node\n      var nodeTemplateId = this.treeDelegate.getTemplateId(stickyNode.node);\n      var renderer = this.treeRenderers.find(function (renderer) {\n        return renderer.templateId === nodeTemplateId;\n      });\n      if (!renderer) {\n        throw new Error(\"No renderer found for template id \".concat(nodeTemplateId));\n      }\n      // To make sure we do not influence the original node, we create a copy of the node\n      // We need to check if it is already a unique instance of the node by the delegate\n      var nodeCopy = stickyNode.node;\n      if (nodeCopy === this.tree.getNode(this.tree.getNodeLocation(stickyNode.node))) {\n        nodeCopy = new Proxy(stickyNode.node, {});\n      }\n      // Render the element\n      var templateData = renderer.renderTemplate(stickyElement);\n      renderer.renderElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n      // Remove the element from the DOM when state is disposed\n      var disposable = toDisposable(function () {\n        accessibilityDisposable.dispose();\n        renderer.disposeElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n        renderer.disposeTemplate(templateData);\n        stickyElement.remove();\n      });\n      return {\n        element: stickyElement,\n        disposable: disposable\n      };\n    }\n  }, {\n    key: \"setAccessibilityAttributes\",\n    value: function setAccessibilityAttributes(container, element, stickyIndex, stickyNodesTotal) {\n      var _a;\n      if (!this.accessibilityProvider) {\n        return Disposable.None;\n      }\n      if (this.accessibilityProvider.getSetSize) {\n        container.setAttribute('aria-setsize', String(this.accessibilityProvider.getSetSize(element, stickyIndex, stickyNodesTotal)));\n      }\n      if (this.accessibilityProvider.getPosInSet) {\n        container.setAttribute('aria-posinset', String(this.accessibilityProvider.getPosInSet(element, stickyIndex)));\n      }\n      if (this.accessibilityProvider.getRole) {\n        container.setAttribute('role', (_a = this.accessibilityProvider.getRole(element)) !== null && _a !== void 0 ? _a : 'treeitem');\n      }\n      var ariaLabel = this.accessibilityProvider.getAriaLabel(element);\n      var observable = ariaLabel && typeof ariaLabel !== 'string' ? ariaLabel : constObservable(ariaLabel);\n      var result = autorun(function (reader) {\n        var value = reader.readObservable(observable);\n        if (value) {\n          container.setAttribute('aria-label', value);\n        } else {\n          container.removeAttribute('aria-label');\n        }\n      });\n      if (typeof ariaLabel === 'string') {} else if (ariaLabel) {\n        container.setAttribute('aria-label', ariaLabel.get());\n      }\n      var ariaLevel = this.accessibilityProvider.getAriaLevel && this.accessibilityProvider.getAriaLevel(element);\n      if (typeof ariaLevel === 'number') {\n        container.setAttribute('aria-level', \"\".concat(ariaLevel));\n      }\n      // Sticky Scroll elements can not be selected\n      container.setAttribute('aria-selected', String(false));\n      return result;\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      this._rootDomNode.classList.toggle('empty', !visible);\n      if (!visible) {\n        this.stickyScrollFocus.updateElements([], undefined);\n      }\n    }\n  }, {\n    key: \"domFocus\",\n    value: function domFocus() {\n      this.stickyScrollFocus.domFocus();\n    }\n  }, {\n    key: \"focusedLast\",\n    value: function focusedLast() {\n      return this.stickyScrollFocus.focusedLast();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.stickyScrollFocus.dispose();\n      this._previousStateDisposables.dispose();\n      this._rootDomNode.remove();\n    }\n  }]);\n}();\nvar StickyScrollFocus = /*#__PURE__*/function (_Disposable3) {\n  function StickyScrollFocus(container, view) {\n    var _this8;\n    _classCallCheck(this, StickyScrollFocus);\n    _this8 = _callSuper(this, StickyScrollFocus);\n    _this8.container = container;\n    _this8.view = view;\n    _this8.focusedIndex = -1;\n    _this8.elements = [];\n    _this8._onDidChangeHasFocus = new Emitter();\n    _this8.onDidChangeHasFocus = _this8._onDidChangeHasFocus.event;\n    _this8._onContextMenu = new Emitter();\n    _this8.onContextMenu = _this8._onContextMenu.event;\n    _this8._domHasFocus = false;\n    _this8.container.addEventListener('focus', function () {\n      return _this8.onFocus();\n    });\n    _this8.container.addEventListener('blur', function () {\n      return _this8.onBlur();\n    });\n    _this8._register(_this8.view.onDidFocus(function () {\n      return _this8.toggleStickyScrollFocused(false);\n    }));\n    _this8._register(_this8.view.onKeyDown(function (e) {\n      return _this8.onKeyDown(e);\n    }));\n    _this8._register(_this8.view.onMouseDown(function (e) {\n      return _this8.onMouseDown(e);\n    }));\n    _this8._register(_this8.view.onContextMenu(function (e) {\n      return _this8.handleContextMenu(e);\n    }));\n    return _this8;\n  }\n  _inherits(StickyScrollFocus, _Disposable3);\n  return _createClass(StickyScrollFocus, [{\n    key: \"domHasFocus\",\n    get: function get() {\n      return this._domHasFocus;\n    },\n    set: function set(hasFocus) {\n      if (hasFocus !== this._domHasFocus) {\n        this._onDidChangeHasFocus.fire(hasFocus);\n        this._domHasFocus = hasFocus;\n      }\n    }\n  }, {\n    key: \"handleContextMenu\",\n    value: function handleContextMenu(e) {\n      var target = e.browserEvent.target;\n      if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n        if (this.focusedLast()) {\n          this.view.domFocus();\n        }\n        return;\n      }\n      // The list handles the context menu triggered by a mouse event\n      // In that case only set the focus of the element clicked and leave the rest to the list to handle\n      if (!isKeyboardEvent(e.browserEvent)) {\n        if (!this.state) {\n          throw new Error('Context menu should not be triggered when state is undefined');\n        }\n        var stickyIndex = this.state.stickyNodes.findIndex(function (stickyNode) {\n          var _a;\n          return stickyNode.node.element === ((_a = e.element) === null || _a === void 0 ? void 0 : _a.element);\n        });\n        if (stickyIndex === -1) {\n          throw new Error('Context menu should not be triggered when element is not in sticky scroll widget');\n        }\n        this.container.focus();\n        this.setFocus(stickyIndex);\n        return;\n      }\n      if (!this.state || this.focusedIndex < 0) {\n        throw new Error('Context menu key should not be triggered when focus is not in sticky scroll widget');\n      }\n      var stickyNode = this.state.stickyNodes[this.focusedIndex];\n      var element = stickyNode.node.element;\n      var anchor = this.elements[this.focusedIndex];\n      this._onContextMenu.fire({\n        element: element,\n        anchor: anchor,\n        browserEvent: e.browserEvent,\n        isStickyScroll: true\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      // Sticky Scroll Navigation\n      if (this.domHasFocus && this.state) {\n        // Move up\n        if (e.key === 'ArrowUp') {\n          this.setFocusedElement(Math.max(0, this.focusedIndex - 1));\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        // Move down, if last sticky node is focused, move focus into first child of last sticky node\n        else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n          if (this.focusedIndex >= this.state.count - 1) {\n            var nodeIndexToFocus = this.state.stickyNodes[this.state.count - 1].startIndex + 1;\n            this.view.domFocus();\n            this.view.setFocus([nodeIndexToFocus]);\n            this.scrollNodeUnderWidget(nodeIndexToFocus, this.state);\n          } else {\n            this.setFocusedElement(this.focusedIndex + 1);\n          }\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(e) {\n      var target = e.browserEvent.target;\n      if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n        return;\n      }\n      e.browserEvent.preventDefault();\n      e.browserEvent.stopPropagation();\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(elements, state) {\n      if (state && state.count === 0) {\n        throw new Error('Sticky scroll state must be undefined when there are no sticky nodes');\n      }\n      if (state && state.count !== elements.length) {\n        throw new Error('Sticky scroll focus received illigel state');\n      }\n      var previousIndex = this.focusedIndex;\n      this.removeFocus();\n      this.elements = elements;\n      this.state = state;\n      if (state) {\n        var newFocusedIndex = clamp(previousIndex, 0, state.count - 1);\n        this.setFocus(newFocusedIndex);\n      } else {\n        if (this.domHasFocus) {\n          this.view.domFocus();\n        }\n      }\n      // must come last as it calls blur()\n      this.container.tabIndex = state ? 0 : -1;\n    }\n  }, {\n    key: \"setFocusedElement\",\n    value: function setFocusedElement(stickyIndex) {\n      // doesn't imply that the widget has (or will have) focus\n      var state = this.state;\n      if (!state) {\n        throw new Error('Cannot set focus when state is undefined');\n      }\n      this.setFocus(stickyIndex);\n      if (stickyIndex < state.count - 1) {\n        return;\n      }\n      // If the last sticky node is not fully visible, scroll it into view\n      if (state.lastNodePartiallyVisible()) {\n        var lastStickyNode = state.stickyNodes[stickyIndex];\n        this.scrollNodeUnderWidget(lastStickyNode.endIndex + 1, state);\n      }\n    }\n  }, {\n    key: \"scrollNodeUnderWidget\",\n    value: function scrollNodeUnderWidget(nodeIndex, state) {\n      var lastStickyNode = state.stickyNodes[state.count - 1];\n      var secondLastStickyNode = state.count > 1 ? state.stickyNodes[state.count - 2] : undefined;\n      var elementScrollTop = this.view.getElementTop(nodeIndex);\n      var elementTargetViewTop = secondLastStickyNode ? secondLastStickyNode.position + secondLastStickyNode.height + lastStickyNode.height : lastStickyNode.height;\n      this.view.scrollTop = elementScrollTop - elementTargetViewTop;\n    }\n  }, {\n    key: \"domFocus\",\n    value: function domFocus() {\n      if (!this.state) {\n        throw new Error('Cannot focus when state is undefined');\n      }\n      this.container.focus();\n    }\n  }, {\n    key: \"focusedLast\",\n    value: function focusedLast() {\n      if (!this.state) {\n        return false;\n      }\n      return this.view.getHTMLElement().classList.contains('sticky-scroll-focused');\n    }\n  }, {\n    key: \"removeFocus\",\n    value: function removeFocus() {\n      if (this.focusedIndex === -1) {\n        return;\n      }\n      this.toggleElementFocus(this.elements[this.focusedIndex], false);\n      this.focusedIndex = -1;\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(newFocusIndex) {\n      if (0 > newFocusIndex) {\n        throw new Error('addFocus() can not remove focus');\n      }\n      if (!this.state && newFocusIndex >= 0) {\n        throw new Error('Cannot set focus index when state is undefined');\n      }\n      if (this.state && newFocusIndex >= this.state.count) {\n        throw new Error('Cannot set focus index to an index that does not exist');\n      }\n      var oldIndex = this.focusedIndex;\n      if (oldIndex >= 0) {\n        this.toggleElementFocus(this.elements[oldIndex], false);\n      }\n      if (newFocusIndex >= 0) {\n        this.toggleElementFocus(this.elements[newFocusIndex], true);\n      }\n      this.focusedIndex = newFocusIndex;\n    }\n  }, {\n    key: \"toggleElementFocus\",\n    value: function toggleElementFocus(element, focused) {\n      this.toggleElementActiveFocus(element, focused && this.domHasFocus);\n      this.toggleElementPassiveFocus(element, focused);\n    }\n  }, {\n    key: \"toggleCurrentElementActiveFocus\",\n    value: function toggleCurrentElementActiveFocus(focused) {\n      if (this.focusedIndex === -1) {\n        return;\n      }\n      this.toggleElementActiveFocus(this.elements[this.focusedIndex], focused);\n    }\n  }, {\n    key: \"toggleElementActiveFocus\",\n    value: function toggleElementActiveFocus(element, focused) {\n      // active focus is set when sticky scroll has focus\n      element.classList.toggle('focused', focused);\n    }\n  }, {\n    key: \"toggleElementPassiveFocus\",\n    value: function toggleElementPassiveFocus(element, focused) {\n      // passive focus allows to show focus when sticky scroll does not have focus\n      // for example when the context menu has focus\n      element.classList.toggle('passive-focused', focused);\n    }\n  }, {\n    key: \"toggleStickyScrollFocused\",\n    value: function toggleStickyScrollFocused(focused) {\n      // Weather the last focus in the view was sticky scroll and not the list\n      // Is only removed when the focus is back in the tree an no longer in sticky scroll\n      this.view.getHTMLElement().classList.toggle('sticky-scroll-focused', focused);\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      if (!this.state || this.elements.length === 0) {\n        throw new Error('Cannot focus when state is undefined or elements are empty');\n      }\n      this.domHasFocus = true;\n      this.toggleStickyScrollFocused(true);\n      this.toggleCurrentElementActiveFocus(true);\n      if (this.focusedIndex === -1) {\n        this.setFocus(0);\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.domHasFocus = false;\n      this.toggleCurrentElementActiveFocus(false);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.toggleStickyScrollFocused(false);\n      this._onDidChangeHasFocus.fire(false);\n      _get(_getPrototypeOf(StickyScrollFocus.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n}(Disposable);\nfunction asTreeMouseEvent(event) {\n  var target = TreeMouseEventTarget.Unknown;\n  if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Twistie;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Element;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n    target = TreeMouseEventTarget.Filter;\n  }\n  return {\n    browserEvent: event.browserEvent,\n    element: event.element ? event.element.element : null,\n    target: target\n  };\n}\nfunction asTreeContextMenuEvent(event) {\n  var isStickyScroll = isStickyScrollContainer(event.browserEvent.target);\n  return {\n    element: event.element ? event.element.element : null,\n    browserEvent: event.browserEvent,\n    anchor: event.anchor,\n    isStickyScroll: isStickyScroll\n  };\n}\nfunction dfs(node, fn) {\n  fn(node);\n  node.children.forEach(function (child) {\n    return dfs(child, fn);\n  });\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nvar Trait = /*#__PURE__*/function () {\n  function Trait(getFirstViewElementWithTrait, identityProvider) {\n    _classCallCheck(this, Trait);\n    this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n    this.identityProvider = identityProvider;\n    this.nodes = [];\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n  }\n  return _createClass(Trait, [{\n    key: \"nodeSet\",\n    get: function get() {\n      if (!this._nodeSet) {\n        this._nodeSet = this.createNodeSet();\n      }\n      return this._nodeSet;\n    }\n  }, {\n    key: \"set\",\n    value: function set(nodes, browserEvent) {\n      if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n        return;\n      }\n      this._set(nodes, false, browserEvent);\n    }\n  }, {\n    key: \"_set\",\n    value: function _set(nodes, silent, browserEvent) {\n      this.nodes = _toConsumableArray(nodes);\n      this.elements = undefined;\n      this._nodeSet = undefined;\n      if (!silent) {\n        var that = this;\n        this._onDidChange.fire({\n          get elements() {\n            return that.get();\n          },\n          browserEvent: browserEvent\n        });\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      if (!this.elements) {\n        this.elements = this.nodes.map(function (node) {\n          return node.element;\n        });\n      }\n      return _toConsumableArray(this.elements);\n    }\n  }, {\n    key: \"getNodes\",\n    value: function getNodes() {\n      return this.nodes;\n    }\n  }, {\n    key: \"has\",\n    value: function has(node) {\n      return this.nodeSet.has(node);\n    }\n  }, {\n    key: \"onDidModelSplice\",\n    value: function onDidModelSplice(_ref2) {\n      var _this9 = this;\n      var insertedNodes = _ref2.insertedNodes,\n        deletedNodes = _ref2.deletedNodes;\n      if (!this.identityProvider) {\n        var set = this.createNodeSet();\n        var visit = function visit(node) {\n          return set[\"delete\"](node);\n        };\n        deletedNodes.forEach(function (node) {\n          return dfs(node, visit);\n        });\n        this.set(_toConsumableArray(set.values()));\n        return;\n      }\n      var deletedNodesIdSet = new Set();\n      var deletedNodesVisitor = function deletedNodesVisitor(node) {\n        return deletedNodesIdSet.add(_this9.identityProvider.getId(node.element).toString());\n      };\n      deletedNodes.forEach(function (node) {\n        return dfs(node, deletedNodesVisitor);\n      });\n      var insertedNodesMap = new Map();\n      var insertedNodesVisitor = function insertedNodesVisitor(node) {\n        return insertedNodesMap.set(_this9.identityProvider.getId(node.element).toString(), node);\n      };\n      insertedNodes.forEach(function (node) {\n        return dfs(node, insertedNodesVisitor);\n      });\n      var nodes = [];\n      var _iterator4 = _createForOfIteratorHelper(this.nodes),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _node2 = _step4.value;\n          var id = this.identityProvider.getId(_node2.element).toString();\n          var wasDeleted = deletedNodesIdSet.has(id);\n          if (!wasDeleted) {\n            nodes.push(_node2);\n          } else {\n            var insertedNode = insertedNodesMap.get(id);\n            if (insertedNode && insertedNode.visible) {\n              nodes.push(insertedNode);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (this.nodes.length > 0 && nodes.length === 0) {\n        var node = this.getFirstViewElementWithTrait();\n        if (node) {\n          nodes.push(node);\n        }\n      }\n      this._set(nodes, true);\n    }\n  }, {\n    key: \"createNodeSet\",\n    value: function createNodeSet() {\n      var set = new Set();\n      var _iterator5 = _createForOfIteratorHelper(this.nodes),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var node = _step5.value;\n          set.add(node);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return set;\n    }\n  }]);\n}();\nvar TreeNodeListMouseController = /*#__PURE__*/function (_MouseController) {\n  function TreeNodeListMouseController(list, tree, stickyScrollProvider) {\n    var _this10;\n    _classCallCheck(this, TreeNodeListMouseController);\n    _this10 = _callSuper(this, TreeNodeListMouseController, [list]);\n    _this10.tree = tree;\n    _this10.stickyScrollProvider = stickyScrollProvider;\n    return _this10;\n  }\n  _inherits(TreeNodeListMouseController, _MouseController);\n  return _createClass(TreeNodeListMouseController, [{\n    key: \"onViewPointer\",\n    value: function onViewPointer(e) {\n      if (isButton(e.browserEvent.target) || isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\n        return;\n      }\n      if (e.browserEvent.isHandledByList) {\n        return;\n      }\n      var node = e.element;\n      if (!node) {\n        return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n      }\n      if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n        return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n      }\n      var target = e.browserEvent.target;\n      var onTwistie = target.classList.contains('monaco-tl-twistie') || target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16;\n      var isStickyElement = isStickyScrollElement(e.browserEvent.target);\n      var expandOnlyOnTwistieClick = false;\n      if (isStickyElement) {\n        expandOnlyOnTwistieClick = true;\n      } else if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n        expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n      } else {\n        expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n      }\n      if (!isStickyElement) {\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n          return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n        }\n        if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n          return _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n        }\n      } else {\n        this.handleStickyScrollMouseEvent(e, node);\n      }\n      if (node.collapsible && (!isStickyElement || onTwistie)) {\n        var location = this.tree.getNodeLocation(node);\n        var recursive = e.browserEvent.altKey;\n        this.tree.setFocus([location]);\n        this.tree.toggleCollapsed(location, recursive);\n        if (expandOnlyOnTwistieClick && onTwistie) {\n          // Do not set this before calling a handler on the super class, because it will reject it as handled\n          e.browserEvent.isHandledByList = true;\n          return;\n        }\n      }\n      if (!isStickyElement) {\n        _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onViewPointer\", this).call(this, e);\n      }\n    }\n  }, {\n    key: \"handleStickyScrollMouseEvent\",\n    value: function handleStickyScrollMouseEvent(e, node) {\n      if (isMonacoCustomToggle(e.browserEvent.target) || isActionItem(e.browserEvent.target)) {\n        return;\n      }\n      var stickyScrollController = this.stickyScrollProvider();\n      if (!stickyScrollController) {\n        throw new Error('Sticky scroll controller not found');\n      }\n      var nodeIndex = this.list.indexOf(node);\n      var elementScrollTop = this.list.getElementTop(nodeIndex);\n      var elementTargetViewTop = stickyScrollController.nodePositionTopBelowWidget(node);\n      this.tree.scrollTop = elementScrollTop - elementTargetViewTop;\n      this.list.domFocus();\n      this.list.setFocus([nodeIndex]);\n      this.list.setSelection([nodeIndex]);\n    }\n  }, {\n    key: \"onDoubleClick\",\n    value: function onDoubleClick(e) {\n      var onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n      if (onTwistie || !this.tree.expandOnDoubleClick) {\n        return;\n      }\n      if (e.browserEvent.isHandledByList) {\n        return;\n      }\n      _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onDoubleClick\", this).call(this, e);\n    }\n    // to make sure dom focus is not stolen (for example with context menu)\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(e) {\n      var target = e.browserEvent.target;\n      if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n        _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onMouseDown\", this).call(this, e);\n        return;\n      }\n    }\n  }, {\n    key: \"onContextMenu\",\n    value: function onContextMenu(e) {\n      var target = e.browserEvent.target;\n      if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n        _get(_getPrototypeOf(TreeNodeListMouseController.prototype), \"onContextMenu\", this).call(this, e);\n        return;\n      }\n    }\n  }]);\n}(MouseController);\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nvar TreeNodeList = /*#__PURE__*/function (_List) {\n  function TreeNodeList(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n    var _this11;\n    _classCallCheck(this, TreeNodeList);\n    _this11 = _callSuper(this, TreeNodeList, [user, container, virtualDelegate, renderers, options]);\n    _this11.focusTrait = focusTrait;\n    _this11.selectionTrait = selectionTrait;\n    _this11.anchorTrait = anchorTrait;\n    return _this11;\n  }\n  _inherits(TreeNodeList, _List);\n  return _createClass(TreeNodeList, [{\n    key: \"createMouseController\",\n    value: function createMouseController(options) {\n      return new TreeNodeListMouseController(this, options.tree, options.stickyScrollProvider);\n    }\n  }, {\n    key: \"splice\",\n    value: function splice(start, deleteCount) {\n      var _this12 = this;\n      var elements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      _get(_getPrototypeOf(TreeNodeList.prototype), \"splice\", this).call(this, start, deleteCount, elements);\n      if (elements.length === 0) {\n        return;\n      }\n      var additionalFocus = [];\n      var additionalSelection = [];\n      var anchor;\n      elements.forEach(function (node, index) {\n        if (_this12.focusTrait.has(node)) {\n          additionalFocus.push(start + index);\n        }\n        if (_this12.selectionTrait.has(node)) {\n          additionalSelection.push(start + index);\n        }\n        if (_this12.anchorTrait.has(node)) {\n          anchor = start + index;\n        }\n      });\n      if (additionalFocus.length > 0) {\n        _get(_getPrototypeOf(TreeNodeList.prototype), \"setFocus\", this).call(this, distinct([].concat(_toConsumableArray(_get(_getPrototypeOf(TreeNodeList.prototype), \"getFocus\", this).call(this)), additionalFocus)));\n      }\n      if (additionalSelection.length > 0) {\n        _get(_getPrototypeOf(TreeNodeList.prototype), \"setSelection\", this).call(this, distinct([].concat(_toConsumableArray(_get(_getPrototypeOf(TreeNodeList.prototype), \"getSelection\", this).call(this)), additionalSelection)));\n      }\n      if (typeof anchor === 'number') {\n        _get(_getPrototypeOf(TreeNodeList.prototype), \"setAnchor\", this).call(this, anchor);\n      }\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(indexes, browserEvent) {\n      var _this13 = this;\n      var fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      _get(_getPrototypeOf(TreeNodeList.prototype), \"setFocus\", this).call(this, indexes, browserEvent);\n      if (!fromAPI) {\n        this.focusTrait.set(indexes.map(function (i) {\n          return _this13.element(i);\n        }), browserEvent);\n      }\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(indexes, browserEvent) {\n      var _this14 = this;\n      var fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      _get(_getPrototypeOf(TreeNodeList.prototype), \"setSelection\", this).call(this, indexes, browserEvent);\n      if (!fromAPI) {\n        this.selectionTrait.set(indexes.map(function (i) {\n          return _this14.element(i);\n        }), browserEvent);\n      }\n    }\n  }, {\n    key: \"setAnchor\",\n    value: function setAnchor(index) {\n      var fromAPI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      _get(_getPrototypeOf(TreeNodeList.prototype), \"setAnchor\", this).call(this, index);\n      if (!fromAPI) {\n        if (typeof index === 'undefined') {\n          this.anchorTrait.set([]);\n        } else {\n          this.anchorTrait.set([this.element(index)]);\n        }\n      }\n    }\n  }]);\n}(List);\nexport var AbstractTree = /*#__PURE__*/function () {\n  function AbstractTree(_user, container, delegate, renderers) {\n    var _this15 = this;\n    var _options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    _classCallCheck(this, AbstractTree);\n    var _a;\n    this._user = _user;\n    this._options = _options;\n    this.eventBufferer = new EventBufferer();\n    this.onDidChangeFindOpenState = Event.None;\n    this.onDidChangeStickyScrollFocused = Event.None;\n    this.disposables = new DisposableStore();\n    this._onWillRefilter = new Emitter();\n    this.onWillRefilter = this._onWillRefilter.event;\n    this._onDidUpdateOptions = new Emitter();\n    this.treeDelegate = new ComposedTreeDelegate(delegate);\n    var onDidChangeCollapseStateRelay = new Relay();\n    var onDidChangeActiveNodes = new Relay();\n    var activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n    var renderedIndentGuides = new SetMap();\n    this.renderers = renderers.map(function (r) {\n      return new TreeRenderer(r, function () {\n        return _this15.model;\n      }, onDidChangeCollapseStateRelay.event, activeNodes, renderedIndentGuides, _options);\n    });\n    var _iterator6 = _createForOfIteratorHelper(this.renderers),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var r = _step6.value;\n        this.disposables.add(r);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    var filter;\n    if (_options.keyboardNavigationLabelProvider) {\n      filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n      _options = _objectSpread(_objectSpread({}, _options), {}, {\n        filter: filter\n      }); // TODO need typescript help here\n      this.disposables.add(filter);\n    }\n    this.focus = new Trait(function () {\n      return _this15.view.getFocusedElements()[0];\n    }, _options.identityProvider);\n    this.selection = new Trait(function () {\n      return _this15.view.getSelectedElements()[0];\n    }, _options.identityProvider);\n    this.anchor = new Trait(function () {\n      return _this15.view.getAnchorElement();\n    }, _options.identityProvider);\n    this.view = new TreeNodeList(_user, container, this.treeDelegate, this.renderers, this.focus, this.selection, this.anchor, _objectSpread(_objectSpread({}, asListOptions(function () {\n      return _this15.model;\n    }, _options)), {}, {\n      tree: this,\n      stickyScrollProvider: function stickyScrollProvider() {\n        return _this15.stickyScrollController;\n      }\n    }));\n    this.model = this.createModel(_user, this.view, _options);\n    onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n    var onDidModelSplice = Event.forEach(this.model.onDidSplice, function (e) {\n      _this15.eventBufferer.bufferEvents(function () {\n        _this15.focus.onDidModelSplice(e);\n        _this15.selection.onDidModelSplice(e);\n      });\n    }, this.disposables);\n    // Make sure the `forEach` always runs\n    onDidModelSplice(function () {\n      return null;\n    }, null, this.disposables);\n    // Active nodes can change when the model changes or when focus or selection change.\n    // We debounce it with 0 delay since these events may fire in the same stack and we only\n    // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n    // a nice to have UI feature.\n    var activeNodesEmitter = this.disposables.add(new Emitter());\n    var activeNodesDebounce = this.disposables.add(new Delayer(0));\n    this.disposables.add(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)(function () {\n      activeNodesDebounce.trigger(function () {\n        var set = new Set();\n        var _iterator7 = _createForOfIteratorHelper(_this15.focus.getNodes()),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var node = _step7.value;\n            set.add(node);\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n        var _iterator8 = _createForOfIteratorHelper(_this15.selection.getNodes()),\n          _step8;\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var _node3 = _step8.value;\n            set.add(_node3);\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n        activeNodesEmitter.fire(_toConsumableArray(set.values()));\n      });\n    }));\n    onDidChangeActiveNodes.input = activeNodesEmitter.event;\n    if (_options.keyboardSupport !== false) {\n      var onKeyDown = Event.chain(this.view.onKeyDown, function ($) {\n        return $.filter(function (e) {\n          return !isInputElement(e.target);\n        }).map(function (e) {\n          return new StandardKeyboardEvent(e);\n        });\n      });\n      Event.chain(onKeyDown, function ($) {\n        return $.filter(function (e) {\n          return e.keyCode === 15;\n        } /* KeyCode.LeftArrow */);\n      })(this.onLeftArrow, this, this.disposables);\n      Event.chain(onKeyDown, function ($) {\n        return $.filter(function (e) {\n          return e.keyCode === 17;\n        } /* KeyCode.RightArrow */);\n      })(this.onRightArrow, this, this.disposables);\n      Event.chain(onKeyDown, function ($) {\n        return $.filter(function (e) {\n          return e.keyCode === 10;\n        } /* KeyCode.Space */);\n      })(this.onSpace, this, this.disposables);\n    }\n    if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n      var opts = this.options.findWidgetStyles ? {\n        styles: this.options.findWidgetStyles\n      } : undefined;\n      this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider, opts);\n      this.focusNavigationFilter = function (node) {\n        return _this15.findController.shouldAllowFocus(node);\n      };\n      this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n      this.disposables.add(this.findController);\n      this.onDidChangeFindMode = this.findController.onDidChangeMode;\n      this.onDidChangeFindMatchType = this.findController.onDidChangeMatchType;\n    } else {\n      this.onDidChangeFindMode = Event.None;\n      this.onDidChangeFindMatchType = Event.None;\n    }\n    if (_options.enableStickyScroll) {\n      this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, _options);\n      this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n    }\n    this.styleElement = createStyleSheet(this.view.getHTMLElement());\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n  return _createClass(AbstractTree, [{\n    key: \"onDidScroll\",\n    get: function get() {\n      return this.view.onDidScroll;\n    }\n  }, {\n    key: \"onDidChangeFocus\",\n    get: function get() {\n      return this.eventBufferer.wrapEvent(this.focus.onDidChange);\n    }\n  }, {\n    key: \"onDidChangeSelection\",\n    get: function get() {\n      return this.eventBufferer.wrapEvent(this.selection.onDidChange);\n    }\n  }, {\n    key: \"onMouseDblClick\",\n    get: function get() {\n      return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), function (e) {\n        return e.target !== TreeMouseEventTarget.Filter;\n      });\n    }\n  }, {\n    key: \"onMouseOver\",\n    get: function get() {\n      return Event.map(this.view.onMouseOver, asTreeMouseEvent);\n    }\n  }, {\n    key: \"onMouseOut\",\n    get: function get() {\n      return Event.map(this.view.onMouseOut, asTreeMouseEvent);\n    }\n  }, {\n    key: \"onContextMenu\",\n    get: function get() {\n      var _a, _b;\n      return Event.any(Event.filter(Event.map(this.view.onContextMenu, asTreeContextMenuEvent), function (e) {\n        return !e.isStickyScroll;\n      }), (_b = (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.onContextMenu) !== null && _b !== void 0 ? _b : Event.None);\n    }\n  }, {\n    key: \"onPointer\",\n    get: function get() {\n      return Event.map(this.view.onPointer, asTreeMouseEvent);\n    }\n  }, {\n    key: \"onKeyDown\",\n    get: function get() {\n      return this.view.onKeyDown;\n    }\n  }, {\n    key: \"onDidFocus\",\n    get: function get() {\n      return this.view.onDidFocus;\n    }\n  }, {\n    key: \"onDidChangeModel\",\n    get: function get() {\n      return Event.signal(this.model.onDidSplice);\n    }\n  }, {\n    key: \"onDidChangeCollapseState\",\n    get: function get() {\n      return this.model.onDidChangeCollapseState;\n    }\n  }, {\n    key: \"findMode\",\n    get: function get() {\n      var _a, _b;\n      return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight;\n    },\n    set: function set(findMode) {\n      if (this.findController) {\n        this.findController.mode = findMode;\n      }\n    }\n  }, {\n    key: \"findMatchType\",\n    get: function get() {\n      var _a, _b;\n      return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.matchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy;\n    },\n    set: function set(findFuzzy) {\n      if (this.findController) {\n        this.findController.matchType = findFuzzy;\n      }\n    }\n  }, {\n    key: \"expandOnDoubleClick\",\n    get: function get() {\n      return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick;\n    }\n  }, {\n    key: \"expandOnlyOnTwistieClick\",\n    get: function get() {\n      return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick;\n    }\n  }, {\n    key: \"onDidDispose\",\n    get: function get() {\n      return this.view.onDidDispose;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _a;\n      this._options = _objectSpread(_objectSpread({}, this._options), optionsUpdate);\n      var _iterator9 = _createForOfIteratorHelper(this.renderers),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var renderer = _step9.value;\n          renderer.updateOptions(optionsUpdate);\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      this.view.updateOptions(this._options);\n      (_a = this.findController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n      this.updateStickyScroll(optionsUpdate);\n      this._onDidUpdateOptions.fire(this._options);\n      this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    }\n  }, {\n    key: \"updateStickyScroll\",\n    value: function updateStickyScroll(optionsUpdate) {\n      var _a;\n      if (!this.stickyScrollController && this._options.enableStickyScroll) {\n        this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, this._options);\n        this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n      } else if (this.stickyScrollController && !this._options.enableStickyScroll) {\n        this.onDidChangeStickyScrollFocused = Event.None;\n        this.stickyScrollController.dispose();\n        this.stickyScrollController = undefined;\n      }\n      (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n    }\n    // Widget\n  }, {\n    key: \"getHTMLElement\",\n    value: function getHTMLElement() {\n      return this.view.getHTMLElement();\n    }\n  }, {\n    key: \"scrollTop\",\n    get: function get() {\n      return this.view.scrollTop;\n    },\n    set: function set(scrollTop) {\n      this.view.scrollTop = scrollTop;\n    }\n  }, {\n    key: \"scrollHeight\",\n    get: function get() {\n      return this.view.scrollHeight;\n    }\n  }, {\n    key: \"renderHeight\",\n    get: function get() {\n      return this.view.renderHeight;\n    }\n  }, {\n    key: \"ariaLabel\",\n    get: function get() {\n      return this.view.ariaLabel;\n    },\n    set: function set(value) {\n      this.view.ariaLabel = value;\n    }\n  }, {\n    key: \"domFocus\",\n    value: function domFocus() {\n      var _a;\n      if ((_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.focusedLast()) {\n        this.stickyScrollController.domFocus();\n      } else {\n        this.view.domFocus();\n      }\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(height, width) {\n      var _a;\n      this.view.layout(height, width);\n      if (isNumber(width)) {\n        (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n      }\n    }\n  }, {\n    key: \"style\",\n    value: function style(styles) {\n      var _a;\n      var suffix = \".\".concat(this.view.domId);\n      var content = [];\n      if (styles.treeIndentGuidesStroke) {\n        content.push(\".monaco-list\".concat(suffix, \":hover .monaco-tl-indent > .indent-guide, .monaco-list\").concat(suffix, \".always .monaco-tl-indent > .indent-guide  { border-color: \").concat(styles.treeInactiveIndentGuidesStroke, \"; }\"));\n        content.push(\".monaco-list\".concat(suffix, \" .monaco-tl-indent > .indent-guide.active { border-color: \").concat(styles.treeIndentGuidesStroke, \"; }\"));\n      }\n      // Sticky Scroll Background\n      if (styles.listBackground) {\n        content.push(\".monaco-list\".concat(suffix, \" .monaco-scrollable-element .monaco-tree-sticky-container { background-color: \").concat(styles.listBackground, \"; }\"));\n        content.push(\".monaco-list\".concat(suffix, \" .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-row { background-color: \").concat(styles.listBackground, \"; }\"));\n      }\n      // Sticky Scroll Focus\n      if (styles.listFocusForeground) {\n        content.push(\".monaco-list\".concat(suffix, \".sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { color: \").concat(styles.listFocusForeground, \"; }\"));\n        content.push(\".monaco-list\".concat(suffix, \":not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { color: inherit; }\"));\n      }\n      // Sticky Scroll Focus Outlines\n      var focusAndSelectionOutline = asCssValueWithDefault(styles.listFocusAndSelectionOutline, asCssValueWithDefault(styles.listSelectionOutline, (_a = styles.listFocusOutline) !== null && _a !== void 0 ? _a : ''));\n      if (focusAndSelectionOutline) {\n        // default: listFocusOutline\n        content.push(\".monaco-list\".concat(suffix, \".sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused.selected { outline: 1px solid \").concat(focusAndSelectionOutline, \"; outline-offset: -1px;}\"));\n        content.push(\".monaco-list\".concat(suffix, \":not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused.selected { outline: inherit;}\"));\n      }\n      if (styles.listFocusOutline) {\n        // default: set\n        content.push(\".monaco-list\".concat(suffix, \".sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { outline: 1px solid \").concat(styles.listFocusOutline, \"; outline-offset: -1px; }\"));\n        content.push(\".monaco-list\".concat(suffix, \":not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { outline: inherit; }\"));\n        content.push(\".monaco-workbench.context-menu-visible .monaco-list\".concat(suffix, \".last-focused.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.passive-focused { outline: 1px solid \").concat(styles.listFocusOutline, \"; outline-offset: -1px; }\"));\n        content.push(\".monaco-workbench.context-menu-visible .monaco-list\".concat(suffix, \".last-focused.sticky-scroll-focused .monaco-list-rows .monaco-list-row.focused { outline: inherit; }\"));\n        content.push(\".monaco-workbench.context-menu-visible .monaco-list\".concat(suffix, \".last-focused:not(.sticky-scroll-focused) .monaco-tree-sticky-container .monaco-list-rows .monaco-list-row.focused { outline: inherit; }\"));\n      }\n      this.styleElement.textContent = content.join('\\n');\n      this.view.style(styles);\n    }\n    // Tree navigation\n  }, {\n    key: \"getParentElement\",\n    value: function getParentElement(location) {\n      var parentRef = this.model.getParentNodeLocation(location);\n      var parentNode = this.model.getNode(parentRef);\n      return parentNode.element;\n    }\n  }, {\n    key: \"getFirstElementChild\",\n    value: function getFirstElementChild(location) {\n      return this.model.getFirstElementChild(location);\n    }\n    // Tree\n  }, {\n    key: \"getNode\",\n    value: function getNode(location) {\n      return this.model.getNode(location);\n    }\n  }, {\n    key: \"getNodeLocation\",\n    value: function getNodeLocation(node) {\n      return this.model.getNodeLocation(node);\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(location) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.model.setCollapsed(location, true, recursive);\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(location) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.model.setCollapsed(location, false, recursive);\n    }\n  }, {\n    key: \"toggleCollapsed\",\n    value: function toggleCollapsed(location) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.model.setCollapsed(location, undefined, recursive);\n    }\n  }, {\n    key: \"isCollapsible\",\n    value: function isCollapsible(location) {\n      return this.model.isCollapsible(location);\n    }\n  }, {\n    key: \"setCollapsible\",\n    value: function setCollapsible(location, collapsible) {\n      return this.model.setCollapsible(location, collapsible);\n    }\n  }, {\n    key: \"isCollapsed\",\n    value: function isCollapsed(location) {\n      return this.model.isCollapsed(location);\n    }\n  }, {\n    key: \"refilter\",\n    value: function refilter() {\n      this._onWillRefilter.fire(undefined);\n      this.model.refilter();\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(elements, browserEvent) {\n      var _this16 = this;\n      this.eventBufferer.bufferEvents(function () {\n        var nodes = elements.map(function (e) {\n          return _this16.model.getNode(e);\n        });\n        _this16.selection.set(nodes, browserEvent);\n        var indexes = elements.map(function (e) {\n          return _this16.model.getListIndex(e);\n        }).filter(function (i) {\n          return i > -1;\n        });\n        _this16.view.setSelection(indexes, browserEvent, true);\n      });\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      return this.selection.get();\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(elements, browserEvent) {\n      var _this17 = this;\n      this.eventBufferer.bufferEvents(function () {\n        var nodes = elements.map(function (e) {\n          return _this17.model.getNode(e);\n        });\n        _this17.focus.set(nodes, browserEvent);\n        var indexes = elements.map(function (e) {\n          return _this17.model.getListIndex(e);\n        }).filter(function (i) {\n          return i > -1;\n        });\n        _this17.view.setFocus(indexes, browserEvent, true);\n      });\n    }\n  }, {\n    key: \"focusNext\",\n    value: function focusNext() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var browserEvent = arguments.length > 2 ? arguments[2] : undefined;\n      var filter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : isKeyboardEvent(browserEvent) && browserEvent.altKey ? undefined : this.focusNavigationFilter;\n      this.view.focusNext(n, loop, browserEvent, filter);\n    }\n  }, {\n    key: \"focusPrevious\",\n    value: function focusPrevious() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var browserEvent = arguments.length > 2 ? arguments[2] : undefined;\n      var filter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : isKeyboardEvent(browserEvent) && browserEvent.altKey ? undefined : this.focusNavigationFilter;\n      this.view.focusPrevious(n, loop, browserEvent, filter);\n    }\n  }, {\n    key: \"focusNextPage\",\n    value: function focusNextPage(browserEvent) {\n      var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isKeyboardEvent(browserEvent) && browserEvent.altKey ? undefined : this.focusNavigationFilter;\n      return this.view.focusNextPage(browserEvent, filter);\n    }\n  }, {\n    key: \"focusPreviousPage\",\n    value: function focusPreviousPage(browserEvent) {\n      var _this18 = this;\n      var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isKeyboardEvent(browserEvent) && browserEvent.altKey ? undefined : this.focusNavigationFilter;\n      return this.view.focusPreviousPage(browserEvent, filter, function () {\n        var _a, _b;\n        return (_b = (_a = _this18.stickyScrollController) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n      });\n    }\n  }, {\n    key: \"focusFirst\",\n    value: function focusFirst(browserEvent) {\n      var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isKeyboardEvent(browserEvent) && browserEvent.altKey ? undefined : this.focusNavigationFilter;\n      this.view.focusFirst(browserEvent, filter);\n    }\n  }, {\n    key: \"getFocus\",\n    value: function getFocus() {\n      return this.focus.get();\n    }\n  }, {\n    key: \"reveal\",\n    value: function reveal(location, relativeTop) {\n      this.model.expandTo(location);\n      var index = this.model.getListIndex(location);\n      if (index === -1) {\n        return;\n      }\n      if (!this.stickyScrollController) {\n        this.view.reveal(index, relativeTop);\n      } else {\n        var paddingTop = this.stickyScrollController.nodePositionTopBelowWidget(this.getNode(location));\n        this.view.reveal(index, relativeTop, paddingTop);\n      }\n    }\n    // List\n  }, {\n    key: \"onLeftArrow\",\n    value: function onLeftArrow(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var nodes = this.view.getFocusedElements();\n      if (nodes.length === 0) {\n        return;\n      }\n      var node = nodes[0];\n      var location = this.model.getNodeLocation(node);\n      var didChange = this.model.setCollapsed(location, true);\n      if (!didChange) {\n        var parentLocation = this.model.getParentNodeLocation(location);\n        if (!parentLocation) {\n          return;\n        }\n        var parentListIndex = this.model.getListIndex(parentLocation);\n        this.view.reveal(parentListIndex);\n        this.view.setFocus([parentListIndex]);\n      }\n    }\n  }, {\n    key: \"onRightArrow\",\n    value: function onRightArrow(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var nodes = this.view.getFocusedElements();\n      if (nodes.length === 0) {\n        return;\n      }\n      var node = nodes[0];\n      var location = this.model.getNodeLocation(node);\n      var didChange = this.model.setCollapsed(location, false);\n      if (!didChange) {\n        if (!node.children.some(function (child) {\n          return child.visible;\n        })) {\n          return;\n        }\n        var _this$view$getFocus = this.view.getFocus(),\n          _this$view$getFocus2 = _slicedToArray(_this$view$getFocus, 1),\n          focusedIndex = _this$view$getFocus2[0];\n        var firstChildIndex = focusedIndex + 1;\n        this.view.reveal(firstChildIndex);\n        this.view.setFocus([firstChildIndex]);\n      }\n    }\n  }, {\n    key: \"onSpace\",\n    value: function onSpace(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var nodes = this.view.getFocusedElements();\n      if (nodes.length === 0) {\n        return;\n      }\n      var node = nodes[0];\n      var location = this.model.getNodeLocation(node);\n      var recursive = e.browserEvent.altKey;\n      this.model.setCollapsed(location, undefined, recursive);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _a;\n      _dispose(this.disposables);\n      (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.view.dispose();\n    }\n  }]);\n}();","map":{"version":3,"names":["$","append","clearNode","createStyleSheet","getWindow","h","hasParentWithClass","asCssValueWithDefault","isKeyboardEvent","DomEmitter","StandardKeyboardEvent","ActionBar","FindInput","unthemedInboxStyles","ElementsDragAndDropData","isActionItem","isButton","isInputElement","isMonacoCustomToggle","isMonacoEditor","isStickyScrollContainer","isStickyScrollElement","List","MouseController","Toggle","unthemedToggleStyles","getVisibleState","isFilterResult","TreeMouseEventTarget","Action","distinct","equals","range","Delayer","disposableTimeout","timeout","Codicon","ThemeIcon","SetMap","Emitter","Event","EventBufferer","Relay","fuzzyScore","FuzzyScore","Disposable","DisposableStore","dispose","toDisposable","clamp","isNumber","localize","createInstantHoverDelegate","getDefaultHoverDelegate","autorun","constObservable","TreeElementsDragAndDropData","_ElementsDragAndDropD","data","_this","_classCallCheck","_callSuper","elements","map","node","element","_inherits","_createClass","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","None","disposables","key","value","getDragURI","getDragLabel","nodes","originalEvent","undefined","onDragStart","_a","_b","call","onDragOver","targetNode","targetIndex","targetSector","_this2","raw","arguments","length","result","didChangeAutoExpandNode","autoExpandNode","autoExpand","model","ref","getNodeLocation","isCollapsed","setCollapsed","accept","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","start","getListRenderCount","_objectSpread","drop","onDragEnd","asListOptions","options","identityProvider","getId","el","multipleSelectionController","isSelectionSingleChangeEvent","e","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","isChecked","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","ComposedTreeDelegate","delegate","getHeight","getTemplateId","hasDynamicHeight","setDynamicHeight","height","RenderIndentGuides","EventCollection","onDidChange","_this3","_elements","forEach","get","TreeRenderer","renderer","onDidChangeCollapseState","activeNodes","renderedIndentGuides","renderedElements","Map","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","activeIndentNodes","Set","indentGuidesDisposable","templateId","updateOptions","onDidChangeNodeTwistieState","onDidChangeTwistieState","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","templateData","renderTreeElement","err","f","renderIndentGuides","_iterator2","_step2","_step2$value","_renderIndentGuides","_onDidChangeActiveNodes","renderTemplate","container","twistie","contents","renderElement","index","set","disposeElement","disposeTemplate","_templateData$twistie","style","paddingLeft","concat","width","collapsible","setAttribute","String","collapsed","removeAttribute","classList","remove","apply","_toConsumableArray","asClassNameArray","treeItemExpanded","twistieRendered","renderTwistie","_templateData$twistie2","add","toggle","_this4","disposableStore","_loop","parent","guide","has","childElementCount","appendChild","insertBefore","firstElementChild","_this5","children","line","clear","FindFilter","tree","_filter","_totalCount","_matchCount","_pattern","_lowercasePattern","onWillRefilter","reset","filter","parentVisibility","visibility","Default","label","labels","Array","isArray","_iterator3","_step3","l","labelStr","toString","score","findMatchType","TreeFindMatchType","Contiguous","toLowerCase","indexOf","Number","MAX_SAFE_INTEGER","i","push","firstMatchCanBeWeak","boostFullMatch","findMode","TreeFindMode","Filter","defaultFindVisibility","ModeToggle","_Toggle","opts","icon","listFilter","title","hoverDelegate","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","FuzzyToggle","_Toggle2","searchFuzzy","unthemedFindWidgetStyles","inputBoxStyles","toggleStyles","listFilterWidgetBackground","listFilterWidgetNoMatchesOutline","listFilterWidgetOutline","listFilterWidgetShadow","FindWidget","_Disposable","contextViewProvider","mode","matchType","_this6","tabIndex","right","top","_onDidDisable","root","_register","removeChild","styles","backgroundColor","boxShadow","toggleHoverDelegate","modeToggle","matchTypeToggle","Fuzzy","onDidChangeMode","onChange","checked","Highlight","_store","onDidChangeMatchType","findInput","additionalToggles","showCommonFindToggles","history","actionbar","emitter","inputBox","inputElement","onKeyDown","chain","event","preventDefault","stopPropagation","addToHistory","domFocus","isAtLastInHistory","isNowhereInHistory","showNextValue","showPreviousValue","closeAction","onGrabMouseDown","grab","onWindowMouseMove","onWindowMouseUp","startRight","startX","pageX","startTop","startY","pageY","transition","update","deltaX","deltaY","layout","onGrabKeyDown","keyCode","POSITIVE_INFINITY","setTimeout","onDidChangeValue","setPlaceHolder","Math","max","showMessage","message","clearMessage","_dispose2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","fire","_get","_getPrototypeOf","prototype","stop","FindController","view","_onDidChangeMode","_onDidChangeMatchType","_onDidChangePattern","_onDidChangeOpenState","onDidChangeOpenState","enabledDisposables","_mode","defaultFindMode","_matchType","defaultFindMatchType","onDidSplice","onDidSpliceModel","widget","refilter","render","optionsUpdate","pattern","_c","_d","noMatches","totalCount","matchCount","showNotFoundMessage","type","content","shouldAllowFocus","isDefault","filterData","_history","stickyScrollNodeStateEquals","node1","node2","position","stickyScrollNodeEquals","startIndex","endIndex","StickyScrollState","stickyNodes","equal","state","lastNodePartiallyVisible","count","lastStickyNode","secondLastStickyNode","animationStateChanged","previousState","previousLastStickyNode","DefaultStickyScrollDelegate","constrainStickyScrollNodes","stickyScrollMaxItemCount","maxWidgetHeight","stickyNode","stickyNodeBottom","slice","StickyScrollController","_Disposable2","renderers","treeDelegate","_this7","maxWidgetViewRatio","stickyScrollOptions","validateStickySettings","stickyScrollDelegate","_widget","StickyScrollWidget","getScrollableElement","onDidChangeHasFocus","onContextMenu","onDidScroll","onDidChangeContentHeight","getNodeAtHeight","firstVisibleIndex","indexAt","scrollTop","firstVisibleNode","setState","stickyState","findStickyState","firstVisibleNodeUnderWidget","stickyNodesHeight","nextStickyNode","getNextStickyNode","getNextVisibleNode","contrainedStickyNodes","constrainStickyNodes","previousStickyNode","getAncestorUnderPrevious","nodeIsUncollapsedParent","nodeTopAlignsWithStickyNodesBottom","createStickyScrollNode","nodeIndex","getNodeIndex","elementTop","getElementTop","stickyPosition","currentStickyNodesHeight","_this$getNodeRange","getNodeRange","calculateStickyNodePosition","previousAncestor","currentAncestor","parentOfcurrentAncestor","getParentNode","lastDescendantIndex","stickyRowPositionTop","stickyNodeHeight","lastChildRelativeTop","getRelativeTop","nodeHeight","nextNodeRelativeTop","renderHeight","lastChildNode","lastChildHeight","topOfLastChild","bottomOfLastChild","maximumStickyWidgetHeight","constrainedStickyNodes","lastConstrainedStickyNode","Error","nodeLocation","parentLocation","renderCount","nodePositionTopBelowWidget","ancestors","widgetHeight","focusedLast","validatedOptions","treeRenderers","_previousElements","_previousStateDisposables","_rootDomNode","shadow","stickyScrollFocus","StickyScrollFocus","_previousState","lastElement","wasVisible","isVisible","setVisible","stickyIndex","_this$createElement","createElement","disposable","updateElements","stickyNodesTotal","stickyElement","document","setRowHeight","setRowLineHeight","lineHeight","getElementID","accessibilityDisposable","setAccessibilityAttributes","nodeTemplateId","find","nodeCopy","Proxy","ariaLabel","observable","reader","readObservable","ariaLevel","visible","_Disposable3","_this8","focusedIndex","_onDidChangeHasFocus","_onContextMenu","_domHasFocus","addEventListener","onFocus","onBlur","onDidFocus","toggleStickyScrollFocused","onMouseDown","handleContextMenu","hasFocus","target","browserEvent","findIndex","focus","setFocus","anchor","isStickyScroll","domHasFocus","setFocusedElement","nodeIndexToFocus","scrollNodeUnderWidget","previousIndex","removeFocus","newFocusedIndex","elementScrollTop","elementTargetViewTop","getHTMLElement","contains","toggleElementFocus","newFocusIndex","oldIndex","focused","toggleElementActiveFocus","toggleElementPassiveFocus","toggleCurrentElementActiveFocus","asTreeMouseEvent","Unknown","Twistie","Element","asTreeContextMenuEvent","dfs","fn","child","Trait","getFirstViewElementWithTrait","_onDidChange","_nodeSet","createNodeSet","__forceEvent","_set","silent","that","getNodes","nodeSet","onDidModelSplice","_ref2","_this9","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","_iterator4","_step4","id","wasDeleted","insertedNode","_iterator5","_step5","TreeNodeListMouseController","_MouseController","list","stickyScrollProvider","_this10","onViewPointer","isHandledByList","onTwistie","offsetX","isStickyElement","expandOnlyOnTwistieClick","detail","expandOnDoubleClick","handleStickyScrollMouseEvent","location","recursive","altKey","toggleCollapsed","stickyScrollController","setSelection","onDoubleClick","TreeNodeList","_List","user","virtualDelegate","focusTrait","selectionTrait","anchorTrait","_this11","createMouseController","splice","deleteCount","_this12","additionalFocus","additionalSelection","indexes","_this13","fromAPI","_this14","setAnchor","AbstractTree","_user","_this15","_options","eventBufferer","onDidChangeFindOpenState","onDidChangeStickyScrollFocused","_onWillRefilter","_onDidUpdateOptions","onDidChangeCollapseStateRelay","onDidChangeActiveNodes","r","_iterator6","_step6","getFocusedElements","selection","getSelectedElements","getAnchorElement","createModel","input","bufferEvents","activeNodesEmitter","activeNodesDebounce","any","trigger","_iterator7","_step7","_iterator8","_step8","keyboardSupport","onLeftArrow","onRightArrow","onSpace","findWidgetEnabled","findWidgetStyles","findController","focusNavigationFilter","onDidChangeFindMode","onDidChangeFindMatchType","enableStickyScroll","styleElement","Always","wrapEvent","onMouseDblClick","onMouseOver","onMouseOut","onPointer","signal","findFuzzy","onDidDispose","_iterator9","_step9","updateStickyScroll","scrollHeight","suffix","domId","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","listBackground","listFocusForeground","focusAndSelectionOutline","listFocusAndSelectionOutline","listSelectionOutline","listFocusOutline","textContent","join","getParentElement","getFirstElementChild","collapse","expand","isCollapsible","setCollapsible","_this16","getSelection","_this17","focusNext","loop","focusPrevious","focusNextPage","focusPreviousPage","_this18","focusFirst","getFocus","reveal","relativeTop","expandTo","paddingTop","didChange","parentListIndex","some","_this$view$getFocus","_this$view$getFocus2","firstChildIndex"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append, clearNode, createStyleSheet, getWindow, h, hasParentWithClass, asCssValueWithDefault, isKeyboardEvent } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { unthemedInboxStyles } from '../inputbox/inputBox.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isActionItem, isButton, isInputElement, isMonacoCustomToggle, isMonacoEditor, isStickyScrollContainer, isStickyScrollElement, List, MouseController } from '../list/listWidget.js';\nimport { Toggle, unthemedToggleStyles } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { Delayer, disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { SetMap } from '../../../common/map.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { autorun, constObservable } from '../../../common/observable.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, targetSector, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500, this.disposables);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, targetSector, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return { ...result, feedback: range(start, start + length) };\n    }\n    drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n    dispose() {\n        this.disposables.dispose();\n        this.dnd.dispose();\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && {\n        ...options,\n        identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        },\n        dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n        multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent({ ...e, element: e.element });\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent({ ...e, element: e.element });\n            }\n        },\n        accessibilityProvider: options.accessibilityProvider && {\n            ...options.accessibilityProvider,\n            getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            },\n            isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined,\n            getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem',\n            getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            },\n            getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n            getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            },\n            getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            })\n        },\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            ...options.keyboardNavigationLabelProvider,\n            getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            }\n        }\n    };\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        var _a, _b;\n        (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    get elements() {\n        return this._elements;\n    }\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.disposables = new DisposableStore();\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nexport class TreeRenderer {\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, renderedIndentGuides, options = {}) {\n        var _a;\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedIndentGuides = renderedIndentGuides;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            const indent = clamp(options.indent, 0, 40);\n            if (indent !== this.indent) {\n                this.indent = indent;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this.renderTreeElement(node, templateData);\n                }\n            }\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this._renderIndentGuides(node, templateData);\n                }\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderedNodes.set(node, templateData);\n        this.renderedElements.set(node.element, node);\n        this.renderTreeElement(node, templateData);\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        templateData.indentGuidesDisposable.dispose();\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const templateData = this.renderedNodes.get(node);\n        if (!templateData) {\n            return;\n        }\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderTreeElement(node, templateData);\n    }\n    renderTreeElement(node, templateData) {\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n        templateData.twistie.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        this._renderIndentGuides(node, templateData);\n    }\n    _renderIndentGuides(node, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch (_a) {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    filter(element, parentVisibility) {\n        let visibility = 1 /* TreeVisibility.Visible */;\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (!this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility };\n            }\n            let score;\n            if (this.tree.findMatchType === TreeFindMatchType.Contiguous) {\n                const index = labelStr.toLowerCase().indexOf(this._lowercasePattern);\n                if (index > -1) {\n                    score = [Number.MAX_SAFE_INTEGER, 0];\n                    for (let i = this._lowercasePattern.length; i > 0; i--) {\n                        score.push(index + i - 1);\n                    }\n                }\n            }\n            else {\n                score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n            }\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility } :\n                    { data: { label: labelStr, score: score }, visibility };\n            }\n        }\n        if (this.tree.findMode === TreeFindMode.Filter) {\n            if (typeof this.tree.options.defaultFindVisibility === 'number') {\n                return this.tree.options.defaultFindVisibility;\n            }\n            else if (this.tree.options.defaultFindVisibility) {\n                return this.tree.options.defaultFindVisibility(element);\n            }\n            else {\n                return 2 /* TreeVisibility.Recurse */;\n            }\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nexport class ModeToggle extends Toggle {\n    constructor(opts) {\n        var _a, _b;\n        super({\n            icon: Codicon.listFilter,\n            title: localize('filter', \"Filter\"),\n            isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            hoverDelegate: (_b = opts.hoverDelegate) !== null && _b !== void 0 ? _b : getDefaultHoverDelegate('element'),\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nexport class FuzzyToggle extends Toggle {\n    constructor(opts) {\n        var _a, _b;\n        super({\n            icon: Codicon.searchFuzzy,\n            title: localize('fuzzySearch', \"Fuzzy Match\"),\n            isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            hoverDelegate: (_b = opts.hoverDelegate) !== null && _b !== void 0 ? _b : getDefaultHoverDelegate('element'),\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nconst unthemedFindWidgetStyles = {\n    inputBoxStyles: unthemedInboxStyles,\n    toggleStyles: unthemedToggleStyles,\n    listFilterWidgetBackground: undefined,\n    listFilterWidgetNoMatchesOutline: undefined,\n    listFilterWidgetOutline: undefined,\n    listFilterWidgetShadow: undefined\n};\nexport var TreeFindMode;\n(function (TreeFindMode) {\n    TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n    TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nexport var TreeFindMatchType;\n(function (TreeFindMatchType) {\n    TreeFindMatchType[TreeFindMatchType[\"Fuzzy\"] = 0] = \"Fuzzy\";\n    TreeFindMatchType[TreeFindMatchType[\"Contiguous\"] = 1] = \"Contiguous\";\n})(TreeFindMatchType || (TreeFindMatchType = {}));\nclass FindWidget extends Disposable {\n    set mode(mode) {\n        this.modeToggle.checked = mode === TreeFindMode.Filter;\n        this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n    set matchType(matchType) {\n        this.matchTypeToggle.checked = matchType === TreeFindMatchType.Fuzzy;\n    }\n    constructor(container, tree, contextViewProvider, mode, matchType, options) {\n        var _a;\n        super();\n        this.tree = tree;\n        this.elements = h('.monaco-tree-type-filter', [\n            h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', { tabIndex: 0 }),\n            h('.monaco-tree-type-filter-input@findInput'),\n            h('.monaco-tree-type-filter-actionbar@actionbar'),\n        ]);\n        this.width = 0;\n        this.right = 0;\n        this.top = 0;\n        this._onDidDisable = new Emitter();\n        container.appendChild(this.elements.root);\n        this._register(toDisposable(() => container.removeChild(this.elements.root)));\n        const styles = (_a = options === null || options === void 0 ? void 0 : options.styles) !== null && _a !== void 0 ? _a : unthemedFindWidgetStyles;\n        if (styles.listFilterWidgetBackground) {\n            this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground;\n        }\n        if (styles.listFilterWidgetShadow) {\n            this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n        }\n        const toggleHoverDelegate = this._register(createInstantHoverDelegate());\n        this.modeToggle = this._register(new ModeToggle({ ...styles.toggleStyles, isChecked: mode === TreeFindMode.Filter, hoverDelegate: toggleHoverDelegate }));\n        this.matchTypeToggle = this._register(new FuzzyToggle({ ...styles.toggleStyles, isChecked: matchType === TreeFindMatchType.Fuzzy, hoverDelegate: toggleHoverDelegate }));\n        this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n        this.onDidChangeMatchType = Event.map(this.matchTypeToggle.onChange, () => this.matchTypeToggle.checked ? TreeFindMatchType.Fuzzy : TreeFindMatchType.Contiguous, this._store);\n        this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, {\n            label: localize('type to search', \"Type to search\"),\n            additionalToggles: [this.modeToggle, this.matchTypeToggle],\n            showCommonFindToggles: false,\n            inputBoxStyles: styles.inputBoxStyles,\n            toggleStyles: styles.toggleStyles,\n            history: options === null || options === void 0 ? void 0 : options.history\n        }));\n        this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n        this.mode = mode;\n        const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n        const onKeyDown = Event.chain(emitter.event, $ => $.map(e => new StandardKeyboardEvent(e)));\n        this._register(onKeyDown((e) => {\n            // Using equals() so we reserve modified keys for future use\n            if (e.equals(3 /* KeyCode.Enter */)) {\n                // This is the only keyboard way to return to the tree from a history item that isn't the last one\n                e.preventDefault();\n                e.stopPropagation();\n                this.findInput.inputBox.addToHistory();\n                this.tree.domFocus();\n                return;\n            }\n            if (e.equals(18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (this.findInput.inputBox.isAtLastInHistory() || this.findInput.inputBox.isNowhereInHistory()) {\n                    // Retain original pre-history DownArrow behavior\n                    this.findInput.inputBox.addToHistory();\n                    this.tree.domFocus();\n                }\n                else {\n                    // Downward through history\n                    this.findInput.inputBox.showNextValue();\n                }\n                return;\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                // Upward through history\n                this.findInput.inputBox.showPreviousValue();\n                return;\n            }\n        }));\n        const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n        this.actionbar.push(closeAction, { icon: true, label: false });\n        const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n        this._register(onGrabMouseDown.event(e => {\n            const disposables = new DisposableStore();\n            const onWindowMouseMove = disposables.add(new DomEmitter(getWindow(e), 'mousemove'));\n            const onWindowMouseUp = disposables.add(new DomEmitter(getWindow(e), 'mouseup'));\n            const startRight = this.right;\n            const startX = e.pageX;\n            const startTop = this.top;\n            const startY = e.pageY;\n            this.elements.grab.classList.add('grabbing');\n            const transition = this.elements.root.style.transition;\n            this.elements.root.style.transition = 'unset';\n            const update = (e) => {\n                const deltaX = e.pageX - startX;\n                this.right = startRight - deltaX;\n                const deltaY = e.pageY - startY;\n                this.top = startTop + deltaY;\n                this.layout();\n            };\n            disposables.add(onWindowMouseMove.event(update));\n            disposables.add(onWindowMouseUp.event(e => {\n                update(e);\n                this.elements.grab.classList.remove('grabbing');\n                this.elements.root.style.transition = transition;\n                disposables.dispose();\n            }));\n        }));\n        const onGrabKeyDown = Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event, $ => $.map(e => new StandardKeyboardEvent(e)));\n        this._register(onGrabKeyDown((e) => {\n            let right;\n            let top;\n            if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n                right = Number.POSITIVE_INFINITY;\n            }\n            else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n                right = 0;\n            }\n            else if (e.keyCode === 10 /* KeyCode.Space */) {\n                right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n            }\n            if (e.keyCode === 16 /* KeyCode.UpArrow */) {\n                top = 0;\n            }\n            else if (e.keyCode === 18 /* KeyCode.DownArrow */) {\n                top = Number.POSITIVE_INFINITY;\n            }\n            if (right !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.right = right;\n                this.layout();\n            }\n            if (top !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.top = top;\n                const transition = this.elements.root.style.transition;\n                this.elements.root.style.transition = 'unset';\n                this.layout();\n                setTimeout(() => {\n                    this.elements.root.style.transition = transition;\n                }, 0);\n            }\n        }));\n        this.onDidChangeValue = this.findInput.onDidChange;\n    }\n    layout(width = this.width) {\n        this.width = width;\n        this.right = clamp(this.right, 0, Math.max(0, width - 212));\n        this.elements.root.style.right = `${this.right}px`;\n        this.top = clamp(this.top, 0, 24);\n        this.elements.root.style.top = `${this.top}px`;\n    }\n    showMessage(message) {\n        this.findInput.showMessage(message);\n    }\n    clearMessage() {\n        this.findInput.clearMessage();\n    }\n    async dispose() {\n        this._onDidDisable.fire();\n        this.elements.root.classList.add('disabled');\n        await timeout(300);\n        super.dispose();\n    }\n}\nclass FindController {\n    get pattern() { return this._pattern; }\n    get mode() { return this._mode; }\n    set mode(mode) {\n        if (mode === this._mode) {\n            return;\n        }\n        this._mode = mode;\n        if (this.widget) {\n            this.widget.mode = this._mode;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMode.fire(mode);\n    }\n    get matchType() { return this._matchType; }\n    set matchType(matchType) {\n        if (matchType === this._matchType) {\n            return;\n        }\n        this._matchType = matchType;\n        if (this.widget) {\n            this.widget.matchType = this._matchType;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMatchType.fire(matchType);\n    }\n    constructor(tree, model, view, filter, contextViewProvider, options = {}) {\n        var _a, _b;\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.contextViewProvider = contextViewProvider;\n        this.options = options;\n        this._pattern = '';\n        this.width = 0;\n        this._onDidChangeMode = new Emitter();\n        this.onDidChangeMode = this._onDidChangeMode.event;\n        this._onDidChangeMatchType = new Emitter();\n        this.onDidChangeMatchType = this._onDidChangeMatchType.event;\n        this._onDidChangePattern = new Emitter();\n        this._onDidChangeOpenState = new Emitter();\n        this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n        this._matchType = (_b = tree.options.defaultFindMatchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    }\n    updateOptions(optionsUpdate = {}) {\n        if (optionsUpdate.defaultFindMode !== undefined) {\n            this.mode = optionsUpdate.defaultFindMode;\n        }\n        if (optionsUpdate.defaultFindMatchType !== undefined) {\n            this.matchType = optionsUpdate.defaultFindMatchType;\n        }\n    }\n    onDidSpliceModel() {\n        if (!this.widget || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    render() {\n        var _a, _b, _c, _d;\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && noMatches) {\n            if ((_a = this.tree.options.showNotFoundMessage) !== null && _a !== void 0 ? _a : true) {\n                (_b = this.widget) === null || _b === void 0 ? void 0 : _b.showMessage({ type: 2 /* MessageType.WARNING */, content: localize('not found', \"No elements found.\") });\n            }\n            else {\n                (_c = this.widget) === null || _c === void 0 ? void 0 : _c.showMessage({ type: 2 /* MessageType.WARNING */ });\n            }\n        }\n        else {\n            (_d = this.widget) === null || _d === void 0 ? void 0 : _d.clearMessage();\n        }\n    }\n    shouldAllowFocus(node) {\n        if (!this.widget || !this.pattern) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    layout(width) {\n        var _a;\n        this.width = width;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n    dispose() {\n        this._history = undefined;\n        this._onDidChangePattern.dispose();\n        this.enabledDisposables.dispose();\n        this.disposables.dispose();\n    }\n}\nfunction stickyScrollNodeStateEquals(node1, node2) {\n    return node1.position === node2.position && stickyScrollNodeEquals(node1, node2);\n}\nfunction stickyScrollNodeEquals(node1, node2) {\n    return node1.node.element === node2.node.element &&\n        node1.startIndex === node2.startIndex &&\n        node1.height === node2.height &&\n        node1.endIndex === node2.endIndex;\n}\nclass StickyScrollState {\n    constructor(stickyNodes = []) {\n        this.stickyNodes = stickyNodes;\n    }\n    get count() { return this.stickyNodes.length; }\n    equal(state) {\n        return equals(this.stickyNodes, state.stickyNodes, stickyScrollNodeStateEquals);\n    }\n    lastNodePartiallyVisible() {\n        if (this.count === 0) {\n            return false;\n        }\n        const lastStickyNode = this.stickyNodes[this.count - 1];\n        if (this.count === 1) {\n            return lastStickyNode.position !== 0;\n        }\n        const secondLastStickyNode = this.stickyNodes[this.count - 2];\n        return secondLastStickyNode.position + secondLastStickyNode.height !== lastStickyNode.position;\n    }\n    animationStateChanged(previousState) {\n        if (!equals(this.stickyNodes, previousState.stickyNodes, stickyScrollNodeEquals)) {\n            return false;\n        }\n        if (this.count === 0) {\n            return false;\n        }\n        const lastStickyNode = this.stickyNodes[this.count - 1];\n        const previousLastStickyNode = previousState.stickyNodes[previousState.count - 1];\n        return lastStickyNode.position !== previousLastStickyNode.position;\n    }\n}\nclass DefaultStickyScrollDelegate {\n    constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const stickyNodeBottom = stickyNode.position + stickyNode.height;\n            if (stickyNodeBottom > maxWidgetHeight || i >= stickyScrollMaxItemCount) {\n                return stickyNodes.slice(0, i);\n            }\n        }\n        return stickyNodes;\n    }\n}\nclass StickyScrollController extends Disposable {\n    constructor(tree, model, view, renderers, treeDelegate, options = {}) {\n        var _a;\n        super();\n        this.tree = tree;\n        this.model = model;\n        this.view = view;\n        this.treeDelegate = treeDelegate;\n        this.maxWidgetViewRatio = 0.4;\n        const stickyScrollOptions = this.validateStickySettings(options);\n        this.stickyScrollMaxItemCount = stickyScrollOptions.stickyScrollMaxItemCount;\n        this.stickyScrollDelegate = (_a = options.stickyScrollDelegate) !== null && _a !== void 0 ? _a : new DefaultStickyScrollDelegate();\n        this._widget = this._register(new StickyScrollWidget(view.getScrollableElement(), view, tree, renderers, treeDelegate, options.accessibilityProvider));\n        this.onDidChangeHasFocus = this._widget.onDidChangeHasFocus;\n        this.onContextMenu = this._widget.onContextMenu;\n        this._register(view.onDidScroll(() => this.update()));\n        this._register(view.onDidChangeContentHeight(() => this.update()));\n        this._register(tree.onDidChangeCollapseState(() => this.update()));\n        this.update();\n    }\n    get height() {\n        return this._widget.height;\n    }\n    getNodeAtHeight(height) {\n        let index;\n        if (height === 0) {\n            index = this.view.firstVisibleIndex;\n        }\n        else {\n            index = this.view.indexAt(height + this.view.scrollTop);\n        }\n        if (index < 0 || index >= this.view.length) {\n            return undefined;\n        }\n        return this.view.element(index);\n    }\n    update() {\n        const firstVisibleNode = this.getNodeAtHeight(0);\n        // Don't render anything if there are no elements\n        if (!firstVisibleNode || this.tree.scrollTop === 0) {\n            this._widget.setState(undefined);\n            return;\n        }\n        const stickyState = this.findStickyState(firstVisibleNode);\n        this._widget.setState(stickyState);\n    }\n    findStickyState(firstVisibleNode) {\n        const stickyNodes = [];\n        let firstVisibleNodeUnderWidget = firstVisibleNode;\n        let stickyNodesHeight = 0;\n        let nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, undefined, stickyNodesHeight);\n        while (nextStickyNode) {\n            stickyNodes.push(nextStickyNode);\n            stickyNodesHeight += nextStickyNode.height;\n            if (stickyNodes.length <= this.stickyScrollMaxItemCount) {\n                firstVisibleNodeUnderWidget = this.getNextVisibleNode(nextStickyNode);\n                if (!firstVisibleNodeUnderWidget) {\n                    break;\n                }\n            }\n            nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, nextStickyNode.node, stickyNodesHeight);\n        }\n        const contrainedStickyNodes = this.constrainStickyNodes(stickyNodes);\n        return contrainedStickyNodes.length ? new StickyScrollState(contrainedStickyNodes) : undefined;\n    }\n    getNextVisibleNode(previousStickyNode) {\n        return this.getNodeAtHeight(previousStickyNode.position + previousStickyNode.height);\n    }\n    getNextStickyNode(firstVisibleNodeUnderWidget, previousStickyNode, stickyNodesHeight) {\n        const nextStickyNode = this.getAncestorUnderPrevious(firstVisibleNodeUnderWidget, previousStickyNode);\n        if (!nextStickyNode) {\n            return undefined;\n        }\n        if (nextStickyNode === firstVisibleNodeUnderWidget) {\n            if (!this.nodeIsUncollapsedParent(firstVisibleNodeUnderWidget)) {\n                return undefined;\n            }\n            if (this.nodeTopAlignsWithStickyNodesBottom(firstVisibleNodeUnderWidget, stickyNodesHeight)) {\n                return undefined;\n            }\n        }\n        return this.createStickyScrollNode(nextStickyNode, stickyNodesHeight);\n    }\n    nodeTopAlignsWithStickyNodesBottom(node, stickyNodesHeight) {\n        const nodeIndex = this.getNodeIndex(node);\n        const elementTop = this.view.getElementTop(nodeIndex);\n        const stickyPosition = stickyNodesHeight;\n        return this.view.scrollTop === elementTop - stickyPosition;\n    }\n    createStickyScrollNode(node, currentStickyNodesHeight) {\n        const height = this.treeDelegate.getHeight(node);\n        const { startIndex, endIndex } = this.getNodeRange(node);\n        const position = this.calculateStickyNodePosition(endIndex, currentStickyNodesHeight, height);\n        return { node, position, height, startIndex, endIndex };\n    }\n    getAncestorUnderPrevious(node, previousAncestor = undefined) {\n        let currentAncestor = node;\n        let parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n        while (parentOfcurrentAncestor) {\n            if (parentOfcurrentAncestor === previousAncestor) {\n                return currentAncestor;\n            }\n            currentAncestor = parentOfcurrentAncestor;\n            parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n        }\n        if (previousAncestor === undefined) {\n            return currentAncestor;\n        }\n        return undefined;\n    }\n    calculateStickyNodePosition(lastDescendantIndex, stickyRowPositionTop, stickyNodeHeight) {\n        let lastChildRelativeTop = this.view.getRelativeTop(lastDescendantIndex);\n        // If the last descendant is only partially visible at the top of the view, getRelativeTop() returns null\n        // In that case, utilize the next node's relative top to calculate the sticky node's position\n        if (lastChildRelativeTop === null && this.view.firstVisibleIndex === lastDescendantIndex && lastDescendantIndex + 1 < this.view.length) {\n            const nodeHeight = this.treeDelegate.getHeight(this.view.element(lastDescendantIndex));\n            const nextNodeRelativeTop = this.view.getRelativeTop(lastDescendantIndex + 1);\n            lastChildRelativeTop = nextNodeRelativeTop ? nextNodeRelativeTop - nodeHeight / this.view.renderHeight : null;\n        }\n        if (lastChildRelativeTop === null) {\n            return stickyRowPositionTop;\n        }\n        const lastChildNode = this.view.element(lastDescendantIndex);\n        const lastChildHeight = this.treeDelegate.getHeight(lastChildNode);\n        const topOfLastChild = lastChildRelativeTop * this.view.renderHeight;\n        const bottomOfLastChild = topOfLastChild + lastChildHeight;\n        if (stickyRowPositionTop + stickyNodeHeight > bottomOfLastChild && stickyRowPositionTop <= bottomOfLastChild) {\n            return bottomOfLastChild - stickyNodeHeight;\n        }\n        return stickyRowPositionTop;\n    }\n    constrainStickyNodes(stickyNodes) {\n        if (stickyNodes.length === 0) {\n            return [];\n        }\n        // Check if sticky nodes need to be constrained\n        const maximumStickyWidgetHeight = this.view.renderHeight * this.maxWidgetViewRatio;\n        const lastStickyNode = stickyNodes[stickyNodes.length - 1];\n        if (stickyNodes.length <= this.stickyScrollMaxItemCount && lastStickyNode.position + lastStickyNode.height <= maximumStickyWidgetHeight) {\n            return stickyNodes;\n        }\n        // constrain sticky nodes\n        const constrainedStickyNodes = this.stickyScrollDelegate.constrainStickyScrollNodes(stickyNodes, this.stickyScrollMaxItemCount, maximumStickyWidgetHeight);\n        if (!constrainedStickyNodes.length) {\n            return [];\n        }\n        // Validate constraints\n        const lastConstrainedStickyNode = constrainedStickyNodes[constrainedStickyNodes.length - 1];\n        if (constrainedStickyNodes.length > this.stickyScrollMaxItemCount || lastConstrainedStickyNode.position + lastConstrainedStickyNode.height > maximumStickyWidgetHeight) {\n            throw new Error('stickyScrollDelegate violates constraints');\n        }\n        return constrainedStickyNodes;\n    }\n    getParentNode(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(nodeLocation);\n        return parentLocation ? this.model.getNode(parentLocation) : undefined;\n    }\n    nodeIsUncollapsedParent(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        return this.model.getListRenderCount(nodeLocation) > 1;\n    }\n    getNodeIndex(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const nodeIndex = this.model.getListIndex(nodeLocation);\n        return nodeIndex;\n    }\n    getNodeRange(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const startIndex = this.model.getListIndex(nodeLocation);\n        if (startIndex < 0) {\n            throw new Error('Node not found in tree');\n        }\n        const renderCount = this.model.getListRenderCount(nodeLocation);\n        const endIndex = startIndex + renderCount - 1;\n        return { startIndex, endIndex };\n    }\n    nodePositionTopBelowWidget(node) {\n        const ancestors = [];\n        let currentAncestor = this.getParentNode(node);\n        while (currentAncestor) {\n            ancestors.push(currentAncestor);\n            currentAncestor = this.getParentNode(currentAncestor);\n        }\n        let widgetHeight = 0;\n        for (let i = 0; i < ancestors.length && i < this.stickyScrollMaxItemCount; i++) {\n            widgetHeight += this.treeDelegate.getHeight(ancestors[i]);\n        }\n        return widgetHeight;\n    }\n    domFocus() {\n        this._widget.domFocus();\n    }\n    // Whether sticky scroll was the last focused part in the tree or not\n    focusedLast() {\n        return this._widget.focusedLast();\n    }\n    updateOptions(optionsUpdate = {}) {\n        if (!optionsUpdate.stickyScrollMaxItemCount) {\n            return;\n        }\n        const validatedOptions = this.validateStickySettings(optionsUpdate);\n        if (this.stickyScrollMaxItemCount !== validatedOptions.stickyScrollMaxItemCount) {\n            this.stickyScrollMaxItemCount = validatedOptions.stickyScrollMaxItemCount;\n            this.update();\n        }\n    }\n    validateStickySettings(options) {\n        let stickyScrollMaxItemCount = 7;\n        if (typeof options.stickyScrollMaxItemCount === 'number') {\n            stickyScrollMaxItemCount = Math.max(options.stickyScrollMaxItemCount, 1);\n        }\n        return { stickyScrollMaxItemCount };\n    }\n}\nclass StickyScrollWidget {\n    constructor(container, view, tree, treeRenderers, treeDelegate, accessibilityProvider) {\n        this.view = view;\n        this.tree = tree;\n        this.treeRenderers = treeRenderers;\n        this.treeDelegate = treeDelegate;\n        this.accessibilityProvider = accessibilityProvider;\n        this._previousElements = [];\n        this._previousStateDisposables = new DisposableStore();\n        this._rootDomNode = $('.monaco-tree-sticky-container.empty');\n        container.appendChild(this._rootDomNode);\n        const shadow = $('.monaco-tree-sticky-container-shadow');\n        this._rootDomNode.appendChild(shadow);\n        this.stickyScrollFocus = new StickyScrollFocus(this._rootDomNode, view);\n        this.onDidChangeHasFocus = this.stickyScrollFocus.onDidChangeHasFocus;\n        this.onContextMenu = this.stickyScrollFocus.onContextMenu;\n    }\n    get height() {\n        if (!this._previousState) {\n            return 0;\n        }\n        const lastElement = this._previousState.stickyNodes[this._previousState.count - 1];\n        return lastElement.position + lastElement.height;\n    }\n    setState(state) {\n        const wasVisible = !!this._previousState && this._previousState.count > 0;\n        const isVisible = !!state && state.count > 0;\n        // If state has not changed, do nothing\n        if ((!wasVisible && !isVisible) || (wasVisible && isVisible && this._previousState.equal(state))) {\n            return;\n        }\n        // Update visibility of the widget if changed\n        if (wasVisible !== isVisible) {\n            this.setVisible(isVisible);\n        }\n        if (!isVisible) {\n            this._previousState = undefined;\n            this._previousElements = [];\n            this._previousStateDisposables.clear();\n            return;\n        }\n        const lastStickyNode = state.stickyNodes[state.count - 1];\n        // If the new state is only a change in the last node's position, update the position of the last element\n        if (this._previousState && state.animationStateChanged(this._previousState)) {\n            this._previousElements[this._previousState.count - 1].style.top = `${lastStickyNode.position}px`;\n        }\n        // create new dom elements\n        else {\n            this._previousStateDisposables.clear();\n            const elements = Array(state.count);\n            for (let stickyIndex = state.count - 1; stickyIndex >= 0; stickyIndex--) {\n                const stickyNode = state.stickyNodes[stickyIndex];\n                const { element, disposable } = this.createElement(stickyNode, stickyIndex, state.count);\n                elements[stickyIndex] = element;\n                this._rootDomNode.appendChild(element);\n                this._previousStateDisposables.add(disposable);\n            }\n            this.stickyScrollFocus.updateElements(elements, state);\n            this._previousElements = elements;\n        }\n        this._previousState = state;\n        // Set the height of the widget to the bottom of the last sticky node\n        this._rootDomNode.style.height = `${lastStickyNode.position + lastStickyNode.height}px`;\n    }\n    createElement(stickyNode, stickyIndex, stickyNodesTotal) {\n        const nodeIndex = stickyNode.startIndex;\n        // Sticky element container\n        const stickyElement = document.createElement('div');\n        stickyElement.style.top = `${stickyNode.position}px`;\n        if (this.tree.options.setRowHeight !== false) {\n            stickyElement.style.height = `${stickyNode.height}px`;\n        }\n        if (this.tree.options.setRowLineHeight !== false) {\n            stickyElement.style.lineHeight = `${stickyNode.height}px`;\n        }\n        stickyElement.classList.add('monaco-tree-sticky-row');\n        stickyElement.classList.add('monaco-list-row');\n        stickyElement.setAttribute('data-index', `${nodeIndex}`);\n        stickyElement.setAttribute('data-parity', nodeIndex % 2 === 0 ? 'even' : 'odd');\n        stickyElement.setAttribute('id', this.view.getElementID(nodeIndex));\n        const accessibilityDisposable = this.setAccessibilityAttributes(stickyElement, stickyNode.node.element, stickyIndex, stickyNodesTotal);\n        // Get the renderer for the node\n        const nodeTemplateId = this.treeDelegate.getTemplateId(stickyNode.node);\n        const renderer = this.treeRenderers.find((renderer) => renderer.templateId === nodeTemplateId);\n        if (!renderer) {\n            throw new Error(`No renderer found for template id ${nodeTemplateId}`);\n        }\n        // To make sure we do not influence the original node, we create a copy of the node\n        // We need to check if it is already a unique instance of the node by the delegate\n        let nodeCopy = stickyNode.node;\n        if (nodeCopy === this.tree.getNode(this.tree.getNodeLocation(stickyNode.node))) {\n            nodeCopy = new Proxy(stickyNode.node, {});\n        }\n        // Render the element\n        const templateData = renderer.renderTemplate(stickyElement);\n        renderer.renderElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n        // Remove the element from the DOM when state is disposed\n        const disposable = toDisposable(() => {\n            accessibilityDisposable.dispose();\n            renderer.disposeElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n            renderer.disposeTemplate(templateData);\n            stickyElement.remove();\n        });\n        return { element: stickyElement, disposable };\n    }\n    setAccessibilityAttributes(container, element, stickyIndex, stickyNodesTotal) {\n        var _a;\n        if (!this.accessibilityProvider) {\n            return Disposable.None;\n        }\n        if (this.accessibilityProvider.getSetSize) {\n            container.setAttribute('aria-setsize', String(this.accessibilityProvider.getSetSize(element, stickyIndex, stickyNodesTotal)));\n        }\n        if (this.accessibilityProvider.getPosInSet) {\n            container.setAttribute('aria-posinset', String(this.accessibilityProvider.getPosInSet(element, stickyIndex)));\n        }\n        if (this.accessibilityProvider.getRole) {\n            container.setAttribute('role', (_a = this.accessibilityProvider.getRole(element)) !== null && _a !== void 0 ? _a : 'treeitem');\n        }\n        const ariaLabel = this.accessibilityProvider.getAriaLabel(element);\n        const observable = (ariaLabel && typeof ariaLabel !== 'string') ? ariaLabel : constObservable(ariaLabel);\n        const result = autorun(reader => {\n            const value = reader.readObservable(observable);\n            if (value) {\n                container.setAttribute('aria-label', value);\n            }\n            else {\n                container.removeAttribute('aria-label');\n            }\n        });\n        if (typeof ariaLabel === 'string') {\n        }\n        else if (ariaLabel) {\n            container.setAttribute('aria-label', ariaLabel.get());\n        }\n        const ariaLevel = this.accessibilityProvider.getAriaLevel && this.accessibilityProvider.getAriaLevel(element);\n        if (typeof ariaLevel === 'number') {\n            container.setAttribute('aria-level', `${ariaLevel}`);\n        }\n        // Sticky Scroll elements can not be selected\n        container.setAttribute('aria-selected', String(false));\n        return result;\n    }\n    setVisible(visible) {\n        this._rootDomNode.classList.toggle('empty', !visible);\n        if (!visible) {\n            this.stickyScrollFocus.updateElements([], undefined);\n        }\n    }\n    domFocus() {\n        this.stickyScrollFocus.domFocus();\n    }\n    focusedLast() {\n        return this.stickyScrollFocus.focusedLast();\n    }\n    dispose() {\n        this.stickyScrollFocus.dispose();\n        this._previousStateDisposables.dispose();\n        this._rootDomNode.remove();\n    }\n}\nclass StickyScrollFocus extends Disposable {\n    get domHasFocus() { return this._domHasFocus; }\n    set domHasFocus(hasFocus) {\n        if (hasFocus !== this._domHasFocus) {\n            this._onDidChangeHasFocus.fire(hasFocus);\n            this._domHasFocus = hasFocus;\n        }\n    }\n    constructor(container, view) {\n        super();\n        this.container = container;\n        this.view = view;\n        this.focusedIndex = -1;\n        this.elements = [];\n        this._onDidChangeHasFocus = new Emitter();\n        this.onDidChangeHasFocus = this._onDidChangeHasFocus.event;\n        this._onContextMenu = new Emitter();\n        this.onContextMenu = this._onContextMenu.event;\n        this._domHasFocus = false;\n        this.container.addEventListener('focus', () => this.onFocus());\n        this.container.addEventListener('blur', () => this.onBlur());\n        this._register(this.view.onDidFocus(() => this.toggleStickyScrollFocused(false)));\n        this._register(this.view.onKeyDown((e) => this.onKeyDown(e)));\n        this._register(this.view.onMouseDown((e) => this.onMouseDown(e)));\n        this._register(this.view.onContextMenu((e) => this.handleContextMenu(e)));\n    }\n    handleContextMenu(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            if (this.focusedLast()) {\n                this.view.domFocus();\n            }\n            return;\n        }\n        // The list handles the context menu triggered by a mouse event\n        // In that case only set the focus of the element clicked and leave the rest to the list to handle\n        if (!isKeyboardEvent(e.browserEvent)) {\n            if (!this.state) {\n                throw new Error('Context menu should not be triggered when state is undefined');\n            }\n            const stickyIndex = this.state.stickyNodes.findIndex(stickyNode => { var _a; return stickyNode.node.element === ((_a = e.element) === null || _a === void 0 ? void 0 : _a.element); });\n            if (stickyIndex === -1) {\n                throw new Error('Context menu should not be triggered when element is not in sticky scroll widget');\n            }\n            this.container.focus();\n            this.setFocus(stickyIndex);\n            return;\n        }\n        if (!this.state || this.focusedIndex < 0) {\n            throw new Error('Context menu key should not be triggered when focus is not in sticky scroll widget');\n        }\n        const stickyNode = this.state.stickyNodes[this.focusedIndex];\n        const element = stickyNode.node.element;\n        const anchor = this.elements[this.focusedIndex];\n        this._onContextMenu.fire({ element, anchor, browserEvent: e.browserEvent, isStickyScroll: true });\n    }\n    onKeyDown(e) {\n        // Sticky Scroll Navigation\n        if (this.domHasFocus && this.state) {\n            // Move up\n            if (e.key === 'ArrowUp') {\n                this.setFocusedElement(Math.max(0, this.focusedIndex - 1));\n                e.preventDefault();\n                e.stopPropagation();\n            }\n            // Move down, if last sticky node is focused, move focus into first child of last sticky node\n            else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n                if (this.focusedIndex >= this.state.count - 1) {\n                    const nodeIndexToFocus = this.state.stickyNodes[this.state.count - 1].startIndex + 1;\n                    this.view.domFocus();\n                    this.view.setFocus([nodeIndexToFocus]);\n                    this.scrollNodeUnderWidget(nodeIndexToFocus, this.state);\n                }\n                else {\n                    this.setFocusedElement(this.focusedIndex + 1);\n                }\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n    onMouseDown(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            return;\n        }\n        e.browserEvent.preventDefault();\n        e.browserEvent.stopPropagation();\n    }\n    updateElements(elements, state) {\n        if (state && state.count === 0) {\n            throw new Error('Sticky scroll state must be undefined when there are no sticky nodes');\n        }\n        if (state && state.count !== elements.length) {\n            throw new Error('Sticky scroll focus received illigel state');\n        }\n        const previousIndex = this.focusedIndex;\n        this.removeFocus();\n        this.elements = elements;\n        this.state = state;\n        if (state) {\n            const newFocusedIndex = clamp(previousIndex, 0, state.count - 1);\n            this.setFocus(newFocusedIndex);\n        }\n        else {\n            if (this.domHasFocus) {\n                this.view.domFocus();\n            }\n        }\n        // must come last as it calls blur()\n        this.container.tabIndex = state ? 0 : -1;\n    }\n    setFocusedElement(stickyIndex) {\n        // doesn't imply that the widget has (or will have) focus\n        const state = this.state;\n        if (!state) {\n            throw new Error('Cannot set focus when state is undefined');\n        }\n        this.setFocus(stickyIndex);\n        if (stickyIndex < state.count - 1) {\n            return;\n        }\n        // If the last sticky node is not fully visible, scroll it into view\n        if (state.lastNodePartiallyVisible()) {\n            const lastStickyNode = state.stickyNodes[stickyIndex];\n            this.scrollNodeUnderWidget(lastStickyNode.endIndex + 1, state);\n        }\n    }\n    scrollNodeUnderWidget(nodeIndex, state) {\n        const lastStickyNode = state.stickyNodes[state.count - 1];\n        const secondLastStickyNode = state.count > 1 ? state.stickyNodes[state.count - 2] : undefined;\n        const elementScrollTop = this.view.getElementTop(nodeIndex);\n        const elementTargetViewTop = secondLastStickyNode ? secondLastStickyNode.position + secondLastStickyNode.height + lastStickyNode.height : lastStickyNode.height;\n        this.view.scrollTop = elementScrollTop - elementTargetViewTop;\n    }\n    domFocus() {\n        if (!this.state) {\n            throw new Error('Cannot focus when state is undefined');\n        }\n        this.container.focus();\n    }\n    focusedLast() {\n        if (!this.state) {\n            return false;\n        }\n        return this.view.getHTMLElement().classList.contains('sticky-scroll-focused');\n    }\n    removeFocus() {\n        if (this.focusedIndex === -1) {\n            return;\n        }\n        this.toggleElementFocus(this.elements[this.focusedIndex], false);\n        this.focusedIndex = -1;\n    }\n    setFocus(newFocusIndex) {\n        if (0 > newFocusIndex) {\n            throw new Error('addFocus() can not remove focus');\n        }\n        if (!this.state && newFocusIndex >= 0) {\n            throw new Error('Cannot set focus index when state is undefined');\n        }\n        if (this.state && newFocusIndex >= this.state.count) {\n            throw new Error('Cannot set focus index to an index that does not exist');\n        }\n        const oldIndex = this.focusedIndex;\n        if (oldIndex >= 0) {\n            this.toggleElementFocus(this.elements[oldIndex], false);\n        }\n        if (newFocusIndex >= 0) {\n            this.toggleElementFocus(this.elements[newFocusIndex], true);\n        }\n        this.focusedIndex = newFocusIndex;\n    }\n    toggleElementFocus(element, focused) {\n        this.toggleElementActiveFocus(element, focused && this.domHasFocus);\n        this.toggleElementPassiveFocus(element, focused);\n    }\n    toggleCurrentElementActiveFocus(focused) {\n        if (this.focusedIndex === -1) {\n            return;\n        }\n        this.toggleElementActiveFocus(this.elements[this.focusedIndex], focused);\n    }\n    toggleElementActiveFocus(element, focused) {\n        // active focus is set when sticky scroll has focus\n        element.classList.toggle('focused', focused);\n    }\n    toggleElementPassiveFocus(element, focused) {\n        // passive focus allows to show focus when sticky scroll does not have focus\n        // for example when the context menu has focus\n        element.classList.toggle('passive-focused', focused);\n    }\n    toggleStickyScrollFocused(focused) {\n        // Weather the last focus in the view was sticky scroll and not the list\n        // Is only removed when the focus is back in the tree an no longer in sticky scroll\n        this.view.getHTMLElement().classList.toggle('sticky-scroll-focused', focused);\n    }\n    onFocus() {\n        if (!this.state || this.elements.length === 0) {\n            throw new Error('Cannot focus when state is undefined or elements are empty');\n        }\n        this.domHasFocus = true;\n        this.toggleStickyScrollFocused(true);\n        this.toggleCurrentElementActiveFocus(true);\n        if (this.focusedIndex === -1) {\n            this.setFocus(0);\n        }\n    }\n    onBlur() {\n        this.domHasFocus = false;\n        this.toggleCurrentElementActiveFocus(false);\n    }\n    dispose() {\n        this.toggleStickyScrollFocused(false);\n        this._onDidChangeHasFocus.fire(false);\n        super.dispose();\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n        target = TreeMouseEventTarget.Filter;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction asTreeContextMenuEvent(event) {\n    const isStickyScroll = isStickyScrollContainer(event.browserEvent.target);\n    return {\n        element: event.element ? event.element.element : null,\n        browserEvent: event.browserEvent,\n        anchor: event.anchor,\n        isStickyScroll\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    set(nodes, browserEvent) {\n        if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode && insertedNode.visible) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree, stickyScrollProvider) {\n        super(list);\n        this.tree = tree;\n        this.stickyScrollProvider = stickyScrollProvider;\n    }\n    onViewPointer(e) {\n        if (isButton(e.browserEvent.target) ||\n            isInputElement(e.browserEvent.target) ||\n            isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        const isStickyElement = isStickyScrollElement(e.browserEvent.target);\n        let expandOnlyOnTwistieClick = false;\n        if (isStickyElement) {\n            expandOnlyOnTwistieClick = true;\n        }\n        else if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (!isStickyElement) {\n            if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n                return super.onViewPointer(e);\n            }\n            if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n                return super.onViewPointer(e);\n            }\n        }\n        else {\n            this.handleStickyScrollMouseEvent(e, node);\n        }\n        if (node.collapsible && (!isStickyElement || onTwistie)) {\n            const location = this.tree.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            this.tree.toggleCollapsed(location, recursive);\n            if (expandOnlyOnTwistieClick && onTwistie) {\n                // Do not set this before calling a handler on the super class, because it will reject it as handled\n                e.browserEvent.isHandledByList = true;\n                return;\n            }\n        }\n        if (!isStickyElement) {\n            super.onViewPointer(e);\n        }\n    }\n    handleStickyScrollMouseEvent(e, node) {\n        if (isMonacoCustomToggle(e.browserEvent.target) || isActionItem(e.browserEvent.target)) {\n            return;\n        }\n        const stickyScrollController = this.stickyScrollProvider();\n        if (!stickyScrollController) {\n            throw new Error('Sticky scroll controller not found');\n        }\n        const nodeIndex = this.list.indexOf(node);\n        const elementScrollTop = this.list.getElementTop(nodeIndex);\n        const elementTargetViewTop = stickyScrollController.nodePositionTopBelowWidget(node);\n        this.tree.scrollTop = elementScrollTop - elementTargetViewTop;\n        this.list.domFocus();\n        this.list.setFocus([nodeIndex]);\n        this.list.setSelection([nodeIndex]);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n    // to make sure dom focus is not stolen (for example with context menu)\n    onMouseDown(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            super.onMouseDown(e);\n            return;\n        }\n    }\n    onContextMenu(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            super.onContextMenu(e);\n            return;\n        }\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree, options.stickyScrollProvider);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    get onDidScroll() { return this.view.onDidScroll; }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter); }\n    get onMouseOver() { return Event.map(this.view.onMouseOver, asTreeMouseEvent); }\n    get onMouseOut() { return Event.map(this.view.onMouseOut, asTreeMouseEvent); }\n    get onContextMenu() { var _a, _b; return Event.any(Event.filter(Event.map(this.view.onContextMenu, asTreeContextMenuEvent), e => !e.isStickyScroll), (_b = (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.onContextMenu) !== null && _b !== void 0 ? _b : Event.None); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onKeyDown() { return this.view.onKeyDown; }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get findMode() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight; }\n    set findMode(findMode) { if (this.findController) {\n        this.findController.mode = findMode;\n    } }\n    get findMatchType() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.matchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy; }\n    set findMatchType(findFuzzy) { if (this.findController) {\n        this.findController.matchType = findFuzzy;\n    } }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        var _a;\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.onDidChangeFindOpenState = Event.None;\n        this.onDidChangeStickyScrollFocused = Event.None;\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        this.treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n        const renderedIndentGuides = new SetMap();\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, renderedIndentGuides, _options));\n        for (const r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = { ..._options, filter: filter }; // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, this.treeDelegate, this.renderers, this.focus, this.selection, this.anchor, { ...asListOptions(() => this.model, _options), tree: this, stickyScrollProvider: () => this.stickyScrollController });\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        }, this.disposables);\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        const activeNodesEmitter = this.disposables.add(new Emitter());\n        const activeNodesDebounce = this.disposables.add(new Delayer(0));\n        this.disposables.add(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)(() => {\n            activeNodesDebounce.trigger(() => {\n                const set = new Set();\n                for (const node of this.focus.getNodes()) {\n                    set.add(node);\n                }\n                for (const node of this.selection.getNodes()) {\n                    set.add(node);\n                }\n                activeNodesEmitter.fire([...set.values()]);\n            });\n        }));\n        onDidChangeActiveNodes.input = activeNodesEmitter.event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown, $ => $.filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e)));\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */))(this.onLeftArrow, this, this.disposables);\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */))(this.onRightArrow, this, this.disposables);\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 10 /* KeyCode.Space */))(this.onSpace, this, this.disposables);\n        }\n        if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n            const opts = this.options.findWidgetStyles ? { styles: this.options.findWidgetStyles } : undefined;\n            this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider, opts);\n            this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n            this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n            this.disposables.add(this.findController);\n            this.onDidChangeFindMode = this.findController.onDidChangeMode;\n            this.onDidChangeFindMatchType = this.findController.onDidChangeMatchType;\n        }\n        else {\n            this.onDidChangeFindMode = Event.None;\n            this.onDidChangeFindMatchType = Event.None;\n        }\n        if (_options.enableStickyScroll) {\n            this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, _options);\n            this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    updateOptions(optionsUpdate = {}) {\n        var _a;\n        this._options = { ...this._options, ...optionsUpdate };\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(this._options);\n        (_a = this.findController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n        this.updateStickyScroll(optionsUpdate);\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    updateStickyScroll(optionsUpdate) {\n        var _a;\n        if (!this.stickyScrollController && this._options.enableStickyScroll) {\n            this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, this._options);\n            this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n        }\n        else if (this.stickyScrollController && !this._options.enableStickyScroll) {\n            this.onDidChangeStickyScrollFocused = Event.None;\n            this.stickyScrollController.dispose();\n            this.stickyScrollController = undefined;\n        }\n        (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    get scrollHeight() {\n        return this.view.scrollHeight;\n    }\n    get renderHeight() {\n        return this.view.renderHeight;\n    }\n    get ariaLabel() {\n        return this.view.ariaLabel;\n    }\n    set ariaLabel(value) {\n        this.view.ariaLabel = value;\n    }\n    domFocus() {\n        var _a;\n        if ((_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.focusedLast()) {\n            this.stickyScrollController.domFocus();\n        }\n        else {\n            this.view.domFocus();\n        }\n    }\n    layout(height, width) {\n        var _a;\n        this.view.layout(height, width);\n        if (isNumber(width)) {\n            (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n        }\n    }\n    style(styles) {\n        var _a;\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeInactiveIndentGuidesStroke}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        // Sticky Scroll Background\n        if (styles.listBackground) {\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container { background-color: ${styles.listBackground}; }`);\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-row { background-color: ${styles.listBackground}; }`);\n        }\n        // Sticky Scroll Focus\n        if (styles.listFocusForeground) {\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { color: ${styles.listFocusForeground}; }`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { color: inherit; }`);\n        }\n        // Sticky Scroll Focus Outlines\n        const focusAndSelectionOutline = asCssValueWithDefault(styles.listFocusAndSelectionOutline, asCssValueWithDefault(styles.listSelectionOutline, (_a = styles.listFocusOutline) !== null && _a !== void 0 ? _a : ''));\n        if (focusAndSelectionOutline) { // default: listFocusOutline\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused.selected { outline: 1px solid ${focusAndSelectionOutline}; outline-offset: -1px;}`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused.selected { outline: inherit;}`);\n        }\n        if (styles.listFocusOutline) { // default: set\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { outline: inherit; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.passive-focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused.sticky-scroll-focused .monaco-list-rows .monaco-list-row.focused { outline: inherit; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused:not(.sticky-scroll-focused) .monaco-tree-sticky-container .monaco-list-rows .monaco-list-row.focused { outline: inherit; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    getNodeLocation(node) {\n        return this.model.getNodeLocation(node);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    toggleCollapsed(location, recursive = false) {\n        return this.model.setCollapsed(location, undefined, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        this.eventBufferer.bufferEvents(() => {\n            const nodes = elements.map(e => this.model.getNode(e));\n            this.selection.set(nodes, browserEvent);\n            const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n            this.view.setSelection(indexes, browserEvent, true);\n        });\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        this.eventBufferer.bufferEvents(() => {\n            const nodes = elements.map(e => this.model.getNode(e));\n            this.focus.set(nodes, browserEvent);\n            const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n            this.view.setFocus(indexes, browserEvent, true);\n        });\n    }\n    focusNext(n = 1, loop = false, browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusNext(n, loop, browserEvent, filter);\n    }\n    focusPrevious(n = 1, loop = false, browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusPrevious(n, loop, browserEvent, filter);\n    }\n    focusNextPage(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        return this.view.focusNextPage(browserEvent, filter);\n    }\n    focusPreviousPage(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        return this.view.focusPreviousPage(browserEvent, filter, () => { var _a, _b; return (_b = (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0; });\n    }\n    focusFirst(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusFirst(browserEvent, filter);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        if (!this.stickyScrollController) {\n            this.view.reveal(index, relativeTop);\n        }\n        else {\n            const paddingTop = this.stickyScrollController.nodePositionTopBelowWidget(this.getNode(location));\n            this.view.reveal(index, relativeTop, paddingTop);\n        }\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        var _a;\n        dispose(this.disposables);\n        (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.view.dispose();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}