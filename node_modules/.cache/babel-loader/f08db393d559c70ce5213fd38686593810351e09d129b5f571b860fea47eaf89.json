{"ast":null,"code":"import _defineProperty from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.with.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.anchor.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar InlayHintsController_1;\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nvar InlayHintsCache = /*#__PURE__*/function () {\n  function InlayHintsCache() {\n    _classCallCheck(this, InlayHintsCache);\n    this._entries = new LRUCache(50);\n  }\n  return _createClass(InlayHintsCache, [{\n    key: \"get\",\n    value: function get(model) {\n      var key = InlayHintsCache._key(model);\n      return this._entries.get(key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(model, value) {\n      var key = InlayHintsCache._key(model);\n      this._entries.set(key, value);\n    }\n  }], [{\n    key: \"_key\",\n    value: function _key(model) {\n      return \"\".concat(model.uri.toString(), \"/\").concat(model.getVersionId());\n    }\n  }]);\n}();\nvar IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport var RenderedInlayHintLabelPart = /*#__PURE__*/function () {\n  function RenderedInlayHintLabelPart(item, index) {\n    _classCallCheck(this, RenderedInlayHintLabelPart);\n    this.item = item;\n    this.index = index;\n  }\n  return _createClass(RenderedInlayHintLabelPart, [{\n    key: \"part\",\n    get: function get() {\n      var label = this.item.hint.label;\n      if (typeof label === 'string') {\n        return {\n          label: label\n        };\n      } else {\n        return label[this.index];\n      }\n    }\n  }]);\n}();\nvar ActiveInlayHintInfo = /*#__PURE__*/_createClass(function ActiveInlayHintInfo(part, hasTriggerModifier) {\n  _classCallCheck(this, ActiveInlayHintInfo);\n  this.part = part;\n  this.hasTriggerModifier = hasTriggerModifier;\n}); // --- controller\nvar InlayHintsController = InlayHintsController_1 = /*#__PURE__*/function () {\n  function InlayHintsController(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n    var _this = this;\n    _classCallCheck(this, InlayHintsController);\n    this._editor = _editor;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._inlayHintsCache = _inlayHintsCache;\n    this._commandService = _commandService;\n    this._notificationService = _notificationService;\n    this._instaService = _instaService;\n    this._disposables = new DisposableStore();\n    this._sessionDisposables = new DisposableStore();\n    this._decorationsMetadata = new Map();\n    this._ruleFactory = new DynamicCssRules(this._editor);\n    this._activeRenderMode = 0 /* RenderMode.Normal */;\n    this._debounceInfo = _featureDebounce[\"for\"](_languageFeaturesService.inlayHintsProvider, 'InlayHint', {\n      min: 25\n    });\n    this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(function () {\n      return _this._update();\n    }));\n    this._disposables.add(_editor.onDidChangeModel(function () {\n      return _this._update();\n    }));\n    this._disposables.add(_editor.onDidChangeModelLanguage(function () {\n      return _this._update();\n    }));\n    this._disposables.add(_editor.onDidChangeConfiguration(function (e) {\n      if (e.hasChanged(141 /* EditorOption.inlayHints */)) {\n        _this._update();\n      }\n    }));\n    this._update();\n  }\n  return _createClass(InlayHintsController, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._sessionDisposables.dispose();\n      this._removeAllDecorations();\n      this._disposables.dispose();\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      this._sessionDisposables.clear();\n      this._removeAllDecorations();\n      var options = this._editor.getOption(141 /* EditorOption.inlayHints */);\n      if (options.enabled === 'off') {\n        return;\n      }\n      var model = this._editor.getModel();\n      if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n        return;\n      }\n      if (options.enabled === 'on') {\n        // different \"on\" modes: always\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n      } else {\n        // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n        var defaultMode;\n        var altMode;\n        if (options.enabled === 'onUnlessPressed') {\n          defaultMode = 0 /* RenderMode.Normal */;\n          altMode = 1 /* RenderMode.Invisible */;\n        } else {\n          defaultMode = 1 /* RenderMode.Invisible */;\n          altMode = 0 /* RenderMode.Normal */;\n        }\n        this._activeRenderMode = defaultMode;\n        this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(function (e) {\n          if (!_this2._editor.hasModel()) {\n            return;\n          }\n          var newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n          if (newRenderMode !== _this2._activeRenderMode) {\n            _this2._activeRenderMode = newRenderMode;\n            var _model = _this2._editor.getModel();\n            var copies = _this2._copyInlayHintsWithCurrentAnchor(_model);\n            _this2._updateHintsDecorators([_model.getFullModelRange()], copies);\n            scheduler.schedule(0);\n          }\n        }));\n      }\n      // iff possible, quickly update from cache\n      var cached = this._inlayHintsCache.get(model);\n      if (cached) {\n        this._updateHintsDecorators([model.getFullModelRange()], cached);\n      }\n      this._sessionDisposables.add(toDisposable(function () {\n        // cache items when switching files etc\n        if (!model.isDisposed()) {\n          _this2._cacheHintsForFastRestore(model);\n        }\n      }));\n      var cts;\n      var watchedProviders = new Set();\n      var scheduler = new RunOnceScheduler( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var t1, listener, myToken, inlayHints, _iterator, _step, provider;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              t1 = Date.now();\n              cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n              cts = new CancellationTokenSource();\n              listener = model.onWillDispose(function () {\n                return cts === null || cts === void 0 ? void 0 : cts.cancel();\n              });\n              _context.prev = 4;\n              myToken = cts.token;\n              _context.next = 8;\n              return InlayHintsFragments.create(_this2._languageFeaturesService.inlayHintsProvider, model, _this2._getHintsRanges(), myToken);\n            case 8:\n              inlayHints = _context.sent;\n              scheduler.delay = _this2._debounceInfo.update(model, Date.now() - t1);\n              if (!myToken.isCancellationRequested) {\n                _context.next = 13;\n                break;\n              }\n              inlayHints.dispose();\n              return _context.abrupt(\"return\");\n            case 13:\n              // listen to provider changes\n              _iterator = _createForOfIteratorHelper(inlayHints.provider);\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  provider = _step.value;\n                  if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                    watchedProviders.add(provider);\n                    _this2._sessionDisposables.add(provider.onDidChangeInlayHints(function () {\n                      if (!scheduler.isScheduled()) {\n                        // ignore event when request is already scheduled\n                        scheduler.schedule();\n                      }\n                    }));\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              _this2._sessionDisposables.add(inlayHints);\n              _this2._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n              _this2._cacheHintsForFastRestore(model);\n              _context.next = 23;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](4);\n              onUnexpectedError(_context.t0);\n            case 23:\n              _context.prev = 23;\n              cts.dispose();\n              listener.dispose();\n              return _context.finish(23);\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 20, 23, 27]]);\n      })), this._debounceInfo.get(model));\n      this._sessionDisposables.add(scheduler);\n      this._sessionDisposables.add(toDisposable(function () {\n        return cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n      }));\n      scheduler.schedule(0);\n      this._sessionDisposables.add(this._editor.onDidScrollChange(function (e) {\n        // update when scroll position changes\n        // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n        // typing or due to \"actual\" scrolling\n        if (e.scrollTopChanged || !scheduler.isScheduled()) {\n          scheduler.schedule();\n        }\n      }));\n      this._sessionDisposables.add(this._editor.onDidChangeModelContent(function (e) {\n        cts === null || cts === void 0 ? void 0 : cts.cancel();\n        // update less aggressive when typing\n        var delay = Math.max(scheduler.delay, 1250);\n        scheduler.schedule(delay);\n      }));\n      // mouse gestures\n      this._sessionDisposables.add(this._installDblClickGesture(function () {\n        return scheduler.schedule(0);\n      }));\n      this._sessionDisposables.add(this._installLinkGesture());\n      this._sessionDisposables.add(this._installContextMenu());\n    }\n  }, {\n    key: \"_installLinkGesture\",\n    value: function _installLinkGesture() {\n      var _this3 = this;\n      var store = new DisposableStore();\n      var gesture = store.add(new ClickLinkGesture(this._editor));\n      // let removeHighlight = () => { };\n      var sessionStore = new DisposableStore();\n      store.add(sessionStore);\n      store.add(gesture.onMouseMoveOrRelevantKeyDown(function (e) {\n        var _e = _slicedToArray(e, 1),\n          mouseEvent = _e[0];\n        var labelPart = _this3._getInlayHintLabelPart(mouseEvent);\n        var model = _this3._editor.getModel();\n        if (!labelPart || !model) {\n          sessionStore.clear();\n          return;\n        }\n        // resolve the item\n        var cts = new CancellationTokenSource();\n        sessionStore.add(toDisposable(function () {\n          return cts.dispose(true);\n        }));\n        labelPart.item.resolve(cts.token);\n        // render link => when the modifier is pressed and when there is a command or location\n        _this3._activeInlayHintPart = labelPart.part.command || labelPart.part.location ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier) : undefined;\n        var lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n        var range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n        var lineHints = _this3._getInlineHintsForRange(range);\n        _this3._updateHintsDecorators([range], lineHints);\n        sessionStore.add(toDisposable(function () {\n          _this3._activeInlayHintPart = undefined;\n          _this3._updateHintsDecorators([range], lineHints);\n        }));\n      }));\n      store.add(gesture.onCancel(function () {\n        return sessionStore.clear();\n      }));\n      store.add(gesture.onExecute( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {\n          var label, part;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                label = _this3._getInlayHintLabelPart(e);\n                if (!label) {\n                  _context2.next = 10;\n                  break;\n                }\n                part = label.part;\n                if (!part.location) {\n                  _context2.next = 7;\n                  break;\n                }\n                // location -> execute go to def\n                _this3._instaService.invokeFunction(goToDefinitionWithLocation, e, _this3._editor, part.location);\n                _context2.next = 10;\n                break;\n              case 7:\n                if (!languages.Command.is(part.command)) {\n                  _context2.next = 10;\n                  break;\n                }\n                _context2.next = 10;\n                return _this3._invokeCommand(part.command, label.item);\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }));\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()));\n      return store;\n    }\n  }, {\n    key: \"_getInlineHintsForRange\",\n    value: function _getInlineHintsForRange(range) {\n      var lineHints = new Set();\n      var _iterator2 = _createForOfIteratorHelper(this._decorationsMetadata.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var data = _step2.value;\n          if (range.containsRange(data.item.anchor.range)) {\n            lineHints.add(data.item);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return Array.from(lineHints);\n    }\n  }, {\n    key: \"_installDblClickGesture\",\n    value: function _installDblClickGesture(updateInlayHints) {\n      var _this4 = this;\n      return this._editor.onMouseUp( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n          var part, edits;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(e.event.detail !== 2)) {\n                  _context3.next = 2;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 2:\n                part = _this4._getInlayHintLabelPart(e);\n                if (part) {\n                  _context3.next = 5;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 5:\n                e.event.preventDefault();\n                _context3.next = 8;\n                return part.item.resolve(CancellationToken.None);\n              case 8:\n                if (isNonEmptyArray(part.item.hint.textEdits)) {\n                  edits = part.item.hint.textEdits.map(function (edit) {\n                    return EditOperation.replace(Range.lift(edit.range), edit.text);\n                  });\n                  _this4._editor.executeEdits('inlayHint.default', edits);\n                  updateInlayHints();\n                }\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3);\n        }));\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"_installContextMenu\",\n    value: function _installContextMenu() {\n      var _this5 = this;\n      return this._editor.onContextMenu( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {\n          var part;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                if (e.event.target instanceof HTMLElement) {\n                  _context4.next = 2;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 2:\n                part = _this5._getInlayHintLabelPart(e);\n                if (!part) {\n                  _context4.next = 6;\n                  break;\n                }\n                _context4.next = 6;\n                return _this5._instaService.invokeFunction(showGoToContextMenu, _this5._editor, e.event.target, part);\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4);\n        }));\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"_getInlayHintLabelPart\",\n    value: function _getInlayHintLabelPart(e) {\n      var _a;\n      if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n        return undefined;\n      }\n      var options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n      if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n        return options.attachedData;\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_invokeCommand\",\n    value: function () {\n      var _invokeCommand2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(command, item) {\n        var _a, _this$_commandService;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return (_this$_commandService = this._commandService).executeCommand.apply(_this$_commandService, [command.id].concat(_toConsumableArray((_a = command.arguments) !== null && _a !== void 0 ? _a : [])));\n            case 3:\n              _context5.next = 8;\n              break;\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n              this._notificationService.notify({\n                severity: Severity.Error,\n                source: item.provider.displayName,\n                message: _context5.t0\n              });\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 5]]);\n      }));\n      function _invokeCommand(_x4, _x5) {\n        return _invokeCommand2.apply(this, arguments);\n      }\n      return _invokeCommand;\n    }()\n  }, {\n    key: \"_cacheHintsForFastRestore\",\n    value: function _cacheHintsForFastRestore(model) {\n      var hints = this._copyInlayHintsWithCurrentAnchor(model);\n      this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n  }, {\n    key: \"_copyInlayHintsWithCurrentAnchor\",\n    value: function _copyInlayHintsWithCurrentAnchor(model) {\n      var items = new Map();\n      var _iterator3 = _createForOfIteratorHelper(this._decorationsMetadata),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n            id = _step3$value[0],\n            obj = _step3$value[1];\n          if (items.has(obj.item)) {\n            // an inlay item can be rendered as multiple decorations\n            // but they will all uses the same range\n            continue;\n          }\n          var range = model.getDecorationRange(id);\n          if (range) {\n            // update range with whatever the editor has tweaked it to\n            var anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n            var copy = obj.item[\"with\"]({\n              anchor: anchor\n            });\n            items.set(obj.item, copy);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return Array.from(items.values());\n    }\n  }, {\n    key: \"_getHintsRanges\",\n    value: function _getHintsRanges() {\n      var extra = 30;\n      var model = this._editor.getModel();\n      var visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n      var result = [];\n      var _iterator4 = _createForOfIteratorHelper(visibleRanges.sort(Range.compareRangesUsingStarts)),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var range = _step4.value;\n          var extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n          if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n            result.push(extendedRange);\n          } else {\n            result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"_updateHintsDecorators\",\n    value: function _updateHintsDecorators(ranges, items) {\n      var _this6 = this;\n      var _a, _b;\n      // utils to collect/create injected text decorations\n      var newDecorationsData = [];\n      var addInjectedText = function addInjectedText(item, ref, content, cursorStops, attachedData) {\n        var opts = {\n          content: content,\n          inlineClassNameAffectsLetterSpacing: true,\n          inlineClassName: ref.className,\n          cursorStops: cursorStops,\n          attachedData: attachedData\n        };\n        newDecorationsData.push({\n          item: item,\n          classNameRef: ref,\n          decoration: {\n            range: item.anchor.range,\n            options: _defineProperty({\n              // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n              description: 'InlayHint',\n              showIfCollapsed: item.anchor.range.isEmpty(),\n              // \"original\" range is empty\n              collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n              stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */\n            }, item.anchor.direction, _this6._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined)\n          }\n        });\n      };\n      var addInjectedWhitespace = function addInjectedWhitespace(item, isLast) {\n        var marginRule = _this6._ruleFactory.createClassNameRef({\n          width: \"\".concat(fontSize / 3 | 0, \"px\"),\n          display: 'inline-block'\n        });\n        addInjectedText(item, marginRule, \"\\u200A\", isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n      };\n      //\n      var _this$_getLayoutInfo = this._getLayoutInfo(),\n        fontSize = _this$_getLayoutInfo.fontSize,\n        fontFamily = _this$_getLayoutInfo.fontFamily,\n        padding = _this$_getLayoutInfo.padding,\n        isUniform = _this$_getLayoutInfo.isUniform;\n      var fontFamilyVar = '--code-editorInlayHintsFontFamily';\n      this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n      var currentLineInfo = {\n        line: 0,\n        totalLen: 0\n      };\n      var _iterator5 = _createForOfIteratorHelper(items),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var item = _step5.value;\n          if (currentLineInfo.line !== item.anchor.range.startLineNumber) {\n            currentLineInfo = {\n              line: item.anchor.range.startLineNumber,\n              totalLen: 0\n            };\n          }\n          if (currentLineInfo.totalLen > InlayHintsController_1._MAX_LABEL_LEN) {\n            continue;\n          }\n          // whitespace leading the actual label\n          if (item.hint.paddingLeft) {\n            addInjectedWhitespace(item, false);\n          }\n          // the label with its parts\n          var parts = typeof item.hint.label === 'string' ? [{\n            label: item.hint.label\n          }] : item.hint.label;\n          for (var i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            var isFirst = i === 0;\n            var isLast = i === parts.length - 1;\n            var cssProperties = {\n              fontSize: \"\".concat(fontSize, \"px\"),\n              fontFamily: \"var(\".concat(fontFamilyVar, \"), \").concat(EDITOR_FONT_DEFAULTS.fontFamily),\n              verticalAlign: isUniform ? 'baseline' : 'middle',\n              unicodeBidi: 'isolate'\n            };\n            if (isNonEmptyArray(item.hint.textEdits)) {\n              cssProperties.cursor = 'default';\n            }\n            this._fillInColors(cssProperties, item.hint);\n            if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n              // active link!\n              cssProperties.textDecoration = 'underline';\n              if (this._activeInlayHintPart.hasTriggerModifier) {\n                cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                cssProperties.cursor = 'pointer';\n              }\n            }\n            if (padding) {\n              if (isFirst && isLast) {\n                // only element\n                cssProperties.padding = \"1px \".concat(Math.max(1, fontSize / 4) | 0, \"px\");\n                cssProperties.borderRadius = \"\".concat(fontSize / 4 | 0, \"px\");\n              } else if (isFirst) {\n                // first element\n                cssProperties.padding = \"1px 0 1px \".concat(Math.max(1, fontSize / 4) | 0, \"px\");\n                cssProperties.borderRadius = \"\".concat(fontSize / 4 | 0, \"px 0 0 \").concat(fontSize / 4 | 0, \"px\");\n              } else if (isLast) {\n                // last element\n                cssProperties.padding = \"1px \".concat(Math.max(1, fontSize / 4) | 0, \"px 1px 0\");\n                cssProperties.borderRadius = \"0 \".concat(fontSize / 4 | 0, \"px \").concat(fontSize / 4 | 0, \"px 0\");\n              } else {\n                cssProperties.padding = \"1px 0 1px 0\";\n              }\n            }\n            var textlabel = part.label;\n            currentLineInfo.totalLen += textlabel.length;\n            var tooLong = false;\n            var over = currentLineInfo.totalLen - InlayHintsController_1._MAX_LABEL_LEN;\n            if (over > 0) {\n              textlabel = textlabel.slice(0, -over) + '…';\n              tooLong = true;\n            }\n            addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(textlabel), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            if (tooLong) {\n              break;\n            }\n          }\n          // whitespace trailing the actual label\n          if (item.hint.paddingRight) {\n            addInjectedWhitespace(item, true);\n          }\n          if (newDecorationsData.length > InlayHintsController_1._MAX_DECORATORS) {\n            break;\n          }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var decorationIdsToReplace = [];\n      var _iterator6 = _createForOfIteratorHelper(this._decorationsMetadata),\n        _step6;\n      try {\n        var _loop = function _loop() {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n            id = _step6$value[0],\n            metadata = _step6$value[1];\n          var range = (_b = _this6._editor.getModel()) === null || _b === void 0 ? void 0 : _b.getDecorationRange(id);\n          if (range && ranges.some(function (r) {\n            return r.containsRange(range);\n          })) {\n            decorationIdsToReplace.push(id);\n            metadata.classNameRef.dispose();\n            _this6._decorationsMetadata[\"delete\"](id);\n          }\n        };\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      var scrollState = StableEditorScrollState.capture(this._editor);\n      this._editor.changeDecorations(function (accessor) {\n        var newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(function (d) {\n          return d.decoration;\n        }));\n        for (var i = 0; i < newDecorationIds.length; i++) {\n          var data = newDecorationsData[i];\n          _this6._decorationsMetadata.set(newDecorationIds[i], data);\n        }\n      });\n      scrollState.restore(this._editor);\n    }\n  }, {\n    key: \"_fillInColors\",\n    value: function _fillInColors(props, hint) {\n      if (hint.kind === languages.InlayHintKind.Parameter) {\n        props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n        props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n      } else if (hint.kind === languages.InlayHintKind.Type) {\n        props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n        props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n      } else {\n        props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n        props.color = themeColorFromId(colors.editorInlayHintForeground);\n      }\n    }\n  }, {\n    key: \"_getLayoutInfo\",\n    value: function _getLayoutInfo() {\n      var options = this._editor.getOption(141 /* EditorOption.inlayHints */);\n      var padding = options.padding;\n      var editorFontSize = this._editor.getOption(52 /* EditorOption.fontSize */);\n      var editorFontFamily = this._editor.getOption(49 /* EditorOption.fontFamily */);\n      var fontSize = options.fontSize;\n      if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n        fontSize = editorFontSize;\n      }\n      var fontFamily = options.fontFamily || editorFontFamily;\n      var isUniform = !padding && fontFamily === editorFontFamily && fontSize === editorFontSize;\n      return {\n        fontSize: fontSize,\n        fontFamily: fontFamily,\n        padding: padding,\n        isUniform: isUniform\n      };\n    }\n  }, {\n    key: \"_removeAllDecorations\",\n    value: function _removeAllDecorations() {\n      this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n      var _iterator7 = _createForOfIteratorHelper(this._decorationsMetadata.values()),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var obj = _step7.value;\n          obj.classNameRef.dispose();\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      this._decorationsMetadata.clear();\n    }\n  }], [{\n    key: \"get\",\n    value: function get(editor) {\n      var _a;\n      return (_a = editor.getContribution(InlayHintsController_1.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n  }]);\n}();\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController._MAX_LABEL_LEN = 43;\nInlayHintsController = InlayHintsController_1 = __decorate([__param(1, ILanguageFeaturesService), __param(2, ILanguageFeatureDebounceService), __param(3, IInlayHintsCache), __param(4, ICommandService), __param(5, INotificationService), __param(6, IInstantiationService)], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n  var noBreakWhitespace = '\\xa0';\n  return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(accessor) {\n    var _len,\n      args,\n      _key2,\n      uri,\n      range,\n      _accessor$get,\n      inlayHintsProvider,\n      ref,\n      model,\n      result,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          for (_len = _args6.length, args = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n            args[_key2 - 1] = _args6[_key2];\n          }\n          uri = args[0], range = args[1];\n          assertType(URI.isUri(uri));\n          assertType(Range.isIRange(range));\n          _accessor$get = accessor.get(ILanguageFeaturesService), inlayHintsProvider = _accessor$get.inlayHintsProvider;\n          _context6.next = 7;\n          return accessor.get(ITextModelService).createModelReference(uri);\n        case 7:\n          ref = _context6.sent;\n          _context6.prev = 8;\n          _context6.next = 11;\n          return InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        case 11:\n          model = _context6.sent;\n          result = model.items.map(function (i) {\n            return i.hint;\n          });\n          setTimeout(function () {\n            return model.dispose();\n          }, 0); // dispose after sending to ext host\n          return _context6.abrupt(\"return\", result);\n        case 15:\n          _context6.prev = 15;\n          ref.dispose();\n          return _context6.finish(15);\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[8,, 15, 18]]);\n  }));\n  return function (_x6) {\n    return _ref5.apply(this, arguments);\n  };\n}());","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","InlayHintsController_1","ModifierKeyEmitter","isNonEmptyArray","RunOnceScheduler","CancellationToken","CancellationTokenSource","onUnexpectedError","DisposableStore","toDisposable","LRUCache","assertType","URI","DynamicCssRules","StableEditorScrollState","EDITOR_FONT_DEFAULTS","EditOperation","Range","languages","InjectedTextCursorStops","ModelDecorationInjectedTextOptions","ILanguageFeatureDebounceService","ILanguageFeaturesService","ITextModelService","ClickLinkGesture","InlayHintAnchor","InlayHintsFragments","goToDefinitionWithLocation","showGoToContextMenu","CommandsRegistry","ICommandService","registerSingleton","createDecorator","IInstantiationService","INotificationService","Severity","colors","themeColorFromId","InlayHintsCache","_classCallCheck","_entries","_createClass","value","get","model","_key","set","concat","uri","toString","getVersionId","IInlayHintsCache","RenderedInlayHintLabelPart","item","index","label","hint","ActiveInlayHintInfo","part","hasTriggerModifier","InlayHintsController","_editor","_languageFeaturesService","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_this","_disposables","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","_activeRenderMode","_debounceInfo","inlayHintsProvider","min","add","onDidChange","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","e","hasChanged","dispose","_removeAllDecorations","_this2","clear","options","getOption","enabled","getModel","has","defaultMode","altMode","getInstance","event","hasModel","newRenderMode","altKey","ctrlKey","shiftKey","metaKey","copies","_copyInlayHintsWithCurrentAnchor","_updateHintsDecorators","getFullModelRange","scheduler","schedule","cached","isDisposed","_cacheHintsForFastRestore","cts","watchedProviders","Set","_asyncToGenerator","_regeneratorRuntime","mark","_callee","t1","listener","myToken","inlayHints","_iterator","_step","provider","wrap","_callee$","_context","prev","next","Date","now","onWillDispose","cancel","token","create","_getHintsRanges","sent","delay","update","isCancellationRequested","abrupt","_createForOfIteratorHelper","s","n","done","onDidChangeInlayHints","isScheduled","err","f","ranges","items","t0","finish","stop","onDidScrollChange","scrollTopChanged","onDidChangeModelContent","Math","max","_installDblClickGesture","_installLinkGesture","_installContextMenu","_this3","store","gesture","sessionStore","onMouseMoveOrRelevantKeyDown","_e","_slicedToArray","mouseEvent","labelPart","_getInlayHintLabelPart","resolve","_activeInlayHintPart","command","location","undefined","lineNumber","validatePosition","position","range","getLineMaxColumn","lineHints","_getInlineHintsForRange","onCancel","onExecute","_ref2","_callee2","_callee2$","_context2","invokeFunction","Command","is","_invokeCommand","_x","apply","_iterator2","values","_step2","data","containsRange","anchor","Array","from","updateInlayHints","_this4","onMouseUp","_ref3","_callee3","edits","_callee3$","_context3","detail","preventDefault","None","textEdits","map","edit","replace","lift","text","executeEdits","_x2","_this5","onContextMenu","_ref4","_callee4","_callee4$","_context4","HTMLElement","_x3","_a","type","injectedText","attachedData","_invokeCommand2","_callee5","_this$_commandService","_callee5$","_context5","executeCommand","id","_toConsumableArray","notify","severity","Error","source","displayName","message","_x4","_x5","hints","_iterator3","_step3","_step3$value","obj","getDecorationRange","direction","copy","extra","visibleRanges","getVisibleRangesPlusViewportAboveBelow","result","_iterator4","sort","compareRangesUsingStarts","_step4","extendedRange","validateRange","startLineNumber","startColumn","endLineNumber","endColumn","areIntersectingOrTouching","push","plusRange","_this6","_b","newDecorationsData","addInjectedText","ref","content","cursorStops","opts","inlineClassNameAffectsLetterSpacing","inlineClassName","className","classNameRef","decoration","_defineProperty","description","showIfCollapsed","isEmpty","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","width","fontSize","display","Right","_this$_getLayoutInfo","_getLayoutInfo","fontFamily","padding","isUniform","fontFamilyVar","getContainerDomNode","style","setProperty","currentLineInfo","line","totalLen","_iterator5","_step5","_MAX_LABEL_LEN","paddingLeft","parts","isFirst","cssProperties","verticalAlign","unicodeBidi","cursor","_fillInColors","textDecoration","color","editorActiveLinkForeground","borderRadius","textlabel","tooLong","over","slice","fixSpace","paddingRight","_MAX_DECORATORS","decorationIdsToReplace","_iterator6","_step6","_loop","_step6$value","metadata","some","scrollState","capture","changeDecorations","accessor","newDecorationIds","deltaDecorations","restore","props","kind","InlayHintKind","Parameter","backgroundColor","editorInlayHintParameterBackground","editorInlayHintParameterForeground","Type","editorInlayHintTypeBackground","editorInlayHintTypeForeground","editorInlayHintBackground","editorInlayHintForeground","editorFontSize","editorFontFamily","removeDecorations","keys","_iterator7","_step7","editor","getContribution","ID","str","noBreakWhitespace","registerCommand","_ref5","_callee6","_len","args","_key2","_accessor$get","_args6","_callee6$","_context6","isUri","isIRange","createModelReference","object","textEditorModel","setTimeout","_x6"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlayHintsController_1;\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = InlayHintsController_1 = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController_1.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(141 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(141 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(async () => {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = await InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }, this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            cts === null || cts === void 0 ? void 0 : cts.cancel();\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute(async (e) => {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    await this._invokeCommand(part.command, label.item);\n                }\n            }\n        }));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp(async (e) => {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            await part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        });\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu(async (e) => {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                await this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        });\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    async _invokeCommand(command, item) {\n        var _a;\n        try {\n            await this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n        }\n        catch (err) {\n            this._notificationService.notify({\n                severity: Severity.Error,\n                source: item.provider.displayName,\n                message: err\n            });\n        }\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(), // \"original\" range is empty\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        let currentLineInfo = { line: 0, totalLen: 0 };\n        for (const item of items) {\n            if (currentLineInfo.line !== item.anchor.range.startLineNumber) {\n                currentLineInfo = { line: item.anchor.range.startLineNumber, totalLen: 0 };\n            }\n            if (currentLineInfo.totalLen > InlayHintsController_1._MAX_LABEL_LEN) {\n                continue;\n            }\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                    unicodeBidi: 'isolate'\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                let textlabel = part.label;\n                currentLineInfo.totalLen += textlabel.length;\n                let tooLong = false;\n                const over = currentLineInfo.totalLen - InlayHintsController_1._MAX_LABEL_LEN;\n                if (over > 0) {\n                    textlabel = textlabel.slice(0, -over) + '…';\n                    tooLong = true;\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(textlabel), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n                if (tooLong) {\n                    break;\n                }\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController_1._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const [id, metadata] of this._decorationsMetadata) {\n            const range = (_b = this._editor.getModel()) === null || _b === void 0 ? void 0 : _b.getDecorationRange(id);\n            if (range && ranges.some(r => r.containsRange(range))) {\n                decorationIdsToReplace.push(id);\n                metadata.classNameRef.dispose();\n                this._decorationsMetadata.delete(id);\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(141 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(52 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(49 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController._MAX_LABEL_LEN = 43;\nInlayHintsController = InlayHintsController_1 = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', async (accessor, ...args) => {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = await accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = await InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}