{"ast":null,"code":"import _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LineRange } from '../core/lineRange.js';\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n */\nexport var LineRangeMapping = /*#__PURE__*/function () {\n  function LineRangeMapping(originalRange, modifiedRange) {\n    _classCallCheck(this, LineRangeMapping);\n    this.original = originalRange;\n    this.modified = modifiedRange;\n  }\n  return _createClass(LineRangeMapping, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"{\".concat(this.original.toString(), \"->\").concat(this.modified.toString(), \"}\");\n    }\n  }, {\n    key: \"flip\",\n    value: function flip() {\n      return new LineRangeMapping(this.modified, this.original);\n    }\n  }, {\n    key: \"join\",\n    value: function join(other) {\n      return new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified));\n    }\n  }], [{\n    key: \"inverse\",\n    value: function inverse(mapping, originalLineCount, modifiedLineCount) {\n      var result = [];\n      var lastOriginalEndLineNumber = 1;\n      var lastModifiedEndLineNumber = 1;\n      var _iterator = _createForOfIteratorHelper(mapping),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var m = _step.value;\n          var _r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber), new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber));\n          if (!_r.modified.isEmpty) {\n            result.push(_r);\n          }\n          lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n          lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, originalLineCount + 1), new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1));\n      if (!r.modified.isEmpty) {\n        result.push(r);\n      }\n      return result;\n    }\n  }, {\n    key: \"clip\",\n    value: function clip(mapping, originalRange, modifiedRange) {\n      var result = [];\n      var _iterator2 = _createForOfIteratorHelper(mapping),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var m = _step2.value;\n          var original = m.original.intersect(originalRange);\n          var modified = m.modified.intersect(modifiedRange);\n          if (original && !original.isEmpty && modified && !modified.isEmpty) {\n            result.push(new LineRangeMapping(original, modified));\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return result;\n    }\n  }]);\n}();\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n * Also contains inner range mappings.\n */\nexport var DetailedLineRangeMapping = /*#__PURE__*/function (_LineRangeMapping) {\n  function DetailedLineRangeMapping(originalRange, modifiedRange, innerChanges) {\n    var _this;\n    _classCallCheck(this, DetailedLineRangeMapping);\n    _this = _callSuper(this, DetailedLineRangeMapping, [originalRange, modifiedRange]);\n    _this.innerChanges = innerChanges;\n    return _this;\n  }\n  _inherits(DetailedLineRangeMapping, _LineRangeMapping);\n  return _createClass(DetailedLineRangeMapping, [{\n    key: \"flip\",\n    value: function flip() {\n      var _a;\n      return new DetailedLineRangeMapping(this.modified, this.original, (_a = this.innerChanges) === null || _a === void 0 ? void 0 : _a.map(function (c) {\n        return c.flip();\n      }));\n    }\n  }, {\n    key: \"withInnerChangesFromLineRanges\",\n    value: function withInnerChangesFromLineRanges() {\n      return new DetailedLineRangeMapping(this.original, this.modified, [new RangeMapping(this.original.toExclusiveRange(), this.modified.toExclusiveRange())]);\n    }\n  }], [{\n    key: \"fromRangeMappings\",\n    value: function fromRangeMappings(rangeMappings) {\n      var originalRange = LineRange.join(rangeMappings.map(function (r) {\n        return LineRange.fromRangeInclusive(r.originalRange);\n      }));\n      var modifiedRange = LineRange.join(rangeMappings.map(function (r) {\n        return LineRange.fromRangeInclusive(r.modifiedRange);\n      }));\n      return new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings);\n    }\n  }]);\n}(LineRangeMapping);\n/**\n * Maps a range in the original text model to a range in the modified text model.\n */\nexport var RangeMapping = /*#__PURE__*/function () {\n  function RangeMapping(originalRange, modifiedRange) {\n    _classCallCheck(this, RangeMapping);\n    this.originalRange = originalRange;\n    this.modifiedRange = modifiedRange;\n  }\n  return _createClass(RangeMapping, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"{\".concat(this.originalRange.toString(), \"->\").concat(this.modifiedRange.toString(), \"}\");\n    }\n  }, {\n    key: \"flip\",\n    value: function flip() {\n      return new RangeMapping(this.modifiedRange, this.originalRange);\n    }\n  }]);\n}();","map":{"version":3,"names":["LineRange","LineRangeMapping","originalRange","modifiedRange","_classCallCheck","original","modified","_createClass","key","value","toString","concat","flip","join","other","inverse","mapping","originalLineCount","modifiedLineCount","result","lastOriginalEndLineNumber","lastModifiedEndLineNumber","_iterator","_createForOfIteratorHelper","_step","s","n","done","m","r","startLineNumber","isEmpty","push","endLineNumberExclusive","err","e","f","clip","_iterator2","_step2","intersect","DetailedLineRangeMapping","_LineRangeMapping","innerChanges","_this","_callSuper","_inherits","_a","map","c","withInnerChangesFromLineRanges","RangeMapping","toExclusiveRange","fromRangeMappings","rangeMappings","fromRangeInclusive"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/diff/rangeMapping.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LineRange } from '../core/lineRange.js';\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n */\nexport class LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber), new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = new LineRangeMapping(new LineRange(lastOriginalEndLineNumber, originalLineCount + 1), new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(new LineRangeMapping(original, modified));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${this.original.toString()}->${this.modified.toString()}}`;\n    }\n    flip() {\n        return new LineRangeMapping(this.modified, this.original);\n    }\n    join(other) {\n        return new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified));\n    }\n}\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n * Also contains inner range mappings.\n */\nexport class DetailedLineRangeMapping extends LineRangeMapping {\n    static fromRangeMappings(rangeMappings) {\n        const originalRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.originalRange)));\n        const modifiedRange = LineRange.join(rangeMappings.map(r => LineRange.fromRangeInclusive(r.modifiedRange)));\n        return new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings);\n    }\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        var _a;\n        return new DetailedLineRangeMapping(this.modified, this.original, (_a = this.innerChanges) === null || _a === void 0 ? void 0 : _a.map(c => c.flip()));\n    }\n    withInnerChangesFromLineRanges() {\n        return new DetailedLineRangeMapping(this.original, this.modified, [\n            new RangeMapping(this.original.toExclusiveRange(), this.modified.toExclusiveRange()),\n        ]);\n    }\n}\n/**\n * Maps a range in the original text model to a range in the modified text model.\n */\nexport class RangeMapping {\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`;\n    }\n    flip() {\n        return new RangeMapping(this.modifiedRange, this.originalRange);\n    }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,sBAAsB;AAChD;AACA;AACA;AACA,WAAaC,gBAAgB;EA8BzB,SAAAA,iBAAYC,aAAa,EAAEC,aAAa,EAAE;IAAAC,eAAA,OAAAH,gBAAA;IACtC,IAAI,CAACI,QAAQ,GAAGH,aAAa;IAC7B,IAAI,CAACI,QAAQ,GAAGH,aAAa;EACjC;EAAC,OAAAI,YAAA,CAAAN,gBAAA;IAAAO,GAAA;IAAAC,KAAA,EACD,SAAAC,SAAA,EAAW;MACP,WAAAC,MAAA,CAAW,IAAI,CAACN,QAAQ,CAACK,QAAQ,CAAC,CAAC,QAAAC,MAAA,CAAK,IAAI,CAACL,QAAQ,CAACI,QAAQ,CAAC,CAAC;IACpE;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAG,KAAA,EAAO;MACH,OAAO,IAAIX,gBAAgB,CAAC,IAAI,CAACK,QAAQ,EAAE,IAAI,CAACD,QAAQ,CAAC;IAC7D;EAAC;IAAAG,GAAA;IAAAC,KAAA,EACD,SAAAI,KAAKC,KAAK,EAAE;MACR,OAAO,IAAIb,gBAAgB,CAAC,IAAI,CAACI,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAACT,QAAQ,CAAC,EAAE,IAAI,CAACC,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACR,QAAQ,CAAC,CAAC;IACvG;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAzCD,SAAAM,QAAeC,OAAO,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAE;MAC1D,IAAMC,MAAM,GAAG,EAAE;MACjB,IAAIC,yBAAyB,GAAG,CAAC;MACjC,IAAIC,yBAAyB,GAAG,CAAC;MAAC,IAAAC,SAAA,GAAAC,0BAAA,CAClBP,OAAO;QAAAQ,KAAA;MAAA;QAAvB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAyB;UAAA,IAAdC,CAAC,GAAAJ,KAAA,CAAAf,KAAA;UACR,IAAMoB,EAAC,GAAG,IAAI5B,gBAAgB,CAAC,IAAID,SAAS,CAACoB,yBAAyB,EAAEQ,CAAC,CAACvB,QAAQ,CAACyB,eAAe,CAAC,EAAE,IAAI9B,SAAS,CAACqB,yBAAyB,EAAEO,CAAC,CAACtB,QAAQ,CAACwB,eAAe,CAAC,CAAC;UAC1K,IAAI,CAACD,EAAC,CAACvB,QAAQ,CAACyB,OAAO,EAAE;YACrBZ,MAAM,CAACa,IAAI,CAACH,EAAC,CAAC;UAClB;UACAT,yBAAyB,GAAGQ,CAAC,CAACvB,QAAQ,CAAC4B,sBAAsB;UAC7DZ,yBAAyB,GAAGO,CAAC,CAACtB,QAAQ,CAAC2B,sBAAsB;QACjE;MAAC,SAAAC,GAAA;QAAAZ,SAAA,CAAAa,CAAA,CAAAD,GAAA;MAAA;QAAAZ,SAAA,CAAAc,CAAA;MAAA;MACD,IAAMP,CAAC,GAAG,IAAI5B,gBAAgB,CAAC,IAAID,SAAS,CAACoB,yBAAyB,EAAEH,iBAAiB,GAAG,CAAC,CAAC,EAAE,IAAIjB,SAAS,CAACqB,yBAAyB,EAAEH,iBAAiB,GAAG,CAAC,CAAC,CAAC;MAChK,IAAI,CAACW,CAAC,CAACvB,QAAQ,CAACyB,OAAO,EAAE;QACrBZ,MAAM,CAACa,IAAI,CAACH,CAAC,CAAC;MAClB;MACA,OAAOV,MAAM;IACjB;EAAC;IAAAX,GAAA;IAAAC,KAAA,EACD,SAAA4B,KAAYrB,OAAO,EAAEd,aAAa,EAAEC,aAAa,EAAE;MAC/C,IAAMgB,MAAM,GAAG,EAAE;MAAC,IAAAmB,UAAA,GAAAf,0BAAA,CACFP,OAAO;QAAAuB,MAAA;MAAA;QAAvB,KAAAD,UAAA,CAAAb,CAAA,MAAAc,MAAA,GAAAD,UAAA,CAAAZ,CAAA,IAAAC,IAAA,GAAyB;UAAA,IAAdC,CAAC,GAAAW,MAAA,CAAA9B,KAAA;UACR,IAAMJ,QAAQ,GAAGuB,CAAC,CAACvB,QAAQ,CAACmC,SAAS,CAACtC,aAAa,CAAC;UACpD,IAAMI,QAAQ,GAAGsB,CAAC,CAACtB,QAAQ,CAACkC,SAAS,CAACrC,aAAa,CAAC;UACpD,IAAIE,QAAQ,IAAI,CAACA,QAAQ,CAAC0B,OAAO,IAAIzB,QAAQ,IAAI,CAACA,QAAQ,CAACyB,OAAO,EAAE;YAChEZ,MAAM,CAACa,IAAI,CAAC,IAAI/B,gBAAgB,CAACI,QAAQ,EAAEC,QAAQ,CAAC,CAAC;UACzD;QACJ;MAAC,SAAA4B,GAAA;QAAAI,UAAA,CAAAH,CAAA,CAAAD,GAAA;MAAA;QAAAI,UAAA,CAAAF,CAAA;MAAA;MACD,OAAOjB,MAAM;IACjB;EAAC;AAAA;AAeL;AACA;AACA;AACA;AACA,WAAasB,wBAAwB,0BAAAC,iBAAA;EAMjC,SAAAD,yBAAYvC,aAAa,EAAEC,aAAa,EAAEwC,YAAY,EAAE;IAAA,IAAAC,KAAA;IAAAxC,eAAA,OAAAqC,wBAAA;IACpDG,KAAA,GAAAC,UAAA,OAAAJ,wBAAA,GAAMvC,aAAa,EAAEC,aAAa;IAClCyC,KAAA,CAAKD,YAAY,GAAGA,YAAY;IAAC,OAAAC,KAAA;EACrC;EAACE,SAAA,CAAAL,wBAAA,EAAAC,iBAAA;EAAA,OAAAnC,YAAA,CAAAkC,wBAAA;IAAAjC,GAAA;IAAAC,KAAA,EACD,SAAAG,KAAA,EAAO;MACH,IAAImC,EAAE;MACN,OAAO,IAAIN,wBAAwB,CAAC,IAAI,CAACnC,QAAQ,EAAE,IAAI,CAACD,QAAQ,EAAE,CAAC0C,EAAE,GAAG,IAAI,CAACJ,YAAY,MAAM,IAAI,IAAII,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACrC,IAAI,CAAC,CAAC;MAAA,EAAC,CAAC;IAC1J;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EACD,SAAAyC,+BAAA,EAAiC;MAC7B,OAAO,IAAIT,wBAAwB,CAAC,IAAI,CAACpC,QAAQ,EAAE,IAAI,CAACC,QAAQ,EAAE,CAC9D,IAAI6C,YAAY,CAAC,IAAI,CAAC9C,QAAQ,CAAC+C,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC9C,QAAQ,CAAC8C,gBAAgB,CAAC,CAAC,CAAC,CACvF,CAAC;IACN;EAAC;IAAA5C,GAAA;IAAAC,KAAA,EAjBD,SAAA4C,kBAAyBC,aAAa,EAAE;MACpC,IAAMpD,aAAa,GAAGF,SAAS,CAACa,IAAI,CAACyC,aAAa,CAACN,GAAG,CAAC,UAAAnB,CAAC;QAAA,OAAI7B,SAAS,CAACuD,kBAAkB,CAAC1B,CAAC,CAAC3B,aAAa,CAAC;MAAA,EAAC,CAAC;MAC3G,IAAMC,aAAa,GAAGH,SAAS,CAACa,IAAI,CAACyC,aAAa,CAACN,GAAG,CAAC,UAAAnB,CAAC;QAAA,OAAI7B,SAAS,CAACuD,kBAAkB,CAAC1B,CAAC,CAAC1B,aAAa,CAAC;MAAA,EAAC,CAAC;MAC3G,OAAO,IAAIsC,wBAAwB,CAACvC,aAAa,EAAEC,aAAa,EAAEmD,aAAa,CAAC;IACpF;EAAC;AAAA,EALyCrD,gBAAgB;AAoB9D;AACA;AACA;AACA,WAAakD,YAAY;EACrB,SAAAA,aAAYjD,aAAa,EAAEC,aAAa,EAAE;IAAAC,eAAA,OAAA+C,YAAA;IACtC,IAAI,CAACjD,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,aAAa,GAAGA,aAAa;EACtC;EAAC,OAAAI,YAAA,CAAA4C,YAAA;IAAA3C,GAAA;IAAAC,KAAA,EACD,SAAAC,SAAA,EAAW;MACP,WAAAC,MAAA,CAAW,IAAI,CAACT,aAAa,CAACQ,QAAQ,CAAC,CAAC,QAAAC,MAAA,CAAK,IAAI,CAACR,aAAa,CAACO,QAAQ,CAAC,CAAC;IAC9E;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAG,KAAA,EAAO;MACH,OAAO,IAAIuC,YAAY,CAAC,IAAI,CAAChD,aAAa,EAAE,IAAI,CAACD,aAAa,CAAC;IACnE;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}