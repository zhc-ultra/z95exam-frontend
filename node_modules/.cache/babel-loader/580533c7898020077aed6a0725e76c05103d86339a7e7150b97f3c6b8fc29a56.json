{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { $, addDisposableListener } from '../../../../../../base/browser/dom.js';\nimport { ArrayQueue } from '../../../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../../../base/common/async.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Disposable, DisposableStore } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedWithStore, observableFromEvent, observableValue } from '../../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { assertIsDefined } from '../../../../../../base/common/types.js';\nimport { applyFontInfo } from '../../../../config/domFontInfo.js';\nimport { diffDeleteDecoration, diffRemoveIcon } from '../../registrations.contribution.js';\nimport { DiffMapping } from '../../diffEditorViewModel.js';\nimport { InlineDiffDeletedCodeMargin } from './inlineDiffDeletedCodeMargin.js';\nimport { LineSource, RenderOptions, renderLines } from './renderLines.js';\nimport { animatedObservable, joinCombine } from '../../utils.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { InlineDecoration } from '../../../../../common/viewModel.js';\nimport { IClipboardService } from '../../../../../../platform/clipboard/common/clipboardService.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\n/**\n * Ensures both editors have the same height by aligning unchanged lines.\n * In inline view mode, inserts viewzones to show deleted code from the original text model in the modified code editor.\n * Synchronizes scrolling.\n *\n * Make sure to add the view zones!\n */\nvar DiffEditorViewZones = /*#__PURE__*/function (_Disposable) {\n  function DiffEditorViewZones(_targetWindow, _editors, _diffModel, _options, _diffEditorWidget, _canIgnoreViewZoneUpdateEvent, _origViewZonesToIgnore, _modViewZonesToIgnore, _clipboardService, _contextMenuService) {\n    var _this;\n    _classCallCheck(this, DiffEditorViewZones);\n    _this = _callSuper(this, DiffEditorViewZones);\n    _this._targetWindow = _targetWindow;\n    _this._editors = _editors;\n    _this._diffModel = _diffModel;\n    _this._options = _options;\n    _this._diffEditorWidget = _diffEditorWidget;\n    _this._canIgnoreViewZoneUpdateEvent = _canIgnoreViewZoneUpdateEvent;\n    _this._origViewZonesToIgnore = _origViewZonesToIgnore;\n    _this._modViewZonesToIgnore = _modViewZonesToIgnore;\n    _this._clipboardService = _clipboardService;\n    _this._contextMenuService = _contextMenuService;\n    _this._originalTopPadding = observableValue(_this, 0);\n    _this._originalScrollOffset = observableValue(_this, 0);\n    _this._originalScrollOffsetAnimated = animatedObservable(_this._targetWindow, _this._originalScrollOffset, _this._store);\n    _this._modifiedTopPadding = observableValue(_this, 0);\n    _this._modifiedScrollOffset = observableValue(_this, 0);\n    _this._modifiedScrollOffsetAnimated = animatedObservable(_this._targetWindow, _this._modifiedScrollOffset, _this._store);\n    var state = observableValue('invalidateAlignmentsState', 0);\n    var updateImmediately = _this._register(new RunOnceScheduler(function () {\n      state.set(state.get() + 1, undefined);\n    }, 0));\n    _this._register(_this._editors.original.onDidChangeViewZones(function (_args) {\n      if (!_this._canIgnoreViewZoneUpdateEvent()) {\n        updateImmediately.schedule();\n      }\n    }));\n    _this._register(_this._editors.modified.onDidChangeViewZones(function (_args) {\n      if (!_this._canIgnoreViewZoneUpdateEvent()) {\n        updateImmediately.schedule();\n      }\n    }));\n    _this._register(_this._editors.original.onDidChangeConfiguration(function (args) {\n      if (args.hasChanged(146 /* EditorOption.wrappingInfo */) || args.hasChanged(67 /* EditorOption.lineHeight */)) {\n        updateImmediately.schedule();\n      }\n    }));\n    _this._register(_this._editors.modified.onDidChangeConfiguration(function (args) {\n      if (args.hasChanged(146 /* EditorOption.wrappingInfo */) || args.hasChanged(67 /* EditorOption.lineHeight */)) {\n        updateImmediately.schedule();\n      }\n    }));\n    var originalModelTokenizationCompleted = _this._diffModel.map(function (m) {\n      return m ? observableFromEvent(m.model.original.onDidChangeTokens, function () {\n        return m.model.original.tokenization.backgroundTokenizationState === 2;\n      } /* BackgroundTokenizationState.Completed */) : undefined;\n    }).map(function (m, reader) {\n      return m === null || m === void 0 ? void 0 : m.read(reader);\n    });\n    var alignments = derived(function (reader) {\n      /** @description alignments */\n      var diffModel = _this._diffModel.read(reader);\n      var diff = diffModel === null || diffModel === void 0 ? void 0 : diffModel.diff.read(reader);\n      if (!diffModel || !diff) {\n        return null;\n      }\n      state.read(reader);\n      var renderSideBySide = _this._options.renderSideBySide.read(reader);\n      var innerHunkAlignment = renderSideBySide;\n      return computeRangeAlignment(_this._editors.original, _this._editors.modified, diff.mappings, _this._origViewZonesToIgnore, _this._modViewZonesToIgnore, innerHunkAlignment);\n    });\n    var alignmentsSyncedMovedText = derived(function (reader) {\n      var _a;\n      /** @description alignmentsSyncedMovedText */\n      var syncedMovedText = (_a = _this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n      if (!syncedMovedText) {\n        return null;\n      }\n      state.read(reader);\n      var mappings = syncedMovedText.changes.map(function (c) {\n        return new DiffMapping(c);\n      });\n      // TODO dont include alignments outside syncedMovedText\n      return computeRangeAlignment(_this._editors.original, _this._editors.modified, mappings, _this._origViewZonesToIgnore, _this._modViewZonesToIgnore, true);\n    });\n    function createFakeLinesDiv() {\n      var r = document.createElement('div');\n      r.className = 'diagonal-fill';\n      return r;\n    }\n    var alignmentViewZonesDisposables = _this._register(new DisposableStore());\n    _this.viewZones = derivedWithStore(_this, function (reader, store) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      alignmentViewZonesDisposables.clear();\n      var alignmentsVal = alignments.read(reader) || [];\n      var origViewZones = [];\n      var modViewZones = [];\n      var modifiedTopPaddingVal = _this._modifiedTopPadding.read(reader);\n      if (modifiedTopPaddingVal > 0) {\n        modViewZones.push({\n          afterLineNumber: 0,\n          domNode: document.createElement('div'),\n          heightInPx: modifiedTopPaddingVal,\n          showInHiddenAreas: true,\n          suppressMouseDown: true\n        });\n      }\n      var originalTopPaddingVal = _this._originalTopPadding.read(reader);\n      if (originalTopPaddingVal > 0) {\n        origViewZones.push({\n          afterLineNumber: 0,\n          domNode: document.createElement('div'),\n          heightInPx: originalTopPaddingVal,\n          showInHiddenAreas: true,\n          suppressMouseDown: true\n        });\n      }\n      var renderSideBySide = _this._options.renderSideBySide.read(reader);\n      var deletedCodeLineBreaksComputer = !renderSideBySide ? (_a = _this._editors.modified._getViewModel()) === null || _a === void 0 ? void 0 : _a.createLineBreaksComputer() : undefined;\n      if (deletedCodeLineBreaksComputer) {\n        var originalModel = _this._editors.original.getModel();\n        var _iterator = _createForOfIteratorHelper(alignmentsVal),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var a = _step.value;\n            if (a.diff) {\n              for (var i = a.originalRange.startLineNumber; i < a.originalRange.endLineNumberExclusive; i++) {\n                // `i` can be out of bound when the diff has not been updated yet.\n                // In this case, we do an early return.\n                // TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n                if (i > originalModel.getLineCount()) {\n                  return {\n                    orig: origViewZones,\n                    mod: modViewZones\n                  };\n                }\n                deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.addRequest(originalModel.getLineContent(i), null, null);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      var lineBreakData = (_b = deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.finalize()) !== null && _b !== void 0 ? _b : [];\n      var lineBreakDataIdx = 0;\n      var modLineHeight = _this._editors.modified.getOption(67 /* EditorOption.lineHeight */);\n      var syncedMovedText = (_c = _this._diffModel.read(reader)) === null || _c === void 0 ? void 0 : _c.movedTextToCompare.read(reader);\n      var mightContainNonBasicASCII = (_e = (_d = _this._editors.original.getModel()) === null || _d === void 0 ? void 0 : _d.mightContainNonBasicASCII()) !== null && _e !== void 0 ? _e : false;\n      var mightContainRTL = (_g = (_f = _this._editors.original.getModel()) === null || _f === void 0 ? void 0 : _f.mightContainRTL()) !== null && _g !== void 0 ? _g : false;\n      var renderOptions = RenderOptions.fromEditor(_this._editors.modified);\n      var _iterator2 = _createForOfIteratorHelper(alignmentsVal),\n        _step2;\n      try {\n        var _loop = function _loop() {\n            var a = _step2.value;\n            if (a.diff && !renderSideBySide) {\n              if (!a.originalRange.isEmpty) {\n                originalModelTokenizationCompleted.read(reader); // Update view-zones once tokenization completes\n                var deletedCodeDomNode = document.createElement('div');\n                deletedCodeDomNode.classList.add('view-lines', 'line-delete', 'monaco-mouse-cursor-text');\n                var _originalModel = _this._editors.original.getModel();\n                // `a.originalRange` can be out of bound when the diff has not been updated yet.\n                // In this case, we do an early return.\n                // TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n                if (a.originalRange.endLineNumberExclusive - 1 > _originalModel.getLineCount()) {\n                  return {\n                    v: {\n                      orig: origViewZones,\n                      mod: modViewZones\n                    }\n                  };\n                }\n                var source = new LineSource(a.originalRange.mapToLineArray(function (l) {\n                  return _originalModel.tokenization.getLineTokens(l);\n                }), a.originalRange.mapToLineArray(function (_) {\n                  return lineBreakData[lineBreakDataIdx++];\n                }), mightContainNonBasicASCII, mightContainRTL);\n                var decorations = [];\n                var _iterator4 = _createForOfIteratorHelper(a.diff.innerChanges || []),\n                  _step4;\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var _i3 = _step4.value;\n                    decorations.push(new InlineDecoration(_i3.originalRange.delta(-(a.diff.original.startLineNumber - 1)), diffDeleteDecoration.className, 0 /* InlineDecorationType.Regular */));\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n                var result = renderLines(source, renderOptions, decorations, deletedCodeDomNode);\n                var _marginDomNode = document.createElement('div');\n                _marginDomNode.className = 'inline-deleted-margin-view-zone';\n                applyFontInfo(_marginDomNode, renderOptions.fontInfo);\n                if (_this._options.renderIndicators.read(reader)) {\n                  for (var _i = 0; _i < result.heightInLines; _i++) {\n                    var marginElement = document.createElement('div');\n                    marginElement.className = \"delete-sign \".concat(ThemeIcon.asClassName(diffRemoveIcon));\n                    marginElement.setAttribute('style', \"position:absolute;top:\".concat(_i * modLineHeight, \"px;width:\").concat(renderOptions.lineDecorationsWidth, \"px;height:\").concat(modLineHeight, \"px;right:0;\"));\n                    _marginDomNode.appendChild(marginElement);\n                  }\n                }\n                var zoneId = undefined;\n                alignmentViewZonesDisposables.add(new InlineDiffDeletedCodeMargin(function () {\n                  return assertIsDefined(zoneId);\n                }, _marginDomNode, _this._editors.modified, a.diff, _this._diffEditorWidget, result.viewLineCounts, _this._editors.original.getModel(), _this._contextMenuService, _this._clipboardService));\n                for (var _i2 = 0; _i2 < result.viewLineCounts.length; _i2++) {\n                  var count = result.viewLineCounts[_i2];\n                  // Account for wrapped lines in the (collapsed) original editor (which doesn't wrap lines).\n                  if (count > 1) {\n                    origViewZones.push({\n                      afterLineNumber: a.originalRange.startLineNumber + _i2,\n                      domNode: createFakeLinesDiv(),\n                      heightInPx: (count - 1) * modLineHeight,\n                      showInHiddenAreas: true,\n                      suppressMouseDown: true\n                    });\n                  }\n                }\n                modViewZones.push({\n                  afterLineNumber: a.modifiedRange.startLineNumber - 1,\n                  domNode: deletedCodeDomNode,\n                  heightInPx: result.heightInLines * modLineHeight,\n                  minWidthInPx: result.minWidthInPx,\n                  marginDomNode: _marginDomNode,\n                  setZoneId: function setZoneId(id) {\n                    zoneId = id;\n                  },\n                  showInHiddenAreas: true,\n                  suppressMouseDown: true\n                });\n              }\n              var marginDomNode = document.createElement('div');\n              marginDomNode.className = 'gutter-delete';\n              origViewZones.push({\n                afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                domNode: createFakeLinesDiv(),\n                heightInPx: a.modifiedHeightInPx,\n                marginDomNode: marginDomNode,\n                showInHiddenAreas: true,\n                suppressMouseDown: true\n              });\n            } else {\n              var delta = a.modifiedHeightInPx - a.originalHeightInPx;\n              if (delta > 0) {\n                if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.delta(-1).deltaLength(2).contains(a.originalRange.endLineNumberExclusive - 1)) {\n                  return 0; // continue\n                }\n                origViewZones.push({\n                  afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                  domNode: createFakeLinesDiv(),\n                  heightInPx: delta,\n                  showInHiddenAreas: true,\n                  suppressMouseDown: true\n                });\n              } else {\n                var createViewZoneMarginArrow = function createViewZoneMarginArrow() {\n                  var arrow = document.createElement('div');\n                  arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n                  store.add(addDisposableListener(arrow, 'mousedown', function (e) {\n                    return e.stopPropagation();\n                  }));\n                  store.add(addDisposableListener(arrow, 'click', function (e) {\n                    e.stopPropagation();\n                    _diffEditorWidget.revert(a.diff);\n                  }));\n                  return $('div', {}, arrow);\n                };\n                if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.delta(-1).deltaLength(2).contains(a.modifiedRange.endLineNumberExclusive - 1)) {\n                  return 0; // continue\n                }\n                var _marginDomNode2 = undefined;\n                if (a.diff && a.diff.modified.isEmpty && _this._options.shouldRenderOldRevertArrows.read(reader)) {\n                  _marginDomNode2 = createViewZoneMarginArrow();\n                }\n                modViewZones.push({\n                  afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n                  domNode: createFakeLinesDiv(),\n                  heightInPx: -delta,\n                  marginDomNode: _marginDomNode2,\n                  showInHiddenAreas: true,\n                  suppressMouseDown: true\n                });\n              }\n            }\n          },\n          _ret;\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          _ret = _loop();\n          if (_ret === 0) continue;\n          if (_ret) return _ret.v;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var _iterator3 = _createForOfIteratorHelper((_h = alignmentsSyncedMovedText.read(reader)) !== null && _h !== void 0 ? _h : []),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _a2 = _step3.value;\n          if (!(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.intersect(_a2.originalRange)) || !(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.intersect(_a2.modifiedRange))) {\n            // ignore unrelated alignments outside the synced moved text\n            continue;\n          }\n          var delta = _a2.modifiedHeightInPx - _a2.originalHeightInPx;\n          if (delta > 0) {\n            origViewZones.push({\n              afterLineNumber: _a2.originalRange.endLineNumberExclusive - 1,\n              domNode: createFakeLinesDiv(),\n              heightInPx: delta,\n              showInHiddenAreas: true,\n              suppressMouseDown: true\n            });\n          } else {\n            modViewZones.push({\n              afterLineNumber: _a2.modifiedRange.endLineNumberExclusive - 1,\n              domNode: createFakeLinesDiv(),\n              heightInPx: -delta,\n              showInHiddenAreas: true,\n              suppressMouseDown: true\n            });\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return {\n        orig: origViewZones,\n        mod: modViewZones\n      };\n    });\n    var ignoreChange = false;\n    _this._register(_this._editors.original.onDidScrollChange(function (e) {\n      if (e.scrollLeftChanged && !ignoreChange) {\n        ignoreChange = true;\n        _this._editors.modified.setScrollLeft(e.scrollLeft);\n        ignoreChange = false;\n      }\n    }));\n    _this._register(_this._editors.modified.onDidScrollChange(function (e) {\n      if (e.scrollLeftChanged && !ignoreChange) {\n        ignoreChange = true;\n        _this._editors.original.setScrollLeft(e.scrollLeft);\n        ignoreChange = false;\n      }\n    }));\n    _this._originalScrollTop = observableFromEvent(_this._editors.original.onDidScrollChange, function () {\n      return /** @description original.getScrollTop */_this._editors.original.getScrollTop();\n    });\n    _this._modifiedScrollTop = observableFromEvent(_this._editors.modified.onDidScrollChange, function () {\n      return /** @description modified.getScrollTop */_this._editors.modified.getScrollTop();\n    });\n    // origExtraHeight + origOffset - origScrollTop = modExtraHeight + modOffset - modScrollTop\n    // origScrollTop = origExtraHeight + origOffset - modExtraHeight - modOffset + modScrollTop\n    // modScrollTop = modExtraHeight + modOffset - origExtraHeight - origOffset + origScrollTop\n    // origOffset - modOffset = heightOfLines(1..Y) - heightOfLines(1..X)\n    // origScrollTop >= 0, modScrollTop >= 0\n    _this._register(autorun(function (reader) {\n      /** @description update scroll modified */\n      var newScrollTopModified = _this._originalScrollTop.read(reader) - (_this._originalScrollOffsetAnimated.get() - _this._modifiedScrollOffsetAnimated.read(reader)) - (_this._originalTopPadding.get() - _this._modifiedTopPadding.read(reader));\n      if (newScrollTopModified !== _this._editors.modified.getScrollTop()) {\n        _this._editors.modified.setScrollTop(newScrollTopModified, 1 /* ScrollType.Immediate */);\n      }\n    }));\n    _this._register(autorun(function (reader) {\n      /** @description update scroll original */\n      var newScrollTopOriginal = _this._modifiedScrollTop.read(reader) - (_this._modifiedScrollOffsetAnimated.get() - _this._originalScrollOffsetAnimated.read(reader)) - (_this._modifiedTopPadding.get() - _this._originalTopPadding.read(reader));\n      if (newScrollTopOriginal !== _this._editors.original.getScrollTop()) {\n        _this._editors.original.setScrollTop(newScrollTopOriginal, 1 /* ScrollType.Immediate */);\n      }\n    }));\n    _this._register(autorun(function (reader) {\n      var _a;\n      /** @description update editor top offsets */\n      var m = (_a = _this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n      var deltaOrigToMod = 0;\n      if (m) {\n        var trueTopOriginal = _this._editors.original.getTopForLineNumber(m.lineRangeMapping.original.startLineNumber, true) - _this._originalTopPadding.get();\n        var trueTopModified = _this._editors.modified.getTopForLineNumber(m.lineRangeMapping.modified.startLineNumber, true) - _this._modifiedTopPadding.get();\n        deltaOrigToMod = trueTopModified - trueTopOriginal;\n      }\n      if (deltaOrigToMod > 0) {\n        _this._modifiedTopPadding.set(0, undefined);\n        _this._originalTopPadding.set(deltaOrigToMod, undefined);\n      } else if (deltaOrigToMod < 0) {\n        _this._modifiedTopPadding.set(-deltaOrigToMod, undefined);\n        _this._originalTopPadding.set(0, undefined);\n      } else {\n        setTimeout(function () {\n          _this._modifiedTopPadding.set(0, undefined);\n          _this._originalTopPadding.set(0, undefined);\n        }, 400);\n      }\n      if (_this._editors.modified.hasTextFocus()) {\n        _this._originalScrollOffset.set(_this._modifiedScrollOffset.get() - deltaOrigToMod, undefined, true);\n      } else {\n        _this._modifiedScrollOffset.set(_this._originalScrollOffset.get() + deltaOrigToMod, undefined, true);\n      }\n    }));\n    return _this;\n  }\n  _inherits(DiffEditorViewZones, _Disposable);\n  return _createClass(DiffEditorViewZones);\n}(Disposable);\nDiffEditorViewZones = __decorate([__param(8, IClipboardService), __param(9, IContextMenuService)], DiffEditorViewZones);\nexport { DiffEditorViewZones };\nfunction computeRangeAlignment(originalEditor, modifiedEditor, diffs, originalEditorAlignmentViewZones, modifiedEditorAlignmentViewZones, innerHunkAlignment) {\n  var originalLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(originalEditor, originalEditorAlignmentViewZones));\n  var modifiedLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(modifiedEditor, modifiedEditorAlignmentViewZones));\n  var origLineHeight = originalEditor.getOption(67 /* EditorOption.lineHeight */);\n  var modLineHeight = modifiedEditor.getOption(67 /* EditorOption.lineHeight */);\n  var result = [];\n  var lastOriginalLineNumber = 0;\n  var lastModifiedLineNumber = 0;\n  function handleAlignmentsOutsideOfDiffs(untilOriginalLineNumberExclusive, untilModifiedLineNumberExclusive) {\n    while (true) {\n      var origNext = originalLineHeightOverrides.peek();\n      var modNext = modifiedLineHeightOverrides.peek();\n      if (origNext && origNext.lineNumber >= untilOriginalLineNumberExclusive) {\n        origNext = undefined;\n      }\n      if (modNext && modNext.lineNumber >= untilModifiedLineNumberExclusive) {\n        modNext = undefined;\n      }\n      if (!origNext && !modNext) {\n        break;\n      }\n      var distOrig = origNext ? origNext.lineNumber - lastOriginalLineNumber : Number.MAX_VALUE;\n      var distNext = modNext ? modNext.lineNumber - lastModifiedLineNumber : Number.MAX_VALUE;\n      if (distOrig < distNext) {\n        originalLineHeightOverrides.dequeue();\n        modNext = {\n          lineNumber: origNext.lineNumber - lastOriginalLineNumber + lastModifiedLineNumber,\n          heightInPx: 0\n        };\n      } else if (distOrig > distNext) {\n        modifiedLineHeightOverrides.dequeue();\n        origNext = {\n          lineNumber: modNext.lineNumber - lastModifiedLineNumber + lastOriginalLineNumber,\n          heightInPx: 0\n        };\n      } else {\n        originalLineHeightOverrides.dequeue();\n        modifiedLineHeightOverrides.dequeue();\n      }\n      result.push({\n        originalRange: LineRange.ofLength(origNext.lineNumber, 1),\n        modifiedRange: LineRange.ofLength(modNext.lineNumber, 1),\n        originalHeightInPx: origLineHeight + origNext.heightInPx,\n        modifiedHeightInPx: modLineHeight + modNext.heightInPx,\n        diff: undefined\n      });\n    }\n  }\n  var _iterator5 = _createForOfIteratorHelper(diffs),\n    _step5;\n  try {\n    var _loop2 = function _loop2() {\n      var m = _step5.value;\n      var c = m.lineRangeMapping;\n      handleAlignmentsOutsideOfDiffs(c.original.startLineNumber, c.modified.startLineNumber);\n      var first = true;\n      var lastModLineNumber = c.modified.startLineNumber;\n      var lastOrigLineNumber = c.original.startLineNumber;\n      function emitAlignment(origLineNumberExclusive, modLineNumberExclusive) {\n        var _a, _b, _c, _d;\n        if (origLineNumberExclusive < lastOrigLineNumber || modLineNumberExclusive < lastModLineNumber) {\n          return;\n        }\n        if (first) {\n          first = false;\n        } else if (origLineNumberExclusive === lastOrigLineNumber || modLineNumberExclusive === lastModLineNumber) {\n          return;\n        }\n        var originalRange = new LineRange(lastOrigLineNumber, origLineNumberExclusive);\n        var modifiedRange = new LineRange(lastModLineNumber, modLineNumberExclusive);\n        if (originalRange.isEmpty && modifiedRange.isEmpty) {\n          return;\n        }\n        var originalAdditionalHeight = (_b = (_a = originalLineHeightOverrides.takeWhile(function (v) {\n          return v.lineNumber < origLineNumberExclusive;\n        })) === null || _a === void 0 ? void 0 : _a.reduce(function (p, c) {\n          return p + c.heightInPx;\n        }, 0)) !== null && _b !== void 0 ? _b : 0;\n        var modifiedAdditionalHeight = (_d = (_c = modifiedLineHeightOverrides.takeWhile(function (v) {\n          return v.lineNumber < modLineNumberExclusive;\n        })) === null || _c === void 0 ? void 0 : _c.reduce(function (p, c) {\n          return p + c.heightInPx;\n        }, 0)) !== null && _d !== void 0 ? _d : 0;\n        result.push({\n          originalRange: originalRange,\n          modifiedRange: modifiedRange,\n          originalHeightInPx: originalRange.length * origLineHeight + originalAdditionalHeight,\n          modifiedHeightInPx: modifiedRange.length * modLineHeight + modifiedAdditionalHeight,\n          diff: m.lineRangeMapping\n        });\n        lastOrigLineNumber = origLineNumberExclusive;\n        lastModLineNumber = modLineNumberExclusive;\n      }\n      if (innerHunkAlignment) {\n        var _iterator6 = _createForOfIteratorHelper(c.innerChanges || []),\n          _step6;\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var i = _step6.value;\n            if (i.originalRange.startColumn > 1 && i.modifiedRange.startColumn > 1) {\n              // There is some unmodified text on this line before the diff\n              emitAlignment(i.originalRange.startLineNumber, i.modifiedRange.startLineNumber);\n            }\n            var originalModel = originalEditor.getModel();\n            // When the diff is invalid, the ranges might be out of bounds (this should be fixed in the diff model by applying edits directly).\n            var maxColumn = i.originalRange.endLineNumber <= originalModel.getLineCount() ? originalModel.getLineMaxColumn(i.originalRange.endLineNumber) : Number.MAX_SAFE_INTEGER;\n            if (i.originalRange.endColumn < maxColumn) {\n              // // There is some unmodified text on this line after the diff\n              emitAlignment(i.originalRange.endLineNumber, i.modifiedRange.endLineNumber);\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n      emitAlignment(c.original.endLineNumberExclusive, c.modified.endLineNumberExclusive);\n      lastOriginalLineNumber = c.original.endLineNumberExclusive;\n      lastModifiedLineNumber = c.modified.endLineNumberExclusive;\n    };\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      _loop2();\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  handleAlignmentsOutsideOfDiffs(Number.MAX_VALUE, Number.MAX_VALUE);\n  return result;\n}\nfunction getAdditionalLineHeights(editor, viewZonesToIgnore) {\n  var viewZoneHeights = [];\n  var wrappingZoneHeights = [];\n  var hasWrapping = editor.getOption(146 /* EditorOption.wrappingInfo */).wrappingColumn !== -1;\n  var coordinatesConverter = editor._getViewModel().coordinatesConverter;\n  var editorLineHeight = editor.getOption(67 /* EditorOption.lineHeight */);\n  if (hasWrapping) {\n    for (var i = 1; i <= editor.getModel().getLineCount(); i++) {\n      var lineCount = coordinatesConverter.getModelLineViewLineCount(i);\n      if (lineCount > 1) {\n        wrappingZoneHeights.push({\n          lineNumber: i,\n          heightInPx: editorLineHeight * (lineCount - 1)\n        });\n      }\n    }\n  }\n  var _iterator7 = _createForOfIteratorHelper(editor.getWhitespaces()),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var w = _step7.value;\n      if (viewZonesToIgnore.has(w.id)) {\n        continue;\n      }\n      var modelLineNumber = w.afterLineNumber === 0 ? 0 : coordinatesConverter.convertViewPositionToModelPosition(new Position(w.afterLineNumber, 1)).lineNumber;\n      viewZoneHeights.push({\n        lineNumber: modelLineNumber,\n        heightInPx: w.height\n      });\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n  var result = joinCombine(viewZoneHeights, wrappingZoneHeights, function (v) {\n    return v.lineNumber;\n  }, function (v1, v2) {\n    return {\n      lineNumber: v1.lineNumber,\n      heightInPx: v1.heightInPx + v2.heightInPx\n    };\n  });\n  return result;\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","$","addDisposableListener","ArrayQueue","RunOnceScheduler","Codicon","Disposable","DisposableStore","autorun","derived","derivedWithStore","observableFromEvent","observableValue","ThemeIcon","assertIsDefined","applyFontInfo","diffDeleteDecoration","diffRemoveIcon","DiffMapping","InlineDiffDeletedCodeMargin","LineSource","RenderOptions","renderLines","animatedObservable","joinCombine","LineRange","Position","InlineDecoration","IClipboardService","IContextMenuService","DiffEditorViewZones","_Disposable","_targetWindow","_editors","_diffModel","_options","_diffEditorWidget","_canIgnoreViewZoneUpdateEvent","_origViewZonesToIgnore","_modViewZonesToIgnore","_clipboardService","_contextMenuService","_this","_classCallCheck","_callSuper","_originalTopPadding","_originalScrollOffset","_originalScrollOffsetAnimated","_store","_modifiedTopPadding","_modifiedScrollOffset","_modifiedScrollOffsetAnimated","state","updateImmediately","_register","set","get","undefined","original","onDidChangeViewZones","_args","schedule","modified","onDidChangeConfiguration","args","hasChanged","originalModelTokenizationCompleted","map","m","model","onDidChangeTokens","tokenization","backgroundTokenizationState","reader","read","alignments","diffModel","diff","renderSideBySide","innerHunkAlignment","computeRangeAlignment","mappings","alignmentsSyncedMovedText","_a","syncedMovedText","movedTextToCompare","changes","createFakeLinesDiv","document","createElement","className","alignmentViewZonesDisposables","viewZones","store","_b","_c","_d","_e","_f","_g","_h","clear","alignmentsVal","origViewZones","modViewZones","modifiedTopPaddingVal","push","afterLineNumber","domNode","heightInPx","showInHiddenAreas","suppressMouseDown","originalTopPaddingVal","deletedCodeLineBreaksComputer","_getViewModel","createLineBreaksComputer","originalModel","getModel","_iterator","_createForOfIteratorHelper","_step","s","n","done","a","value","originalRange","startLineNumber","endLineNumberExclusive","getLineCount","orig","mod","addRequest","getLineContent","err","e","f","lineBreakData","finalize","lineBreakDataIdx","modLineHeight","getOption","mightContainNonBasicASCII","mightContainRTL","renderOptions","fromEditor","_iterator2","_step2","_loop","isEmpty","deletedCodeDomNode","classList","add","v","source","mapToLineArray","l","getLineTokens","_","decorations","_iterator4","innerChanges","_step4","delta","result","marginDomNode","fontInfo","renderIndicators","heightInLines","marginElement","concat","asClassName","setAttribute","lineDecorationsWidth","appendChild","zoneId","viewLineCounts","count","modifiedRange","minWidthInPx","setZoneId","id","modifiedHeightInPx","originalHeightInPx","lineRangeMapping","deltaLength","contains","createViewZoneMarginArrow","arrow","arrowRight","stopPropagation","revert","shouldRenderOldRevertArrows","_ret","_iterator3","_step3","intersect","ignoreChange","onDidScrollChange","scrollLeftChanged","setScrollLeft","scrollLeft","_originalScrollTop","getScrollTop","_modifiedScrollTop","newScrollTopModified","setScrollTop","newScrollTopOriginal","deltaOrigToMod","trueTopOriginal","getTopForLineNumber","trueTopModified","setTimeout","hasTextFocus","_inherits","_createClass","originalEditor","modifiedEditor","diffs","originalEditorAlignmentViewZones","modifiedEditorAlignmentViewZones","originalLineHeightOverrides","getAdditionalLineHeights","modifiedLineHeightOverrides","origLineHeight","lastOriginalLineNumber","lastModifiedLineNumber","handleAlignmentsOutsideOfDiffs","untilOriginalLineNumberExclusive","untilModifiedLineNumberExclusive","origNext","peek","modNext","lineNumber","distOrig","Number","MAX_VALUE","distNext","dequeue","ofLength","_iterator5","_step5","_loop2","first","lastModLineNumber","lastOrigLineNumber","emitAlignment","origLineNumberExclusive","modLineNumberExclusive","originalAdditionalHeight","takeWhile","reduce","p","modifiedAdditionalHeight","_iterator6","_step6","startColumn","maxColumn","endLineNumber","getLineMaxColumn","MAX_SAFE_INTEGER","endColumn","editor","viewZonesToIgnore","viewZoneHeights","wrappingZoneHeights","hasWrapping","wrappingColumn","coordinatesConverter","editorLineHeight","lineCount","getModelLineViewLineCount","_iterator7","getWhitespaces","_step7","w","has","modelLineNumber","convertViewPositionToModelPosition","height","v1","v2"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/diffEditorViewZones.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, addDisposableListener } from '../../../../../../base/browser/dom.js';\nimport { ArrayQueue } from '../../../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../../../base/common/async.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Disposable, DisposableStore } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedWithStore, observableFromEvent, observableValue } from '../../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../../base/common/themables.js';\nimport { assertIsDefined } from '../../../../../../base/common/types.js';\nimport { applyFontInfo } from '../../../../config/domFontInfo.js';\nimport { diffDeleteDecoration, diffRemoveIcon } from '../../registrations.contribution.js';\nimport { DiffMapping } from '../../diffEditorViewModel.js';\nimport { InlineDiffDeletedCodeMargin } from './inlineDiffDeletedCodeMargin.js';\nimport { LineSource, RenderOptions, renderLines } from './renderLines.js';\nimport { animatedObservable, joinCombine } from '../../utils.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { InlineDecoration } from '../../../../../common/viewModel.js';\nimport { IClipboardService } from '../../../../../../platform/clipboard/common/clipboardService.js';\nimport { IContextMenuService } from '../../../../../../platform/contextview/browser/contextView.js';\n/**\n * Ensures both editors have the same height by aligning unchanged lines.\n * In inline view mode, inserts viewzones to show deleted code from the original text model in the modified code editor.\n * Synchronizes scrolling.\n *\n * Make sure to add the view zones!\n */\nlet DiffEditorViewZones = class DiffEditorViewZones extends Disposable {\n    constructor(_targetWindow, _editors, _diffModel, _options, _diffEditorWidget, _canIgnoreViewZoneUpdateEvent, _origViewZonesToIgnore, _modViewZonesToIgnore, _clipboardService, _contextMenuService) {\n        super();\n        this._targetWindow = _targetWindow;\n        this._editors = _editors;\n        this._diffModel = _diffModel;\n        this._options = _options;\n        this._diffEditorWidget = _diffEditorWidget;\n        this._canIgnoreViewZoneUpdateEvent = _canIgnoreViewZoneUpdateEvent;\n        this._origViewZonesToIgnore = _origViewZonesToIgnore;\n        this._modViewZonesToIgnore = _modViewZonesToIgnore;\n        this._clipboardService = _clipboardService;\n        this._contextMenuService = _contextMenuService;\n        this._originalTopPadding = observableValue(this, 0);\n        this._originalScrollOffset = observableValue(this, 0);\n        this._originalScrollOffsetAnimated = animatedObservable(this._targetWindow, this._originalScrollOffset, this._store);\n        this._modifiedTopPadding = observableValue(this, 0);\n        this._modifiedScrollOffset = observableValue(this, 0);\n        this._modifiedScrollOffsetAnimated = animatedObservable(this._targetWindow, this._modifiedScrollOffset, this._store);\n        const state = observableValue('invalidateAlignmentsState', 0);\n        const updateImmediately = this._register(new RunOnceScheduler(() => {\n            state.set(state.get() + 1, undefined);\n        }, 0));\n        this._register(this._editors.original.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) {\n            updateImmediately.schedule();\n        } }));\n        this._register(this._editors.modified.onDidChangeViewZones((_args) => { if (!this._canIgnoreViewZoneUpdateEvent()) {\n            updateImmediately.schedule();\n        } }));\n        this._register(this._editors.original.onDidChangeConfiguration((args) => {\n            if (args.hasChanged(146 /* EditorOption.wrappingInfo */) || args.hasChanged(67 /* EditorOption.lineHeight */)) {\n                updateImmediately.schedule();\n            }\n        }));\n        this._register(this._editors.modified.onDidChangeConfiguration((args) => {\n            if (args.hasChanged(146 /* EditorOption.wrappingInfo */) || args.hasChanged(67 /* EditorOption.lineHeight */)) {\n                updateImmediately.schedule();\n            }\n        }));\n        const originalModelTokenizationCompleted = this._diffModel.map(m => m ? observableFromEvent(m.model.original.onDidChangeTokens, () => m.model.original.tokenization.backgroundTokenizationState === 2 /* BackgroundTokenizationState.Completed */) : undefined).map((m, reader) => m === null || m === void 0 ? void 0 : m.read(reader));\n        const alignments = derived((reader) => {\n            /** @description alignments */\n            const diffModel = this._diffModel.read(reader);\n            const diff = diffModel === null || diffModel === void 0 ? void 0 : diffModel.diff.read(reader);\n            if (!diffModel || !diff) {\n                return null;\n            }\n            state.read(reader);\n            const renderSideBySide = this._options.renderSideBySide.read(reader);\n            const innerHunkAlignment = renderSideBySide;\n            return computeRangeAlignment(this._editors.original, this._editors.modified, diff.mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, innerHunkAlignment);\n        });\n        const alignmentsSyncedMovedText = derived((reader) => {\n            var _a;\n            /** @description alignmentsSyncedMovedText */\n            const syncedMovedText = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n            if (!syncedMovedText) {\n                return null;\n            }\n            state.read(reader);\n            const mappings = syncedMovedText.changes.map(c => new DiffMapping(c));\n            // TODO dont include alignments outside syncedMovedText\n            return computeRangeAlignment(this._editors.original, this._editors.modified, mappings, this._origViewZonesToIgnore, this._modViewZonesToIgnore, true);\n        });\n        function createFakeLinesDiv() {\n            const r = document.createElement('div');\n            r.className = 'diagonal-fill';\n            return r;\n        }\n        const alignmentViewZonesDisposables = this._register(new DisposableStore());\n        this.viewZones = derivedWithStore(this, (reader, store) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            alignmentViewZonesDisposables.clear();\n            const alignmentsVal = alignments.read(reader) || [];\n            const origViewZones = [];\n            const modViewZones = [];\n            const modifiedTopPaddingVal = this._modifiedTopPadding.read(reader);\n            if (modifiedTopPaddingVal > 0) {\n                modViewZones.push({\n                    afterLineNumber: 0,\n                    domNode: document.createElement('div'),\n                    heightInPx: modifiedTopPaddingVal,\n                    showInHiddenAreas: true,\n                    suppressMouseDown: true,\n                });\n            }\n            const originalTopPaddingVal = this._originalTopPadding.read(reader);\n            if (originalTopPaddingVal > 0) {\n                origViewZones.push({\n                    afterLineNumber: 0,\n                    domNode: document.createElement('div'),\n                    heightInPx: originalTopPaddingVal,\n                    showInHiddenAreas: true,\n                    suppressMouseDown: true,\n                });\n            }\n            const renderSideBySide = this._options.renderSideBySide.read(reader);\n            const deletedCodeLineBreaksComputer = !renderSideBySide ? (_a = this._editors.modified._getViewModel()) === null || _a === void 0 ? void 0 : _a.createLineBreaksComputer() : undefined;\n            if (deletedCodeLineBreaksComputer) {\n                const originalModel = this._editors.original.getModel();\n                for (const a of alignmentsVal) {\n                    if (a.diff) {\n                        for (let i = a.originalRange.startLineNumber; i < a.originalRange.endLineNumberExclusive; i++) {\n                            // `i` can be out of bound when the diff has not been updated yet.\n                            // In this case, we do an early return.\n                            // TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n                            if (i > originalModel.getLineCount()) {\n                                return { orig: origViewZones, mod: modViewZones };\n                            }\n                            deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.addRequest(originalModel.getLineContent(i), null, null);\n                        }\n                    }\n                }\n            }\n            const lineBreakData = (_b = deletedCodeLineBreaksComputer === null || deletedCodeLineBreaksComputer === void 0 ? void 0 : deletedCodeLineBreaksComputer.finalize()) !== null && _b !== void 0 ? _b : [];\n            let lineBreakDataIdx = 0;\n            const modLineHeight = this._editors.modified.getOption(67 /* EditorOption.lineHeight */);\n            const syncedMovedText = (_c = this._diffModel.read(reader)) === null || _c === void 0 ? void 0 : _c.movedTextToCompare.read(reader);\n            const mightContainNonBasicASCII = (_e = (_d = this._editors.original.getModel()) === null || _d === void 0 ? void 0 : _d.mightContainNonBasicASCII()) !== null && _e !== void 0 ? _e : false;\n            const mightContainRTL = (_g = (_f = this._editors.original.getModel()) === null || _f === void 0 ? void 0 : _f.mightContainRTL()) !== null && _g !== void 0 ? _g : false;\n            const renderOptions = RenderOptions.fromEditor(this._editors.modified);\n            for (const a of alignmentsVal) {\n                if (a.diff && !renderSideBySide) {\n                    if (!a.originalRange.isEmpty) {\n                        originalModelTokenizationCompleted.read(reader); // Update view-zones once tokenization completes\n                        const deletedCodeDomNode = document.createElement('div');\n                        deletedCodeDomNode.classList.add('view-lines', 'line-delete', 'monaco-mouse-cursor-text');\n                        const originalModel = this._editors.original.getModel();\n                        // `a.originalRange` can be out of bound when the diff has not been updated yet.\n                        // In this case, we do an early return.\n                        // TODO@hediet: Fix this by applying the edit directly to the diff model, so that the diff is always valid.\n                        if (a.originalRange.endLineNumberExclusive - 1 > originalModel.getLineCount()) {\n                            return { orig: origViewZones, mod: modViewZones };\n                        }\n                        const source = new LineSource(a.originalRange.mapToLineArray(l => originalModel.tokenization.getLineTokens(l)), a.originalRange.mapToLineArray(_ => lineBreakData[lineBreakDataIdx++]), mightContainNonBasicASCII, mightContainRTL);\n                        const decorations = [];\n                        for (const i of a.diff.innerChanges || []) {\n                            decorations.push(new InlineDecoration(i.originalRange.delta(-(a.diff.original.startLineNumber - 1)), diffDeleteDecoration.className, 0 /* InlineDecorationType.Regular */));\n                        }\n                        const result = renderLines(source, renderOptions, decorations, deletedCodeDomNode);\n                        const marginDomNode = document.createElement('div');\n                        marginDomNode.className = 'inline-deleted-margin-view-zone';\n                        applyFontInfo(marginDomNode, renderOptions.fontInfo);\n                        if (this._options.renderIndicators.read(reader)) {\n                            for (let i = 0; i < result.heightInLines; i++) {\n                                const marginElement = document.createElement('div');\n                                marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n                                marginElement.setAttribute('style', `position:absolute;top:${i * modLineHeight}px;width:${renderOptions.lineDecorationsWidth}px;height:${modLineHeight}px;right:0;`);\n                                marginDomNode.appendChild(marginElement);\n                            }\n                        }\n                        let zoneId = undefined;\n                        alignmentViewZonesDisposables.add(new InlineDiffDeletedCodeMargin(() => assertIsDefined(zoneId), marginDomNode, this._editors.modified, a.diff, this._diffEditorWidget, result.viewLineCounts, this._editors.original.getModel(), this._contextMenuService, this._clipboardService));\n                        for (let i = 0; i < result.viewLineCounts.length; i++) {\n                            const count = result.viewLineCounts[i];\n                            // Account for wrapped lines in the (collapsed) original editor (which doesn't wrap lines).\n                            if (count > 1) {\n                                origViewZones.push({\n                                    afterLineNumber: a.originalRange.startLineNumber + i,\n                                    domNode: createFakeLinesDiv(),\n                                    heightInPx: (count - 1) * modLineHeight,\n                                    showInHiddenAreas: true,\n                                    suppressMouseDown: true,\n                                });\n                            }\n                        }\n                        modViewZones.push({\n                            afterLineNumber: a.modifiedRange.startLineNumber - 1,\n                            domNode: deletedCodeDomNode,\n                            heightInPx: result.heightInLines * modLineHeight,\n                            minWidthInPx: result.minWidthInPx,\n                            marginDomNode,\n                            setZoneId(id) { zoneId = id; },\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                    const marginDomNode = document.createElement('div');\n                    marginDomNode.className = 'gutter-delete';\n                    origViewZones.push({\n                        afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: a.modifiedHeightInPx,\n                        marginDomNode,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n                else {\n                    const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n                    if (delta > 0) {\n                        if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.delta(-1).deltaLength(2).contains(a.originalRange.endLineNumberExclusive - 1)) {\n                            continue;\n                        }\n                        origViewZones.push({\n                            afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                            domNode: createFakeLinesDiv(),\n                            heightInPx: delta,\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                    else {\n                        if (syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.delta(-1).deltaLength(2).contains(a.modifiedRange.endLineNumberExclusive - 1)) {\n                            continue;\n                        }\n                        function createViewZoneMarginArrow() {\n                            const arrow = document.createElement('div');\n                            arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n                            store.add(addDisposableListener(arrow, 'mousedown', e => e.stopPropagation()));\n                            store.add(addDisposableListener(arrow, 'click', e => {\n                                e.stopPropagation();\n                                _diffEditorWidget.revert(a.diff);\n                            }));\n                            return $('div', {}, arrow);\n                        }\n                        let marginDomNode = undefined;\n                        if (a.diff && a.diff.modified.isEmpty && this._options.shouldRenderOldRevertArrows.read(reader)) {\n                            marginDomNode = createViewZoneMarginArrow();\n                        }\n                        modViewZones.push({\n                            afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n                            domNode: createFakeLinesDiv(),\n                            heightInPx: -delta,\n                            marginDomNode,\n                            showInHiddenAreas: true,\n                            suppressMouseDown: true,\n                        });\n                    }\n                }\n            }\n            for (const a of (_h = alignmentsSyncedMovedText.read(reader)) !== null && _h !== void 0 ? _h : []) {\n                if (!(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.original.intersect(a.originalRange))\n                    || !(syncedMovedText === null || syncedMovedText === void 0 ? void 0 : syncedMovedText.lineRangeMapping.modified.intersect(a.modifiedRange))) {\n                    // ignore unrelated alignments outside the synced moved text\n                    continue;\n                }\n                const delta = a.modifiedHeightInPx - a.originalHeightInPx;\n                if (delta > 0) {\n                    origViewZones.push({\n                        afterLineNumber: a.originalRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: delta,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n                else {\n                    modViewZones.push({\n                        afterLineNumber: a.modifiedRange.endLineNumberExclusive - 1,\n                        domNode: createFakeLinesDiv(),\n                        heightInPx: -delta,\n                        showInHiddenAreas: true,\n                        suppressMouseDown: true,\n                    });\n                }\n            }\n            return { orig: origViewZones, mod: modViewZones };\n        });\n        let ignoreChange = false;\n        this._register(this._editors.original.onDidScrollChange(e => {\n            if (e.scrollLeftChanged && !ignoreChange) {\n                ignoreChange = true;\n                this._editors.modified.setScrollLeft(e.scrollLeft);\n                ignoreChange = false;\n            }\n        }));\n        this._register(this._editors.modified.onDidScrollChange(e => {\n            if (e.scrollLeftChanged && !ignoreChange) {\n                ignoreChange = true;\n                this._editors.original.setScrollLeft(e.scrollLeft);\n                ignoreChange = false;\n            }\n        }));\n        this._originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => /** @description original.getScrollTop */ this._editors.original.getScrollTop());\n        this._modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => /** @description modified.getScrollTop */ this._editors.modified.getScrollTop());\n        // origExtraHeight + origOffset - origScrollTop = modExtraHeight + modOffset - modScrollTop\n        // origScrollTop = origExtraHeight + origOffset - modExtraHeight - modOffset + modScrollTop\n        // modScrollTop = modExtraHeight + modOffset - origExtraHeight - origOffset + origScrollTop\n        // origOffset - modOffset = heightOfLines(1..Y) - heightOfLines(1..X)\n        // origScrollTop >= 0, modScrollTop >= 0\n        this._register(autorun(reader => {\n            /** @description update scroll modified */\n            const newScrollTopModified = this._originalScrollTop.read(reader)\n                - (this._originalScrollOffsetAnimated.get() - this._modifiedScrollOffsetAnimated.read(reader))\n                - (this._originalTopPadding.get() - this._modifiedTopPadding.read(reader));\n            if (newScrollTopModified !== this._editors.modified.getScrollTop()) {\n                this._editors.modified.setScrollTop(newScrollTopModified, 1 /* ScrollType.Immediate */);\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description update scroll original */\n            const newScrollTopOriginal = this._modifiedScrollTop.read(reader)\n                - (this._modifiedScrollOffsetAnimated.get() - this._originalScrollOffsetAnimated.read(reader))\n                - (this._modifiedTopPadding.get() - this._originalTopPadding.read(reader));\n            if (newScrollTopOriginal !== this._editors.original.getScrollTop()) {\n                this._editors.original.setScrollTop(newScrollTopOriginal, 1 /* ScrollType.Immediate */);\n            }\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description update editor top offsets */\n            const m = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTextToCompare.read(reader);\n            let deltaOrigToMod = 0;\n            if (m) {\n                const trueTopOriginal = this._editors.original.getTopForLineNumber(m.lineRangeMapping.original.startLineNumber, true) - this._originalTopPadding.get();\n                const trueTopModified = this._editors.modified.getTopForLineNumber(m.lineRangeMapping.modified.startLineNumber, true) - this._modifiedTopPadding.get();\n                deltaOrigToMod = trueTopModified - trueTopOriginal;\n            }\n            if (deltaOrigToMod > 0) {\n                this._modifiedTopPadding.set(0, undefined);\n                this._originalTopPadding.set(deltaOrigToMod, undefined);\n            }\n            else if (deltaOrigToMod < 0) {\n                this._modifiedTopPadding.set(-deltaOrigToMod, undefined);\n                this._originalTopPadding.set(0, undefined);\n            }\n            else {\n                setTimeout(() => {\n                    this._modifiedTopPadding.set(0, undefined);\n                    this._originalTopPadding.set(0, undefined);\n                }, 400);\n            }\n            if (this._editors.modified.hasTextFocus()) {\n                this._originalScrollOffset.set(this._modifiedScrollOffset.get() - deltaOrigToMod, undefined, true);\n            }\n            else {\n                this._modifiedScrollOffset.set(this._originalScrollOffset.get() + deltaOrigToMod, undefined, true);\n            }\n        }));\n    }\n};\nDiffEditorViewZones = __decorate([\n    __param(8, IClipboardService),\n    __param(9, IContextMenuService)\n], DiffEditorViewZones);\nexport { DiffEditorViewZones };\nfunction computeRangeAlignment(originalEditor, modifiedEditor, diffs, originalEditorAlignmentViewZones, modifiedEditorAlignmentViewZones, innerHunkAlignment) {\n    const originalLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(originalEditor, originalEditorAlignmentViewZones));\n    const modifiedLineHeightOverrides = new ArrayQueue(getAdditionalLineHeights(modifiedEditor, modifiedEditorAlignmentViewZones));\n    const origLineHeight = originalEditor.getOption(67 /* EditorOption.lineHeight */);\n    const modLineHeight = modifiedEditor.getOption(67 /* EditorOption.lineHeight */);\n    const result = [];\n    let lastOriginalLineNumber = 0;\n    let lastModifiedLineNumber = 0;\n    function handleAlignmentsOutsideOfDiffs(untilOriginalLineNumberExclusive, untilModifiedLineNumberExclusive) {\n        while (true) {\n            let origNext = originalLineHeightOverrides.peek();\n            let modNext = modifiedLineHeightOverrides.peek();\n            if (origNext && origNext.lineNumber >= untilOriginalLineNumberExclusive) {\n                origNext = undefined;\n            }\n            if (modNext && modNext.lineNumber >= untilModifiedLineNumberExclusive) {\n                modNext = undefined;\n            }\n            if (!origNext && !modNext) {\n                break;\n            }\n            const distOrig = origNext ? origNext.lineNumber - lastOriginalLineNumber : Number.MAX_VALUE;\n            const distNext = modNext ? modNext.lineNumber - lastModifiedLineNumber : Number.MAX_VALUE;\n            if (distOrig < distNext) {\n                originalLineHeightOverrides.dequeue();\n                modNext = {\n                    lineNumber: origNext.lineNumber - lastOriginalLineNumber + lastModifiedLineNumber,\n                    heightInPx: 0,\n                };\n            }\n            else if (distOrig > distNext) {\n                modifiedLineHeightOverrides.dequeue();\n                origNext = {\n                    lineNumber: modNext.lineNumber - lastModifiedLineNumber + lastOriginalLineNumber,\n                    heightInPx: 0,\n                };\n            }\n            else {\n                originalLineHeightOverrides.dequeue();\n                modifiedLineHeightOverrides.dequeue();\n            }\n            result.push({\n                originalRange: LineRange.ofLength(origNext.lineNumber, 1),\n                modifiedRange: LineRange.ofLength(modNext.lineNumber, 1),\n                originalHeightInPx: origLineHeight + origNext.heightInPx,\n                modifiedHeightInPx: modLineHeight + modNext.heightInPx,\n                diff: undefined,\n            });\n        }\n    }\n    for (const m of diffs) {\n        const c = m.lineRangeMapping;\n        handleAlignmentsOutsideOfDiffs(c.original.startLineNumber, c.modified.startLineNumber);\n        let first = true;\n        let lastModLineNumber = c.modified.startLineNumber;\n        let lastOrigLineNumber = c.original.startLineNumber;\n        function emitAlignment(origLineNumberExclusive, modLineNumberExclusive) {\n            var _a, _b, _c, _d;\n            if (origLineNumberExclusive < lastOrigLineNumber || modLineNumberExclusive < lastModLineNumber) {\n                return;\n            }\n            if (first) {\n                first = false;\n            }\n            else if (origLineNumberExclusive === lastOrigLineNumber || modLineNumberExclusive === lastModLineNumber) {\n                return;\n            }\n            const originalRange = new LineRange(lastOrigLineNumber, origLineNumberExclusive);\n            const modifiedRange = new LineRange(lastModLineNumber, modLineNumberExclusive);\n            if (originalRange.isEmpty && modifiedRange.isEmpty) {\n                return;\n            }\n            const originalAdditionalHeight = (_b = (_a = originalLineHeightOverrides\n                .takeWhile(v => v.lineNumber < origLineNumberExclusive)) === null || _a === void 0 ? void 0 : _a.reduce((p, c) => p + c.heightInPx, 0)) !== null && _b !== void 0 ? _b : 0;\n            const modifiedAdditionalHeight = (_d = (_c = modifiedLineHeightOverrides\n                .takeWhile(v => v.lineNumber < modLineNumberExclusive)) === null || _c === void 0 ? void 0 : _c.reduce((p, c) => p + c.heightInPx, 0)) !== null && _d !== void 0 ? _d : 0;\n            result.push({\n                originalRange,\n                modifiedRange,\n                originalHeightInPx: originalRange.length * origLineHeight + originalAdditionalHeight,\n                modifiedHeightInPx: modifiedRange.length * modLineHeight + modifiedAdditionalHeight,\n                diff: m.lineRangeMapping,\n            });\n            lastOrigLineNumber = origLineNumberExclusive;\n            lastModLineNumber = modLineNumberExclusive;\n        }\n        if (innerHunkAlignment) {\n            for (const i of c.innerChanges || []) {\n                if (i.originalRange.startColumn > 1 && i.modifiedRange.startColumn > 1) {\n                    // There is some unmodified text on this line before the diff\n                    emitAlignment(i.originalRange.startLineNumber, i.modifiedRange.startLineNumber);\n                }\n                const originalModel = originalEditor.getModel();\n                // When the diff is invalid, the ranges might be out of bounds (this should be fixed in the diff model by applying edits directly).\n                const maxColumn = i.originalRange.endLineNumber <= originalModel.getLineCount() ? originalModel.getLineMaxColumn(i.originalRange.endLineNumber) : Number.MAX_SAFE_INTEGER;\n                if (i.originalRange.endColumn < maxColumn) {\n                    // // There is some unmodified text on this line after the diff\n                    emitAlignment(i.originalRange.endLineNumber, i.modifiedRange.endLineNumber);\n                }\n            }\n        }\n        emitAlignment(c.original.endLineNumberExclusive, c.modified.endLineNumberExclusive);\n        lastOriginalLineNumber = c.original.endLineNumberExclusive;\n        lastModifiedLineNumber = c.modified.endLineNumberExclusive;\n    }\n    handleAlignmentsOutsideOfDiffs(Number.MAX_VALUE, Number.MAX_VALUE);\n    return result;\n}\nfunction getAdditionalLineHeights(editor, viewZonesToIgnore) {\n    const viewZoneHeights = [];\n    const wrappingZoneHeights = [];\n    const hasWrapping = editor.getOption(146 /* EditorOption.wrappingInfo */).wrappingColumn !== -1;\n    const coordinatesConverter = editor._getViewModel().coordinatesConverter;\n    const editorLineHeight = editor.getOption(67 /* EditorOption.lineHeight */);\n    if (hasWrapping) {\n        for (let i = 1; i <= editor.getModel().getLineCount(); i++) {\n            const lineCount = coordinatesConverter.getModelLineViewLineCount(i);\n            if (lineCount > 1) {\n                wrappingZoneHeights.push({ lineNumber: i, heightInPx: editorLineHeight * (lineCount - 1) });\n            }\n        }\n    }\n    for (const w of editor.getWhitespaces()) {\n        if (viewZonesToIgnore.has(w.id)) {\n            continue;\n        }\n        const modelLineNumber = w.afterLineNumber === 0 ? 0 : coordinatesConverter.convertViewPositionToModelPosition(new Position(w.afterLineNumber, 1)).lineNumber;\n        viewZoneHeights.push({ lineNumber: modelLineNumber, heightInPx: w.height });\n    }\n    const result = joinCombine(viewZoneHeights, wrappingZoneHeights, v => v.lineNumber, (v1, v2) => ({ lineNumber: v1.lineNumber, heightInPx: v1.heightInPx + v2.heightInPx }));\n    return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}