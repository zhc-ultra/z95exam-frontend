{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var LinePart = /*#__PURE__*/function () {\n  function LinePart(\n  /**\n   * last char index of this token (not inclusive).\n   */\n  endIndex, type, metadata, containsRTL) {\n    _classCallCheck(this, LinePart);\n    this.endIndex = endIndex;\n    this.type = type;\n    this.metadata = metadata;\n    this.containsRTL = containsRTL;\n    this._linePartBrand = undefined;\n  }\n  return _createClass(LinePart, [{\n    key: \"isWhitespace\",\n    value: function isWhitespace() {\n      return this.metadata & 1 /* LinePartMetadata.IS_WHITESPACE_MASK */ ? true : false;\n    }\n  }, {\n    key: \"isPseudoAfter\",\n    value: function isPseudoAfter() {\n      return this.metadata & 4 /* LinePartMetadata.PSEUDO_AFTER_MASK */ ? true : false;\n    }\n  }]);\n}();","map":{"version":3,"names":["LinePart","endIndex","type","metadata","containsRTL","_classCallCheck","_linePartBrand","undefined","_createClass","key","value","isWhitespace","isPseudoAfter"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/viewLayout/linePart.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LinePart {\n    constructor(\n    /**\n     * last char index of this token (not inclusive).\n     */\n    endIndex, type, metadata, containsRTL) {\n        this.endIndex = endIndex;\n        this.type = type;\n        this.metadata = metadata;\n        this.containsRTL = containsRTL;\n        this._linePartBrand = undefined;\n    }\n    isWhitespace() {\n        return (this.metadata & 1 /* LinePartMetadata.IS_WHITESPACE_MASK */ ? true : false);\n    }\n    isPseudoAfter() {\n        return (this.metadata & 4 /* LinePartMetadata.PSEUDO_AFTER_MASK */ ? true : false);\n    }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,WAAaA,QAAQ;EACjB,SAAAA;EACA;AACJ;AACA;EACIC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IAAAC,eAAA,OAAAL,QAAA;IACnC,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,cAAc,GAAGC,SAAS;EACnC;EAAC,OAAAC,YAAA,CAAAR,QAAA;IAAAS,GAAA;IAAAC,KAAA,EACD,SAAAC,aAAA,EAAe;MACX,OAAQ,IAAI,CAACR,QAAQ,GAAG,CAAC,CAAC,4CAA4C,IAAI,GAAG,KAAK;IACtF;EAAC;IAAAM,GAAA;IAAAC,KAAA,EACD,SAAAE,cAAA,EAAgB;MACZ,OAAQ,IAAI,CAACT,QAAQ,GAAG,CAAC,CAAC,2CAA2C,IAAI,GAAG,KAAK;IACrF;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}