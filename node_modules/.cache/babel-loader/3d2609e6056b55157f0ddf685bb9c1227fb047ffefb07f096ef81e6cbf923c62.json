{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from '../../../common/core/textEdit.js';\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { findFirstMaxBy } from '../../../../base/common/arraysFind.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEdit.js';\nexport var SuggestWidgetAdaptor = /*#__PURE__*/function (_Disposable) {\n  function SuggestWidgetAdaptor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\n    var _this;\n    _classCallCheck(this, SuggestWidgetAdaptor);\n    _this = _callSuper(this, SuggestWidgetAdaptor);\n    _this.editor = editor;\n    _this.suggestControllerPreselector = suggestControllerPreselector;\n    _this.checkModelVersion = checkModelVersion;\n    _this.onWillAccept = onWillAccept;\n    _this.isSuggestWidgetVisible = false;\n    _this.isShiftKeyPressed = false;\n    _this._isActive = false;\n    _this._currentSuggestItemInfo = undefined;\n    _this._selectedItem = observableValue(_this, undefined);\n    // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n    _this._register(editor.onKeyDown(function (e) {\n      if (e.shiftKey && !_this.isShiftKeyPressed) {\n        _this.isShiftKeyPressed = true;\n        _this.update(_this._isActive);\n      }\n    }));\n    _this._register(editor.onKeyUp(function (e) {\n      if (e.shiftKey && _this.isShiftKeyPressed) {\n        _this.isShiftKeyPressed = false;\n        _this.update(_this._isActive);\n      }\n    }));\n    var suggestController = SuggestController.get(_this.editor);\n    if (suggestController) {\n      _this._register(suggestController.registerSelector({\n        priority: 100,\n        select: function select(model, pos, suggestItems) {\n          transaction(function (tx) {\n            return _this.checkModelVersion(tx);\n          });\n          var textModel = _this.editor.getModel();\n          if (!textModel) {\n            // Should not happen\n            return -1;\n          }\n          var i = _this.suggestControllerPreselector();\n          var itemToPreselect = i ? singleTextRemoveCommonPrefix(i, textModel) : undefined;\n          if (!itemToPreselect) {\n            return -1;\n          }\n          var position = Position.lift(pos);\n          var candidates = suggestItems.map(function (suggestItem, index) {\n            var suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, _this.isShiftKeyPressed);\n            var suggestItemTextEdit = singleTextRemoveCommonPrefix(suggestItemInfo.toSingleTextEdit(), textModel);\n            var valid = singleTextEditAugments(itemToPreselect, suggestItemTextEdit);\n            return {\n              index: index,\n              valid: valid,\n              prefixLength: suggestItemTextEdit.text.length,\n              suggestItem: suggestItem\n            };\n          }).filter(function (item) {\n            return item && item.valid && item.prefixLength > 0;\n          });\n          var result = findFirstMaxBy(candidates, compareBy(function (s) {\n            return s.prefixLength;\n          }, numberComparator));\n          return result ? result.index : -1;\n        }\n      }));\n      var isBoundToSuggestWidget = false;\n      var bindToSuggestWidget = function bindToSuggestWidget() {\n        if (isBoundToSuggestWidget) {\n          return;\n        }\n        isBoundToSuggestWidget = true;\n        _this._register(suggestController.widget.value.onDidShow(function () {\n          _this.isSuggestWidgetVisible = true;\n          _this.update(true);\n        }));\n        _this._register(suggestController.widget.value.onDidHide(function () {\n          _this.isSuggestWidgetVisible = false;\n          _this.update(false);\n        }));\n        _this._register(suggestController.widget.value.onDidFocus(function () {\n          _this.isSuggestWidgetVisible = true;\n          _this.update(true);\n        }));\n      };\n      _this._register(Event.once(suggestController.model.onDidTrigger)(function (e) {\n        bindToSuggestWidget();\n      }));\n      _this._register(suggestController.onWillInsertSuggestItem(function (e) {\n        var position = _this.editor.getPosition();\n        var model = _this.editor.getModel();\n        if (!position || !model) {\n          return undefined;\n        }\n        var suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, _this.isShiftKeyPressed);\n        _this.onWillAccept(suggestItemInfo);\n      }));\n    }\n    _this.update(_this._isActive);\n    return _this;\n  }\n  _inherits(SuggestWidgetAdaptor, _Disposable);\n  return _createClass(SuggestWidgetAdaptor, [{\n    key: \"selectedItem\",\n    get: function get() {\n      return this._selectedItem;\n    }\n  }, {\n    key: \"update\",\n    value: function update(newActive) {\n      var _this2 = this;\n      var newInlineCompletion = this.getSuggestItemInfo();\n      if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n        this._isActive = newActive;\n        this._currentSuggestItemInfo = newInlineCompletion;\n        transaction(function (tx) {\n          /** @description Update state from suggest widget */\n          _this2.checkModelVersion(tx);\n          _this2._selectedItem.set(_this2._isActive ? _this2._currentSuggestItemInfo : undefined, tx);\n        });\n      }\n    }\n  }, {\n    key: \"getSuggestItemInfo\",\n    value: function getSuggestItemInfo() {\n      var suggestController = SuggestController.get(this.editor);\n      if (!suggestController || !this.isSuggestWidgetVisible) {\n        return undefined;\n      }\n      var focusedItem = suggestController.widget.value.getFocusedItem();\n      var position = this.editor.getPosition();\n      var model = this.editor.getModel();\n      if (!focusedItem || !position || !model) {\n        return undefined;\n      }\n      return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n  }, {\n    key: \"stopForceRenderingAbove\",\n    value: function stopForceRenderingAbove() {\n      var suggestController = SuggestController.get(this.editor);\n      suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n  }, {\n    key: \"forceRenderingAbove\",\n    value: function forceRenderingAbove() {\n      var suggestController = SuggestController.get(this.editor);\n      suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n  }]);\n}(Disposable);\nexport var SuggestItemInfo = /*#__PURE__*/function () {\n  function SuggestItemInfo(range, insertText, completionItemKind, isSnippetText) {\n    _classCallCheck(this, SuggestItemInfo);\n    this.range = range;\n    this.insertText = insertText;\n    this.completionItemKind = completionItemKind;\n    this.isSnippetText = isSnippetText;\n  }\n  return _createClass(SuggestItemInfo, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.range.equalsRange(other.range) && this.insertText === other.insertText && this.completionItemKind === other.completionItemKind && this.isSnippetText === other.isSnippetText;\n    }\n  }, {\n    key: \"toSelectedSuggestionInfo\",\n    value: function toSelectedSuggestionInfo() {\n      return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n  }, {\n    key: \"toSingleTextEdit\",\n    value: function toSingleTextEdit() {\n      return new SingleTextEdit(this.range, this.insertText);\n    }\n  }], [{\n    key: \"fromSuggestion\",\n    value: function fromSuggestion(suggestController, model, position, item, toggleMode) {\n      var insertText = item.completion.insertText;\n      var isSnippetText = false;\n      if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n        var snippet = new SnippetParser().parse(insertText);\n        if (snippet.children.length < 100) {\n          // Adjust whitespace is expensive.\n          SnippetSession.adjustWhitespace(model, position, true, snippet);\n        }\n        insertText = snippet.toString();\n        isSnippetText = true;\n      }\n      var info = suggestController.getOverwriteInfo(item, toggleMode);\n      return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n  }]);\n}();\nfunction suggestItemInfoEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.equals(b);\n}","map":{"version":3,"names":["Event","Disposable","Position","Range","SelectedSuggestionInfo","SnippetParser","SnippetSession","SuggestController","observableValue","transaction","SingleTextEdit","compareBy","numberComparator","findFirstMaxBy","singleTextEditAugments","singleTextRemoveCommonPrefix","SuggestWidgetAdaptor","_Disposable","editor","suggestControllerPreselector","checkModelVersion","onWillAccept","_this","_classCallCheck","_callSuper","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","undefined","_selectedItem","_register","onKeyDown","e","shiftKey","update","onKeyUp","suggestController","get","registerSelector","priority","select","model","pos","suggestItems","tx","textModel","getModel","i","itemToPreselect","position","lift","candidates","map","suggestItem","index","suggestItemInfo","SuggestItemInfo","fromSuggestion","suggestItemTextEdit","toSingleTextEdit","valid","prefixLength","text","length","filter","item","result","s","isBoundToSuggestWidget","bindToSuggestWidget","widget","value","onDidShow","onDidHide","onDidFocus","once","onDidTrigger","onWillInsertSuggestItem","getPosition","_inherits","_createClass","key","newActive","_this2","newInlineCompletion","getSuggestItemInfo","suggestItemInfoEquals","set","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","range","insertText","completionItemKind","isSnippetText","equals","other","equalsRange","toSelectedSuggestionInfo","toggleMode","completion","insertTextRules","snippet","parse","children","adjustWhitespace","toString","info","getOverwriteInfo","fromPositions","delta","overwriteBefore","Math","max","overwriteAfter","kind","a","b"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from '../../../common/core/textEdit.js';\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { findFirstMaxBy } from '../../../../base/common/arraysFind.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEdit.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    constructor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.checkModelVersion = checkModelVersion;\n        this.onWillAccept = onWillAccept;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._selectedItem = observableValue(this, undefined);\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    transaction(tx => this.checkModelVersion(tx));\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const i = this.suggestControllerPreselector();\n                    const itemToPreselect = i ? singleTextRemoveCommonPrefix(i, textModel) : undefined;\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = singleTextRemoveCommonPrefix(suggestItemInfo.toSingleTextEdit(), textModel);\n                        const valid = singleTextEditAugments(itemToPreselect, suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findFirstMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n            this._register(suggestController.onWillInsertSuggestItem(e => {\n                const position = this.editor.getPosition();\n                const model = this.editor.getModel();\n                if (!position || !model) {\n                    return undefined;\n                }\n                const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\n                this.onWillAccept(suggestItemInfo);\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            transaction(tx => {\n                /** @description Update state from suggest widget */\n                this.checkModelVersion(tx);\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n            });\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,kCAAkC;AACxD,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,KAAK,QAAQ,+BAA+B;AACrD,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,cAAc,QAAQ,yCAAyC;AACxE,SAASC,iBAAiB,QAAQ,4CAA4C;AAC9E,SAASC,eAAe,EAAEC,WAAW,QAAQ,uCAAuC;AACpF,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,SAAS,EAAEC,gBAAgB,QAAQ,mCAAmC;AAC/E,SAASC,cAAc,QAAQ,uCAAuC;AACtE,SAASC,sBAAsB,EAAEC,4BAA4B,QAAQ,qBAAqB;AAC1F,WAAaC,oBAAoB,0BAAAC,WAAA;EAI7B,SAAAD,qBAAYE,MAAM,EAAEC,4BAA4B,EAAEC,iBAAiB,EAAEC,YAAY,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,oBAAA;IAC/EM,KAAA,GAAAE,UAAA,OAAAR,oBAAA;IACAM,KAAA,CAAKJ,MAAM,GAAGA,MAAM;IACpBI,KAAA,CAAKH,4BAA4B,GAAGA,4BAA4B;IAChEG,KAAA,CAAKF,iBAAiB,GAAGA,iBAAiB;IAC1CE,KAAA,CAAKD,YAAY,GAAGA,YAAY;IAChCC,KAAA,CAAKG,sBAAsB,GAAG,KAAK;IACnCH,KAAA,CAAKI,iBAAiB,GAAG,KAAK;IAC9BJ,KAAA,CAAKK,SAAS,GAAG,KAAK;IACtBL,KAAA,CAAKM,uBAAuB,GAAGC,SAAS;IACxCP,KAAA,CAAKQ,aAAa,GAAGtB,eAAe,CAAAc,KAAA,EAAOO,SAAS,CAAC;IACrD;IACAP,KAAA,CAAKS,SAAS,CAACb,MAAM,CAACc,SAAS,CAAC,UAAAC,CAAC,EAAI;MACjC,IAAIA,CAAC,CAACC,QAAQ,IAAI,CAACZ,KAAA,CAAKI,iBAAiB,EAAE;QACvCJ,KAAA,CAAKI,iBAAiB,GAAG,IAAI;QAC7BJ,KAAA,CAAKa,MAAM,CAACb,KAAA,CAAKK,SAAS,CAAC;MAC/B;IACJ,CAAC,CAAC,CAAC;IACHL,KAAA,CAAKS,SAAS,CAACb,MAAM,CAACkB,OAAO,CAAC,UAAAH,CAAC,EAAI;MAC/B,IAAIA,CAAC,CAACC,QAAQ,IAAIZ,KAAA,CAAKI,iBAAiB,EAAE;QACtCJ,KAAA,CAAKI,iBAAiB,GAAG,KAAK;QAC9BJ,KAAA,CAAKa,MAAM,CAACb,KAAA,CAAKK,SAAS,CAAC;MAC/B;IACJ,CAAC,CAAC,CAAC;IACH,IAAMU,iBAAiB,GAAG9B,iBAAiB,CAAC+B,GAAG,CAAChB,KAAA,CAAKJ,MAAM,CAAC;IAC5D,IAAImB,iBAAiB,EAAE;MACnBf,KAAA,CAAKS,SAAS,CAACM,iBAAiB,CAACE,gBAAgB,CAAC;QAC9CC,QAAQ,EAAE,GAAG;QACbC,MAAM,EAAE,SAAAA,OAACC,KAAK,EAAEC,GAAG,EAAEC,YAAY,EAAK;UAClCnC,WAAW,CAAC,UAAAoC,EAAE;YAAA,OAAIvB,KAAA,CAAKF,iBAAiB,CAACyB,EAAE,CAAC;UAAA,EAAC;UAC7C,IAAMC,SAAS,GAAGxB,KAAA,CAAKJ,MAAM,CAAC6B,QAAQ,CAAC,CAAC;UACxC,IAAI,CAACD,SAAS,EAAE;YACZ;YACA,OAAO,CAAC,CAAC;UACb;UACA,IAAME,CAAC,GAAG1B,KAAA,CAAKH,4BAA4B,CAAC,CAAC;UAC7C,IAAM8B,eAAe,GAAGD,CAAC,GAAGjC,4BAA4B,CAACiC,CAAC,EAAEF,SAAS,CAAC,GAAGjB,SAAS;UAClF,IAAI,CAACoB,eAAe,EAAE;YAClB,OAAO,CAAC,CAAC;UACb;UACA,IAAMC,QAAQ,GAAGhD,QAAQ,CAACiD,IAAI,CAACR,GAAG,CAAC;UACnC,IAAMS,UAAU,GAAGR,YAAY,CAC1BS,GAAG,CAAC,UAACC,WAAW,EAAEC,KAAK,EAAK;YAC7B,IAAMC,eAAe,GAAGC,eAAe,CAACC,cAAc,CAACrB,iBAAiB,EAAES,SAAS,EAAEI,QAAQ,EAAEI,WAAW,EAAEhC,KAAA,CAAKI,iBAAiB,CAAC;YACnI,IAAMiC,mBAAmB,GAAG5C,4BAA4B,CAACyC,eAAe,CAACI,gBAAgB,CAAC,CAAC,EAAEd,SAAS,CAAC;YACvG,IAAMe,KAAK,GAAG/C,sBAAsB,CAACmC,eAAe,EAAEU,mBAAmB,CAAC;YAC1E,OAAO;cAAEJ,KAAK,EAALA,KAAK;cAAEM,KAAK,EAALA,KAAK;cAAEC,YAAY,EAAEH,mBAAmB,CAACI,IAAI,CAACC,MAAM;cAAEV,WAAW,EAAXA;YAAY,CAAC;UACvF,CAAC,CAAC,CACGW,MAAM,CAAC,UAAAC,IAAI;YAAA,OAAIA,IAAI,IAAIA,IAAI,CAACL,KAAK,IAAIK,IAAI,CAACJ,YAAY,GAAG,CAAC;UAAA,EAAC;UAChE,IAAMK,MAAM,GAAGtD,cAAc,CAACuC,UAAU,EAAEzC,SAAS,CAAC,UAAAyD,CAAC;YAAA,OAAIA,CAAC,CAACN,YAAY;UAAA,GAAElD,gBAAgB,CAAC,CAAC;UAC3F,OAAOuD,MAAM,GAAGA,MAAM,CAACZ,KAAK,GAAG,CAAC,CAAC;QACrC;MACJ,CAAC,CAAC,CAAC;MACH,IAAIc,sBAAsB,GAAG,KAAK;MAClC,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;QAC9B,IAAID,sBAAsB,EAAE;UACxB;QACJ;QACAA,sBAAsB,GAAG,IAAI;QAC7B/C,KAAA,CAAKS,SAAS,CAACM,iBAAiB,CAACkC,MAAM,CAACC,KAAK,CAACC,SAAS,CAAC,YAAM;UAC1DnD,KAAA,CAAKG,sBAAsB,GAAG,IAAI;UAClCH,KAAA,CAAKa,MAAM,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;QACHb,KAAA,CAAKS,SAAS,CAACM,iBAAiB,CAACkC,MAAM,CAACC,KAAK,CAACE,SAAS,CAAC,YAAM;UAC1DpD,KAAA,CAAKG,sBAAsB,GAAG,KAAK;UACnCH,KAAA,CAAKa,MAAM,CAAC,KAAK,CAAC;QACtB,CAAC,CAAC,CAAC;QACHb,KAAA,CAAKS,SAAS,CAACM,iBAAiB,CAACkC,MAAM,CAACC,KAAK,CAACG,UAAU,CAAC,YAAM;UAC3DrD,KAAA,CAAKG,sBAAsB,GAAG,IAAI;UAClCH,KAAA,CAAKa,MAAM,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;MACP,CAAC;MACDb,KAAA,CAAKS,SAAS,CAAC/B,KAAK,CAAC4E,IAAI,CAACvC,iBAAiB,CAACK,KAAK,CAACmC,YAAY,CAAC,CAAC,UAAA5C,CAAC,EAAI;QACjEqC,mBAAmB,CAAC,CAAC;MACzB,CAAC,CAAC,CAAC;MACHhD,KAAA,CAAKS,SAAS,CAACM,iBAAiB,CAACyC,uBAAuB,CAAC,UAAA7C,CAAC,EAAI;QAC1D,IAAMiB,QAAQ,GAAG5B,KAAA,CAAKJ,MAAM,CAAC6D,WAAW,CAAC,CAAC;QAC1C,IAAMrC,KAAK,GAAGpB,KAAA,CAAKJ,MAAM,CAAC6B,QAAQ,CAAC,CAAC;QACpC,IAAI,CAACG,QAAQ,IAAI,CAACR,KAAK,EAAE;UACrB,OAAOb,SAAS;QACpB;QACA,IAAM2B,eAAe,GAAGC,eAAe,CAACC,cAAc,CAACrB,iBAAiB,EAAEK,KAAK,EAAEQ,QAAQ,EAAEjB,CAAC,CAACiC,IAAI,EAAE5C,KAAA,CAAKI,iBAAiB,CAAC;QAC1HJ,KAAA,CAAKD,YAAY,CAACmC,eAAe,CAAC;MACtC,CAAC,CAAC,CAAC;IACP;IACAlC,KAAA,CAAKa,MAAM,CAACb,KAAA,CAAKK,SAAS,CAAC;IAAC,OAAAL,KAAA;EAChC;EAAC0D,SAAA,CAAAhE,oBAAA,EAAAC,WAAA;EAAA,OAAAgE,YAAA,CAAAjE,oBAAA;IAAAkE,GAAA;IAAA5C,GAAA,EAzFD,SAAAA,IAAA,EAAmB;MACf,OAAO,IAAI,CAACR,aAAa;IAC7B;EAAC;IAAAoD,GAAA;IAAAV,KAAA,EAwFD,SAAArC,OAAOgD,SAAS,EAAE;MAAA,IAAAC,MAAA;MACd,IAAMC,mBAAmB,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC;MACrD,IAAI,IAAI,CAAC3D,SAAS,KAAKwD,SAAS,IAAI,CAACI,qBAAqB,CAAC,IAAI,CAAC3D,uBAAuB,EAAEyD,mBAAmB,CAAC,EAAE;QAC3G,IAAI,CAAC1D,SAAS,GAAGwD,SAAS;QAC1B,IAAI,CAACvD,uBAAuB,GAAGyD,mBAAmB;QAClD5E,WAAW,CAAC,UAAAoC,EAAE,EAAI;UACd;UACAuC,MAAI,CAAChE,iBAAiB,CAACyB,EAAE,CAAC;UAC1BuC,MAAI,CAACtD,aAAa,CAAC0D,GAAG,CAACJ,MAAI,CAACzD,SAAS,GAAGyD,MAAI,CAACxD,uBAAuB,GAAGC,SAAS,EAAEgB,EAAE,CAAC;QACzF,CAAC,CAAC;MACN;IACJ;EAAC;IAAAqC,GAAA;IAAAV,KAAA,EACD,SAAAc,mBAAA,EAAqB;MACjB,IAAMjD,iBAAiB,GAAG9B,iBAAiB,CAAC+B,GAAG,CAAC,IAAI,CAACpB,MAAM,CAAC;MAC5D,IAAI,CAACmB,iBAAiB,IAAI,CAAC,IAAI,CAACZ,sBAAsB,EAAE;QACpD,OAAOI,SAAS;MACpB;MACA,IAAM4D,WAAW,GAAGpD,iBAAiB,CAACkC,MAAM,CAACC,KAAK,CAACkB,cAAc,CAAC,CAAC;MACnE,IAAMxC,QAAQ,GAAG,IAAI,CAAChC,MAAM,CAAC6D,WAAW,CAAC,CAAC;MAC1C,IAAMrC,KAAK,GAAG,IAAI,CAACxB,MAAM,CAAC6B,QAAQ,CAAC,CAAC;MACpC,IAAI,CAAC0C,WAAW,IAAI,CAACvC,QAAQ,IAAI,CAACR,KAAK,EAAE;QACrC,OAAOb,SAAS;MACpB;MACA,OAAO4B,eAAe,CAACC,cAAc,CAACrB,iBAAiB,EAAEK,KAAK,EAAEQ,QAAQ,EAAEuC,WAAW,CAACvB,IAAI,EAAE,IAAI,CAACxC,iBAAiB,CAAC;IACvH;EAAC;IAAAwD,GAAA;IAAAV,KAAA,EACD,SAAAmB,wBAAA,EAA0B;MACtB,IAAMtD,iBAAiB,GAAG9B,iBAAiB,CAAC+B,GAAG,CAAC,IAAI,CAACpB,MAAM,CAAC;MAC5DmB,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACsD,uBAAuB,CAAC,CAAC;IACrH;EAAC;IAAAT,GAAA;IAAAV,KAAA,EACD,SAAAoB,oBAAA,EAAsB;MAClB,IAAMvD,iBAAiB,GAAG9B,iBAAiB,CAAC+B,GAAG,CAAC,IAAI,CAACpB,MAAM,CAAC;MAC5DmB,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACuD,mBAAmB,CAAC,CAAC;IACjH;EAAC;AAAA,EA3HqC3F,UAAU;AA6HpD,WAAawD,eAAe;EAgBxB,SAAAA,gBAAYoC,KAAK,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,aAAa,EAAE;IAAAzE,eAAA,OAAAkC,eAAA;IAC9D,IAAI,CAACoC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,aAAa,GAAGA,aAAa;EACtC;EAAC,OAAAf,YAAA,CAAAxB,eAAA;IAAAyB,GAAA;IAAAV,KAAA,EACD,SAAAyB,OAAOC,KAAK,EAAE;MACV,OAAO,IAAI,CAACL,KAAK,CAACM,WAAW,CAACD,KAAK,CAACL,KAAK,CAAC,IACnC,IAAI,CAACC,UAAU,KAAKI,KAAK,CAACJ,UAAU,IACpC,IAAI,CAACC,kBAAkB,KAAKG,KAAK,CAACH,kBAAkB,IACpD,IAAI,CAACC,aAAa,KAAKE,KAAK,CAACF,aAAa;IACrD;EAAC;IAAAd,GAAA;IAAAV,KAAA,EACD,SAAA4B,yBAAA,EAA2B;MACvB,OAAO,IAAIhG,sBAAsB,CAAC,IAAI,CAACyF,KAAK,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,kBAAkB,EAAE,IAAI,CAACC,aAAa,CAAC;IAC/G;EAAC;IAAAd,GAAA;IAAAV,KAAA,EACD,SAAAZ,iBAAA,EAAmB;MACf,OAAO,IAAIlD,cAAc,CAAC,IAAI,CAACmF,KAAK,EAAE,IAAI,CAACC,UAAU,CAAC;IAC1D;EAAC;IAAAZ,GAAA;IAAAV,KAAA,EAhCD,SAAAd,eAAsBrB,iBAAiB,EAAEK,KAAK,EAAEQ,QAAQ,EAAEgB,IAAI,EAAEmC,UAAU,EAAE;MACxE,IAAMP,UAAU,GAAK5B,IAAI,CAACoC,UAAU,CAA9BR,UAAU;MAChB,IAAIE,aAAa,GAAG,KAAK;MACzB,IAAI9B,IAAI,CAACoC,UAAU,CAACC,eAAe,GAAG,CAAC,CAAC,oDAAoD;QACxF,IAAMC,OAAO,GAAG,IAAInG,aAAa,CAAC,CAAC,CAACoG,KAAK,CAACX,UAAU,CAAC;QACrD,IAAIU,OAAO,CAACE,QAAQ,CAAC1C,MAAM,GAAG,GAAG,EAAE;UAC/B;UACA1D,cAAc,CAACqG,gBAAgB,CAACjE,KAAK,EAAEQ,QAAQ,EAAE,IAAI,EAAEsD,OAAO,CAAC;QACnE;QACAV,UAAU,GAAGU,OAAO,CAACI,QAAQ,CAAC,CAAC;QAC/BZ,aAAa,GAAG,IAAI;MACxB;MACA,IAAMa,IAAI,GAAGxE,iBAAiB,CAACyE,gBAAgB,CAAC5C,IAAI,EAAEmC,UAAU,CAAC;MACjE,OAAO,IAAI5C,eAAe,CAACtD,KAAK,CAAC4G,aAAa,CAAC7D,QAAQ,CAAC8D,KAAK,CAAC,CAAC,EAAE,CAACH,IAAI,CAACI,eAAe,CAAC,EAAE/D,QAAQ,CAAC8D,KAAK,CAAC,CAAC,EAAEE,IAAI,CAACC,GAAG,CAACN,IAAI,CAACO,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEtB,UAAU,EAAE5B,IAAI,CAACoC,UAAU,CAACe,IAAI,EAAErB,aAAa,CAAC;IACnM;EAAC;AAAA;AAoBL,SAAST,qBAAqBA,CAAC+B,CAAC,EAAEC,CAAC,EAAE;EACjC,IAAID,CAAC,KAAKC,CAAC,EAAE;IACT,OAAO,IAAI;EACf;EACA,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE;IACV,OAAO,KAAK;EAChB;EACA,OAAOD,CAAC,CAACrB,MAAM,CAACsB,CAAC,CAAC;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}