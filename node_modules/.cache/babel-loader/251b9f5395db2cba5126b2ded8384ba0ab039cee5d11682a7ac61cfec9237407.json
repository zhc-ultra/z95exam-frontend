{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport var MoveCaretCommand = /*#__PURE__*/function () {\n  function MoveCaretCommand(selection, isMovingLeft) {\n    _classCallCheck(this, MoveCaretCommand);\n    this._selection = selection;\n    this._isMovingLeft = isMovingLeft;\n  }\n  return _createClass(MoveCaretCommand, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\n        return;\n      }\n      var lineNumber = this._selection.startLineNumber;\n      var startColumn = this._selection.startColumn;\n      var endColumn = this._selection.endColumn;\n      if (this._isMovingLeft && startColumn === 1) {\n        return;\n      }\n      if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\n        return;\n      }\n      if (this._isMovingLeft) {\n        var rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\n        var charBefore = model.getValueInRange(rangeBefore);\n        builder.addEditOperation(rangeBefore, null);\n        builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\n      } else {\n        var rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\n        var charAfter = model.getValueInRange(rangeAfter);\n        builder.addEditOperation(rangeAfter, null);\n        builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\n      }\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      if (this._isMovingLeft) {\n        return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\n      } else {\n        return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["Range","Selection","MoveCaretCommand","selection","isMovingLeft","_classCallCheck","_selection","_isMovingLeft","_createClass","key","value","getEditOperations","model","builder","startLineNumber","endLineNumber","isEmpty","lineNumber","startColumn","endColumn","getLineMaxColumn","rangeBefore","charBefore","getValueInRange","addEditOperation","rangeAfter","charAfter","computeCursorState","helper"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/moveCaretCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class MoveCaretCommand {\n    constructor(selection, isMovingLeft) {\n        this._selection = selection;\n        this._isMovingLeft = isMovingLeft;\n    }\n    getEditOperations(model, builder) {\n        if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\n            return;\n        }\n        const lineNumber = this._selection.startLineNumber;\n        const startColumn = this._selection.startColumn;\n        const endColumn = this._selection.endColumn;\n        if (this._isMovingLeft && startColumn === 1) {\n            return;\n        }\n        if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\n            return;\n        }\n        if (this._isMovingLeft) {\n            const rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\n            const charBefore = model.getValueInRange(rangeBefore);\n            builder.addEditOperation(rangeBefore, null);\n            builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\n        }\n        else {\n            const rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\n            const charAfter = model.getValueInRange(rangeAfter);\n            builder.addEditOperation(rangeAfter, null);\n            builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\n        }\n    }\n    computeCursorState(model, helper) {\n        if (this._isMovingLeft) {\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\n        }\n        else {\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\n        }\n    }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,+BAA+B;AACrD,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,WAAaC,gBAAgB;EACzB,SAAAA,iBAAYC,SAAS,EAAEC,YAAY,EAAE;IAAAC,eAAA,OAAAH,gBAAA;IACjC,IAAI,CAACI,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACI,aAAa,GAAGH,YAAY;EACrC;EAAC,OAAAI,YAAA,CAAAN,gBAAA;IAAAO,GAAA;IAAAC,KAAA,EACD,SAAAC,kBAAkBC,KAAK,EAAEC,OAAO,EAAE;MAC9B,IAAI,IAAI,CAACP,UAAU,CAACQ,eAAe,KAAK,IAAI,CAACR,UAAU,CAACS,aAAa,IAAI,IAAI,CAACT,UAAU,CAACU,OAAO,CAAC,CAAC,EAAE;QAChG;MACJ;MACA,IAAMC,UAAU,GAAG,IAAI,CAACX,UAAU,CAACQ,eAAe;MAClD,IAAMI,WAAW,GAAG,IAAI,CAACZ,UAAU,CAACY,WAAW;MAC/C,IAAMC,SAAS,GAAG,IAAI,CAACb,UAAU,CAACa,SAAS;MAC3C,IAAI,IAAI,CAACZ,aAAa,IAAIW,WAAW,KAAK,CAAC,EAAE;QACzC;MACJ;MACA,IAAI,CAAC,IAAI,CAACX,aAAa,IAAIY,SAAS,KAAKP,KAAK,CAACQ,gBAAgB,CAACH,UAAU,CAAC,EAAE;QACzE;MACJ;MACA,IAAI,IAAI,CAACV,aAAa,EAAE;QACpB,IAAMc,WAAW,GAAG,IAAIrB,KAAK,CAACiB,UAAU,EAAEC,WAAW,GAAG,CAAC,EAAED,UAAU,EAAEC,WAAW,CAAC;QACnF,IAAMI,UAAU,GAAGV,KAAK,CAACW,eAAe,CAACF,WAAW,CAAC;QACrDR,OAAO,CAACW,gBAAgB,CAACH,WAAW,EAAE,IAAI,CAAC;QAC3CR,OAAO,CAACW,gBAAgB,CAAC,IAAIxB,KAAK,CAACiB,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEE,SAAS,CAAC,EAAEG,UAAU,CAAC;MACjG,CAAC,MACI;QACD,IAAMG,UAAU,GAAG,IAAIzB,KAAK,CAACiB,UAAU,EAAEE,SAAS,EAAEF,UAAU,EAAEE,SAAS,GAAG,CAAC,CAAC;QAC9E,IAAMO,SAAS,GAAGd,KAAK,CAACW,eAAe,CAACE,UAAU,CAAC;QACnDZ,OAAO,CAACW,gBAAgB,CAACC,UAAU,EAAE,IAAI,CAAC;QAC1CZ,OAAO,CAACW,gBAAgB,CAAC,IAAIxB,KAAK,CAACiB,UAAU,EAAEC,WAAW,EAAED,UAAU,EAAEC,WAAW,CAAC,EAAEQ,SAAS,CAAC;MACpG;IACJ;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EACD,SAAAiB,mBAAmBf,KAAK,EAAEgB,MAAM,EAAE;MAC9B,IAAI,IAAI,CAACrB,aAAa,EAAE;QACpB,OAAO,IAAIN,SAAS,CAAC,IAAI,CAACK,UAAU,CAACQ,eAAe,EAAE,IAAI,CAACR,UAAU,CAACY,WAAW,GAAG,CAAC,EAAE,IAAI,CAACZ,UAAU,CAACS,aAAa,EAAE,IAAI,CAACT,UAAU,CAACa,SAAS,GAAG,CAAC,CAAC;MACxJ,CAAC,MACI;QACD,OAAO,IAAIlB,SAAS,CAAC,IAAI,CAACK,UAAU,CAACQ,eAAe,EAAE,IAAI,CAACR,UAAU,CAACY,WAAW,GAAG,CAAC,EAAE,IAAI,CAACZ,UAAU,CAACS,aAAa,EAAE,IAAI,CAACT,UAAU,CAACa,SAAS,GAAG,CAAC,CAAC;MACxJ;IACJ;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}