{"ast":null,"code":"import _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nvar HorizontalRangeWithStyle = /*#__PURE__*/_createClass(function HorizontalRangeWithStyle(other) {\n  _classCallCheck(this, HorizontalRangeWithStyle);\n  this.left = other.left;\n  this.width = other.width;\n  this.startStyle = null;\n  this.endStyle = null;\n});\nvar LineVisibleRangesWithStyle = /*#__PURE__*/_createClass(function LineVisibleRangesWithStyle(lineNumber, ranges) {\n  _classCallCheck(this, LineVisibleRangesWithStyle);\n  this.lineNumber = lineNumber;\n  this.ranges = ranges;\n});\nfunction toStyledRange(item) {\n  return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n  return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport var SelectionsOverlay = /*#__PURE__*/function (_DynamicViewOverlay) {\n  function SelectionsOverlay(context) {\n    var _this;\n    _classCallCheck(this, SelectionsOverlay);\n    _this = _callSuper(this, SelectionsOverlay);\n    _this._previousFrameVisibleRangesWithStyle = [];\n    _this._context = context;\n    var options = _this._context.configuration.options;\n    _this._roundedSelection = options.get(101 /* EditorOption.roundedSelection */);\n    _this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n    _this._selections = [];\n    _this._renderResult = null;\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  _inherits(SelectionsOverlay, _DynamicViewOverlay);\n  return _createClass(SelectionsOverlay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n      this._renderResult = null;\n      _get(_getPrototypeOf(SelectionsOverlay.prototype), \"dispose\", this).call(this);\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      this._roundedSelection = options.get(101 /* EditorOption.roundedSelection */);\n      this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n      return true;\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._selections = e.selections.slice(0);\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      // true for inline decorations that can end up relayouting text\n      return true; //e.inlineDecorationsChanged;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n    // --- end event handlers\n  }, {\n    key: \"_visibleRangesHaveGaps\",\n    value: function _visibleRangesHaveGaps(linesVisibleRanges) {\n      for (var i = 0, len = linesVisibleRanges.length; i < len; i++) {\n        var lineVisibleRanges = linesVisibleRanges[i];\n        if (lineVisibleRanges.ranges.length > 1) {\n          // There are two ranges on the same line\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"_enrichVisibleRangesWithStyle\",\n    value: function _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n      var epsilon = this._typicalHalfwidthCharacterWidth / 4;\n      var previousFrameTop = null;\n      var previousFrameBottom = null;\n      if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n        var topLineNumber = linesVisibleRanges[0].lineNumber;\n        if (topLineNumber === viewport.startLineNumber) {\n          for (var i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n            if (previousFrame[i].lineNumber === topLineNumber) {\n              previousFrameTop = previousFrame[i].ranges[0];\n            }\n          }\n        }\n        var bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n        if (bottomLineNumber === viewport.endLineNumber) {\n          for (var _i = previousFrame.length - 1; !previousFrameBottom && _i >= 0; _i--) {\n            if (previousFrame[_i].lineNumber === bottomLineNumber) {\n              previousFrameBottom = previousFrame[_i].ranges[0];\n            }\n          }\n        }\n        if (previousFrameTop && !previousFrameTop.startStyle) {\n          previousFrameTop = null;\n        }\n        if (previousFrameBottom && !previousFrameBottom.startStyle) {\n          previousFrameBottom = null;\n        }\n      }\n      for (var _i2 = 0, len = linesVisibleRanges.length; _i2 < len; _i2++) {\n        // We know for a fact that there is precisely one range on each line\n        var curLineRange = linesVisibleRanges[_i2].ranges[0];\n        var curLeft = curLineRange.left;\n        var curRight = curLineRange.left + curLineRange.width;\n        var startStyle = {\n          top: 0 /* CornerStyle.EXTERN */,\n          bottom: 0 /* CornerStyle.EXTERN */\n        };\n        var endStyle = {\n          top: 0 /* CornerStyle.EXTERN */,\n          bottom: 0 /* CornerStyle.EXTERN */\n        };\n        if (_i2 > 0) {\n          // Look above\n          var prevLeft = linesVisibleRanges[_i2 - 1].ranges[0].left;\n          var prevRight = linesVisibleRanges[_i2 - 1].ranges[0].left + linesVisibleRanges[_i2 - 1].ranges[0].width;\n          if (abs(curLeft - prevLeft) < epsilon) {\n            startStyle.top = 2 /* CornerStyle.FLAT */;\n          } else if (curLeft > prevLeft) {\n            startStyle.top = 1 /* CornerStyle.INTERN */;\n          }\n          if (abs(curRight - prevRight) < epsilon) {\n            endStyle.top = 2 /* CornerStyle.FLAT */;\n          } else if (prevLeft < curRight && curRight < prevRight) {\n            endStyle.top = 1 /* CornerStyle.INTERN */;\n          }\n        } else if (previousFrameTop) {\n          // Accept some hiccups near the viewport edges to save on repaints\n          startStyle.top = previousFrameTop.startStyle.top;\n          endStyle.top = previousFrameTop.endStyle.top;\n        }\n        if (_i2 + 1 < len) {\n          // Look below\n          var nextLeft = linesVisibleRanges[_i2 + 1].ranges[0].left;\n          var nextRight = linesVisibleRanges[_i2 + 1].ranges[0].left + linesVisibleRanges[_i2 + 1].ranges[0].width;\n          if (abs(curLeft - nextLeft) < epsilon) {\n            startStyle.bottom = 2 /* CornerStyle.FLAT */;\n          } else if (nextLeft < curLeft && curLeft < nextRight) {\n            startStyle.bottom = 1 /* CornerStyle.INTERN */;\n          }\n          if (abs(curRight - nextRight) < epsilon) {\n            endStyle.bottom = 2 /* CornerStyle.FLAT */;\n          } else if (curRight < nextRight) {\n            endStyle.bottom = 1 /* CornerStyle.INTERN */;\n          }\n        } else if (previousFrameBottom) {\n          // Accept some hiccups near the viewport edges to save on repaints\n          startStyle.bottom = previousFrameBottom.startStyle.bottom;\n          endStyle.bottom = previousFrameBottom.endStyle.bottom;\n        }\n        curLineRange.startStyle = startStyle;\n        curLineRange.endStyle = endStyle;\n      }\n    }\n  }, {\n    key: \"_getVisibleRangesWithStyle\",\n    value: function _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n      var _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n      var linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n      var visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n      if (!visibleRangesHaveGaps && this._roundedSelection) {\n        this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n      }\n      // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n      return linesVisibleRanges;\n    }\n  }, {\n    key: \"_createSelectionPiece\",\n    value: function _createSelectionPiece(top, bottom, className, left, width) {\n      return '<div class=\"cslr ' + className + '\" style=\"' + 'top:' + top.toString() + 'px;' + 'bottom:' + bottom.toString() + 'px;' + 'left:' + left.toString() + 'px;' + 'width:' + width.toString() + 'px;' + '\"></div>';\n    }\n  }, {\n    key: \"_actualRenderOneSelection\",\n    value: function _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n      if (visibleRanges.length === 0) {\n        return;\n      }\n      var visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n      var firstLineNumber = visibleRanges[0].lineNumber;\n      var lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n      for (var i = 0, len = visibleRanges.length; i < len; i++) {\n        var lineVisibleRanges = visibleRanges[i];\n        var lineNumber = lineVisibleRanges.lineNumber;\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        var top = hasMultipleSelections ? lineNumber === firstLineNumber ? 1 : 0 : 0;\n        var bottom = hasMultipleSelections ? lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0 : 0;\n        var innerCornerOutput = '';\n        var restOfSelectionOutput = '';\n        for (var j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n          var visibleRange = lineVisibleRanges.ranges[j];\n          if (visibleRangesHaveStyle) {\n            var startStyle = visibleRange.startStyle;\n            var endStyle = visibleRange.endStyle;\n            if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n              // Reverse rounded corner to the left\n              // First comes the selection (blue layer)\n              innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n              // Second comes the background (white layer) with inverse border radius\n              var _className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n              if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                _className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n              }\n              if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                _className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n              }\n              innerCornerOutput += this._createSelectionPiece(top, bottom, _className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n            }\n            if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n              // Reverse rounded corner to the right\n              // First comes the selection (blue layer)\n              innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n              // Second comes the background (white layer) with inverse border radius\n              var _className2 = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n              if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                _className2 += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n              }\n              if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                _className2 += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n              }\n              innerCornerOutput += this._createSelectionPiece(top, bottom, _className2, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n            }\n          }\n          var className = SelectionsOverlay.SELECTION_CLASS_NAME;\n          if (visibleRangesHaveStyle) {\n            var _startStyle = visibleRange.startStyle;\n            var _endStyle = visibleRange.endStyle;\n            if (_startStyle.top === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n            }\n            if (_startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n            }\n            if (_endStyle.top === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n            }\n            if (_endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n              className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n            }\n          }\n          restOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n        }\n        output2[lineIndex][0] += innerCornerOutput;\n        output2[lineIndex][1] += restOfSelectionOutput;\n      }\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      // Build HTML for inner corners separate from HTML for the rest of selections,\n      // as the inner corner HTML can interfere with that of other selections.\n      // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n      var output = [];\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        output[lineIndex] = ['', ''];\n      }\n      var thisFrameVisibleRangesWithStyle = [];\n      for (var i = 0, len = this._selections.length; i < len; i++) {\n        var selection = this._selections[i];\n        if (selection.isEmpty()) {\n          thisFrameVisibleRangesWithStyle[i] = null;\n          continue;\n        }\n        var visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n        thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n        this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n      }\n      this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n      this._renderResult = output.map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          internalCorners = _ref2[0],\n          restOfSelection = _ref2[1];\n        return internalCorners + restOfSelection;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n      var lineIndex = lineNumber - startLineNumber;\n      if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n        return '';\n      }\n      return this._renderResult[lineIndex];\n    }\n  }]);\n}(DynamicViewOverlay);\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\nregisterThemingParticipant(function (theme, collector) {\n  var editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n  if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n    collector.addRule(\".monaco-editor .view-line span.inline-selected-text { color: \".concat(editorSelectionForegroundColor, \"; }\"));\n  }\n});\nfunction abs(n) {\n  return n < 0 ? -n : n;\n}","map":{"version":3,"names":["DynamicViewOverlay","editorSelectionForeground","registerThemingParticipant","HorizontalRangeWithStyle","_createClass","other","_classCallCheck","left","width","startStyle","endStyle","LineVisibleRangesWithStyle","lineNumber","ranges","toStyledRange","item","toStyled","map","SelectionsOverlay","_DynamicViewOverlay","context","_this","_callSuper","_previousFrameVisibleRangesWithStyle","_context","options","configuration","_roundedSelection","get","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_selections","_renderResult","addEventHandler","_inherits","key","value","dispose","removeEventHandler","_get","_getPrototypeOf","prototype","call","onConfigurationChanged","e","onCursorStateChanged","selections","slice","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_visibleRangesHaveGaps","linesVisibleRanges","i","len","length","lineVisibleRanges","_enrichVisibleRangesWithStyle","viewport","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","startLineNumber","bottomLineNumber","endLineNumber","curLineRange","curLeft","curRight","top","bottom","prevLeft","prevRight","abs","nextLeft","nextRight","_getVisibleRangesWithStyle","selection","ctx","_linesVisibleRanges","linesVisibleRangesForRange","visibleRangesHaveGaps","visibleRange","_createSelectionPiece","className","toString","_actualRenderOneSelection","output2","visibleStartLineNumber","hasMultipleSelections","visibleRanges","visibleRangesHaveStyle","firstLineNumber","lastLineNumber","lineIndex","innerCornerOutput","restOfSelectionOutput","j","lenJ","SELECTION_CLASS_NAME","ROUNDED_PIECE_WIDTH","EDITOR_BACKGROUND_CLASS_NAME","SELECTION_TOP_RIGHT","SELECTION_BOTTOM_RIGHT","SELECTION_TOP_LEFT","SELECTION_BOTTOM_LEFT","prepareRender","output","visibleEndLineNumber","thisFrameVisibleRangesWithStyle","isEmpty","visibleRangesWithStyle","_ref","_ref2","_slicedToArray","internalCorners","restOfSelection","render","theme","collector","editorSelectionForegroundColor","getColor","isTransparent","addRule","concat","n"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n    constructor(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n}\nclass LineVisibleRangesWithStyle {\n    constructor(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport class SelectionsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._previousFrameVisibleRangesWithStyle = [];\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(101 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._selections = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._roundedSelection = options.get(101 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        let previousFrameTop = null;\n        let previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            const curLineRange = linesVisibleRanges[i].ranges[0];\n            const curLeft = curLineRange.left;\n            const curRight = curLineRange.left + curLineRange.width;\n            const startStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            const endStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            if (i > 0) {\n                // Look above\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, bottom, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"'\n            + 'top:' + top.toString() + 'px;'\n            + 'bottom:' + bottom.toString() + 'px;'\n            + 'left:' + left.toString() + 'px;'\n            + 'width:' + width.toString() + 'px;'\n            + '\"></div>');\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        if (visibleRanges.length === 0) {\n            return;\n        }\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n        const firstLineNumber = visibleRanges[0].lineNumber;\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = visibleRanges[i];\n            const lineNumber = lineVisibleRanges.lineNumber;\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            const bottom = hasMultipleSelections ? (lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0) : 0;\n            let innerCornerOutput = '';\n            let restOfSelectionOutput = '';\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                const visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                restOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex][0] += innerCornerOutput;\n            output2[lineIndex][1] += restOfSelectionOutput;\n        }\n    }\n    prepareRender(ctx) {\n        // Build HTML for inner corners separate from HTML for the rest of selections,\n        // as the inner corner HTML can interfere with that of other selections.\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n        const output = [];\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = ['', ''];\n        }\n        const thisFrameVisibleRangesWithStyle = [];\n        for (let i = 0, len = this._selections.length; i < len; i++) {\n            const selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\nregisterThemingParticipant((theme, collector) => {\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}