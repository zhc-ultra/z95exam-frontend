{"ast":null,"code":"import _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { Registry } from '../../registry/common/platform.js';\n//#region Editor / Resources DND\nexport var CodeDataTransfers = {\n  EDITORS: 'CodeEditors',\n  FILES: 'CodeFiles'\n};\nvar DragAndDropContributionRegistry = /*#__PURE__*/_createClass(function DragAndDropContributionRegistry() {\n  _classCallCheck(this, DragAndDropContributionRegistry);\n});\nexport var Extensions = {\n  DragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n//#endregion\n//#region DND Utilities\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport var LocalSelectionTransfer = /*#__PURE__*/function () {\n  function LocalSelectionTransfer() {\n    _classCallCheck(this, LocalSelectionTransfer);\n  } // protect against external instantiation\n  return _createClass(LocalSelectionTransfer, [{\n    key: \"hasData\",\n    value: function hasData(proto) {\n      return proto && proto === this.proto;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(proto) {\n      if (this.hasData(proto)) {\n        return this.data;\n      }\n      return undefined;\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      return LocalSelectionTransfer.INSTANCE;\n    }\n  }]);\n}();\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\n//#endregion","map":{"version":3,"names":["Registry","CodeDataTransfers","EDITORS","FILES","DragAndDropContributionRegistry","_createClass","_classCallCheck","Extensions","DragAndDropContribution","add","LocalSelectionTransfer","key","value","hasData","proto","getData","data","undefined","getInstance","INSTANCE"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/platform/dnd/browser/dnd.js"],"sourcesContent":["import { Registry } from '../../registry/common/platform.js';\n//#region Editor / Resources DND\nexport const CodeDataTransfers = {\n    EDITORS: 'CodeEditors',\n    FILES: 'CodeFiles'\n};\nclass DragAndDropContributionRegistry {\n}\nexport const Extensions = {\n    DragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n//#endregion\n//#region DND Utilities\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\n//#endregion\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,mCAAmC;AAC5D;AACA,OAAO,IAAMC,iBAAiB,GAAG;EAC7BC,OAAO,EAAE,aAAa;EACtBC,KAAK,EAAE;AACX,CAAC;AAAC,IACIC,+BAA+B,gBAAAC,YAAA,UAAAD,gCAAA;EAAAE,eAAA,OAAAF,+BAAA;AAAA;AAErC,OAAO,IAAMG,UAAU,GAAG;EACtBC,uBAAuB,EAAE;AAC7B,CAAC;AACDR,QAAQ,CAACS,GAAG,CAACF,UAAU,CAACC,uBAAuB,EAAE,IAAIJ,+BAA+B,CAAC,CAAC,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA,WAAaM,sBAAsB;EAC/B,SAAAA,uBAAA,EAAc;IAAAJ,eAAA,OAAAI,sBAAA;EAEd,CAAC,CADG;EACH,OAAAL,YAAA,CAAAK,sBAAA;IAAAC,GAAA;IAAAC,KAAA,EAID,SAAAC,QAAQC,KAAK,EAAE;MACX,OAAOA,KAAK,IAAIA,KAAK,KAAK,IAAI,CAACA,KAAK;IACxC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAG,QAAQD,KAAK,EAAE;MACX,IAAI,IAAI,CAACD,OAAO,CAACC,KAAK,CAAC,EAAE;QACrB,OAAO,IAAI,CAACE,IAAI;MACpB;MACA,OAAOC,SAAS;IACpB;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAXD,SAAAM,YAAA,EAAqB;MACjB,OAAOR,sBAAsB,CAACS,QAAQ;IAC1C;EAAC;AAAA;AAWLT,sBAAsB,CAACS,QAAQ,GAAG,IAAIT,sBAAsB,CAAC,CAAC;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}