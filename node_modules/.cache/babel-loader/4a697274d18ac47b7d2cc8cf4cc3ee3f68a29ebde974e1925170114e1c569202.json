{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { MouseHandler } from './mouseHandler.js';\nimport { TextAreaSyntethicEvents } from './textAreaInput.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport var PointerEventHandler = /*#__PURE__*/function (_MouseHandler) {\n  function PointerEventHandler(context, viewController, viewHelper) {\n    var _this;\n    _classCallCheck(this, PointerEventHandler);\n    _this = _callSuper(this, PointerEventHandler, [context, viewController, viewHelper]);\n    _this._register(Gesture.addTarget(_this.viewHelper.linesContentDomNode));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Tap, function (e) {\n      return _this.onTap(e);\n    }));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Change, function (e) {\n      return _this.onChange(e);\n    }));\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) {\n      return _this._onContextMenu(new EditorMouseEvent(e, false, _this.viewHelper.viewDomNode), false);\n    }));\n    _this._lastPointerType = 'mouse';\n    _this._register(dom.addDisposableListener(_this.viewHelper.linesContentDomNode, 'pointerdown', function (e) {\n      var pointerType = e.pointerType;\n      if (pointerType === 'mouse') {\n        _this._lastPointerType = 'mouse';\n        return;\n      } else if (pointerType === 'touch') {\n        _this._lastPointerType = 'touch';\n      } else {\n        _this._lastPointerType = 'pen';\n      }\n    }));\n    // PonterEvents\n    var pointerEvents = new EditorPointerEventFactory(_this.viewHelper.viewDomNode);\n    _this._register(pointerEvents.onPointerMove(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseMove(e);\n    }));\n    _this._register(pointerEvents.onPointerUp(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseUp(e);\n    }));\n    _this._register(pointerEvents.onPointerLeave(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseLeave(e);\n    }));\n    _this._register(pointerEvents.onPointerDown(_this.viewHelper.viewDomNode, function (e, pointerId) {\n      return _this._onMouseDown(e, pointerId);\n    }));\n    return _this;\n  }\n  _inherits(PointerEventHandler, _MouseHandler);\n  return _createClass(PointerEventHandler, [{\n    key: \"onTap\",\n    value: function onTap(event) {\n      if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n        return;\n      }\n      event.preventDefault();\n      this.viewHelper.focusTextArea();\n      this._dispatchGesture(event, /*inSelectionMode*/false);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      if (this._lastPointerType === 'touch') {\n        this._context.viewModel.viewLayout.deltaScrollNow(-event.translationX, -event.translationY);\n      }\n      if (this._lastPointerType === 'pen') {\n        this._dispatchGesture(event, /*inSelectionMode*/true);\n      }\n    }\n  }, {\n    key: \"_dispatchGesture\",\n    value: function _dispatchGesture(event, inSelectionMode) {\n      var target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n      if (target.position) {\n        this.viewController.dispatchMouse({\n          position: target.position,\n          mouseColumn: target.position.column,\n          startedOnLineNumbers: false,\n          revealType: 1 /* NavigationCommandRevealType.Minimal */,\n          mouseDownCount: event.tapCount,\n          inSelectionMode: inSelectionMode,\n          altKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          shiftKey: false,\n          leftButton: false,\n          middleButton: false,\n          onInjectedText: target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && target.detail.injectedText !== null\n        });\n      }\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown(e, pointerId) {\n      if (e.browserEvent.pointerType === 'touch') {\n        return;\n      }\n      _get(_getPrototypeOf(PointerEventHandler.prototype), \"_onMouseDown\", this).call(this, e, pointerId);\n    }\n  }]);\n}(MouseHandler);\nvar TouchHandler = /*#__PURE__*/function (_MouseHandler2) {\n  function TouchHandler(context, viewController, viewHelper) {\n    var _this2;\n    _classCallCheck(this, TouchHandler);\n    _this2 = _callSuper(this, TouchHandler, [context, viewController, viewHelper]);\n    _this2._register(Gesture.addTarget(_this2.viewHelper.linesContentDomNode));\n    _this2._register(dom.addDisposableListener(_this2.viewHelper.linesContentDomNode, EventType.Tap, function (e) {\n      return _this2.onTap(e);\n    }));\n    _this2._register(dom.addDisposableListener(_this2.viewHelper.linesContentDomNode, EventType.Change, function (e) {\n      return _this2.onChange(e);\n    }));\n    _this2._register(dom.addDisposableListener(_this2.viewHelper.linesContentDomNode, EventType.Contextmenu, function (e) {\n      return _this2._onContextMenu(new EditorMouseEvent(e, false, _this2.viewHelper.viewDomNode), false);\n    }));\n    return _this2;\n  }\n  _inherits(TouchHandler, _MouseHandler2);\n  return _createClass(TouchHandler, [{\n    key: \"onTap\",\n    value: function onTap(event) {\n      event.preventDefault();\n      this.viewHelper.focusTextArea();\n      var target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n      if (target.position) {\n        // Send the tap event also to the <textarea> (for input purposes)\n        var _event = document.createEvent('CustomEvent');\n        _event.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n        this.viewHelper.dispatchTextAreaEvent(_event);\n        this.viewController.moveTo(target.position, 1 /* NavigationCommandRevealType.Minimal */);\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n  }]);\n}(MouseHandler);\nexport var PointerHandler = /*#__PURE__*/function (_Disposable) {\n  function PointerHandler(context, viewController, viewHelper) {\n    var _this3;\n    _classCallCheck(this, PointerHandler);\n    _this3 = _callSuper(this, PointerHandler);\n    var isPhone = platform.isIOS || platform.isAndroid && platform.isMobile;\n    if (isPhone && BrowserFeatures.pointerEvents) {\n      _this3.handler = _this3._register(new PointerEventHandler(context, viewController, viewHelper));\n    } else if (mainWindow.TouchEvent) {\n      _this3.handler = _this3._register(new TouchHandler(context, viewController, viewHelper));\n    } else {\n      _this3.handler = _this3._register(new MouseHandler(context, viewController, viewHelper));\n    }\n    return _this3;\n  }\n  _inherits(PointerHandler, _Disposable);\n  return _createClass(PointerHandler, [{\n    key: \"getTargetAtClientPoint\",\n    value: function getTargetAtClientPoint(clientX, clientY) {\n      return this.handler.getTargetAtClientPoint(clientX, clientY);\n    }\n  }]);\n}(Disposable);","map":{"version":3,"names":["BrowserFeatures","dom","EventType","Gesture","mainWindow","Disposable","platform","MouseHandler","TextAreaSyntethicEvents","EditorMouseEvent","EditorPointerEventFactory","PointerEventHandler","_MouseHandler","context","viewController","viewHelper","_this","_classCallCheck","_callSuper","_register","addTarget","linesContentDomNode","addDisposableListener","Tap","e","onTap","Change","onChange","Contextmenu","_onContextMenu","viewDomNode","_lastPointerType","pointerType","pointerEvents","onPointerMove","_onMouseMove","onPointerUp","_onMouseUp","onPointerLeave","_onMouseLeave","onPointerDown","pointerId","_onMouseDown","_inherits","_createClass","key","value","event","initialTarget","contains","preventDefault","focusTextArea","_dispatchGesture","_context","viewModel","viewLayout","deltaScrollNow","translationX","translationY","inSelectionMode","target","_createMouseTarget","position","dispatchMouse","mouseColumn","column","startedOnLineNumbers","revealType","mouseDownCount","tapCount","altKey","ctrlKey","metaKey","shiftKey","leftButton","middleButton","onInjectedText","type","detail","injectedText","browserEvent","_get","_getPrototypeOf","prototype","call","TouchHandler","_MouseHandler2","_this2","document","createEvent","initEvent","dispatchTextAreaEvent","moveTo","PointerHandler","_Disposable","_this3","isPhone","isIOS","isAndroid","isMobile","handler","TouchEvent","getTargetAtClientPoint","clientX","clientY"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { MouseHandler } from './mouseHandler.js';\nimport { TextAreaSyntethicEvents } from './textAreaInput.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n        this._lastPointerType = 'mouse';\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e) => {\n            const pointerType = e.pointerType;\n            if (pointerType === 'mouse') {\n                this._lastPointerType = 'mouse';\n                return;\n            }\n            else if (pointerType === 'touch') {\n                this._lastPointerType = 'touch';\n            }\n            else {\n                this._lastPointerType = 'pen';\n            }\n        }));\n        // PonterEvents\n        const pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n        this._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n        this._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        this._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n    }\n    onTap(event) {\n        if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n            return;\n        }\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        this._dispatchGesture(event, /*inSelectionMode*/ false);\n    }\n    onChange(event) {\n        if (this._lastPointerType === 'touch') {\n            this._context.viewModel.viewLayout.deltaScrollNow(-event.translationX, -event.translationY);\n        }\n        if (this._lastPointerType === 'pen') {\n            this._dispatchGesture(event, /*inSelectionMode*/ true);\n        }\n    }\n    _dispatchGesture(event, inSelectionMode) {\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            this.viewController.dispatchMouse({\n                position: target.position,\n                mouseColumn: target.position.column,\n                startedOnLineNumbers: false,\n                revealType: 1 /* NavigationCommandRevealType.Minimal */,\n                mouseDownCount: event.tapCount,\n                inSelectionMode,\n                altKey: false,\n                ctrlKey: false,\n                metaKey: false,\n                shiftKey: false,\n                leftButton: false,\n                middleButton: false,\n                onInjectedText: target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && target.detail.injectedText !== null\n            });\n        }\n    }\n    _onMouseDown(e, pointerId) {\n        if (e.browserEvent.pointerType === 'touch') {\n            return;\n        }\n        super._onMouseDown(e, pointerId);\n    }\n}\nclass TouchHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n    }\n    onTap(event) {\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // Send the tap event also to the <textarea> (for input purposes)\n            const event = document.createEvent('CustomEvent');\n            event.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n            this.viewHelper.dispatchTextAreaEvent(event);\n            this.viewController.moveTo(target.position, 1 /* NavigationCommandRevealType.Minimal */);\n        }\n    }\n    onChange(e) {\n        this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n}\nexport class PointerHandler extends Disposable {\n    constructor(context, viewController, viewHelper) {\n        super();\n        const isPhone = platform.isIOS || (platform.isAndroid && platform.isMobile);\n        if (isPhone && BrowserFeatures.pointerEvents) {\n            this.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n        }\n        else if (mainWindow.TouchEvent) {\n            this.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n        }\n        else {\n            this.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n        }\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        return this.handler.getTargetAtClientPoint(clientX, clientY);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}