{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport var CopyLinesCommand = /*#__PURE__*/function () {\n  function CopyLinesCommand(selection, isCopyingDown, noop) {\n    _classCallCheck(this, CopyLinesCommand);\n    this._selection = selection;\n    this._isCopyingDown = isCopyingDown;\n    this._noop = noop || false;\n    this._selectionDirection = 0 /* SelectionDirection.LTR */;\n    this._selectionId = null;\n    this._startLineNumberDelta = 0;\n    this._endLineNumberDelta = 0;\n  }\n  return _createClass(CopyLinesCommand, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      var s = this._selection;\n      this._startLineNumberDelta = 0;\n      this._endLineNumberDelta = 0;\n      if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n        this._endLineNumberDelta = 1;\n        s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n      }\n      var sourceLines = [];\n      for (var i = s.startLineNumber; i <= s.endLineNumber; i++) {\n        sourceLines.push(model.getLineContent(i));\n      }\n      var sourceText = sourceLines.join('\\n');\n      if (sourceText === '') {\n        // Duplicating empty line\n        if (this._isCopyingDown) {\n          this._startLineNumberDelta++;\n          this._endLineNumberDelta++;\n        }\n      }\n      if (this._noop) {\n        builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n      } else {\n        if (!this._isCopyingDown) {\n          builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n        } else {\n          builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n        }\n      }\n      this._selectionId = builder.trackSelection(s);\n      this._selectionDirection = this._selection.getDirection();\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      var result = helper.getTrackedSelection(this._selectionId);\n      if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n        var startLineNumber = result.startLineNumber;\n        var startColumn = result.startColumn;\n        var endLineNumber = result.endLineNumber;\n        var endColumn = result.endColumn;\n        if (this._startLineNumberDelta !== 0) {\n          startLineNumber = startLineNumber + this._startLineNumberDelta;\n          startColumn = 1;\n        }\n        if (this._endLineNumberDelta !== 0) {\n          endLineNumber = endLineNumber + this._endLineNumberDelta;\n          endColumn = 1;\n        }\n        result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n      }\n      return result;\n    }\n  }]);\n}();","map":{"version":3,"names":["Range","Selection","CopyLinesCommand","selection","isCopyingDown","noop","_classCallCheck","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","_createClass","key","value","getEditOperations","model","builder","s","startLineNumber","endLineNumber","endColumn","setEndPosition","getLineMaxColumn","sourceLines","i","push","getLineContent","sourceText","join","addEditOperation","getLineCount","trackSelection","getDirection","computeCursorState","helper","result","getTrackedSelection","startColumn","createWithDirection"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}