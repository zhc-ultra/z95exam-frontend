{"ast":null,"code":"import _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\nexport var GHOST_TEXT_DESCRIPTION = 'ghost-text';\nvar GhostTextWidget = /*#__PURE__*/function (_Disposable) {\n  function GhostTextWidget(editor, model, languageService) {\n    var _this;\n    _classCallCheck(this, GhostTextWidget);\n    _this = _callSuper(this, GhostTextWidget);\n    _this.editor = editor;\n    _this.model = model;\n    _this.languageService = languageService;\n    _this.isDisposed = observableValue(_this, false);\n    _this.currentTextModel = observableFromEvent(_this.editor.onDidChangeModel, function () {\n      return /** @description editor.model */_this.editor.getModel();\n    });\n    _this.uiState = derived(_this, function (reader) {\n      if (_this.isDisposed.read(reader)) {\n        return undefined;\n      }\n      var textModel = _this.currentTextModel.read(reader);\n      if (textModel !== _this.model.targetTextModel.read(reader)) {\n        return undefined;\n      }\n      var ghostText = _this.model.ghostText.read(reader);\n      if (!ghostText) {\n        return undefined;\n      }\n      var replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n      var inlineTexts = [];\n      var additionalLines = [];\n      function addToAdditionalLines(lines, className) {\n        if (additionalLines.length > 0) {\n          var lastLine = additionalLines[additionalLines.length - 1];\n          if (className) {\n            lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n          }\n          lastLine.content += lines[0];\n          lines = lines.slice(1);\n        }\n        var _iterator = _createForOfIteratorHelper(lines),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var line = _step.value;\n            additionalLines.push({\n              content: line,\n              decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      var textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n      var hiddenTextStartColumn = undefined;\n      var lastIdx = 0;\n      var _iterator2 = _createForOfIteratorHelper(ghostText.parts),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var part = _step2.value;\n          var lines = part.lines;\n          if (hiddenTextStartColumn === undefined) {\n            inlineTexts.push({\n              column: part.column,\n              text: lines[0],\n              preview: part.preview\n            });\n            lines = lines.slice(1);\n          } else {\n            addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n          }\n          if (lines.length > 0) {\n            addToAdditionalLines(lines, GHOST_TEXT_DESCRIPTION);\n            if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n              hiddenTextStartColumn = part.column;\n            }\n          }\n          lastIdx = part.column - 1;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (hiddenTextStartColumn !== undefined) {\n        addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n      }\n      var hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n      return {\n        replacedRange: replacedRange,\n        inlineTexts: inlineTexts,\n        additionalLines: additionalLines,\n        hiddenRange: hiddenRange,\n        lineNumber: ghostText.lineNumber,\n        additionalReservedLineCount: _this.model.minReservedLineCount.read(reader),\n        targetTextModel: textModel\n      };\n    });\n    _this.decorations = derived(_this, function (reader) {\n      var uiState = _this.uiState.read(reader);\n      if (!uiState) {\n        return [];\n      }\n      var decorations = [];\n      if (uiState.replacedRange) {\n        decorations.push({\n          range: uiState.replacedRange.toRange(uiState.lineNumber),\n          options: {\n            inlineClassName: 'inline-completion-text-to-replace',\n            description: 'GhostTextReplacement'\n          }\n        });\n      }\n      if (uiState.hiddenRange) {\n        decorations.push({\n          range: uiState.hiddenRange.toRange(uiState.lineNumber),\n          options: {\n            inlineClassName: 'ghost-text-hidden',\n            description: 'ghost-text-hidden'\n          }\n        });\n      }\n      var _iterator3 = _createForOfIteratorHelper(uiState.inlineTexts),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var p = _step3.value;\n          decorations.push({\n            range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n            options: {\n              description: GHOST_TEXT_DESCRIPTION,\n              after: {\n                content: p.text,\n                inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration',\n                cursorStops: InjectedTextCursorStops.Left\n              },\n              showIfCollapsed: true\n            }\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return decorations;\n    });\n    _this.additionalLinesWidget = _this._register(new AdditionalLinesWidget(_this.editor, _this.languageService.languageIdCodec, derived(function (reader) {\n      /** @description lines */\n      var uiState = _this.uiState.read(reader);\n      return uiState ? {\n        lineNumber: uiState.lineNumber,\n        additionalLines: uiState.additionalLines,\n        minReservedLineCount: uiState.additionalReservedLineCount,\n        targetTextModel: uiState.targetTextModel\n      } : undefined;\n    })));\n    _this._register(toDisposable(function () {\n      _this.isDisposed.set(true, undefined);\n    }));\n    _this._register(applyObservableDecorations(_this.editor, _this.decorations));\n    return _this;\n  }\n  _inherits(GhostTextWidget, _Disposable);\n  return _createClass(GhostTextWidget, [{\n    key: \"ownsViewZone\",\n    value: function ownsViewZone(viewZoneId) {\n      return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n  }]);\n}(Disposable);\nGhostTextWidget = __decorate([__param(2, ILanguageService)], GhostTextWidget);\nexport { GhostTextWidget };\nexport var AdditionalLinesWidget = /*#__PURE__*/function (_Disposable2) {\n  function AdditionalLinesWidget(editor, languageIdCodec, lines) {\n    var _this2;\n    _classCallCheck(this, AdditionalLinesWidget);\n    _this2 = _callSuper(this, AdditionalLinesWidget);\n    _this2.editor = editor;\n    _this2.languageIdCodec = languageIdCodec;\n    _this2.lines = lines;\n    _this2._viewZoneId = undefined;\n    _this2.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(_this2.editor.onDidChangeConfiguration, function (e) {\n      return e.hasChanged(33 /* EditorOption.disableMonospaceOptimizations */) || e.hasChanged(117 /* EditorOption.stopRenderingLineAfter */) || e.hasChanged(99 /* EditorOption.renderWhitespace */) || e.hasChanged(94 /* EditorOption.renderControlCharacters */) || e.hasChanged(51 /* EditorOption.fontLigatures */) || e.hasChanged(50 /* EditorOption.fontInfo */) || e.hasChanged(67 /* EditorOption.lineHeight */);\n    }));\n    _this2._register(autorun(function (reader) {\n      /** @description update view zone */\n      var lines = _this2.lines.read(reader);\n      _this2.editorOptionsChanged.read(reader);\n      if (lines) {\n        _this2.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n      } else {\n        _this2.clear();\n      }\n    }));\n    return _this2;\n  }\n  _inherits(AdditionalLinesWidget, _Disposable2);\n  return _createClass(AdditionalLinesWidget, [{\n    key: \"viewZoneId\",\n    get: function get() {\n      return this._viewZoneId;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(AdditionalLinesWidget.prototype), \"dispose\", this).call(this);\n      this.clear();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n      this.editor.changeViewZones(function (changeAccessor) {\n        if (_this3._viewZoneId) {\n          changeAccessor.removeZone(_this3._viewZoneId);\n          _this3._viewZoneId = undefined;\n        }\n      });\n    }\n  }, {\n    key: \"updateLines\",\n    value: function updateLines(lineNumber, additionalLines, minReservedLineCount) {\n      var _this4 = this;\n      var textModel = this.editor.getModel();\n      if (!textModel) {\n        return;\n      }\n      var _textModel$getOptions = textModel.getOptions(),\n        tabSize = _textModel$getOptions.tabSize;\n      this.editor.changeViewZones(function (changeAccessor) {\n        if (_this4._viewZoneId) {\n          changeAccessor.removeZone(_this4._viewZoneId);\n          _this4._viewZoneId = undefined;\n        }\n        var heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n        if (heightInLines > 0) {\n          var domNode = document.createElement('div');\n          renderLines(domNode, tabSize, additionalLines, _this4.editor.getOptions(), _this4.languageIdCodec);\n          _this4._viewZoneId = changeAccessor.addZone({\n            afterLineNumber: lineNumber,\n            heightInLines: heightInLines,\n            domNode: domNode,\n            afterColumnAffinity: 1 /* PositionAffinity.Right */\n          });\n        }\n      });\n    }\n  }]);\n}(Disposable);\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n  var disableMonospaceOptimizations = opts.get(33 /* EditorOption.disableMonospaceOptimizations */);\n  var stopRenderingLineAfter = opts.get(117 /* EditorOption.stopRenderingLineAfter */);\n  // To avoid visual confusion, we don't want to render visible whitespace\n  var renderWhitespace = 'none';\n  var renderControlCharacters = opts.get(94 /* EditorOption.renderControlCharacters */);\n  var fontLigatures = opts.get(51 /* EditorOption.fontLigatures */);\n  var fontInfo = opts.get(50 /* EditorOption.fontInfo */);\n  var lineHeight = opts.get(67 /* EditorOption.lineHeight */);\n  var sb = new StringBuilder(10000);\n  sb.appendString('<div class=\"suggest-preview-text\">');\n  for (var i = 0, len = lines.length; i < len; i++) {\n    var lineData = lines[i];\n    var line = lineData.content;\n    sb.appendString('<div class=\"view-line');\n    sb.appendString('\" style=\"top:');\n    sb.appendString(String(i * lineHeight));\n    sb.appendString('px;width:1000000px;\">');\n    var isBasicASCII = strings.isBasicASCII(line);\n    var containsRTL = strings.containsRTL(line);\n    var lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n    renderViewLine(new RenderLineInput(fontInfo.isMonospace && !disableMonospaceOptimizations, fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n    sb.appendString('</div>');\n  }\n  sb.appendString('</div>');\n  applyFontInfo(domNode, fontInfo);\n  var html = sb.build();\n  var trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n  domNode.innerHTML = trustedhtml;\n}\nexport var ttPolicy = createTrustedTypesPolicy('editorGhostText', {\n  createHTML: function createHTML(value) {\n    return value;\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","createTrustedTypesPolicy","Event","Disposable","toDisposable","autorun","derived","observableFromEvent","observableSignalFromEvent","observableValue","strings","applyFontInfo","EditorFontLigatures","Position","Range","StringBuilder","ILanguageService","InjectedTextCursorStops","LineTokens","LineDecoration","RenderLineInput","renderViewLine","GhostTextReplacement","ColumnRange","applyObservableDecorations","GHOST_TEXT_DESCRIPTION","GhostTextWidget","_Disposable","editor","model","languageService","_this","_classCallCheck","_callSuper","isDisposed","currentTextModel","onDidChangeModel","getModel","uiState","reader","read","undefined","textModel","targetTextModel","ghostText","replacedRange","columnRange","inlineTexts","additionalLines","addToAdditionalLines","lines","className","lastLine","decorations","push","content","slice","_iterator","_createForOfIteratorHelper","_step","s","n","done","line","value","err","e","f","textBufferLine","getLineContent","lineNumber","hiddenTextStartColumn","lastIdx","_iterator2","parts","_step2","part","column","text","preview","substring","hiddenRange","additionalReservedLineCount","minReservedLineCount","range","toRange","options","inlineClassName","description","_iterator3","_step3","p","fromPositions","after","cursorStops","Left","showIfCollapsed","additionalLinesWidget","_register","AdditionalLinesWidget","languageIdCodec","set","_inherits","_createClass","ownsViewZone","viewZoneId","_Disposable2","_this2","_viewZoneId","editorOptionsChanged","filter","onDidChangeConfiguration","hasChanged","updateLines","clear","get","dispose","_get","_getPrototypeOf","prototype","call","_this3","changeViewZones","changeAccessor","removeZone","_this4","_textModel$getOptions","getOptions","tabSize","heightInLines","Math","max","domNode","document","createElement","renderLines","addZone","afterLineNumber","afterColumnAffinity","opts","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","fontInfo","lineHeight","sb","appendString","len","lineData","String","isBasicASCII","containsRTL","lineTokens","createEmpty","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF","html","build","trustedhtml","ttPolicy","createHTML","innerHTML"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\nexport const GHOST_TEXT_DESCRIPTION = 'ghost-text';\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue(this, false);\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => /** @description editor.model */ this.editor.getModel());\n        this.uiState = derived(this, reader => {\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            for (const part of ghostText.parts) {\n                let lines = part.lines;\n                if (hiddenTextStartColumn === undefined) {\n                    inlineTexts.push({\n                        column: part.column,\n                        text: lines[0],\n                        preview: part.preview,\n                    });\n                    lines = lines.slice(1);\n                }\n                else {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                }\n                if (lines.length > 0) {\n                    addToAdditionalLines(lines, GHOST_TEXT_DESCRIPTION);\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                        hiddenTextStartColumn = part.column;\n                    }\n                }\n                lastIdx = part.column - 1;\n            }\n            if (hiddenTextStartColumn !== undefined) {\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            return {\n                replacedRange,\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber: ghostText.lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n            };\n        });\n        this.decorations = derived(this, reader => {\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.replacedRange) {\n                decorations.push({\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\n                });\n            }\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n                });\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: GHOST_TEXT_DESCRIPTION,\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived(reader => {\n            /** @description lines */\n            const uiState = this.uiState.read(reader);\n            return uiState ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nexport class AdditionalLinesWidget extends Disposable {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec, lines) {\n        super();\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this.lines = lines;\n        this._viewZoneId = undefined;\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(33 /* EditorOption.disableMonospaceOptimizations */)\n            || e.hasChanged(117 /* EditorOption.stopRenderingLineAfter */)\n            || e.hasChanged(99 /* EditorOption.renderWhitespace */)\n            || e.hasChanged(94 /* EditorOption.renderControlCharacters */)\n            || e.hasChanged(51 /* EditorOption.fontLigatures */)\n            || e.hasChanged(50 /* EditorOption.fontInfo */)\n            || e.hasChanged(67 /* EditorOption.lineHeight */)));\n        this._register(autorun(reader => {\n            /** @description update view zone */\n            const lines = this.lines.read(reader);\n            this.editorOptionsChanged.read(reader);\n            if (lines) {\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n            }\n            else {\n                this.clear();\n            }\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(33 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(117 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(94 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(51 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(50 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(67 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nexport const ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}