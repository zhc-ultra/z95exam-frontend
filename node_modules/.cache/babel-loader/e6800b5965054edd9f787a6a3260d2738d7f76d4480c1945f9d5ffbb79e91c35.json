{"ast":null,"code":"import _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from './arrays.js';\nimport { Iterable } from './iterator.js';\nimport { generateUuid } from './uuid.js';\nexport function createStringDataTransferItem(stringOrPromise) {\n  return {\n    asString: function () {\n      var _asString = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", stringOrPromise);\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function asString() {\n        return _asString.apply(this, arguments);\n      }\n      return asString;\n    }(),\n    asFile: function asFile() {\n      return undefined;\n    },\n    value: typeof stringOrPromise === 'string' ? stringOrPromise : undefined\n  };\n}\nexport function createFileDataTransferItem(fileName, uri, data) {\n  var file = {\n    id: generateUuid(),\n    name: fileName,\n    uri: uri,\n    data: data\n  };\n  return {\n    asString: function () {\n      var _asString2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", '');\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function asString() {\n        return _asString2.apply(this, arguments);\n      }\n      return asString;\n    }(),\n    asFile: function asFile() {\n      return file;\n    },\n    value: undefined\n  };\n}\nexport var VSDataTransfer = /*#__PURE__*/function () {\n  function VSDataTransfer() {\n    _classCallCheck(this, VSDataTransfer);\n    this._entries = new Map();\n  }\n  return _createClass(VSDataTransfer, [{\n    key: \"size\",\n    get: function get() {\n      var size = 0;\n      var _iterator = _createForOfIteratorHelper(this._entries),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _ = _step.value;\n          size++;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return size;\n    }\n  }, {\n    key: \"has\",\n    value: function has(mimeType) {\n      return this._entries.has(this.toKey(mimeType));\n    }\n  }, {\n    key: \"matches\",\n    value: function matches(pattern) {\n      var mimes = _toConsumableArray(this._entries.keys());\n      if (Iterable.some(this, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          _ = _ref2[0],\n          item = _ref2[1];\n        return item.asFile();\n      })) {\n        mimes.push('files');\n      }\n      return matchesMimeType_normalized(normalizeMimeType(pattern), mimes);\n    }\n  }, {\n    key: \"get\",\n    value: function get(mimeType) {\n      var _a;\n      return (_a = this._entries.get(this.toKey(mimeType))) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    /**\n     * Add a new entry to this data transfer.\n     *\n     * This does not replace existing entries for `mimeType`.\n     */\n  }, {\n    key: \"append\",\n    value: function append(mimeType, value) {\n      var existing = this._entries.get(mimeType);\n      if (existing) {\n        existing.push(value);\n      } else {\n        this._entries.set(this.toKey(mimeType), [value]);\n      }\n    }\n    /**\n     * Set the entry for a given mime type.\n     *\n     * This replaces all existing entries for `mimeType`.\n     */\n  }, {\n    key: \"replace\",\n    value: function replace(mimeType, value) {\n      this._entries.set(this.toKey(mimeType), [value]);\n    }\n    /**\n     * Remove all entries for `mimeType`.\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(mimeType) {\n      this._entries[\"delete\"](this.toKey(mimeType));\n    }\n    /**\n     * Iterate over all `[mime, item]` pairs in this data transfer.\n     *\n     * There may be multiple entries for each mime type.\n     */\n  }, {\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime().mark(function value() {\n      var _iterator2, _step2, _step2$value, mine, items, _iterator3, _step3, item;\n      return _regeneratorRuntime().wrap(function value$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _iterator2 = _createForOfIteratorHelper(this._entries);\n            _context3.prev = 1;\n            _iterator2.s();\n          case 3:\n            if ((_step2 = _iterator2.n()).done) {\n              _context3.next = 24;\n              break;\n            }\n            _step2$value = _slicedToArray(_step2.value, 2), mine = _step2$value[0], items = _step2$value[1];\n            _iterator3 = _createForOfIteratorHelper(items);\n            _context3.prev = 6;\n            _iterator3.s();\n          case 8:\n            if ((_step3 = _iterator3.n()).done) {\n              _context3.next = 14;\n              break;\n            }\n            item = _step3.value;\n            _context3.next = 12;\n            return [mine, item];\n          case 12:\n            _context3.next = 8;\n            break;\n          case 14:\n            _context3.next = 19;\n            break;\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](6);\n            _iterator3.e(_context3.t0);\n          case 19:\n            _context3.prev = 19;\n            _iterator3.f();\n            return _context3.finish(19);\n          case 22:\n            _context3.next = 3;\n            break;\n          case 24:\n            _context3.next = 29;\n            break;\n          case 26:\n            _context3.prev = 26;\n            _context3.t1 = _context3[\"catch\"](1);\n            _iterator2.e(_context3.t1);\n          case 29:\n            _context3.prev = 29;\n            _iterator2.f();\n            return _context3.finish(29);\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, value, this, [[1, 26, 29, 32], [6, 16, 19, 22]]);\n    })\n  }, {\n    key: \"toKey\",\n    value: function toKey(mimeType) {\n      return normalizeMimeType(mimeType);\n    }\n  }]);\n}();\nfunction normalizeMimeType(mimeType) {\n  return mimeType.toLowerCase();\n}\nexport function matchesMimeType(pattern, mimeTypes) {\n  return matchesMimeType_normalized(normalizeMimeType(pattern), mimeTypes.map(normalizeMimeType));\n}\nfunction matchesMimeType_normalized(normalizedPattern, normalizedMimeTypes) {\n  // Anything wildcard\n  if (normalizedPattern === '*/*') {\n    return normalizedMimeTypes.length > 0;\n  }\n  // Exact match\n  if (normalizedMimeTypes.includes(normalizedPattern)) {\n    return true;\n  }\n  // Wildcard, such as `image/*`\n  var wildcard = normalizedPattern.match(/^([a-z]+)\\/([a-z]+|\\*)$/i);\n  if (!wildcard) {\n    return false;\n  }\n  var _wildcard = _slicedToArray(wildcard, 3),\n    _ = _wildcard[0],\n    type = _wildcard[1],\n    subtype = _wildcard[2];\n  if (subtype === '*') {\n    return normalizedMimeTypes.some(function (mime) {\n      return mime.startsWith(type + '/');\n    });\n  }\n  return false;\n}\nexport var UriList = Object.freeze({\n  // http://amundsen.com/hypermedia/urilist/\n  create: function create(entries) {\n    return distinct(entries.map(function (x) {\n      return x.toString();\n    })).join('\\r\\n');\n  },\n  split: function split(str) {\n    return str.split('\\r\\n');\n  },\n  parse: function parse(str) {\n    return UriList.split(str).filter(function (value) {\n      return !value.startsWith('#');\n    });\n  }\n});","map":{"version":3,"names":["distinct","Iterable","generateUuid","createStringDataTransferItem","stringOrPromise","asString","_asString","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","apply","arguments","asFile","undefined","value","createFileDataTransferItem","fileName","uri","data","file","id","name","_asString2","_callee2","_callee2$","_context2","VSDataTransfer","_classCallCheck","_entries","Map","_createClass","key","get","size","_iterator","_createForOfIteratorHelper","_step","s","n","done","_","err","e","f","has","mimeType","toKey","matches","pattern","mimes","_toConsumableArray","keys","some","_ref","_ref2","_slicedToArray","item","push","matchesMimeType_normalized","normalizeMimeType","_a","append","existing","set","replace","_delete","Symbol","iterator","_iterator2","_step2","_step2$value","mine","items","_iterator3","_step3","value$","_context3","t0","finish","t1","toLowerCase","matchesMimeType","mimeTypes","map","normalizedPattern","normalizedMimeTypes","length","includes","wildcard","match","_wildcard","type","subtype","mime","startsWith","UriList","Object","freeze","create","entries","x","toString","join","split","str","parse","filter"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/common/dataTransfer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from './arrays.js';\nimport { Iterable } from './iterator.js';\nimport { generateUuid } from './uuid.js';\nexport function createStringDataTransferItem(stringOrPromise) {\n    return {\n        asString: async () => stringOrPromise,\n        asFile: () => undefined,\n        value: typeof stringOrPromise === 'string' ? stringOrPromise : undefined,\n    };\n}\nexport function createFileDataTransferItem(fileName, uri, data) {\n    const file = { id: generateUuid(), name: fileName, uri, data };\n    return {\n        asString: async () => '',\n        asFile: () => file,\n        value: undefined,\n    };\n}\nexport class VSDataTransfer {\n    constructor() {\n        this._entries = new Map();\n    }\n    get size() {\n        let size = 0;\n        for (const _ of this._entries) {\n            size++;\n        }\n        return size;\n    }\n    has(mimeType) {\n        return this._entries.has(this.toKey(mimeType));\n    }\n    matches(pattern) {\n        const mimes = [...this._entries.keys()];\n        if (Iterable.some(this, ([_, item]) => item.asFile())) {\n            mimes.push('files');\n        }\n        return matchesMimeType_normalized(normalizeMimeType(pattern), mimes);\n    }\n    get(mimeType) {\n        var _a;\n        return (_a = this._entries.get(this.toKey(mimeType))) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    /**\n     * Add a new entry to this data transfer.\n     *\n     * This does not replace existing entries for `mimeType`.\n     */\n    append(mimeType, value) {\n        const existing = this._entries.get(mimeType);\n        if (existing) {\n            existing.push(value);\n        }\n        else {\n            this._entries.set(this.toKey(mimeType), [value]);\n        }\n    }\n    /**\n     * Set the entry for a given mime type.\n     *\n     * This replaces all existing entries for `mimeType`.\n     */\n    replace(mimeType, value) {\n        this._entries.set(this.toKey(mimeType), [value]);\n    }\n    /**\n     * Remove all entries for `mimeType`.\n     */\n    delete(mimeType) {\n        this._entries.delete(this.toKey(mimeType));\n    }\n    /**\n     * Iterate over all `[mime, item]` pairs in this data transfer.\n     *\n     * There may be multiple entries for each mime type.\n     */\n    *[Symbol.iterator]() {\n        for (const [mine, items] of this._entries) {\n            for (const item of items) {\n                yield [mine, item];\n            }\n        }\n    }\n    toKey(mimeType) {\n        return normalizeMimeType(mimeType);\n    }\n}\nfunction normalizeMimeType(mimeType) {\n    return mimeType.toLowerCase();\n}\nexport function matchesMimeType(pattern, mimeTypes) {\n    return matchesMimeType_normalized(normalizeMimeType(pattern), mimeTypes.map(normalizeMimeType));\n}\nfunction matchesMimeType_normalized(normalizedPattern, normalizedMimeTypes) {\n    // Anything wildcard\n    if (normalizedPattern === '*/*') {\n        return normalizedMimeTypes.length > 0;\n    }\n    // Exact match\n    if (normalizedMimeTypes.includes(normalizedPattern)) {\n        return true;\n    }\n    // Wildcard, such as `image/*`\n    const wildcard = normalizedPattern.match(/^([a-z]+)\\/([a-z]+|\\*)$/i);\n    if (!wildcard) {\n        return false;\n    }\n    const [_, type, subtype] = wildcard;\n    if (subtype === '*') {\n        return normalizedMimeTypes.some(mime => mime.startsWith(type + '/'));\n    }\n    return false;\n}\nexport const UriList = Object.freeze({\n    // http://amundsen.com/hypermedia/urilist/\n    create: (entries) => {\n        return distinct(entries.map(x => x.toString())).join('\\r\\n');\n    },\n    split: (str) => {\n        return str.split('\\r\\n');\n    },\n    parse: (str) => {\n        return UriList.split(str).filter(value => !value.startsWith('#'));\n    }\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAO,SAASC,4BAA4BA,CAACC,eAAe,EAAE;EAC1D,OAAO;IACHC,QAAQ;MAAA,IAAAC,SAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA,WAAYZ,eAAe;YAAA;YAAA;cAAA,OAAAS,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAP,OAAA;MAAA;MAAA,SAAAL,SAAA;QAAA,OAAAC,SAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAd,QAAA;IAAA;IACrCe,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMC,SAAS;IAAA;IACvBC,KAAK,EAAE,OAAOlB,eAAe,KAAK,QAAQ,GAAGA,eAAe,GAAGiB;EACnE,CAAC;AACL;AACA,OAAO,SAASE,0BAA0BA,CAACC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAE;EAC5D,IAAMC,IAAI,GAAG;IAAEC,EAAE,EAAE1B,YAAY,CAAC,CAAC;IAAE2B,IAAI,EAAEL,QAAQ;IAAEC,GAAG,EAAHA,GAAG;IAAEC,IAAI,EAAJA;EAAK,CAAC;EAC9D,OAAO;IACHrB,QAAQ;MAAA,IAAAyB,UAAA,GAAAvB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAE,SAAAsB,SAAA;QAAA,OAAAvB,mBAAA,GAAAG,IAAA,UAAAqB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAAlB,IAAA;YAAA;cAAA,OAAAkB,SAAA,CAAAjB,MAAA,WAAY,EAAE;YAAA;YAAA;cAAA,OAAAiB,SAAA,CAAAhB,IAAA;UAAA;QAAA,GAAAc,QAAA;MAAA;MAAA,SAAA1B,SAAA;QAAA,OAAAyB,UAAA,CAAAZ,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAd,QAAA;IAAA;IACxBe,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMO,IAAI;IAAA;IAClBL,KAAK,EAAED;EACX,CAAC;AACL;AACA,WAAaa,cAAc;EACvB,SAAAA,eAAA,EAAc;IAAAC,eAAA,OAAAD,cAAA;IACV,IAAI,CAACE,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC7B;EAAC,OAAAC,YAAA,CAAAJ,cAAA;IAAAK,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAW;MACP,IAAIC,IAAI,GAAG,CAAC;MAAC,IAAAC,SAAA,GAAAC,0BAAA,CACG,IAAI,CAACP,QAAQ;QAAAQ,KAAA;MAAA;QAA7B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA+B;UAAA,IAApBC,CAAC,GAAAJ,KAAA,CAAAtB,KAAA;UACRmB,IAAI,EAAE;QACV;MAAC,SAAAQ,GAAA;QAAAP,SAAA,CAAAQ,CAAA,CAAAD,GAAA;MAAA;QAAAP,SAAA,CAAAS,CAAA;MAAA;MACD,OAAOV,IAAI;IACf;EAAC;IAAAF,GAAA;IAAAjB,KAAA,EACD,SAAA8B,IAAIC,QAAQ,EAAE;MACV,OAAO,IAAI,CAACjB,QAAQ,CAACgB,GAAG,CAAC,IAAI,CAACE,KAAK,CAACD,QAAQ,CAAC,CAAC;IAClD;EAAC;IAAAd,GAAA;IAAAjB,KAAA,EACD,SAAAiC,QAAQC,OAAO,EAAE;MACb,IAAMC,KAAK,GAAAC,kBAAA,CAAO,IAAI,CAACtB,QAAQ,CAACuB,IAAI,CAAC,CAAC,CAAC;MACvC,IAAI1D,QAAQ,CAAC2D,IAAI,CAAC,IAAI,EAAE,UAAAC,IAAA;QAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;UAAEb,CAAC,GAAAc,KAAA;UAAEE,IAAI,GAAAF,KAAA;QAAA,OAAME,IAAI,CAAC5C,MAAM,CAAC,CAAC;MAAA,EAAC,EAAE;QACnDqC,KAAK,CAACQ,IAAI,CAAC,OAAO,CAAC;MACvB;MACA,OAAOC,0BAA0B,CAACC,iBAAiB,CAACX,OAAO,CAAC,EAAEC,KAAK,CAAC;IACxE;EAAC;IAAAlB,GAAA;IAAAjB,KAAA,EACD,SAAAkB,IAAIa,QAAQ,EAAE;MACV,IAAIe,EAAE;MACN,OAAO,CAACA,EAAE,GAAG,IAAI,CAAChC,QAAQ,CAACI,GAAG,CAAC,IAAI,CAACc,KAAK,CAACD,QAAQ,CAAC,CAAC,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC;IACpG;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA7B,GAAA;IAAAjB,KAAA,EAKA,SAAA+C,OAAOhB,QAAQ,EAAE/B,KAAK,EAAE;MACpB,IAAMgD,QAAQ,GAAG,IAAI,CAAClC,QAAQ,CAACI,GAAG,CAACa,QAAQ,CAAC;MAC5C,IAAIiB,QAAQ,EAAE;QACVA,QAAQ,CAACL,IAAI,CAAC3C,KAAK,CAAC;MACxB,CAAC,MACI;QACD,IAAI,CAACc,QAAQ,CAACmC,GAAG,CAAC,IAAI,CAACjB,KAAK,CAACD,QAAQ,CAAC,EAAE,CAAC/B,KAAK,CAAC,CAAC;MACpD;IACJ;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAAiB,GAAA;IAAAjB,KAAA,EAKA,SAAAkD,QAAQnB,QAAQ,EAAE/B,KAAK,EAAE;MACrB,IAAI,CAACc,QAAQ,CAACmC,GAAG,CAAC,IAAI,CAACjB,KAAK,CAACD,QAAQ,CAAC,EAAE,CAAC/B,KAAK,CAAC,CAAC;IACpD;IACA;AACJ;AACA;EAFI;IAAAiB,GAAA;IAAAjB,KAAA,EAGA,SAAAmD,QAAOpB,QAAQ,EAAE;MACb,IAAI,CAACjB,QAAQ,UAAO,CAAC,IAAI,CAACkB,KAAK,CAACD,QAAQ,CAAC,CAAC;IAC9C;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAAd,GAAA,EAKEmC,MAAM,CAACC,QAAQ;IAAArD,KAAA;IAAA;IAAAd,mBAAA,GAAAC,IAAA,CAAjB,SAAAa,MAAA;MAAA,IAAAsD,UAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAlB,IAAA;MAAA,OAAAxD,mBAAA,GAAAG,IAAA,UAAAwE,OAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAtE,IAAA,GAAAsE,SAAA,CAAArE,IAAA;UAAA;YAAA6D,UAAA,GAAAjC,0BAAA,CACgC,IAAI,CAACP,QAAQ;YAAAgD,SAAA,CAAAtE,IAAA;YAAA8D,UAAA,CAAA/B,CAAA;UAAA;YAAA,KAAAgC,MAAA,GAAAD,UAAA,CAAA9B,CAAA,IAAAC,IAAA;cAAAqC,SAAA,CAAArE,IAAA;cAAA;YAAA;YAAA+D,YAAA,GAAAf,cAAA,CAAAc,MAAA,CAAAvD,KAAA,MAA7ByD,IAAI,GAAAD,YAAA,KAAEE,KAAK,GAAAF,YAAA;YAAAG,UAAA,GAAAtC,0BAAA,CACAqC,KAAK;YAAAI,SAAA,CAAAtE,IAAA;YAAAmE,UAAA,CAAApC,CAAA;UAAA;YAAA,KAAAqC,MAAA,GAAAD,UAAA,CAAAnC,CAAA,IAAAC,IAAA;cAAAqC,SAAA,CAAArE,IAAA;cAAA;YAAA;YAAbiD,IAAI,GAAAkB,MAAA,CAAA5D,KAAA;YAAA8D,SAAA,CAAArE,IAAA;YACX,OAAM,CAACgE,IAAI,EAAEf,IAAI,CAAC;UAAA;YAAAoB,SAAA,CAAArE,IAAA;YAAA;UAAA;YAAAqE,SAAA,CAAArE,IAAA;YAAA;UAAA;YAAAqE,SAAA,CAAAtE,IAAA;YAAAsE,SAAA,CAAAC,EAAA,GAAAD,SAAA;YAAAH,UAAA,CAAA/B,CAAA,CAAAkC,SAAA,CAAAC,EAAA;UAAA;YAAAD,SAAA,CAAAtE,IAAA;YAAAmE,UAAA,CAAA9B,CAAA;YAAA,OAAAiC,SAAA,CAAAE,MAAA;UAAA;YAAAF,SAAA,CAAArE,IAAA;YAAA;UAAA;YAAAqE,SAAA,CAAArE,IAAA;YAAA;UAAA;YAAAqE,SAAA,CAAAtE,IAAA;YAAAsE,SAAA,CAAAG,EAAA,GAAAH,SAAA;YAAAR,UAAA,CAAA1B,CAAA,CAAAkC,SAAA,CAAAG,EAAA;UAAA;YAAAH,SAAA,CAAAtE,IAAA;YAAA8D,UAAA,CAAAzB,CAAA;YAAA,OAAAiC,SAAA,CAAAE,MAAA;UAAA;UAAA;YAAA,OAAAF,SAAA,CAAAnE,IAAA;QAAA;MAAA,GAAAK,KAAA;IAAA,CAG7B;EAAA;IAAAiB,GAAA;IAAAjB,KAAA,EACD,SAAAgC,MAAMD,QAAQ,EAAE;MACZ,OAAOc,iBAAiB,CAACd,QAAQ,CAAC;IACtC;EAAC;AAAA;AAEL,SAASc,iBAAiBA,CAACd,QAAQ,EAAE;EACjC,OAAOA,QAAQ,CAACmC,WAAW,CAAC,CAAC;AACjC;AACA,OAAO,SAASC,eAAeA,CAACjC,OAAO,EAAEkC,SAAS,EAAE;EAChD,OAAOxB,0BAA0B,CAACC,iBAAiB,CAACX,OAAO,CAAC,EAAEkC,SAAS,CAACC,GAAG,CAACxB,iBAAiB,CAAC,CAAC;AACnG;AACA,SAASD,0BAA0BA,CAAC0B,iBAAiB,EAAEC,mBAAmB,EAAE;EACxE;EACA,IAAID,iBAAiB,KAAK,KAAK,EAAE;IAC7B,OAAOC,mBAAmB,CAACC,MAAM,GAAG,CAAC;EACzC;EACA;EACA,IAAID,mBAAmB,CAACE,QAAQ,CAACH,iBAAiB,CAAC,EAAE;IACjD,OAAO,IAAI;EACf;EACA;EACA,IAAMI,QAAQ,GAAGJ,iBAAiB,CAACK,KAAK,CAAC,0BAA0B,CAAC;EACpE,IAAI,CAACD,QAAQ,EAAE;IACX,OAAO,KAAK;EAChB;EACA,IAAAE,SAAA,GAAAnC,cAAA,CAA2BiC,QAAQ;IAA5BhD,CAAC,GAAAkD,SAAA;IAAEC,IAAI,GAAAD,SAAA;IAAEE,OAAO,GAAAF,SAAA;EACvB,IAAIE,OAAO,KAAK,GAAG,EAAE;IACjB,OAAOP,mBAAmB,CAACjC,IAAI,CAAC,UAAAyC,IAAI;MAAA,OAAIA,IAAI,CAACC,UAAU,CAACH,IAAI,GAAG,GAAG,CAAC;IAAA,EAAC;EACxE;EACA,OAAO,KAAK;AAChB;AACA,OAAO,IAAMI,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC;EACjC;EACAC,MAAM,EAAE,SAAAA,OAACC,OAAO,EAAK;IACjB,OAAO3G,QAAQ,CAAC2G,OAAO,CAAChB,GAAG,CAAC,UAAAiB,CAAC;MAAA,OAAIA,CAAC,CAACC,QAAQ,CAAC,CAAC;IAAA,EAAC,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC;EAChE,CAAC;EACDC,KAAK,EAAE,SAAAA,MAACC,GAAG,EAAK;IACZ,OAAOA,GAAG,CAACD,KAAK,CAAC,MAAM,CAAC;EAC5B,CAAC;EACDE,KAAK,EAAE,SAAAA,MAACD,GAAG,EAAK;IACZ,OAAOT,OAAO,CAACQ,KAAK,CAACC,GAAG,CAAC,CAACE,MAAM,CAAC,UAAA5F,KAAK;MAAA,OAAI,CAACA,KAAK,CAACgF,UAAU,CAAC,GAAG,CAAC;IAAA,EAAC;EACrE;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}