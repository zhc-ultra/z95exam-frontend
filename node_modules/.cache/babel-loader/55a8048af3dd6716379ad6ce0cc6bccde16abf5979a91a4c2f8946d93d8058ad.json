{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.last-index-of.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.math.trunc.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.ends-with.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.substr.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\nimport * as path from '../../../../base/common/path.js';\nimport { dirname } from '../../../../base/common/resources.js';\nimport { commonPrefixLength, getLeadingWhitespace, isFalsyOrWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { Text } from './snippetParser.js';\nimport * as nls from '../../../../nls.js';\nimport { WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, isEmptyWorkspaceIdentifier } from '../../../../platform/workspace/common/workspace.js';\nexport var KnownSnippetVariableNames = Object.freeze({\n  'CURRENT_YEAR': true,\n  'CURRENT_YEAR_SHORT': true,\n  'CURRENT_MONTH': true,\n  'CURRENT_DATE': true,\n  'CURRENT_HOUR': true,\n  'CURRENT_MINUTE': true,\n  'CURRENT_SECOND': true,\n  'CURRENT_DAY_NAME': true,\n  'CURRENT_DAY_NAME_SHORT': true,\n  'CURRENT_MONTH_NAME': true,\n  'CURRENT_MONTH_NAME_SHORT': true,\n  'CURRENT_SECONDS_UNIX': true,\n  'CURRENT_TIMEZONE_OFFSET': true,\n  'SELECTION': true,\n  'CLIPBOARD': true,\n  'TM_SELECTED_TEXT': true,\n  'TM_CURRENT_LINE': true,\n  'TM_CURRENT_WORD': true,\n  'TM_LINE_INDEX': true,\n  'TM_LINE_NUMBER': true,\n  'TM_FILENAME': true,\n  'TM_FILENAME_BASE': true,\n  'TM_DIRECTORY': true,\n  'TM_FILEPATH': true,\n  'CURSOR_INDEX': true,\n  // 0-offset\n  'CURSOR_NUMBER': true,\n  // 1-offset\n  'RELATIVE_FILEPATH': true,\n  'BLOCK_COMMENT_START': true,\n  'BLOCK_COMMENT_END': true,\n  'LINE_COMMENT': true,\n  'WORKSPACE_NAME': true,\n  'WORKSPACE_FOLDER': true,\n  'RANDOM': true,\n  'RANDOM_HEX': true,\n  'UUID': true\n});\nexport var CompositeSnippetVariableResolver = /*#__PURE__*/function () {\n  function CompositeSnippetVariableResolver(_delegates) {\n    _classCallCheck(this, CompositeSnippetVariableResolver);\n    this._delegates = _delegates;\n    //\n  }\n  return _createClass(CompositeSnippetVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      var _iterator = _createForOfIteratorHelper(this._delegates),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var delegate = _step.value;\n          var value = delegate.resolve(variable);\n          if (value !== undefined) {\n            return value;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return undefined;\n    }\n  }]);\n}();\nexport var SelectionBasedVariableResolver = /*#__PURE__*/function () {\n  function SelectionBasedVariableResolver(_model, _selection, _selectionIdx, _overtypingCapturer) {\n    _classCallCheck(this, SelectionBasedVariableResolver);\n    this._model = _model;\n    this._selection = _selection;\n    this._selectionIdx = _selectionIdx;\n    this._overtypingCapturer = _overtypingCapturer;\n    //\n  }\n  return _createClass(SelectionBasedVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      var name = variable.name;\n      if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\n        var value = this._model.getValueInRange(this._selection) || undefined;\n        var isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\n        // If there was no selected text, try to get last overtyped text\n        if (!value && this._overtypingCapturer) {\n          var info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\n          if (info) {\n            value = info.value;\n            isMultiline = info.multiline;\n          }\n        }\n        if (value && isMultiline && variable.snippet) {\n          // Selection is a multiline string which we indentation we now\n          // need to adjust. We compare the indentation of this variable\n          // with the indentation at the editor position and add potential\n          // extra indentation to the value\n          var line = this._model.getLineContent(this._selection.startLineNumber);\n          var lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\n          var varLeadingWhitespace = lineLeadingWhitespace;\n          variable.snippet.walk(function (marker) {\n            if (marker === variable) {\n              return false;\n            }\n            if (marker instanceof Text) {\n              varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\n            }\n            return true;\n          });\n          var whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\n          value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, function (m, newline, rest) {\n            return \"\".concat(newline).concat(varLeadingWhitespace.substr(whitespaceCommonLength)).concat(rest);\n          });\n        }\n        return value;\n      } else if (name === 'TM_CURRENT_LINE') {\n        return this._model.getLineContent(this._selection.positionLineNumber);\n      } else if (name === 'TM_CURRENT_WORD') {\n        var _info = this._model.getWordAtPosition({\n          lineNumber: this._selection.positionLineNumber,\n          column: this._selection.positionColumn\n        });\n        return _info && _info.word || undefined;\n      } else if (name === 'TM_LINE_INDEX') {\n        return String(this._selection.positionLineNumber - 1);\n      } else if (name === 'TM_LINE_NUMBER') {\n        return String(this._selection.positionLineNumber);\n      } else if (name === 'CURSOR_INDEX') {\n        return String(this._selectionIdx);\n      } else if (name === 'CURSOR_NUMBER') {\n        return String(this._selectionIdx + 1);\n      }\n      return undefined;\n    }\n  }]);\n}();\nexport var ModelBasedVariableResolver = /*#__PURE__*/function () {\n  function ModelBasedVariableResolver(_labelService, _model) {\n    _classCallCheck(this, ModelBasedVariableResolver);\n    this._labelService = _labelService;\n    this._model = _model;\n    //\n  }\n  return _createClass(ModelBasedVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      var name = variable.name;\n      if (name === 'TM_FILENAME') {\n        return path.basename(this._model.uri.fsPath);\n      } else if (name === 'TM_FILENAME_BASE') {\n        var _name = path.basename(this._model.uri.fsPath);\n        var idx = _name.lastIndexOf('.');\n        if (idx <= 0) {\n          return _name;\n        } else {\n          return _name.slice(0, idx);\n        }\n      } else if (name === 'TM_DIRECTORY') {\n        if (path.dirname(this._model.uri.fsPath) === '.') {\n          return '';\n        }\n        return this._labelService.getUriLabel(dirname(this._model.uri));\n      } else if (name === 'TM_FILEPATH') {\n        return this._labelService.getUriLabel(this._model.uri);\n      } else if (name === 'RELATIVE_FILEPATH') {\n        return this._labelService.getUriLabel(this._model.uri, {\n          relative: true,\n          noPrefix: true\n        });\n      }\n      return undefined;\n    }\n  }]);\n}();\nexport var ClipboardBasedVariableResolver = /*#__PURE__*/function () {\n  function ClipboardBasedVariableResolver(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\n    _classCallCheck(this, ClipboardBasedVariableResolver);\n    this._readClipboardText = _readClipboardText;\n    this._selectionIdx = _selectionIdx;\n    this._selectionCount = _selectionCount;\n    this._spread = _spread;\n    //\n  }\n  return _createClass(ClipboardBasedVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      if (variable.name !== 'CLIPBOARD') {\n        return undefined;\n      }\n      var clipboardText = this._readClipboardText();\n      if (!clipboardText) {\n        return undefined;\n      }\n      // `spread` is assigning each cursor a line of the clipboard\n      // text whenever there the line count equals the cursor count\n      // and when enabled\n      if (this._spread) {\n        var lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(function (s) {\n          return !isFalsyOrWhitespace(s);\n        });\n        if (lines.length === this._selectionCount) {\n          return lines[this._selectionIdx];\n        }\n      }\n      return clipboardText;\n    }\n  }]);\n}();\nvar CommentBasedVariableResolver = /*#__PURE__*/function () {\n  function CommentBasedVariableResolver(_model, _selection, _languageConfigurationService) {\n    _classCallCheck(this, CommentBasedVariableResolver);\n    this._model = _model;\n    this._selection = _selection;\n    this._languageConfigurationService = _languageConfigurationService;\n    //\n  }\n  return _createClass(CommentBasedVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      var name = variable.name;\n      var langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\n      var config = this._languageConfigurationService.getLanguageConfiguration(langId).comments;\n      if (!config) {\n        return undefined;\n      }\n      if (name === 'LINE_COMMENT') {\n        return config.lineCommentToken || undefined;\n      } else if (name === 'BLOCK_COMMENT_START') {\n        return config.blockCommentStartToken || undefined;\n      } else if (name === 'BLOCK_COMMENT_END') {\n        return config.blockCommentEndToken || undefined;\n      }\n      return undefined;\n    }\n  }]);\n}();\nCommentBasedVariableResolver = __decorate([__param(2, ILanguageConfigurationService)], CommentBasedVariableResolver);\nexport { CommentBasedVariableResolver };\nexport var TimeBasedVariableResolver = /*#__PURE__*/function () {\n  function TimeBasedVariableResolver() {\n    _classCallCheck(this, TimeBasedVariableResolver);\n    this._date = new Date();\n  }\n  return _createClass(TimeBasedVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      var name = variable.name;\n      if (name === 'CURRENT_YEAR') {\n        return String(this._date.getFullYear());\n      } else if (name === 'CURRENT_YEAR_SHORT') {\n        return String(this._date.getFullYear()).slice(-2);\n      } else if (name === 'CURRENT_MONTH') {\n        return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\n      } else if (name === 'CURRENT_DATE') {\n        return String(this._date.getDate().valueOf()).padStart(2, '0');\n      } else if (name === 'CURRENT_HOUR') {\n        return String(this._date.getHours().valueOf()).padStart(2, '0');\n      } else if (name === 'CURRENT_MINUTE') {\n        return String(this._date.getMinutes().valueOf()).padStart(2, '0');\n      } else if (name === 'CURRENT_SECOND') {\n        return String(this._date.getSeconds().valueOf()).padStart(2, '0');\n      } else if (name === 'CURRENT_DAY_NAME') {\n        return TimeBasedVariableResolver.dayNames[this._date.getDay()];\n      } else if (name === 'CURRENT_DAY_NAME_SHORT') {\n        return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\n      } else if (name === 'CURRENT_MONTH_NAME') {\n        return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\n      } else if (name === 'CURRENT_MONTH_NAME_SHORT') {\n        return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\n      } else if (name === 'CURRENT_SECONDS_UNIX') {\n        return String(Math.floor(this._date.getTime() / 1000));\n      } else if (name === 'CURRENT_TIMEZONE_OFFSET') {\n        var rawTimeOffset = this._date.getTimezoneOffset();\n        var sign = rawTimeOffset > 0 ? '-' : '+';\n        var hours = Math.trunc(Math.abs(rawTimeOffset / 60));\n        var hoursString = hours < 10 ? '0' + hours : hours;\n        var minutes = Math.abs(rawTimeOffset) - hours * 60;\n        var minutesString = minutes < 10 ? '0' + minutes : minutes;\n        return sign + hoursString + ':' + minutesString;\n      }\n      return undefined;\n    }\n  }]);\n}();\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\nexport var WorkspaceBasedVariableResolver = /*#__PURE__*/function () {\n  function WorkspaceBasedVariableResolver(_workspaceService) {\n    _classCallCheck(this, WorkspaceBasedVariableResolver);\n    this._workspaceService = _workspaceService;\n    //\n  }\n  return _createClass(WorkspaceBasedVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      if (!this._workspaceService) {\n        return undefined;\n      }\n      var workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\n      if (isEmptyWorkspaceIdentifier(workspaceIdentifier)) {\n        return undefined;\n      }\n      if (variable.name === 'WORKSPACE_NAME') {\n        return this._resolveWorkspaceName(workspaceIdentifier);\n      } else if (variable.name === 'WORKSPACE_FOLDER') {\n        return this._resoveWorkspacePath(workspaceIdentifier);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_resolveWorkspaceName\",\n    value: function _resolveWorkspaceName(workspaceIdentifier) {\n      if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n        return path.basename(workspaceIdentifier.uri.path);\n      }\n      var filename = path.basename(workspaceIdentifier.configPath.path);\n      if (filename.endsWith(WORKSPACE_EXTENSION)) {\n        filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n      }\n      return filename;\n    }\n  }, {\n    key: \"_resoveWorkspacePath\",\n    value: function _resoveWorkspacePath(workspaceIdentifier) {\n      if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n        return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\n      }\n      var filename = path.basename(workspaceIdentifier.configPath.path);\n      var folderpath = workspaceIdentifier.configPath.fsPath;\n      if (folderpath.endsWith(filename)) {\n        folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\n      }\n      return folderpath ? normalizeDriveLetter(folderpath) : '/';\n    }\n  }]);\n}();\nexport var RandomBasedVariableResolver = /*#__PURE__*/function () {\n  function RandomBasedVariableResolver() {\n    _classCallCheck(this, RandomBasedVariableResolver);\n  }\n  return _createClass(RandomBasedVariableResolver, [{\n    key: \"resolve\",\n    value: function resolve(variable) {\n      var name = variable.name;\n      if (name === 'RANDOM') {\n        return Math.random().toString().slice(-6);\n      } else if (name === 'RANDOM_HEX') {\n        return Math.random().toString(16).slice(-6);\n      } else if (name === 'UUID') {\n        return generateUuid();\n      }\n      return undefined;\n    }\n  }]);\n}();","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","normalizeDriveLetter","path","dirname","commonPrefixLength","getLeadingWhitespace","isFalsyOrWhitespace","splitLines","generateUuid","ILanguageConfigurationService","Text","nls","WORKSPACE_EXTENSION","isSingleFolderWorkspaceIdentifier","toWorkspaceIdentifier","isEmptyWorkspaceIdentifier","KnownSnippetVariableNames","freeze","CompositeSnippetVariableResolver","_delegates","_classCallCheck","_createClass","value","resolve","variable","_iterator","_createForOfIteratorHelper","_step","s","n","done","delegate","undefined","err","e","f","SelectionBasedVariableResolver","_model","_selection","_selectionIdx","_overtypingCapturer","name","getValueInRange","isMultiline","startLineNumber","endLineNumber","info","getLastOvertypedInfo","multiline","snippet","line","getLineContent","lineLeadingWhitespace","startColumn","varLeadingWhitespace","walk","marker","pop","whitespaceCommonLength","replace","m","newline","rest","concat","substr","positionLineNumber","getWordAtPosition","lineNumber","column","positionColumn","word","String","ModelBasedVariableResolver","_labelService","basename","uri","fsPath","idx","lastIndexOf","slice","getUriLabel","relative","noPrefix","ClipboardBasedVariableResolver","_readClipboardText","_selectionCount","_spread","clipboardText","lines","split","filter","CommentBasedVariableResolver","_languageConfigurationService","langId","getLanguageIdAtPosition","selectionStartLineNumber","selectionStartColumn","config","getLanguageConfiguration","comments","lineCommentToken","blockCommentStartToken","blockCommentEndToken","TimeBasedVariableResolver","_date","Date","getFullYear","getMonth","valueOf","padStart","getDate","getHours","getMinutes","getSeconds","dayNames","getDay","dayNamesShort","monthNames","monthNamesShort","Math","floor","getTime","rawTimeOffset","getTimezoneOffset","sign","hours","trunc","abs","hoursString","minutes","minutesString","localize","WorkspaceBasedVariableResolver","_workspaceService","workspaceIdentifier","getWorkspace","_resolveWorkspaceName","_resoveWorkspacePath","filename","configPath","endsWith","folderpath","RandomBasedVariableResolver","random","toString"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetVariables.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\nimport * as path from '../../../../base/common/path.js';\nimport { dirname } from '../../../../base/common/resources.js';\nimport { commonPrefixLength, getLeadingWhitespace, isFalsyOrWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { Text } from './snippetParser.js';\nimport * as nls from '../../../../nls.js';\nimport { WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, isEmptyWorkspaceIdentifier } from '../../../../platform/workspace/common/workspace.js';\nexport const KnownSnippetVariableNames = Object.freeze({\n    'CURRENT_YEAR': true,\n    'CURRENT_YEAR_SHORT': true,\n    'CURRENT_MONTH': true,\n    'CURRENT_DATE': true,\n    'CURRENT_HOUR': true,\n    'CURRENT_MINUTE': true,\n    'CURRENT_SECOND': true,\n    'CURRENT_DAY_NAME': true,\n    'CURRENT_DAY_NAME_SHORT': true,\n    'CURRENT_MONTH_NAME': true,\n    'CURRENT_MONTH_NAME_SHORT': true,\n    'CURRENT_SECONDS_UNIX': true,\n    'CURRENT_TIMEZONE_OFFSET': true,\n    'SELECTION': true,\n    'CLIPBOARD': true,\n    'TM_SELECTED_TEXT': true,\n    'TM_CURRENT_LINE': true,\n    'TM_CURRENT_WORD': true,\n    'TM_LINE_INDEX': true,\n    'TM_LINE_NUMBER': true,\n    'TM_FILENAME': true,\n    'TM_FILENAME_BASE': true,\n    'TM_DIRECTORY': true,\n    'TM_FILEPATH': true,\n    'CURSOR_INDEX': true, // 0-offset\n    'CURSOR_NUMBER': true, // 1-offset\n    'RELATIVE_FILEPATH': true,\n    'BLOCK_COMMENT_START': true,\n    'BLOCK_COMMENT_END': true,\n    'LINE_COMMENT': true,\n    'WORKSPACE_NAME': true,\n    'WORKSPACE_FOLDER': true,\n    'RANDOM': true,\n    'RANDOM_HEX': true,\n    'UUID': true\n});\nexport class CompositeSnippetVariableResolver {\n    constructor(_delegates) {\n        this._delegates = _delegates;\n        //\n    }\n    resolve(variable) {\n        for (const delegate of this._delegates) {\n            const value = delegate.resolve(variable);\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n}\nexport class SelectionBasedVariableResolver {\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\n        this._model = _model;\n        this._selection = _selection;\n        this._selectionIdx = _selectionIdx;\n        this._overtypingCapturer = _overtypingCapturer;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\n            let value = this._model.getValueInRange(this._selection) || undefined;\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\n            // If there was no selected text, try to get last overtyped text\n            if (!value && this._overtypingCapturer) {\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\n                if (info) {\n                    value = info.value;\n                    isMultiline = info.multiline;\n                }\n            }\n            if (value && isMultiline && variable.snippet) {\n                // Selection is a multiline string which we indentation we now\n                // need to adjust. We compare the indentation of this variable\n                // with the indentation at the editor position and add potential\n                // extra indentation to the value\n                const line = this._model.getLineContent(this._selection.startLineNumber);\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\n                let varLeadingWhitespace = lineLeadingWhitespace;\n                variable.snippet.walk(marker => {\n                    if (marker === variable) {\n                        return false;\n                    }\n                    if (marker instanceof Text) {\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\n                    }\n                    return true;\n                });\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\n            }\n            return value;\n        }\n        else if (name === 'TM_CURRENT_LINE') {\n            return this._model.getLineContent(this._selection.positionLineNumber);\n        }\n        else if (name === 'TM_CURRENT_WORD') {\n            const info = this._model.getWordAtPosition({\n                lineNumber: this._selection.positionLineNumber,\n                column: this._selection.positionColumn\n            });\n            return info && info.word || undefined;\n        }\n        else if (name === 'TM_LINE_INDEX') {\n            return String(this._selection.positionLineNumber - 1);\n        }\n        else if (name === 'TM_LINE_NUMBER') {\n            return String(this._selection.positionLineNumber);\n        }\n        else if (name === 'CURSOR_INDEX') {\n            return String(this._selectionIdx);\n        }\n        else if (name === 'CURSOR_NUMBER') {\n            return String(this._selectionIdx + 1);\n        }\n        return undefined;\n    }\n}\nexport class ModelBasedVariableResolver {\n    constructor(_labelService, _model) {\n        this._labelService = _labelService;\n        this._model = _model;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'TM_FILENAME') {\n            return path.basename(this._model.uri.fsPath);\n        }\n        else if (name === 'TM_FILENAME_BASE') {\n            const name = path.basename(this._model.uri.fsPath);\n            const idx = name.lastIndexOf('.');\n            if (idx <= 0) {\n                return name;\n            }\n            else {\n                return name.slice(0, idx);\n            }\n        }\n        else if (name === 'TM_DIRECTORY') {\n            if (path.dirname(this._model.uri.fsPath) === '.') {\n                return '';\n            }\n            return this._labelService.getUriLabel(dirname(this._model.uri));\n        }\n        else if (name === 'TM_FILEPATH') {\n            return this._labelService.getUriLabel(this._model.uri);\n        }\n        else if (name === 'RELATIVE_FILEPATH') {\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\n        }\n        return undefined;\n    }\n}\nexport class ClipboardBasedVariableResolver {\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\n        this._readClipboardText = _readClipboardText;\n        this._selectionIdx = _selectionIdx;\n        this._selectionCount = _selectionCount;\n        this._spread = _spread;\n        //\n    }\n    resolve(variable) {\n        if (variable.name !== 'CLIPBOARD') {\n            return undefined;\n        }\n        const clipboardText = this._readClipboardText();\n        if (!clipboardText) {\n            return undefined;\n        }\n        // `spread` is assigning each cursor a line of the clipboard\n        // text whenever there the line count equals the cursor count\n        // and when enabled\n        if (this._spread) {\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\n            if (lines.length === this._selectionCount) {\n                return lines[this._selectionIdx];\n            }\n        }\n        return clipboardText;\n    }\n}\nlet CommentBasedVariableResolver = class CommentBasedVariableResolver {\n    constructor(_model, _selection, _languageConfigurationService) {\n        this._model = _model;\n        this._selection = _selection;\n        this._languageConfigurationService = _languageConfigurationService;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\n        const config = this._languageConfigurationService.getLanguageConfiguration(langId).comments;\n        if (!config) {\n            return undefined;\n        }\n        if (name === 'LINE_COMMENT') {\n            return config.lineCommentToken || undefined;\n        }\n        else if (name === 'BLOCK_COMMENT_START') {\n            return config.blockCommentStartToken || undefined;\n        }\n        else if (name === 'BLOCK_COMMENT_END') {\n            return config.blockCommentEndToken || undefined;\n        }\n        return undefined;\n    }\n};\nCommentBasedVariableResolver = __decorate([\n    __param(2, ILanguageConfigurationService)\n], CommentBasedVariableResolver);\nexport { CommentBasedVariableResolver };\nexport class TimeBasedVariableResolver {\n    constructor() {\n        this._date = new Date();\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'CURRENT_YEAR') {\n            return String(this._date.getFullYear());\n        }\n        else if (name === 'CURRENT_YEAR_SHORT') {\n            return String(this._date.getFullYear()).slice(-2);\n        }\n        else if (name === 'CURRENT_MONTH') {\n            return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_DATE') {\n            return String(this._date.getDate().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_HOUR') {\n            return String(this._date.getHours().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_MINUTE') {\n            return String(this._date.getMinutes().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_SECOND') {\n            return String(this._date.getSeconds().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_DAY_NAME') {\n            return TimeBasedVariableResolver.dayNames[this._date.getDay()];\n        }\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\n            return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\n        }\n        else if (name === 'CURRENT_MONTH_NAME') {\n            return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\n        }\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\n            return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\n        }\n        else if (name === 'CURRENT_SECONDS_UNIX') {\n            return String(Math.floor(this._date.getTime() / 1000));\n        }\n        else if (name === 'CURRENT_TIMEZONE_OFFSET') {\n            const rawTimeOffset = this._date.getTimezoneOffset();\n            const sign = rawTimeOffset > 0 ? '-' : '+';\n            const hours = Math.trunc(Math.abs(rawTimeOffset / 60));\n            const hoursString = (hours < 10 ? '0' + hours : hours);\n            const minutes = Math.abs(rawTimeOffset) - hours * 60;\n            const minutesString = (minutes < 10 ? '0' + minutes : minutes);\n            return sign + hoursString + ':' + minutesString;\n        }\n        return undefined;\n    }\n}\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\nexport class WorkspaceBasedVariableResolver {\n    constructor(_workspaceService) {\n        this._workspaceService = _workspaceService;\n        //\n    }\n    resolve(variable) {\n        if (!this._workspaceService) {\n            return undefined;\n        }\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\n        if (isEmptyWorkspaceIdentifier(workspaceIdentifier)) {\n            return undefined;\n        }\n        if (variable.name === 'WORKSPACE_NAME') {\n            return this._resolveWorkspaceName(workspaceIdentifier);\n        }\n        else if (variable.name === 'WORKSPACE_FOLDER') {\n            return this._resoveWorkspacePath(workspaceIdentifier);\n        }\n        return undefined;\n    }\n    _resolveWorkspaceName(workspaceIdentifier) {\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return path.basename(workspaceIdentifier.uri.path);\n        }\n        let filename = path.basename(workspaceIdentifier.configPath.path);\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n        }\n        return filename;\n    }\n    _resoveWorkspacePath(workspaceIdentifier) {\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\n        }\n        const filename = path.basename(workspaceIdentifier.configPath.path);\n        let folderpath = workspaceIdentifier.configPath.fsPath;\n        if (folderpath.endsWith(filename)) {\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\n        }\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\n    }\n}\nexport class RandomBasedVariableResolver {\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'RANDOM') {\n            return Math.random().toString().slice(-6);\n        }\n        else if (name === 'RANDOM_HEX') {\n            return Math.random().toString(16).slice(-6);\n        }\n        else if (name === 'UUID') {\n            return generateUuid();\n        }\n        return undefined;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}