{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.typed-array.uint32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color } from '../../../base/common/color.js';\nimport { Range } from '../../common/core/range.js';\nimport * as languages from '../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ModesRegistry } from '../../common/languages/modesRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\nimport { StandaloneServices } from './standaloneServices.js';\nimport { compile } from '../common/monarch/monarchCompile.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\n/**\n * Register information about a new language.\n */\nexport function register(language) {\n  // Intentionally using the `ModesRegistry` here to avoid\n  // instantiating services too quickly in the standalone editor.\n  ModesRegistry.registerLanguage(language);\n}\n/**\n * Get the information of all the registered languages.\n */\nexport function getLanguages() {\n  var result = [];\n  result = result.concat(ModesRegistry.getLanguages());\n  return result;\n}\nexport function getEncodedLanguageId(languageId) {\n  var languageService = StandaloneServices.get(ILanguageService);\n  return languageService.languageIdCodec.encodeLanguageId(languageId);\n}\n/**\n * An event emitted when a language is associated for the first time with a text model.\n * @event\n */\nexport function onLanguage(languageId, callback) {\n  return StandaloneServices.withServices(function () {\n    var languageService = StandaloneServices.get(ILanguageService);\n    var disposable = languageService.onDidRequestRichLanguageFeatures(function (encounteredLanguageId) {\n      if (encounteredLanguageId === languageId) {\n        // stop listening\n        disposable.dispose();\n        // invoke actual listener\n        callback();\n      }\n    });\n    return disposable;\n  });\n}\n/**\n * An event emitted when a language is associated for the first time with a text model or\n * when a language is encountered during the tokenization of another language.\n * @event\n */\nexport function onLanguageEncountered(languageId, callback) {\n  return StandaloneServices.withServices(function () {\n    var languageService = StandaloneServices.get(ILanguageService);\n    var disposable = languageService.onDidRequestBasicLanguageFeatures(function (encounteredLanguageId) {\n      if (encounteredLanguageId === languageId) {\n        // stop listening\n        disposable.dispose();\n        // invoke actual listener\n        callback();\n      }\n    });\n    return disposable;\n  });\n}\n/**\n * Set the editing configuration for a language.\n */\nexport function setLanguageConfiguration(languageId, configuration) {\n  var languageService = StandaloneServices.get(ILanguageService);\n  if (!languageService.isRegisteredLanguageId(languageId)) {\n    throw new Error(\"Cannot set configuration for unknown language \".concat(languageId));\n  }\n  var languageConfigurationService = StandaloneServices.get(ILanguageConfigurationService);\n  return languageConfigurationService.register(languageId, configuration, 100);\n}\n/**\n * @internal\n */\nexport var EncodedTokenizationSupportAdapter = /*#__PURE__*/function () {\n  function EncodedTokenizationSupportAdapter(languageId, actual) {\n    _classCallCheck(this, EncodedTokenizationSupportAdapter);\n    this._languageId = languageId;\n    this._actual = actual;\n  }\n  return _createClass(EncodedTokenizationSupportAdapter, [{\n    key: \"dispose\",\n    value: function dispose() {\n      // NOOP\n    }\n  }, {\n    key: \"getInitialState\",\n    value: function getInitialState() {\n      return this._actual.getInitialState();\n    }\n  }, {\n    key: \"tokenize\",\n    value: function tokenize(line, hasEOL, state) {\n      if (typeof this._actual.tokenize === 'function') {\n        return TokenizationSupportAdapter.adaptTokenize(this._languageId, this._actual, line, state);\n      }\n      throw new Error('Not supported!');\n    }\n  }, {\n    key: \"tokenizeEncoded\",\n    value: function tokenizeEncoded(line, hasEOL, state) {\n      var result = this._actual.tokenizeEncoded(line, state);\n      return new languages.EncodedTokenizationResult(result.tokens, result.endState);\n    }\n  }]);\n}();\n/**\n * @internal\n */\nexport var TokenizationSupportAdapter = /*#__PURE__*/function () {\n  function TokenizationSupportAdapter(_languageId, _actual, _languageService, _standaloneThemeService) {\n    _classCallCheck(this, TokenizationSupportAdapter);\n    this._languageId = _languageId;\n    this._actual = _actual;\n    this._languageService = _languageService;\n    this._standaloneThemeService = _standaloneThemeService;\n  }\n  return _createClass(TokenizationSupportAdapter, [{\n    key: \"dispose\",\n    value: function dispose() {\n      // NOOP\n    }\n  }, {\n    key: \"getInitialState\",\n    value: function getInitialState() {\n      return this._actual.getInitialState();\n    }\n  }, {\n    key: \"tokenize\",\n    value: function tokenize(line, hasEOL, state) {\n      return TokenizationSupportAdapter.adaptTokenize(this._languageId, this._actual, line, state);\n    }\n  }, {\n    key: \"_toBinaryTokens\",\n    value: function _toBinaryTokens(languageIdCodec, tokens) {\n      var languageId = languageIdCodec.encodeLanguageId(this._languageId);\n      var tokenTheme = this._standaloneThemeService.getColorTheme().tokenTheme;\n      var result = [];\n      var resultLen = 0;\n      var previousStartIndex = 0;\n      for (var i = 0, len = tokens.length; i < len; i++) {\n        var t = tokens[i];\n        var metadata = tokenTheme.match(languageId, t.scopes) | 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */;\n        if (resultLen > 0 && result[resultLen - 1] === metadata) {\n          // same metadata\n          continue;\n        }\n        var startIndex = t.startIndex;\n        // Prevent issues stemming from a buggy external tokenizer.\n        if (i === 0) {\n          // Force first token to start at first index!\n          startIndex = 0;\n        } else if (startIndex < previousStartIndex) {\n          // Force tokens to be after one another!\n          startIndex = previousStartIndex;\n        }\n        result[resultLen++] = startIndex;\n        result[resultLen++] = metadata;\n        previousStartIndex = startIndex;\n      }\n      var actualResult = new Uint32Array(resultLen);\n      for (var _i = 0; _i < resultLen; _i++) {\n        actualResult[_i] = result[_i];\n      }\n      return actualResult;\n    }\n  }, {\n    key: \"tokenizeEncoded\",\n    value: function tokenizeEncoded(line, hasEOL, state) {\n      var actualResult = this._actual.tokenize(line, state);\n      var tokens = this._toBinaryTokens(this._languageService.languageIdCodec, actualResult.tokens);\n      var endState;\n      // try to save an object if possible\n      if (actualResult.endState.equals(state)) {\n        endState = state;\n      } else {\n        endState = actualResult.endState;\n      }\n      return new languages.EncodedTokenizationResult(tokens, endState);\n    }\n  }], [{\n    key: \"_toClassicTokens\",\n    value: function _toClassicTokens(tokens, language) {\n      var result = [];\n      var previousStartIndex = 0;\n      for (var i = 0, len = tokens.length; i < len; i++) {\n        var t = tokens[i];\n        var startIndex = t.startIndex;\n        // Prevent issues stemming from a buggy external tokenizer.\n        if (i === 0) {\n          // Force first token to start at first index!\n          startIndex = 0;\n        } else if (startIndex < previousStartIndex) {\n          // Force tokens to be after one another!\n          startIndex = previousStartIndex;\n        }\n        result[i] = new languages.Token(startIndex, t.scopes, language);\n        previousStartIndex = startIndex;\n      }\n      return result;\n    }\n  }, {\n    key: \"adaptTokenize\",\n    value: function adaptTokenize(language, actual, line, state) {\n      var actualResult = actual.tokenize(line, state);\n      var tokens = TokenizationSupportAdapter._toClassicTokens(actualResult.tokens, language);\n      var endState;\n      // try to save an object if possible\n      if (actualResult.endState.equals(state)) {\n        endState = state;\n      } else {\n        endState = actualResult.endState;\n      }\n      return new languages.TokenizationResult(tokens, endState);\n    }\n  }]);\n}();\nfunction isATokensProvider(provider) {\n  return typeof provider.getInitialState === 'function';\n}\nfunction isEncodedTokensProvider(provider) {\n  return 'tokenizeEncoded' in provider;\n}\nfunction isThenable(obj) {\n  return obj && typeof obj.then === 'function';\n}\n/**\n * Change the color map that is used for token colors.\n * Supported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA\n */\nexport function setColorMap(colorMap) {\n  var standaloneThemeService = StandaloneServices.get(IStandaloneThemeService);\n  if (colorMap) {\n    var result = [null];\n    for (var i = 1, len = colorMap.length; i < len; i++) {\n      result[i] = Color.fromHex(colorMap[i]);\n    }\n    standaloneThemeService.setColorMapOverride(result);\n  } else {\n    standaloneThemeService.setColorMapOverride(null);\n  }\n}\n/**\n * @internal\n */\nfunction createTokenizationSupportAdapter(languageId, provider) {\n  if (isEncodedTokensProvider(provider)) {\n    return new EncodedTokenizationSupportAdapter(languageId, provider);\n  } else {\n    return new TokenizationSupportAdapter(languageId, provider, StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService));\n  }\n}\n/**\n * Register a tokens provider factory for a language. This tokenizer will be exclusive with a tokenizer\n * set using `setTokensProvider` or one created using `setMonarchTokensProvider`, but will work together\n * with a tokens provider set using `registerDocumentSemanticTokensProvider` or `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function registerTokensProviderFactory(languageId, factory) {\n  var adaptedFactory = new languages.LazyTokenizationSupport( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return Promise.resolve(factory.create());\n        case 2:\n          result = _context.sent;\n          if (result) {\n            _context.next = 5;\n            break;\n          }\n          return _context.abrupt(\"return\", null);\n        case 5:\n          if (!isATokensProvider(result)) {\n            _context.next = 7;\n            break;\n          }\n          return _context.abrupt(\"return\", createTokenizationSupportAdapter(languageId, result));\n        case 7:\n          return _context.abrupt(\"return\", new MonarchTokenizer(StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService), languageId, compile(languageId, result), StandaloneServices.get(IConfigurationService)));\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })));\n  return languages.TokenizationRegistry.registerFactory(languageId, adaptedFactory);\n}\n/**\n * Set the tokens provider for a language (manual implementation). This tokenizer will be exclusive\n * with a tokenizer created using `setMonarchTokensProvider`, or with `registerTokensProviderFactory`,\n * but will work together with a tokens provider set using `registerDocumentSemanticTokensProvider`\n * or `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function setTokensProvider(languageId, provider) {\n  var languageService = StandaloneServices.get(ILanguageService);\n  if (!languageService.isRegisteredLanguageId(languageId)) {\n    throw new Error(\"Cannot set tokens provider for unknown language \".concat(languageId));\n  }\n  if (isThenable(provider)) {\n    return registerTokensProviderFactory(languageId, {\n      create: function create() {\n        return provider;\n      }\n    });\n  }\n  return languages.TokenizationRegistry.register(languageId, createTokenizationSupportAdapter(languageId, provider));\n}\n/**\n * Set the tokens provider for a language (monarch implementation). This tokenizer will be exclusive\n * with a tokenizer set using `setTokensProvider`, or with `registerTokensProviderFactory`, but will\n * work together with a tokens provider set using `registerDocumentSemanticTokensProvider` or\n * `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function setMonarchTokensProvider(languageId, languageDef) {\n  var create = function create(languageDef) {\n    return new MonarchTokenizer(StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService), languageId, compile(languageId, languageDef), StandaloneServices.get(IConfigurationService));\n  };\n  if (isThenable(languageDef)) {\n    return registerTokensProviderFactory(languageId, {\n      create: function create() {\n        return languageDef;\n      }\n    });\n  }\n  return languages.TokenizationRegistry.register(languageId, create(languageDef));\n}\n/**\n * Register a reference provider (used by e.g. reference search).\n */\nexport function registerReferenceProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.referenceProvider.register(languageSelector, provider);\n}\n/**\n * Register a rename provider (used by e.g. rename symbol).\n */\nexport function registerRenameProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.renameProvider.register(languageSelector, provider);\n}\n/**\n * Register a new symbol-name provider (e.g., when a symbol is being renamed, show new possible symbol-names)\n */\nexport function registerNewSymbolNameProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.newSymbolNamesProvider.register(languageSelector, provider);\n}\n/**\n * Register a signature help provider (used by e.g. parameter hints).\n */\nexport function registerSignatureHelpProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.signatureHelpProvider.register(languageSelector, provider);\n}\n/**\n * Register a hover provider (used by e.g. editor hover).\n */\nexport function registerHoverProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.hoverProvider.register(languageSelector, {\n    provideHover: function provideHover(model, position, token) {\n      var word = model.getWordAtPosition(position);\n      return Promise.resolve(provider.provideHover(model, position, token)).then(function (value) {\n        if (!value) {\n          return undefined;\n        }\n        if (!value.range && word) {\n          value.range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n        }\n        if (!value.range) {\n          value.range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        }\n        return value;\n      });\n    }\n  });\n}\n/**\n * Register a document symbol provider (used by e.g. outline).\n */\nexport function registerDocumentSymbolProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.documentSymbolProvider.register(languageSelector, provider);\n}\n/**\n * Register a document highlight provider (used by e.g. highlight occurrences).\n */\nexport function registerDocumentHighlightProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.documentHighlightProvider.register(languageSelector, provider);\n}\n/**\n * Register an linked editing range provider.\n */\nexport function registerLinkedEditingRangeProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.linkedEditingRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a definition provider (used by e.g. go to definition).\n */\nexport function registerDefinitionProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.definitionProvider.register(languageSelector, provider);\n}\n/**\n * Register a implementation provider (used by e.g. go to implementation).\n */\nexport function registerImplementationProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.implementationProvider.register(languageSelector, provider);\n}\n/**\n * Register a type definition provider (used by e.g. go to type definition).\n */\nexport function registerTypeDefinitionProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.typeDefinitionProvider.register(languageSelector, provider);\n}\n/**\n * Register a code lens provider (used by e.g. inline code lenses).\n */\nexport function registerCodeLensProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.codeLensProvider.register(languageSelector, provider);\n}\n/**\n * Register a code action provider (used by e.g. quick fix).\n */\nexport function registerCodeActionProvider(languageSelector, provider, metadata) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.codeActionProvider.register(languageSelector, {\n    providedCodeActionKinds: metadata === null || metadata === void 0 ? void 0 : metadata.providedCodeActionKinds,\n    documentation: metadata === null || metadata === void 0 ? void 0 : metadata.documentation,\n    provideCodeActions: function provideCodeActions(model, range, context, token) {\n      var markerService = StandaloneServices.get(IMarkerService);\n      var markers = markerService.read({\n        resource: model.uri\n      }).filter(function (m) {\n        return Range.areIntersectingOrTouching(m, range);\n      });\n      return provider.provideCodeActions(model, range, {\n        markers: markers,\n        only: context.only,\n        trigger: context.trigger\n      }, token);\n    },\n    resolveCodeAction: provider.resolveCodeAction\n  });\n}\n/**\n * Register a formatter that can handle only entire models.\n */\nexport function registerDocumentFormattingEditProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.documentFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a formatter that can handle a range inside a model.\n */\nexport function registerDocumentRangeFormattingEditProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.documentRangeFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a formatter than can do formatting as the user types.\n */\nexport function registerOnTypeFormattingEditProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.onTypeFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a link provider that can find links in text.\n */\nexport function registerLinkProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.linkProvider.register(languageSelector, provider);\n}\n/**\n * Register a completion item provider (use by e.g. suggestions).\n */\nexport function registerCompletionItemProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.completionProvider.register(languageSelector, provider);\n}\n/**\n * Register a document color provider (used by Color Picker, Color Decorator).\n */\nexport function registerColorProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.colorProvider.register(languageSelector, provider);\n}\n/**\n * Register a folding range provider\n */\nexport function registerFoldingRangeProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.foldingRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a declaration provider\n */\nexport function registerDeclarationProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.declarationProvider.register(languageSelector, provider);\n}\n/**\n * Register a selection range provider\n */\nexport function registerSelectionRangeProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.selectionRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a document semantic tokens provider. A semantic tokens provider will complement and enhance a\n * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`\n * or `setTokensProvider`.\n *\n * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.\n */\nexport function registerDocumentSemanticTokensProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.documentSemanticTokensProvider.register(languageSelector, provider);\n}\n/**\n * Register a document range semantic tokens provider. A semantic tokens provider will complement and enhance a\n * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`\n * or `setTokensProvider`.\n *\n * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.\n */\nexport function registerDocumentRangeSemanticTokensProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.documentRangeSemanticTokensProvider.register(languageSelector, provider);\n}\n/**\n * Register an inline completions provider.\n */\nexport function registerInlineCompletionsProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.inlineCompletionsProvider.register(languageSelector, provider);\n}\nexport function registerInlineEditProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.inlineEditProvider.register(languageSelector, provider);\n}\n/**\n * Register an inlay hints provider.\n */\nexport function registerInlayHintsProvider(languageSelector, provider) {\n  var languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n  return languageFeaturesService.inlayHintsProvider.register(languageSelector, provider);\n}\n/**\n * @internal\n */\nexport function createMonacoLanguagesAPI() {\n  return {\n    register: register,\n    getLanguages: getLanguages,\n    onLanguage: onLanguage,\n    onLanguageEncountered: onLanguageEncountered,\n    getEncodedLanguageId: getEncodedLanguageId,\n    // provider methods\n    setLanguageConfiguration: setLanguageConfiguration,\n    setColorMap: setColorMap,\n    registerTokensProviderFactory: registerTokensProviderFactory,\n    setTokensProvider: setTokensProvider,\n    setMonarchTokensProvider: setMonarchTokensProvider,\n    registerReferenceProvider: registerReferenceProvider,\n    registerRenameProvider: registerRenameProvider,\n    registerNewSymbolNameProvider: registerNewSymbolNameProvider,\n    registerCompletionItemProvider: registerCompletionItemProvider,\n    registerSignatureHelpProvider: registerSignatureHelpProvider,\n    registerHoverProvider: registerHoverProvider,\n    registerDocumentSymbolProvider: registerDocumentSymbolProvider,\n    registerDocumentHighlightProvider: registerDocumentHighlightProvider,\n    registerLinkedEditingRangeProvider: registerLinkedEditingRangeProvider,\n    registerDefinitionProvider: registerDefinitionProvider,\n    registerImplementationProvider: registerImplementationProvider,\n    registerTypeDefinitionProvider: registerTypeDefinitionProvider,\n    registerCodeLensProvider: registerCodeLensProvider,\n    registerCodeActionProvider: registerCodeActionProvider,\n    registerDocumentFormattingEditProvider: registerDocumentFormattingEditProvider,\n    registerDocumentRangeFormattingEditProvider: registerDocumentRangeFormattingEditProvider,\n    registerOnTypeFormattingEditProvider: registerOnTypeFormattingEditProvider,\n    registerLinkProvider: registerLinkProvider,\n    registerColorProvider: registerColorProvider,\n    registerFoldingRangeProvider: registerFoldingRangeProvider,\n    registerDeclarationProvider: registerDeclarationProvider,\n    registerSelectionRangeProvider: registerSelectionRangeProvider,\n    registerDocumentSemanticTokensProvider: registerDocumentSemanticTokensProvider,\n    registerDocumentRangeSemanticTokensProvider: registerDocumentRangeSemanticTokensProvider,\n    registerInlineCompletionsProvider: registerInlineCompletionsProvider,\n    registerInlineEditProvider: registerInlineEditProvider,\n    registerInlayHintsProvider: registerInlayHintsProvider,\n    // enums\n    DocumentHighlightKind: standaloneEnums.DocumentHighlightKind,\n    CompletionItemKind: standaloneEnums.CompletionItemKind,\n    CompletionItemTag: standaloneEnums.CompletionItemTag,\n    CompletionItemInsertTextRule: standaloneEnums.CompletionItemInsertTextRule,\n    SymbolKind: standaloneEnums.SymbolKind,\n    SymbolTag: standaloneEnums.SymbolTag,\n    IndentAction: standaloneEnums.IndentAction,\n    CompletionTriggerKind: standaloneEnums.CompletionTriggerKind,\n    SignatureHelpTriggerKind: standaloneEnums.SignatureHelpTriggerKind,\n    InlayHintKind: standaloneEnums.InlayHintKind,\n    InlineCompletionTriggerKind: standaloneEnums.InlineCompletionTriggerKind,\n    InlineEditTriggerKind: standaloneEnums.InlineEditTriggerKind,\n    CodeActionTriggerType: standaloneEnums.CodeActionTriggerType,\n    NewSymbolNameTag: standaloneEnums.NewSymbolNameTag,\n    PartialAcceptTriggerKind: standaloneEnums.PartialAcceptTriggerKind,\n    // classes\n    FoldingRangeKind: languages.FoldingRangeKind,\n    SelectedSuggestionInfo: languages.SelectedSuggestionInfo\n  };\n}","map":{"version":3,"names":["Color","Range","languages","ILanguageConfigurationService","ModesRegistry","ILanguageService","standaloneEnums","StandaloneServices","compile","MonarchTokenizer","IStandaloneThemeService","IMarkerService","ILanguageFeaturesService","IConfigurationService","register","language","registerLanguage","getLanguages","result","concat","getEncodedLanguageId","languageId","languageService","get","languageIdCodec","encodeLanguageId","onLanguage","callback","withServices","disposable","onDidRequestRichLanguageFeatures","encounteredLanguageId","dispose","onLanguageEncountered","onDidRequestBasicLanguageFeatures","setLanguageConfiguration","configuration","isRegisteredLanguageId","Error","languageConfigurationService","EncodedTokenizationSupportAdapter","actual","_classCallCheck","_languageId","_actual","_createClass","key","value","getInitialState","tokenize","line","hasEOL","state","TokenizationSupportAdapter","adaptTokenize","tokenizeEncoded","EncodedTokenizationResult","tokens","endState","_languageService","_standaloneThemeService","_toBinaryTokens","tokenTheme","getColorTheme","resultLen","previousStartIndex","i","len","length","t","metadata","match","scopes","startIndex","actualResult","Uint32Array","equals","_toClassicTokens","Token","TokenizationResult","isATokensProvider","provider","isEncodedTokensProvider","isThenable","obj","then","setColorMap","colorMap","standaloneThemeService","fromHex","setColorMapOverride","createTokenizationSupportAdapter","registerTokensProviderFactory","factory","adaptedFactory","LazyTokenizationSupport","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","Promise","resolve","create","sent","abrupt","stop","TokenizationRegistry","registerFactory","setTokensProvider","setMonarchTokensProvider","languageDef","registerReferenceProvider","languageSelector","languageFeaturesService","referenceProvider","registerRenameProvider","renameProvider","registerNewSymbolNameProvider","newSymbolNamesProvider","registerSignatureHelpProvider","signatureHelpProvider","registerHoverProvider","hoverProvider","provideHover","model","position","token","word","getWordAtPosition","undefined","range","lineNumber","startColumn","endColumn","column","registerDocumentSymbolProvider","documentSymbolProvider","registerDocumentHighlightProvider","documentHighlightProvider","registerLinkedEditingRangeProvider","linkedEditingRangeProvider","registerDefinitionProvider","definitionProvider","registerImplementationProvider","implementationProvider","registerTypeDefinitionProvider","typeDefinitionProvider","registerCodeLensProvider","codeLensProvider","registerCodeActionProvider","codeActionProvider","providedCodeActionKinds","documentation","provideCodeActions","context","markerService","markers","read","resource","uri","filter","m","areIntersectingOrTouching","only","trigger","resolveCodeAction","registerDocumentFormattingEditProvider","documentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","documentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","onTypeFormattingEditProvider","registerLinkProvider","linkProvider","registerCompletionItemProvider","completionProvider","registerColorProvider","colorProvider","registerFoldingRangeProvider","foldingRangeProvider","registerDeclarationProvider","declarationProvider","registerSelectionRangeProvider","selectionRangeProvider","registerDocumentSemanticTokensProvider","documentSemanticTokensProvider","registerDocumentRangeSemanticTokensProvider","documentRangeSemanticTokensProvider","registerInlineCompletionsProvider","inlineCompletionsProvider","registerInlineEditProvider","inlineEditProvider","registerInlayHintsProvider","inlayHintsProvider","createMonacoLanguagesAPI","DocumentHighlightKind","CompletionItemKind","CompletionItemTag","CompletionItemInsertTextRule","SymbolKind","SymbolTag","IndentAction","CompletionTriggerKind","SignatureHelpTriggerKind","InlayHintKind","InlineCompletionTriggerKind","InlineEditTriggerKind","CodeActionTriggerType","NewSymbolNameTag","PartialAcceptTriggerKind","FoldingRangeKind","SelectedSuggestionInfo"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneLanguages.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color } from '../../../base/common/color.js';\nimport { Range } from '../../common/core/range.js';\nimport * as languages from '../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ModesRegistry } from '../../common/languages/modesRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\nimport { StandaloneServices } from './standaloneServices.js';\nimport { compile } from '../common/monarch/monarchCompile.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\n/**\n * Register information about a new language.\n */\nexport function register(language) {\n    // Intentionally using the `ModesRegistry` here to avoid\n    // instantiating services too quickly in the standalone editor.\n    ModesRegistry.registerLanguage(language);\n}\n/**\n * Get the information of all the registered languages.\n */\nexport function getLanguages() {\n    let result = [];\n    result = result.concat(ModesRegistry.getLanguages());\n    return result;\n}\nexport function getEncodedLanguageId(languageId) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    return languageService.languageIdCodec.encodeLanguageId(languageId);\n}\n/**\n * An event emitted when a language is associated for the first time with a text model.\n * @event\n */\nexport function onLanguage(languageId, callback) {\n    return StandaloneServices.withServices(() => {\n        const languageService = StandaloneServices.get(ILanguageService);\n        const disposable = languageService.onDidRequestRichLanguageFeatures((encounteredLanguageId) => {\n            if (encounteredLanguageId === languageId) {\n                // stop listening\n                disposable.dispose();\n                // invoke actual listener\n                callback();\n            }\n        });\n        return disposable;\n    });\n}\n/**\n * An event emitted when a language is associated for the first time with a text model or\n * when a language is encountered during the tokenization of another language.\n * @event\n */\nexport function onLanguageEncountered(languageId, callback) {\n    return StandaloneServices.withServices(() => {\n        const languageService = StandaloneServices.get(ILanguageService);\n        const disposable = languageService.onDidRequestBasicLanguageFeatures((encounteredLanguageId) => {\n            if (encounteredLanguageId === languageId) {\n                // stop listening\n                disposable.dispose();\n                // invoke actual listener\n                callback();\n            }\n        });\n        return disposable;\n    });\n}\n/**\n * Set the editing configuration for a language.\n */\nexport function setLanguageConfiguration(languageId, configuration) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    if (!languageService.isRegisteredLanguageId(languageId)) {\n        throw new Error(`Cannot set configuration for unknown language ${languageId}`);\n    }\n    const languageConfigurationService = StandaloneServices.get(ILanguageConfigurationService);\n    return languageConfigurationService.register(languageId, configuration, 100);\n}\n/**\n * @internal\n */\nexport class EncodedTokenizationSupportAdapter {\n    constructor(languageId, actual) {\n        this._languageId = languageId;\n        this._actual = actual;\n    }\n    dispose() {\n        // NOOP\n    }\n    getInitialState() {\n        return this._actual.getInitialState();\n    }\n    tokenize(line, hasEOL, state) {\n        if (typeof this._actual.tokenize === 'function') {\n            return TokenizationSupportAdapter.adaptTokenize(this._languageId, this._actual, line, state);\n        }\n        throw new Error('Not supported!');\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        const result = this._actual.tokenizeEncoded(line, state);\n        return new languages.EncodedTokenizationResult(result.tokens, result.endState);\n    }\n}\n/**\n * @internal\n */\nexport class TokenizationSupportAdapter {\n    constructor(_languageId, _actual, _languageService, _standaloneThemeService) {\n        this._languageId = _languageId;\n        this._actual = _actual;\n        this._languageService = _languageService;\n        this._standaloneThemeService = _standaloneThemeService;\n    }\n    dispose() {\n        // NOOP\n    }\n    getInitialState() {\n        return this._actual.getInitialState();\n    }\n    static _toClassicTokens(tokens, language) {\n        const result = [];\n        let previousStartIndex = 0;\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const t = tokens[i];\n            let startIndex = t.startIndex;\n            // Prevent issues stemming from a buggy external tokenizer.\n            if (i === 0) {\n                // Force first token to start at first index!\n                startIndex = 0;\n            }\n            else if (startIndex < previousStartIndex) {\n                // Force tokens to be after one another!\n                startIndex = previousStartIndex;\n            }\n            result[i] = new languages.Token(startIndex, t.scopes, language);\n            previousStartIndex = startIndex;\n        }\n        return result;\n    }\n    static adaptTokenize(language, actual, line, state) {\n        const actualResult = actual.tokenize(line, state);\n        const tokens = TokenizationSupportAdapter._toClassicTokens(actualResult.tokens, language);\n        let endState;\n        // try to save an object if possible\n        if (actualResult.endState.equals(state)) {\n            endState = state;\n        }\n        else {\n            endState = actualResult.endState;\n        }\n        return new languages.TokenizationResult(tokens, endState);\n    }\n    tokenize(line, hasEOL, state) {\n        return TokenizationSupportAdapter.adaptTokenize(this._languageId, this._actual, line, state);\n    }\n    _toBinaryTokens(languageIdCodec, tokens) {\n        const languageId = languageIdCodec.encodeLanguageId(this._languageId);\n        const tokenTheme = this._standaloneThemeService.getColorTheme().tokenTheme;\n        const result = [];\n        let resultLen = 0;\n        let previousStartIndex = 0;\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const t = tokens[i];\n            const metadata = tokenTheme.match(languageId, t.scopes) | 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */;\n            if (resultLen > 0 && result[resultLen - 1] === metadata) {\n                // same metadata\n                continue;\n            }\n            let startIndex = t.startIndex;\n            // Prevent issues stemming from a buggy external tokenizer.\n            if (i === 0) {\n                // Force first token to start at first index!\n                startIndex = 0;\n            }\n            else if (startIndex < previousStartIndex) {\n                // Force tokens to be after one another!\n                startIndex = previousStartIndex;\n            }\n            result[resultLen++] = startIndex;\n            result[resultLen++] = metadata;\n            previousStartIndex = startIndex;\n        }\n        const actualResult = new Uint32Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            actualResult[i] = result[i];\n        }\n        return actualResult;\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        const actualResult = this._actual.tokenize(line, state);\n        const tokens = this._toBinaryTokens(this._languageService.languageIdCodec, actualResult.tokens);\n        let endState;\n        // try to save an object if possible\n        if (actualResult.endState.equals(state)) {\n            endState = state;\n        }\n        else {\n            endState = actualResult.endState;\n        }\n        return new languages.EncodedTokenizationResult(tokens, endState);\n    }\n}\nfunction isATokensProvider(provider) {\n    return (typeof provider.getInitialState === 'function');\n}\nfunction isEncodedTokensProvider(provider) {\n    return 'tokenizeEncoded' in provider;\n}\nfunction isThenable(obj) {\n    return obj && typeof obj.then === 'function';\n}\n/**\n * Change the color map that is used for token colors.\n * Supported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA\n */\nexport function setColorMap(colorMap) {\n    const standaloneThemeService = StandaloneServices.get(IStandaloneThemeService);\n    if (colorMap) {\n        const result = [null];\n        for (let i = 1, len = colorMap.length; i < len; i++) {\n            result[i] = Color.fromHex(colorMap[i]);\n        }\n        standaloneThemeService.setColorMapOverride(result);\n    }\n    else {\n        standaloneThemeService.setColorMapOverride(null);\n    }\n}\n/**\n * @internal\n */\nfunction createTokenizationSupportAdapter(languageId, provider) {\n    if (isEncodedTokensProvider(provider)) {\n        return new EncodedTokenizationSupportAdapter(languageId, provider);\n    }\n    else {\n        return new TokenizationSupportAdapter(languageId, provider, StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService));\n    }\n}\n/**\n * Register a tokens provider factory for a language. This tokenizer will be exclusive with a tokenizer\n * set using `setTokensProvider` or one created using `setMonarchTokensProvider`, but will work together\n * with a tokens provider set using `registerDocumentSemanticTokensProvider` or `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function registerTokensProviderFactory(languageId, factory) {\n    const adaptedFactory = new languages.LazyTokenizationSupport(async () => {\n        const result = await Promise.resolve(factory.create());\n        if (!result) {\n            return null;\n        }\n        if (isATokensProvider(result)) {\n            return createTokenizationSupportAdapter(languageId, result);\n        }\n        return new MonarchTokenizer(StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService), languageId, compile(languageId, result), StandaloneServices.get(IConfigurationService));\n    });\n    return languages.TokenizationRegistry.registerFactory(languageId, adaptedFactory);\n}\n/**\n * Set the tokens provider for a language (manual implementation). This tokenizer will be exclusive\n * with a tokenizer created using `setMonarchTokensProvider`, or with `registerTokensProviderFactory`,\n * but will work together with a tokens provider set using `registerDocumentSemanticTokensProvider`\n * or `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function setTokensProvider(languageId, provider) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    if (!languageService.isRegisteredLanguageId(languageId)) {\n        throw new Error(`Cannot set tokens provider for unknown language ${languageId}`);\n    }\n    if (isThenable(provider)) {\n        return registerTokensProviderFactory(languageId, { create: () => provider });\n    }\n    return languages.TokenizationRegistry.register(languageId, createTokenizationSupportAdapter(languageId, provider));\n}\n/**\n * Set the tokens provider for a language (monarch implementation). This tokenizer will be exclusive\n * with a tokenizer set using `setTokensProvider`, or with `registerTokensProviderFactory`, but will\n * work together with a tokens provider set using `registerDocumentSemanticTokensProvider` or\n * `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function setMonarchTokensProvider(languageId, languageDef) {\n    const create = (languageDef) => {\n        return new MonarchTokenizer(StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService), languageId, compile(languageId, languageDef), StandaloneServices.get(IConfigurationService));\n    };\n    if (isThenable(languageDef)) {\n        return registerTokensProviderFactory(languageId, { create: () => languageDef });\n    }\n    return languages.TokenizationRegistry.register(languageId, create(languageDef));\n}\n/**\n * Register a reference provider (used by e.g. reference search).\n */\nexport function registerReferenceProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.referenceProvider.register(languageSelector, provider);\n}\n/**\n * Register a rename provider (used by e.g. rename symbol).\n */\nexport function registerRenameProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.renameProvider.register(languageSelector, provider);\n}\n/**\n * Register a new symbol-name provider (e.g., when a symbol is being renamed, show new possible symbol-names)\n */\nexport function registerNewSymbolNameProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.newSymbolNamesProvider.register(languageSelector, provider);\n}\n/**\n * Register a signature help provider (used by e.g. parameter hints).\n */\nexport function registerSignatureHelpProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.signatureHelpProvider.register(languageSelector, provider);\n}\n/**\n * Register a hover provider (used by e.g. editor hover).\n */\nexport function registerHoverProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.hoverProvider.register(languageSelector, {\n        provideHover: (model, position, token) => {\n            const word = model.getWordAtPosition(position);\n            return Promise.resolve(provider.provideHover(model, position, token)).then((value) => {\n                if (!value) {\n                    return undefined;\n                }\n                if (!value.range && word) {\n                    value.range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n                }\n                if (!value.range) {\n                    value.range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n                }\n                return value;\n            });\n        }\n    });\n}\n/**\n * Register a document symbol provider (used by e.g. outline).\n */\nexport function registerDocumentSymbolProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentSymbolProvider.register(languageSelector, provider);\n}\n/**\n * Register a document highlight provider (used by e.g. highlight occurrences).\n */\nexport function registerDocumentHighlightProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentHighlightProvider.register(languageSelector, provider);\n}\n/**\n * Register an linked editing range provider.\n */\nexport function registerLinkedEditingRangeProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.linkedEditingRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a definition provider (used by e.g. go to definition).\n */\nexport function registerDefinitionProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.definitionProvider.register(languageSelector, provider);\n}\n/**\n * Register a implementation provider (used by e.g. go to implementation).\n */\nexport function registerImplementationProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.implementationProvider.register(languageSelector, provider);\n}\n/**\n * Register a type definition provider (used by e.g. go to type definition).\n */\nexport function registerTypeDefinitionProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.typeDefinitionProvider.register(languageSelector, provider);\n}\n/**\n * Register a code lens provider (used by e.g. inline code lenses).\n */\nexport function registerCodeLensProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.codeLensProvider.register(languageSelector, provider);\n}\n/**\n * Register a code action provider (used by e.g. quick fix).\n */\nexport function registerCodeActionProvider(languageSelector, provider, metadata) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.codeActionProvider.register(languageSelector, {\n        providedCodeActionKinds: metadata === null || metadata === void 0 ? void 0 : metadata.providedCodeActionKinds,\n        documentation: metadata === null || metadata === void 0 ? void 0 : metadata.documentation,\n        provideCodeActions: (model, range, context, token) => {\n            const markerService = StandaloneServices.get(IMarkerService);\n            const markers = markerService.read({ resource: model.uri }).filter(m => {\n                return Range.areIntersectingOrTouching(m, range);\n            });\n            return provider.provideCodeActions(model, range, { markers, only: context.only, trigger: context.trigger }, token);\n        },\n        resolveCodeAction: provider.resolveCodeAction\n    });\n}\n/**\n * Register a formatter that can handle only entire models.\n */\nexport function registerDocumentFormattingEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a formatter that can handle a range inside a model.\n */\nexport function registerDocumentRangeFormattingEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentRangeFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a formatter than can do formatting as the user types.\n */\nexport function registerOnTypeFormattingEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.onTypeFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a link provider that can find links in text.\n */\nexport function registerLinkProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.linkProvider.register(languageSelector, provider);\n}\n/**\n * Register a completion item provider (use by e.g. suggestions).\n */\nexport function registerCompletionItemProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.completionProvider.register(languageSelector, provider);\n}\n/**\n * Register a document color provider (used by Color Picker, Color Decorator).\n */\nexport function registerColorProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.colorProvider.register(languageSelector, provider);\n}\n/**\n * Register a folding range provider\n */\nexport function registerFoldingRangeProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.foldingRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a declaration provider\n */\nexport function registerDeclarationProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.declarationProvider.register(languageSelector, provider);\n}\n/**\n * Register a selection range provider\n */\nexport function registerSelectionRangeProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.selectionRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a document semantic tokens provider. A semantic tokens provider will complement and enhance a\n * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`\n * or `setTokensProvider`.\n *\n * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.\n */\nexport function registerDocumentSemanticTokensProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentSemanticTokensProvider.register(languageSelector, provider);\n}\n/**\n * Register a document range semantic tokens provider. A semantic tokens provider will complement and enhance a\n * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`\n * or `setTokensProvider`.\n *\n * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.\n */\nexport function registerDocumentRangeSemanticTokensProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentRangeSemanticTokensProvider.register(languageSelector, provider);\n}\n/**\n * Register an inline completions provider.\n */\nexport function registerInlineCompletionsProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.inlineCompletionsProvider.register(languageSelector, provider);\n}\nexport function registerInlineEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.inlineEditProvider.register(languageSelector, provider);\n}\n/**\n * Register an inlay hints provider.\n */\nexport function registerInlayHintsProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.inlayHintsProvider.register(languageSelector, provider);\n}\n/**\n * @internal\n */\nexport function createMonacoLanguagesAPI() {\n    return {\n        register: register,\n        getLanguages: getLanguages,\n        onLanguage: onLanguage,\n        onLanguageEncountered: onLanguageEncountered,\n        getEncodedLanguageId: getEncodedLanguageId,\n        // provider methods\n        setLanguageConfiguration: setLanguageConfiguration,\n        setColorMap: setColorMap,\n        registerTokensProviderFactory: registerTokensProviderFactory,\n        setTokensProvider: setTokensProvider,\n        setMonarchTokensProvider: setMonarchTokensProvider,\n        registerReferenceProvider: registerReferenceProvider,\n        registerRenameProvider: registerRenameProvider,\n        registerNewSymbolNameProvider: registerNewSymbolNameProvider,\n        registerCompletionItemProvider: registerCompletionItemProvider,\n        registerSignatureHelpProvider: registerSignatureHelpProvider,\n        registerHoverProvider: registerHoverProvider,\n        registerDocumentSymbolProvider: registerDocumentSymbolProvider,\n        registerDocumentHighlightProvider: registerDocumentHighlightProvider,\n        registerLinkedEditingRangeProvider: registerLinkedEditingRangeProvider,\n        registerDefinitionProvider: registerDefinitionProvider,\n        registerImplementationProvider: registerImplementationProvider,\n        registerTypeDefinitionProvider: registerTypeDefinitionProvider,\n        registerCodeLensProvider: registerCodeLensProvider,\n        registerCodeActionProvider: registerCodeActionProvider,\n        registerDocumentFormattingEditProvider: registerDocumentFormattingEditProvider,\n        registerDocumentRangeFormattingEditProvider: registerDocumentRangeFormattingEditProvider,\n        registerOnTypeFormattingEditProvider: registerOnTypeFormattingEditProvider,\n        registerLinkProvider: registerLinkProvider,\n        registerColorProvider: registerColorProvider,\n        registerFoldingRangeProvider: registerFoldingRangeProvider,\n        registerDeclarationProvider: registerDeclarationProvider,\n        registerSelectionRangeProvider: registerSelectionRangeProvider,\n        registerDocumentSemanticTokensProvider: registerDocumentSemanticTokensProvider,\n        registerDocumentRangeSemanticTokensProvider: registerDocumentRangeSemanticTokensProvider,\n        registerInlineCompletionsProvider: registerInlineCompletionsProvider,\n        registerInlineEditProvider: registerInlineEditProvider,\n        registerInlayHintsProvider: registerInlayHintsProvider,\n        // enums\n        DocumentHighlightKind: standaloneEnums.DocumentHighlightKind,\n        CompletionItemKind: standaloneEnums.CompletionItemKind,\n        CompletionItemTag: standaloneEnums.CompletionItemTag,\n        CompletionItemInsertTextRule: standaloneEnums.CompletionItemInsertTextRule,\n        SymbolKind: standaloneEnums.SymbolKind,\n        SymbolTag: standaloneEnums.SymbolTag,\n        IndentAction: standaloneEnums.IndentAction,\n        CompletionTriggerKind: standaloneEnums.CompletionTriggerKind,\n        SignatureHelpTriggerKind: standaloneEnums.SignatureHelpTriggerKind,\n        InlayHintKind: standaloneEnums.InlayHintKind,\n        InlineCompletionTriggerKind: standaloneEnums.InlineCompletionTriggerKind,\n        InlineEditTriggerKind: standaloneEnums.InlineEditTriggerKind,\n        CodeActionTriggerType: standaloneEnums.CodeActionTriggerType,\n        NewSymbolNameTag: standaloneEnums.NewSymbolNameTag,\n        PartialAcceptTriggerKind: standaloneEnums.PartialAcceptTriggerKind,\n        // classes\n        FoldingRangeKind: languages.FoldingRangeKind,\n        SelectedSuggestionInfo: languages.SelectedSuggestionInfo,\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}