{"ast":null,"code":"import _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../../../../base/browser/trustedTypes.js';\nimport { applyFontInfo } from '../../../../config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../../../common/config/editorOptions.js';\nimport { StringBuilder } from '../../../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../../../../common/viewModel.js';\nvar ttPolicy = createTrustedTypesPolicy('diffEditorWidget', {\n  createHTML: function createHTML(value) {\n    return value;\n  }\n});\nexport function renderLines(source, options, decorations, domNode) {\n  applyFontInfo(domNode, options.fontInfo);\n  var hasCharChanges = decorations.length > 0;\n  var sb = new StringBuilder(10000);\n  var maxCharsPerLine = 0;\n  var renderedLineCount = 0;\n  var viewLineCounts = [];\n  for (var lineIndex = 0; lineIndex < source.lineTokens.length; lineIndex++) {\n    var lineNumber = lineIndex + 1;\n    var lineTokens = source.lineTokens[lineIndex];\n    var lineBreakData = source.lineBreakData[lineIndex];\n    var actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, Number.MAX_SAFE_INTEGER);\n    if (lineBreakData) {\n      var lastBreakOffset = 0;\n      var _iterator = _createForOfIteratorHelper(lineBreakData.breakOffsets),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var breakOffset = _step.value;\n          var viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n          maxCharsPerLine = Math.max(maxCharsPerLine, renderOriginalLine(renderedLineCount, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, source.mightContainNonBasicASCII, source.mightContainRTL, options, sb));\n          renderedLineCount++;\n          lastBreakOffset = breakOffset;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      viewLineCounts.push(lineBreakData.breakOffsets.length);\n    } else {\n      viewLineCounts.push(1);\n      maxCharsPerLine = Math.max(maxCharsPerLine, renderOriginalLine(renderedLineCount, lineTokens, actualDecorations, hasCharChanges, source.mightContainNonBasicASCII, source.mightContainRTL, options, sb));\n      renderedLineCount++;\n    }\n  }\n  maxCharsPerLine += options.scrollBeyondLastColumn;\n  var html = sb.build();\n  var trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n  domNode.innerHTML = trustedhtml;\n  var minWidthInPx = maxCharsPerLine * options.typicalHalfwidthCharacterWidth;\n  return {\n    heightInLines: renderedLineCount,\n    minWidthInPx: minWidthInPx,\n    viewLineCounts: viewLineCounts\n  };\n}\nexport var LineSource = /*#__PURE__*/_createClass(function LineSource(lineTokens, lineBreakData, mightContainNonBasicASCII, mightContainRTL) {\n  _classCallCheck(this, LineSource);\n  this.lineTokens = lineTokens;\n  this.lineBreakData = lineBreakData;\n  this.mightContainNonBasicASCII = mightContainNonBasicASCII;\n  this.mightContainRTL = mightContainRTL;\n});\nexport var RenderOptions = /*#__PURE__*/function () {\n  function RenderOptions(tabSize, fontInfo, disableMonospaceOptimizations, typicalHalfwidthCharacterWidth, scrollBeyondLastColumn, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures) {\n    _classCallCheck(this, RenderOptions);\n    this.tabSize = tabSize;\n    this.fontInfo = fontInfo;\n    this.disableMonospaceOptimizations = disableMonospaceOptimizations;\n    this.typicalHalfwidthCharacterWidth = typicalHalfwidthCharacterWidth;\n    this.scrollBeyondLastColumn = scrollBeyondLastColumn;\n    this.lineHeight = lineHeight;\n    this.lineDecorationsWidth = lineDecorationsWidth;\n    this.stopRenderingLineAfter = stopRenderingLineAfter;\n    this.renderWhitespace = renderWhitespace;\n    this.renderControlCharacters = renderControlCharacters;\n    this.fontLigatures = fontLigatures;\n  }\n  return _createClass(RenderOptions, null, [{\n    key: \"fromEditor\",\n    value: function fromEditor(editor) {\n      var _a;\n      var modifiedEditorOptions = editor.getOptions();\n      var fontInfo = modifiedEditorOptions.get(50 /* EditorOption.fontInfo */);\n      var layoutInfo = modifiedEditorOptions.get(145 /* EditorOption.layoutInfo */);\n      return new RenderOptions(((_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.getOptions().tabSize) || 0, fontInfo, modifiedEditorOptions.get(33 /* EditorOption.disableMonospaceOptimizations */), fontInfo.typicalHalfwidthCharacterWidth, modifiedEditorOptions.get(104 /* EditorOption.scrollBeyondLastColumn */), modifiedEditorOptions.get(67 /* EditorOption.lineHeight */), layoutInfo.decorationsWidth, modifiedEditorOptions.get(117 /* EditorOption.stopRenderingLineAfter */), modifiedEditorOptions.get(99 /* EditorOption.renderWhitespace */), modifiedEditorOptions.get(94 /* EditorOption.renderControlCharacters */), modifiedEditorOptions.get(51 /* EditorOption.fontLigatures */));\n    }\n  }]);\n}();\nfunction renderOriginalLine(viewLineIdx, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, options, sb) {\n  sb.appendString('<div class=\"view-line');\n  if (!hasCharChanges) {\n    // No char changes\n    sb.appendString(' char-delete');\n  }\n  sb.appendString('\" style=\"top:');\n  sb.appendString(String(viewLineIdx * options.lineHeight));\n  sb.appendString('px;width:1000000px;\">');\n  var lineContent = lineTokens.getLineContent();\n  var isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n  var containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n  var output = renderViewLine(new RenderLineInput(options.fontInfo.isMonospace && !options.disableMonospaceOptimizations, options.fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, options.tabSize, 0, options.fontInfo.spaceWidth, options.fontInfo.middotWidth, options.fontInfo.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n  ), sb);\n  sb.appendString('</div>');\n  return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n}","map":{"version":3,"names":["createTrustedTypesPolicy","applyFontInfo","EditorFontLigatures","StringBuilder","LineDecoration","RenderLineInput","renderViewLine","ViewLineRenderingData","ttPolicy","createHTML","value","renderLines","source","options","decorations","domNode","fontInfo","hasCharChanges","length","sb","maxCharsPerLine","renderedLineCount","viewLineCounts","lineIndex","lineTokens","lineNumber","lineBreakData","actualDecorations","filter","Number","MAX_SAFE_INTEGER","lastBreakOffset","_iterator","_createForOfIteratorHelper","breakOffsets","_step","s","n","done","breakOffset","viewLineTokens","sliceAndInflate","Math","max","renderOriginalLine","extractWrapped","mightContainNonBasicASCII","mightContainRTL","err","e","f","push","scrollBeyondLastColumn","html","build","trustedhtml","innerHTML","minWidthInPx","typicalHalfwidthCharacterWidth","heightInLines","LineSource","_createClass","_classCallCheck","RenderOptions","tabSize","disableMonospaceOptimizations","lineHeight","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","key","fromEditor","editor","_a","modifiedEditorOptions","getOptions","get","layoutInfo","getModel","decorationsWidth","viewLineIdx","appendString","String","lineContent","getLineContent","isBasicASCII","containsRTL","output","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","OFF","characterMapping","getHorizontalOffset"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../../../../base/browser/trustedTypes.js';\nimport { applyFontInfo } from '../../../../config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../../../common/config/editorOptions.js';\nimport { StringBuilder } from '../../../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../../../../common/viewModel.js';\nconst ttPolicy = createTrustedTypesPolicy('diffEditorWidget', { createHTML: value => value });\nexport function renderLines(source, options, decorations, domNode) {\n    applyFontInfo(domNode, options.fontInfo);\n    const hasCharChanges = (decorations.length > 0);\n    const sb = new StringBuilder(10000);\n    let maxCharsPerLine = 0;\n    let renderedLineCount = 0;\n    const viewLineCounts = [];\n    for (let lineIndex = 0; lineIndex < source.lineTokens.length; lineIndex++) {\n        const lineNumber = lineIndex + 1;\n        const lineTokens = source.lineTokens[lineIndex];\n        const lineBreakData = source.lineBreakData[lineIndex];\n        const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, Number.MAX_SAFE_INTEGER);\n        if (lineBreakData) {\n            let lastBreakOffset = 0;\n            for (const breakOffset of lineBreakData.breakOffsets) {\n                const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                maxCharsPerLine = Math.max(maxCharsPerLine, renderOriginalLine(renderedLineCount, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, source.mightContainNonBasicASCII, source.mightContainRTL, options, sb));\n                renderedLineCount++;\n                lastBreakOffset = breakOffset;\n            }\n            viewLineCounts.push(lineBreakData.breakOffsets.length);\n        }\n        else {\n            viewLineCounts.push(1);\n            maxCharsPerLine = Math.max(maxCharsPerLine, renderOriginalLine(renderedLineCount, lineTokens, actualDecorations, hasCharChanges, source.mightContainNonBasicASCII, source.mightContainRTL, options, sb));\n            renderedLineCount++;\n        }\n    }\n    maxCharsPerLine += options.scrollBeyondLastColumn;\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n    const minWidthInPx = (maxCharsPerLine * options.typicalHalfwidthCharacterWidth);\n    return {\n        heightInLines: renderedLineCount,\n        minWidthInPx,\n        viewLineCounts,\n    };\n}\nexport class LineSource {\n    constructor(lineTokens, lineBreakData, mightContainNonBasicASCII, mightContainRTL) {\n        this.lineTokens = lineTokens;\n        this.lineBreakData = lineBreakData;\n        this.mightContainNonBasicASCII = mightContainNonBasicASCII;\n        this.mightContainRTL = mightContainRTL;\n    }\n}\nexport class RenderOptions {\n    static fromEditor(editor) {\n        var _a;\n        const modifiedEditorOptions = editor.getOptions();\n        const fontInfo = modifiedEditorOptions.get(50 /* EditorOption.fontInfo */);\n        const layoutInfo = modifiedEditorOptions.get(145 /* EditorOption.layoutInfo */);\n        return new RenderOptions(((_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.getOptions().tabSize) || 0, fontInfo, modifiedEditorOptions.get(33 /* EditorOption.disableMonospaceOptimizations */), fontInfo.typicalHalfwidthCharacterWidth, modifiedEditorOptions.get(104 /* EditorOption.scrollBeyondLastColumn */), modifiedEditorOptions.get(67 /* EditorOption.lineHeight */), layoutInfo.decorationsWidth, modifiedEditorOptions.get(117 /* EditorOption.stopRenderingLineAfter */), modifiedEditorOptions.get(99 /* EditorOption.renderWhitespace */), modifiedEditorOptions.get(94 /* EditorOption.renderControlCharacters */), modifiedEditorOptions.get(51 /* EditorOption.fontLigatures */));\n    }\n    constructor(tabSize, fontInfo, disableMonospaceOptimizations, typicalHalfwidthCharacterWidth, scrollBeyondLastColumn, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures) {\n        this.tabSize = tabSize;\n        this.fontInfo = fontInfo;\n        this.disableMonospaceOptimizations = disableMonospaceOptimizations;\n        this.typicalHalfwidthCharacterWidth = typicalHalfwidthCharacterWidth;\n        this.scrollBeyondLastColumn = scrollBeyondLastColumn;\n        this.lineHeight = lineHeight;\n        this.lineDecorationsWidth = lineDecorationsWidth;\n        this.stopRenderingLineAfter = stopRenderingLineAfter;\n        this.renderWhitespace = renderWhitespace;\n        this.renderControlCharacters = renderControlCharacters;\n        this.fontLigatures = fontLigatures;\n    }\n}\nfunction renderOriginalLine(viewLineIdx, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, options, sb) {\n    sb.appendString('<div class=\"view-line');\n    if (!hasCharChanges) {\n        // No char changes\n        sb.appendString(' char-delete');\n    }\n    sb.appendString('\" style=\"top:');\n    sb.appendString(String(viewLineIdx * options.lineHeight));\n    sb.appendString('px;width:1000000px;\">');\n    const lineContent = lineTokens.getLineContent();\n    const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n    const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n    const output = renderViewLine(new RenderLineInput((options.fontInfo.isMonospace && !options.disableMonospaceOptimizations), options.fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, options.tabSize, 0, options.fontInfo.spaceWidth, options.fontInfo.middotWidth, options.fontInfo.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n    ), sb);\n    sb.appendString('</div>');\n    return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}