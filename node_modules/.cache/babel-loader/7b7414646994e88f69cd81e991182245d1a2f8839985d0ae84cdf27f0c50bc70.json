{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { h } from '../../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../../base/common/actions.js';\nimport { booleanComparator, compareBy, numberComparator, tieBreakComparators } from '../../../../../base/common/arrays.js';\nimport { findMaxIdxBy } from '../../../../../base/common/arraysFind.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, autorunWithStore, constObservable, derived, derivedWithStore, observableFromEvent, observableSignalFromEvent, observableValue, recomputeInitiallyAndOnChange } from '../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { PlaceholderViewZone, ViewZoneOverlayWidget, applyStyle, applyViewZones } from '../utils.js';\nimport { OffsetRange, OffsetRangeSet } from '../../../../common/core/offsetRange.js';\nimport { localize } from '../../../../../nls.js';\nexport var MovedBlocksLinesFeature = /*#__PURE__*/function (_Disposable) {\n  function MovedBlocksLinesFeature(_rootElement, _diffModel, _originalEditorLayoutInfo, _modifiedEditorLayoutInfo, _editors) {\n    var _this;\n    _classCallCheck(this, MovedBlocksLinesFeature);\n    _this = _callSuper(this, MovedBlocksLinesFeature);\n    _this._rootElement = _rootElement;\n    _this._diffModel = _diffModel;\n    _this._originalEditorLayoutInfo = _originalEditorLayoutInfo;\n    _this._modifiedEditorLayoutInfo = _modifiedEditorLayoutInfo;\n    _this._editors = _editors;\n    _this._originalScrollTop = observableFromEvent(_this._editors.original.onDidScrollChange, function () {\n      return _this._editors.original.getScrollTop();\n    });\n    _this._modifiedScrollTop = observableFromEvent(_this._editors.modified.onDidScrollChange, function () {\n      return _this._editors.modified.getScrollTop();\n    });\n    _this._viewZonesChanged = observableSignalFromEvent('onDidChangeViewZones', _this._editors.modified.onDidChangeViewZones);\n    _this.width = observableValue(_this, 0);\n    _this._modifiedViewZonesChangedSignal = observableSignalFromEvent('modified.onDidChangeViewZones', _this._editors.modified.onDidChangeViewZones);\n    _this._originalViewZonesChangedSignal = observableSignalFromEvent('original.onDidChangeViewZones', _this._editors.original.onDidChangeViewZones);\n    _this._state = derivedWithStore(_this, function (reader, store) {\n      /** @description state */\n      var _a;\n      _this._element.replaceChildren();\n      var model = _this._diffModel.read(reader);\n      var moves = (_a = model === null || model === void 0 ? void 0 : model.diff.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTexts;\n      if (!moves || moves.length === 0) {\n        _this.width.set(0, undefined);\n        return;\n      }\n      _this._viewZonesChanged.read(reader);\n      var infoOrig = _this._originalEditorLayoutInfo.read(reader);\n      var infoMod = _this._modifiedEditorLayoutInfo.read(reader);\n      if (!infoOrig || !infoMod) {\n        _this.width.set(0, undefined);\n        return;\n      }\n      _this._modifiedViewZonesChangedSignal.read(reader);\n      _this._originalViewZonesChangedSignal.read(reader);\n      var lines = moves.map(function (move) {\n        function computeLineStart(range, editor) {\n          var t1 = editor.getTopForLineNumber(range.startLineNumber, true);\n          var t2 = editor.getTopForLineNumber(range.endLineNumberExclusive, true);\n          return (t1 + t2) / 2;\n        }\n        var start = computeLineStart(move.lineRangeMapping.original, _this._editors.original);\n        var startOffset = _this._originalScrollTop.read(reader);\n        var end = computeLineStart(move.lineRangeMapping.modified, _this._editors.modified);\n        var endOffset = _this._modifiedScrollTop.read(reader);\n        var from = start - startOffset;\n        var to = end - endOffset;\n        var top = Math.min(start, end);\n        var bottom = Math.max(start, end);\n        return {\n          range: new OffsetRange(top, bottom),\n          from: from,\n          to: to,\n          fromWithoutScroll: start,\n          toWithoutScroll: end,\n          move: move\n        };\n      });\n      lines.sort(tieBreakComparators(compareBy(function (l) {\n        return l.fromWithoutScroll > l.toWithoutScroll;\n      }, booleanComparator), compareBy(function (l) {\n        return l.fromWithoutScroll > l.toWithoutScroll ? l.fromWithoutScroll : -l.toWithoutScroll;\n      }, numberComparator)));\n      var layout = LinesLayout.compute(lines.map(function (l) {\n        return l.range;\n      }));\n      var padding = 10;\n      var lineAreaLeft = infoOrig.verticalScrollbarWidth;\n      var lineAreaWidth = (layout.getTrackCount() - 1) * 10 + padding * 2;\n      var width = lineAreaLeft + lineAreaWidth + (infoMod.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding);\n      var idx = 0;\n      var _iterator = _createForOfIteratorHelper(lines),\n        _step;\n      try {\n        var _loop = function _loop() {\n          var line = _step.value;\n          var track = layout.getTrack(idx);\n          var verticalY = lineAreaLeft + padding + track * 10;\n          var arrowHeight = 15;\n          var arrowWidth = 15;\n          var right = width;\n          var rectWidth = infoMod.glyphMarginWidth + infoMod.lineNumbersWidth;\n          var rectHeight = 18;\n          var rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n          rect.classList.add('arrow-rectangle');\n          rect.setAttribute('x', \"\".concat(right - rectWidth));\n          rect.setAttribute('y', \"\".concat(line.to - rectHeight / 2));\n          rect.setAttribute('width', \"\".concat(rectWidth));\n          rect.setAttribute('height', \"\".concat(rectHeight));\n          _this._element.appendChild(rect);\n          var g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n          var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n          path.setAttribute('d', \"M \".concat(0, \" \", line.from, \" L \").concat(verticalY, \" \").concat(line.from, \" L \").concat(verticalY, \" \").concat(line.to, \" L \").concat(right - arrowWidth, \" \").concat(line.to));\n          path.setAttribute('fill', 'none');\n          g.appendChild(path);\n          var arrowRight = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n          arrowRight.classList.add('arrow');\n          store.add(autorun(function (reader) {\n            path.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n            arrowRight.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n          }));\n          arrowRight.setAttribute('points', \"\".concat(right - arrowWidth, \",\").concat(line.to - arrowHeight / 2, \" \").concat(right, \",\").concat(line.to, \" \").concat(right - arrowWidth, \",\").concat(line.to + arrowHeight / 2));\n          g.appendChild(arrowRight);\n          _this._element.appendChild(g);\n          /*\n          TODO@hediet\n          path.addEventListener('mouseenter', () => {\n              model.setHoveredMovedText(line.move);\n          });\n          path.addEventListener('mouseleave', () => {\n              model.setHoveredMovedText(undefined);\n          });*/\n          idx++;\n        };\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      _this.width.set(lineAreaWidth, undefined);\n    });\n    _this._element = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    _this._element.setAttribute('class', 'moved-blocks-lines');\n    _this._rootElement.appendChild(_this._element);\n    _this._register(toDisposable(function () {\n      return _this._element.remove();\n    }));\n    _this._register(autorun(function (reader) {\n      /** @description update moved blocks lines positioning */\n      var info = _this._originalEditorLayoutInfo.read(reader);\n      var info2 = _this._modifiedEditorLayoutInfo.read(reader);\n      if (!info || !info2) {\n        return;\n      }\n      _this._element.style.left = \"\".concat(info.width - info.verticalScrollbarWidth, \"px\");\n      _this._element.style.height = \"\".concat(info.height, \"px\");\n      _this._element.style.width = \"\".concat(info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding + _this.width.read(reader), \"px\");\n    }));\n    _this._register(recomputeInitiallyAndOnChange(_this._state));\n    var movedBlockViewZones = derived(function (reader) {\n      var model = _this._diffModel.read(reader);\n      var d = model === null || model === void 0 ? void 0 : model.diff.read(reader);\n      if (!d) {\n        return [];\n      }\n      return d.movedTexts.map(function (move) {\n        return {\n          move: move,\n          original: new PlaceholderViewZone(constObservable(move.lineRangeMapping.original.startLineNumber - 1), 18),\n          modified: new PlaceholderViewZone(constObservable(move.lineRangeMapping.modified.startLineNumber - 1), 18)\n        };\n      });\n    });\n    _this._register(applyViewZones(_this._editors.original, movedBlockViewZones.map(function (zones) {\n      return /** @description movedBlockViewZones.original */zones.map(function (z) {\n        return z.original;\n      });\n    })));\n    _this._register(applyViewZones(_this._editors.modified, movedBlockViewZones.map(function (zones) {\n      return /** @description movedBlockViewZones.modified */zones.map(function (z) {\n        return z.modified;\n      });\n    })));\n    _this._register(autorunWithStore(function (reader, store) {\n      var blocks = movedBlockViewZones.read(reader);\n      var _iterator2 = _createForOfIteratorHelper(blocks),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var b = _step2.value;\n          store.add(new MovedBlockOverlayWidget(_this._editors.original, b.original, b.move, 'original', _this._diffModel.get()));\n          store.add(new MovedBlockOverlayWidget(_this._editors.modified, b.modified, b.move, 'modified', _this._diffModel.get()));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }));\n    var originalHasFocus = observableSignalFromEvent('original.onDidFocusEditorWidget', function (e) {\n      return _this._editors.original.onDidFocusEditorWidget(function () {\n        return setTimeout(function () {\n          return e(undefined);\n        }, 0);\n      });\n    });\n    var modifiedHasFocus = observableSignalFromEvent('modified.onDidFocusEditorWidget', function (e) {\n      return _this._editors.modified.onDidFocusEditorWidget(function () {\n        return setTimeout(function () {\n          return e(undefined);\n        }, 0);\n      });\n    });\n    var lastChangedEditor = 'modified';\n    _this._register(autorunHandleChanges({\n      createEmptyChangeSummary: function createEmptyChangeSummary() {\n        return undefined;\n      },\n      handleChange: function handleChange(ctx, summary) {\n        if (ctx.didChange(originalHasFocus)) {\n          lastChangedEditor = 'original';\n        }\n        if (ctx.didChange(modifiedHasFocus)) {\n          lastChangedEditor = 'modified';\n        }\n        return true;\n      }\n    }, function (reader) {\n      /** @description MovedBlocksLines.setActiveMovedTextFromCursor */\n      originalHasFocus.read(reader);\n      modifiedHasFocus.read(reader);\n      var m = _this._diffModel.read(reader);\n      if (!m) {\n        return;\n      }\n      var diff = m.diff.read(reader);\n      var movedText = undefined;\n      if (diff && lastChangedEditor === 'original') {\n        var originalPos = _this._editors.originalCursor.read(reader);\n        if (originalPos) {\n          movedText = diff.movedTexts.find(function (m) {\n            return m.lineRangeMapping.original.contains(originalPos.lineNumber);\n          });\n        }\n      }\n      if (diff && lastChangedEditor === 'modified') {\n        var modifiedPos = _this._editors.modifiedCursor.read(reader);\n        if (modifiedPos) {\n          movedText = diff.movedTexts.find(function (m) {\n            return m.lineRangeMapping.modified.contains(modifiedPos.lineNumber);\n          });\n        }\n      }\n      if (movedText !== m.movedTextToCompare.get()) {\n        m.movedTextToCompare.set(undefined, undefined);\n      }\n      m.setActiveMovedText(movedText);\n    }));\n    return _this;\n  }\n  _inherits(MovedBlocksLinesFeature, _Disposable);\n  return _createClass(MovedBlocksLinesFeature);\n}(Disposable);\nMovedBlocksLinesFeature.movedCodeBlockPadding = 4;\nvar LinesLayout = /*#__PURE__*/function () {\n  function LinesLayout(_trackCount, trackPerLineIdx) {\n    _classCallCheck(this, LinesLayout);\n    this._trackCount = _trackCount;\n    this.trackPerLineIdx = trackPerLineIdx;\n  }\n  return _createClass(LinesLayout, [{\n    key: \"getTrack\",\n    value: function getTrack(lineIdx) {\n      return this.trackPerLineIdx[lineIdx];\n    }\n  }, {\n    key: \"getTrackCount\",\n    value: function getTrackCount() {\n      return this._trackCount;\n    }\n  }], [{\n    key: \"compute\",\n    value: function compute(lines) {\n      var setsPerTrack = [];\n      var trackPerLineIdx = [];\n      var _iterator3 = _createForOfIteratorHelper(lines),\n        _step3;\n      try {\n        var _loop2 = function _loop2() {\n          var line = _step3.value;\n          var trackIdx = setsPerTrack.findIndex(function (set) {\n            return !set.intersectsStrict(line);\n          });\n          if (trackIdx === -1) {\n            var maxTrackCount = 6;\n            if (setsPerTrack.length >= maxTrackCount) {\n              trackIdx = findMaxIdxBy(setsPerTrack, compareBy(function (set) {\n                return set.intersectWithRangeLength(line);\n              }, numberComparator));\n            } else {\n              trackIdx = setsPerTrack.length;\n              setsPerTrack.push(new OffsetRangeSet());\n            }\n          }\n          setsPerTrack[trackIdx].addRange(line);\n          trackPerLineIdx.push(trackIdx);\n        };\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          _loop2();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return new LinesLayout(setsPerTrack.length, trackPerLineIdx);\n    }\n  }]);\n}();\nvar MovedBlockOverlayWidget = /*#__PURE__*/function (_ViewZoneOverlayWidge) {\n  function MovedBlockOverlayWidget(_editor, _viewZone, _move, _kind, _diffModel) {\n    var _this2;\n    _classCallCheck(this, MovedBlockOverlayWidget);\n    var root = h('div.diff-hidden-lines-widget');\n    _this2 = _callSuper(this, MovedBlockOverlayWidget, [_editor, _viewZone, root.root]);\n    _this2._editor = _editor;\n    _this2._move = _move;\n    _this2._kind = _kind;\n    _this2._diffModel = _diffModel;\n    _this2._nodes = h('div.diff-moved-code-block', {\n      style: {\n        marginRight: '4px'\n      }\n    }, [h('div.text-content@textContent'), h('div.action-bar@actionBar')]);\n    root.root.appendChild(_this2._nodes.root);\n    var editorLayout = observableFromEvent(_this2._editor.onDidLayoutChange, function () {\n      return _this2._editor.getLayoutInfo();\n    });\n    _this2._register(applyStyle(_this2._nodes.root, {\n      paddingRight: editorLayout.map(function (l) {\n        return l.verticalScrollbarWidth;\n      })\n    }));\n    var text;\n    if (_move.changes.length > 0) {\n      text = _this2._kind === 'original' ? localize('codeMovedToWithChanges', 'Code moved with changes to line {0}-{1}', _this2._move.lineRangeMapping.modified.startLineNumber, _this2._move.lineRangeMapping.modified.endLineNumberExclusive - 1) : localize('codeMovedFromWithChanges', 'Code moved with changes from line {0}-{1}', _this2._move.lineRangeMapping.original.startLineNumber, _this2._move.lineRangeMapping.original.endLineNumberExclusive - 1);\n    } else {\n      text = _this2._kind === 'original' ? localize('codeMovedTo', 'Code moved to line {0}-{1}', _this2._move.lineRangeMapping.modified.startLineNumber, _this2._move.lineRangeMapping.modified.endLineNumberExclusive - 1) : localize('codeMovedFrom', 'Code moved from line {0}-{1}', _this2._move.lineRangeMapping.original.startLineNumber, _this2._move.lineRangeMapping.original.endLineNumberExclusive - 1);\n    }\n    var actionBar = _this2._register(new ActionBar(_this2._nodes.actionBar, {\n      highlightToggledItems: true\n    }));\n    var caption = new Action('', text, '', false);\n    actionBar.push(caption, {\n      icon: false,\n      label: true\n    });\n    var actionCompare = new Action('', 'Compare', ThemeIcon.asClassName(Codicon.compareChanges), true, function () {\n      _this2._editor.focus();\n      _this2._diffModel.movedTextToCompare.set(_this2._diffModel.movedTextToCompare.get() === _move ? undefined : _this2._move, undefined);\n    });\n    _this2._register(autorun(function (reader) {\n      var isActive = _this2._diffModel.movedTextToCompare.read(reader) === _move;\n      actionCompare.checked = isActive;\n    }));\n    actionBar.push(actionCompare, {\n      icon: false,\n      label: true\n    });\n    return _this2;\n  }\n  _inherits(MovedBlockOverlayWidget, _ViewZoneOverlayWidge);\n  return _createClass(MovedBlockOverlayWidget);\n}(ViewZoneOverlayWidget);","map":{"version":3,"names":["h","ActionBar","Action","booleanComparator","compareBy","numberComparator","tieBreakComparators","findMaxIdxBy","Codicon","Disposable","toDisposable","autorun","autorunHandleChanges","autorunWithStore","constObservable","derived","derivedWithStore","observableFromEvent","observableSignalFromEvent","observableValue","recomputeInitiallyAndOnChange","ThemeIcon","PlaceholderViewZone","ViewZoneOverlayWidget","applyStyle","applyViewZones","OffsetRange","OffsetRangeSet","localize","MovedBlocksLinesFeature","_Disposable","_rootElement","_diffModel","_originalEditorLayoutInfo","_modifiedEditorLayoutInfo","_editors","_this","_classCallCheck","_callSuper","_originalScrollTop","original","onDidScrollChange","getScrollTop","_modifiedScrollTop","modified","_viewZonesChanged","onDidChangeViewZones","width","_modifiedViewZonesChangedSignal","_originalViewZonesChangedSignal","_state","reader","store","_a","_element","replaceChildren","model","read","moves","diff","movedTexts","length","set","undefined","infoOrig","infoMod","lines","map","move","computeLineStart","range","editor","t1","getTopForLineNumber","startLineNumber","t2","endLineNumberExclusive","start","lineRangeMapping","startOffset","end","endOffset","from","to","top","Math","min","bottom","max","fromWithoutScroll","toWithoutScroll","sort","l","layout","LinesLayout","compute","padding","lineAreaLeft","verticalScrollbarWidth","lineAreaWidth","getTrackCount","contentLeft","movedCodeBlockPadding","idx","_iterator","_createForOfIteratorHelper","_step","_loop","line","value","track","getTrack","verticalY","arrowHeight","arrowWidth","right","rectWidth","glyphMarginWidth","lineNumbersWidth","rectHeight","rect","document","createElementNS","classList","add","setAttribute","concat","appendChild","g","path","arrowRight","toggle","activeMovedText","s","n","done","err","e","f","_register","remove","info","info2","style","left","height","movedBlockViewZones","d","zones","z","blocks","_iterator2","_step2","b","MovedBlockOverlayWidget","get","originalHasFocus","onDidFocusEditorWidget","setTimeout","modifiedHasFocus","lastChangedEditor","createEmptyChangeSummary","handleChange","ctx","summary","didChange","m","movedText","originalPos","originalCursor","find","contains","lineNumber","modifiedPos","modifiedCursor","movedTextToCompare","setActiveMovedText","_inherits","_createClass","_trackCount","trackPerLineIdx","key","lineIdx","setsPerTrack","_iterator3","_step3","_loop2","trackIdx","findIndex","intersectsStrict","maxTrackCount","intersectWithRangeLength","push","addRange","_ViewZoneOverlayWidge","_editor","_viewZone","_move","_kind","_this2","root","_nodes","marginRight","editorLayout","onDidLayoutChange","getLayoutInfo","paddingRight","text","changes","actionBar","highlightToggledItems","caption","icon","label","actionCompare","asClassName","compareChanges","focus","isActive","checked"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/features/movedBlocksLinesFeature.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { h } from '../../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Action } from '../../../../../base/common/actions.js';\nimport { booleanComparator, compareBy, numberComparator, tieBreakComparators } from '../../../../../base/common/arrays.js';\nimport { findMaxIdxBy } from '../../../../../base/common/arraysFind.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunHandleChanges, autorunWithStore, constObservable, derived, derivedWithStore, observableFromEvent, observableSignalFromEvent, observableValue, recomputeInitiallyAndOnChange } from '../../../../../base/common/observable.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { PlaceholderViewZone, ViewZoneOverlayWidget, applyStyle, applyViewZones } from '../utils.js';\nimport { OffsetRange, OffsetRangeSet } from '../../../../common/core/offsetRange.js';\nimport { localize } from '../../../../../nls.js';\nexport class MovedBlocksLinesFeature extends Disposable {\n    constructor(_rootElement, _diffModel, _originalEditorLayoutInfo, _modifiedEditorLayoutInfo, _editors) {\n        super();\n        this._rootElement = _rootElement;\n        this._diffModel = _diffModel;\n        this._originalEditorLayoutInfo = _originalEditorLayoutInfo;\n        this._modifiedEditorLayoutInfo = _modifiedEditorLayoutInfo;\n        this._editors = _editors;\n        this._originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => this._editors.original.getScrollTop());\n        this._modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => this._editors.modified.getScrollTop());\n        this._viewZonesChanged = observableSignalFromEvent('onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n        this.width = observableValue(this, 0);\n        this._modifiedViewZonesChangedSignal = observableSignalFromEvent('modified.onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n        this._originalViewZonesChangedSignal = observableSignalFromEvent('original.onDidChangeViewZones', this._editors.original.onDidChangeViewZones);\n        this._state = derivedWithStore(this, (reader, store) => {\n            /** @description state */\n            var _a;\n            this._element.replaceChildren();\n            const model = this._diffModel.read(reader);\n            const moves = (_a = model === null || model === void 0 ? void 0 : model.diff.read(reader)) === null || _a === void 0 ? void 0 : _a.movedTexts;\n            if (!moves || moves.length === 0) {\n                this.width.set(0, undefined);\n                return;\n            }\n            this._viewZonesChanged.read(reader);\n            const infoOrig = this._originalEditorLayoutInfo.read(reader);\n            const infoMod = this._modifiedEditorLayoutInfo.read(reader);\n            if (!infoOrig || !infoMod) {\n                this.width.set(0, undefined);\n                return;\n            }\n            this._modifiedViewZonesChangedSignal.read(reader);\n            this._originalViewZonesChangedSignal.read(reader);\n            const lines = moves.map((move) => {\n                function computeLineStart(range, editor) {\n                    const t1 = editor.getTopForLineNumber(range.startLineNumber, true);\n                    const t2 = editor.getTopForLineNumber(range.endLineNumberExclusive, true);\n                    return (t1 + t2) / 2;\n                }\n                const start = computeLineStart(move.lineRangeMapping.original, this._editors.original);\n                const startOffset = this._originalScrollTop.read(reader);\n                const end = computeLineStart(move.lineRangeMapping.modified, this._editors.modified);\n                const endOffset = this._modifiedScrollTop.read(reader);\n                const from = start - startOffset;\n                const to = end - endOffset;\n                const top = Math.min(start, end);\n                const bottom = Math.max(start, end);\n                return { range: new OffsetRange(top, bottom), from, to, fromWithoutScroll: start, toWithoutScroll: end, move };\n            });\n            lines.sort(tieBreakComparators(compareBy(l => l.fromWithoutScroll > l.toWithoutScroll, booleanComparator), compareBy(l => l.fromWithoutScroll > l.toWithoutScroll ? l.fromWithoutScroll : -l.toWithoutScroll, numberComparator)));\n            const layout = LinesLayout.compute(lines.map(l => l.range));\n            const padding = 10;\n            const lineAreaLeft = infoOrig.verticalScrollbarWidth;\n            const lineAreaWidth = (layout.getTrackCount() - 1) * 10 + padding * 2;\n            const width = lineAreaLeft + lineAreaWidth + (infoMod.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding);\n            let idx = 0;\n            for (const line of lines) {\n                const track = layout.getTrack(idx);\n                const verticalY = lineAreaLeft + padding + track * 10;\n                const arrowHeight = 15;\n                const arrowWidth = 15;\n                const right = width;\n                const rectWidth = infoMod.glyphMarginWidth + infoMod.lineNumbersWidth;\n                const rectHeight = 18;\n                const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n                rect.classList.add('arrow-rectangle');\n                rect.setAttribute('x', `${right - rectWidth}`);\n                rect.setAttribute('y', `${line.to - rectHeight / 2}`);\n                rect.setAttribute('width', `${rectWidth}`);\n                rect.setAttribute('height', `${rectHeight}`);\n                this._element.appendChild(rect);\n                const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n                const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                path.setAttribute('d', `M ${0} ${line.from} L ${verticalY} ${line.from} L ${verticalY} ${line.to} L ${right - arrowWidth} ${line.to}`);\n                path.setAttribute('fill', 'none');\n                g.appendChild(path);\n                const arrowRight = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n                arrowRight.classList.add('arrow');\n                store.add(autorun(reader => {\n                    path.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n                    arrowRight.classList.toggle('currentMove', line.move === model.activeMovedText.read(reader));\n                }));\n                arrowRight.setAttribute('points', `${right - arrowWidth},${line.to - arrowHeight / 2} ${right},${line.to} ${right - arrowWidth},${line.to + arrowHeight / 2}`);\n                g.appendChild(arrowRight);\n                this._element.appendChild(g);\n                /*\n                TODO@hediet\n                path.addEventListener('mouseenter', () => {\n                    model.setHoveredMovedText(line.move);\n                });\n                path.addEventListener('mouseleave', () => {\n                    model.setHoveredMovedText(undefined);\n                });*/\n                idx++;\n            }\n            this.width.set(lineAreaWidth, undefined);\n        });\n        this._element = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        this._element.setAttribute('class', 'moved-blocks-lines');\n        this._rootElement.appendChild(this._element);\n        this._register(toDisposable(() => this._element.remove()));\n        this._register(autorun(reader => {\n            /** @description update moved blocks lines positioning */\n            const info = this._originalEditorLayoutInfo.read(reader);\n            const info2 = this._modifiedEditorLayoutInfo.read(reader);\n            if (!info || !info2) {\n                return;\n            }\n            this._element.style.left = `${info.width - info.verticalScrollbarWidth}px`;\n            this._element.style.height = `${info.height}px`;\n            this._element.style.width = `${info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesFeature.movedCodeBlockPadding + this.width.read(reader)}px`;\n        }));\n        this._register(recomputeInitiallyAndOnChange(this._state));\n        const movedBlockViewZones = derived(reader => {\n            const model = this._diffModel.read(reader);\n            const d = model === null || model === void 0 ? void 0 : model.diff.read(reader);\n            if (!d) {\n                return [];\n            }\n            return d.movedTexts.map(move => ({\n                move,\n                original: new PlaceholderViewZone(constObservable(move.lineRangeMapping.original.startLineNumber - 1), 18),\n                modified: new PlaceholderViewZone(constObservable(move.lineRangeMapping.modified.startLineNumber - 1), 18),\n            }));\n        });\n        this._register(applyViewZones(this._editors.original, movedBlockViewZones.map(zones => /** @description movedBlockViewZones.original */ zones.map(z => z.original))));\n        this._register(applyViewZones(this._editors.modified, movedBlockViewZones.map(zones => /** @description movedBlockViewZones.modified */ zones.map(z => z.modified))));\n        this._register(autorunWithStore((reader, store) => {\n            const blocks = movedBlockViewZones.read(reader);\n            for (const b of blocks) {\n                store.add(new MovedBlockOverlayWidget(this._editors.original, b.original, b.move, 'original', this._diffModel.get()));\n                store.add(new MovedBlockOverlayWidget(this._editors.modified, b.modified, b.move, 'modified', this._diffModel.get()));\n            }\n        }));\n        const originalHasFocus = observableSignalFromEvent('original.onDidFocusEditorWidget', e => this._editors.original.onDidFocusEditorWidget(() => setTimeout(() => e(undefined), 0)));\n        const modifiedHasFocus = observableSignalFromEvent('modified.onDidFocusEditorWidget', e => this._editors.modified.onDidFocusEditorWidget(() => setTimeout(() => e(undefined), 0)));\n        let lastChangedEditor = 'modified';\n        this._register(autorunHandleChanges({\n            createEmptyChangeSummary: () => undefined,\n            handleChange: (ctx, summary) => {\n                if (ctx.didChange(originalHasFocus)) {\n                    lastChangedEditor = 'original';\n                }\n                if (ctx.didChange(modifiedHasFocus)) {\n                    lastChangedEditor = 'modified';\n                }\n                return true;\n            }\n        }, reader => {\n            /** @description MovedBlocksLines.setActiveMovedTextFromCursor */\n            originalHasFocus.read(reader);\n            modifiedHasFocus.read(reader);\n            const m = this._diffModel.read(reader);\n            if (!m) {\n                return;\n            }\n            const diff = m.diff.read(reader);\n            let movedText = undefined;\n            if (diff && lastChangedEditor === 'original') {\n                const originalPos = this._editors.originalCursor.read(reader);\n                if (originalPos) {\n                    movedText = diff.movedTexts.find(m => m.lineRangeMapping.original.contains(originalPos.lineNumber));\n                }\n            }\n            if (diff && lastChangedEditor === 'modified') {\n                const modifiedPos = this._editors.modifiedCursor.read(reader);\n                if (modifiedPos) {\n                    movedText = diff.movedTexts.find(m => m.lineRangeMapping.modified.contains(modifiedPos.lineNumber));\n                }\n            }\n            if (movedText !== m.movedTextToCompare.get()) {\n                m.movedTextToCompare.set(undefined, undefined);\n            }\n            m.setActiveMovedText(movedText);\n        }));\n    }\n}\nMovedBlocksLinesFeature.movedCodeBlockPadding = 4;\nclass LinesLayout {\n    static compute(lines) {\n        const setsPerTrack = [];\n        const trackPerLineIdx = [];\n        for (const line of lines) {\n            let trackIdx = setsPerTrack.findIndex(set => !set.intersectsStrict(line));\n            if (trackIdx === -1) {\n                const maxTrackCount = 6;\n                if (setsPerTrack.length >= maxTrackCount) {\n                    trackIdx = findMaxIdxBy(setsPerTrack, compareBy(set => set.intersectWithRangeLength(line), numberComparator));\n                }\n                else {\n                    trackIdx = setsPerTrack.length;\n                    setsPerTrack.push(new OffsetRangeSet());\n                }\n            }\n            setsPerTrack[trackIdx].addRange(line);\n            trackPerLineIdx.push(trackIdx);\n        }\n        return new LinesLayout(setsPerTrack.length, trackPerLineIdx);\n    }\n    constructor(_trackCount, trackPerLineIdx) {\n        this._trackCount = _trackCount;\n        this.trackPerLineIdx = trackPerLineIdx;\n    }\n    getTrack(lineIdx) {\n        return this.trackPerLineIdx[lineIdx];\n    }\n    getTrackCount() {\n        return this._trackCount;\n    }\n}\nclass MovedBlockOverlayWidget extends ViewZoneOverlayWidget {\n    constructor(_editor, _viewZone, _move, _kind, _diffModel) {\n        const root = h('div.diff-hidden-lines-widget');\n        super(_editor, _viewZone, root.root);\n        this._editor = _editor;\n        this._move = _move;\n        this._kind = _kind;\n        this._diffModel = _diffModel;\n        this._nodes = h('div.diff-moved-code-block', { style: { marginRight: '4px' } }, [\n            h('div.text-content@textContent'),\n            h('div.action-bar@actionBar'),\n        ]);\n        root.root.appendChild(this._nodes.root);\n        const editorLayout = observableFromEvent(this._editor.onDidLayoutChange, () => this._editor.getLayoutInfo());\n        this._register(applyStyle(this._nodes.root, {\n            paddingRight: editorLayout.map(l => l.verticalScrollbarWidth)\n        }));\n        let text;\n        if (_move.changes.length > 0) {\n            text = this._kind === 'original' ? localize('codeMovedToWithChanges', 'Code moved with changes to line {0}-{1}', this._move.lineRangeMapping.modified.startLineNumber, this._move.lineRangeMapping.modified.endLineNumberExclusive - 1) : localize('codeMovedFromWithChanges', 'Code moved with changes from line {0}-{1}', this._move.lineRangeMapping.original.startLineNumber, this._move.lineRangeMapping.original.endLineNumberExclusive - 1);\n        }\n        else {\n            text = this._kind === 'original' ? localize('codeMovedTo', 'Code moved to line {0}-{1}', this._move.lineRangeMapping.modified.startLineNumber, this._move.lineRangeMapping.modified.endLineNumberExclusive - 1) : localize('codeMovedFrom', 'Code moved from line {0}-{1}', this._move.lineRangeMapping.original.startLineNumber, this._move.lineRangeMapping.original.endLineNumberExclusive - 1);\n        }\n        const actionBar = this._register(new ActionBar(this._nodes.actionBar, {\n            highlightToggledItems: true,\n        }));\n        const caption = new Action('', text, '', false);\n        actionBar.push(caption, { icon: false, label: true });\n        const actionCompare = new Action('', 'Compare', ThemeIcon.asClassName(Codicon.compareChanges), true, () => {\n            this._editor.focus();\n            this._diffModel.movedTextToCompare.set(this._diffModel.movedTextToCompare.get() === _move ? undefined : this._move, undefined);\n        });\n        this._register(autorun(reader => {\n            const isActive = this._diffModel.movedTextToCompare.read(reader) === _move;\n            actionCompare.checked = isActive;\n        }));\n        actionBar.push(actionCompare, { icon: false, label: true });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}