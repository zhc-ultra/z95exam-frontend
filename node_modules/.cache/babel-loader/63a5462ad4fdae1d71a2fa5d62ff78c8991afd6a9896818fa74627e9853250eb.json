{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from './dom.js';\nimport { DisposableStore, toDisposable } from '../common/lifecycle.js';\nexport var GlobalPointerMoveMonitor = /*#__PURE__*/function () {\n  function GlobalPointerMoveMonitor() {\n    _classCallCheck(this, GlobalPointerMoveMonitor);\n    this._hooks = new DisposableStore();\n    this._pointerMoveCallback = null;\n    this._onStopCallback = null;\n  }\n  return _createClass(GlobalPointerMoveMonitor, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.stopMonitoring(false);\n      this._hooks.dispose();\n    }\n  }, {\n    key: \"stopMonitoring\",\n    value: function stopMonitoring(invokeStopCallback, browserEvent) {\n      if (!this.isMonitoring()) {\n        // Not monitoring\n        return;\n      }\n      // Unhook\n      this._hooks.clear();\n      this._pointerMoveCallback = null;\n      var onStopCallback = this._onStopCallback;\n      this._onStopCallback = null;\n      if (invokeStopCallback && onStopCallback) {\n        onStopCallback(browserEvent);\n      }\n    }\n  }, {\n    key: \"isMonitoring\",\n    value: function isMonitoring() {\n      return !!this._pointerMoveCallback;\n    }\n  }, {\n    key: \"startMonitoring\",\n    value: function startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n      var _this = this;\n      if (this.isMonitoring()) {\n        this.stopMonitoring(false);\n      }\n      this._pointerMoveCallback = pointerMoveCallback;\n      this._onStopCallback = onStopCallback;\n      var eventSource = initialElement;\n      try {\n        initialElement.setPointerCapture(pointerId);\n        this._hooks.add(toDisposable(function () {\n          try {\n            initialElement.releasePointerCapture(pointerId);\n          } catch (err) {\n            // See https://github.com/microsoft/vscode/issues/161731\n            //\n            // `releasePointerCapture` sometimes fails when being invoked with the exception:\n            //     DOMException: Failed to execute 'releasePointerCapture' on 'Element':\n            //     No active pointer with the given id is found.\n            //\n            // There's no need to do anything in case of failure\n          }\n        }));\n      } catch (err) {\n        // See https://github.com/microsoft/vscode/issues/144584\n        // See https://github.com/microsoft/vscode/issues/146947\n        // `setPointerCapture` sometimes fails when being invoked\n        // from a `mousedown` listener on macOS and Windows\n        // and it always fails on Linux with the exception:\n        //     DOMException: Failed to execute 'setPointerCapture' on 'Element':\n        //     No active pointer with the given id is found.\n        // In case of failure, we bind the listeners on the window\n        eventSource = dom.getWindow(initialElement);\n      }\n      this._hooks.add(dom.addDisposableListener(eventSource, dom.EventType.POINTER_MOVE, function (e) {\n        if (e.buttons !== initialButtons) {\n          // Buttons state has changed in the meantime\n          _this.stopMonitoring(true);\n          return;\n        }\n        e.preventDefault();\n        _this._pointerMoveCallback(e);\n      }));\n      this._hooks.add(dom.addDisposableListener(eventSource, dom.EventType.POINTER_UP, function (e) {\n        return _this.stopMonitoring(true);\n      }));\n    }\n  }]);\n}();","map":{"version":3,"names":["dom","DisposableStore","toDisposable","GlobalPointerMoveMonitor","_classCallCheck","_hooks","_pointerMoveCallback","_onStopCallback","_createClass","key","value","dispose","stopMonitoring","invokeStopCallback","browserEvent","isMonitoring","clear","onStopCallback","startMonitoring","initialElement","pointerId","initialButtons","pointerMoveCallback","_this","eventSource","setPointerCapture","add","releasePointerCapture","err","getWindow","addDisposableListener","EventType","POINTER_MOVE","e","buttons","preventDefault","POINTER_UP"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/browser/globalPointerMoveMonitor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from './dom.js';\nimport { DisposableStore, toDisposable } from '../common/lifecycle.js';\nexport class GlobalPointerMoveMonitor {\n    constructor() {\n        this._hooks = new DisposableStore();\n        this._pointerMoveCallback = null;\n        this._onStopCallback = null;\n    }\n    dispose() {\n        this.stopMonitoring(false);\n        this._hooks.dispose();\n    }\n    stopMonitoring(invokeStopCallback, browserEvent) {\n        if (!this.isMonitoring()) {\n            // Not monitoring\n            return;\n        }\n        // Unhook\n        this._hooks.clear();\n        this._pointerMoveCallback = null;\n        const onStopCallback = this._onStopCallback;\n        this._onStopCallback = null;\n        if (invokeStopCallback && onStopCallback) {\n            onStopCallback(browserEvent);\n        }\n    }\n    isMonitoring() {\n        return !!this._pointerMoveCallback;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        if (this.isMonitoring()) {\n            this.stopMonitoring(false);\n        }\n        this._pointerMoveCallback = pointerMoveCallback;\n        this._onStopCallback = onStopCallback;\n        let eventSource = initialElement;\n        try {\n            initialElement.setPointerCapture(pointerId);\n            this._hooks.add(toDisposable(() => {\n                try {\n                    initialElement.releasePointerCapture(pointerId);\n                }\n                catch (err) {\n                    // See https://github.com/microsoft/vscode/issues/161731\n                    //\n                    // `releasePointerCapture` sometimes fails when being invoked with the exception:\n                    //     DOMException: Failed to execute 'releasePointerCapture' on 'Element':\n                    //     No active pointer with the given id is found.\n                    //\n                    // There's no need to do anything in case of failure\n                }\n            }));\n        }\n        catch (err) {\n            // See https://github.com/microsoft/vscode/issues/144584\n            // See https://github.com/microsoft/vscode/issues/146947\n            // `setPointerCapture` sometimes fails when being invoked\n            // from a `mousedown` listener on macOS and Windows\n            // and it always fails on Linux with the exception:\n            //     DOMException: Failed to execute 'setPointerCapture' on 'Element':\n            //     No active pointer with the given id is found.\n            // In case of failure, we bind the listeners on the window\n            eventSource = dom.getWindow(initialElement);\n        }\n        this._hooks.add(dom.addDisposableListener(eventSource, dom.EventType.POINTER_MOVE, (e) => {\n            if (e.buttons !== initialButtons) {\n                // Buttons state has changed in the meantime\n                this.stopMonitoring(true);\n                return;\n            }\n            e.preventDefault();\n            this._pointerMoveCallback(e);\n        }));\n        this._hooks.add(dom.addDisposableListener(eventSource, dom.EventType.POINTER_UP, (e) => this.stopMonitoring(true)));\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}