{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nexport var MirrorTextModel = /*#__PURE__*/function () {\n  function MirrorTextModel(uri, lines, eol, versionId) {\n    _classCallCheck(this, MirrorTextModel);\n    this._uri = uri;\n    this._lines = lines;\n    this._eol = eol;\n    this._versionId = versionId;\n    this._lineStarts = null;\n    this._cachedTextValue = null;\n  }\n  return _createClass(MirrorTextModel, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._lines.length = 0;\n    }\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this._versionId;\n    }\n  }, {\n    key: \"getText\",\n    value: function getText() {\n      if (this._cachedTextValue === null) {\n        this._cachedTextValue = this._lines.join(this._eol);\n      }\n      return this._cachedTextValue;\n    }\n  }, {\n    key: \"onEvents\",\n    value: function onEvents(e) {\n      if (e.eol && e.eol !== this._eol) {\n        this._eol = e.eol;\n        this._lineStarts = null;\n      }\n      // Update my lines\n      var changes = e.changes;\n      var _iterator = _createForOfIteratorHelper(changes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var change = _step.value;\n          this._acceptDeleteRange(change.range);\n          this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._versionId = e.versionId;\n      this._cachedTextValue = null;\n    }\n  }, {\n    key: \"_ensureLineStarts\",\n    value: function _ensureLineStarts() {\n      if (!this._lineStarts) {\n        var eolLength = this._eol.length;\n        var linesLength = this._lines.length;\n        var lineStartValues = new Uint32Array(linesLength);\n        for (var i = 0; i < linesLength; i++) {\n          lineStartValues[i] = this._lines[i].length + eolLength;\n        }\n        this._lineStarts = new PrefixSumComputer(lineStartValues);\n      }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n  }, {\n    key: \"_setLineText\",\n    value: function _setLineText(lineIndex, newValue) {\n      this._lines[lineIndex] = newValue;\n      if (this._lineStarts) {\n        // update prefix sum\n        this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n      }\n    }\n  }, {\n    key: \"_acceptDeleteRange\",\n    value: function _acceptDeleteRange(range) {\n      if (range.startLineNumber === range.endLineNumber) {\n        if (range.startColumn === range.endColumn) {\n          // Nothing to delete\n          return;\n        }\n        // Delete text on the affected line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n        return;\n      }\n      // Take remaining text on last line and append it to remaining text on first line\n      this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n      // Delete middle lines\n      this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n      if (this._lineStarts) {\n        // update prefix sum\n        this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n      }\n    }\n  }, {\n    key: \"_acceptInsertText\",\n    value: function _acceptInsertText(position, insertText) {\n      if (insertText.length === 0) {\n        // Nothing to insert\n        return;\n      }\n      var insertLines = splitLines(insertText);\n      if (insertLines.length === 1) {\n        // Inserting text on one line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0] + this._lines[position.lineNumber - 1].substring(position.column - 1));\n        return;\n      }\n      // Append overflowing text from first line to the end of text to insert\n      insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n      // Delete overflowing text from first line and insert text on first line\n      this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0]);\n      // Insert new lines & store lengths\n      var newLengths = new Uint32Array(insertLines.length - 1);\n      for (var i = 1; i < insertLines.length; i++) {\n        this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n        newLengths[i - 1] = insertLines[i].length + this._eol.length;\n      }\n      if (this._lineStarts) {\n        // update prefix sum\n        this._lineStarts.insertValues(position.lineNumber, newLengths);\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["splitLines","Position","PrefixSumComputer","MirrorTextModel","uri","lines","eol","versionId","_classCallCheck","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","_createClass","key","value","dispose","length","get","getText","join","onEvents","e","changes","_iterator","_createForOfIteratorHelper","_step","s","n","done","change","_acceptDeleteRange","range","_acceptInsertText","startLineNumber","startColumn","text","err","f","_ensureLineStarts","eolLength","linesLength","lineStartValues","Uint32Array","i","_setLineText","lineIndex","newValue","setValue","endLineNumber","endColumn","substring","splice","removeValues","position","insertText","insertLines","lineNumber","column","newLengths","insertValues"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        const newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}