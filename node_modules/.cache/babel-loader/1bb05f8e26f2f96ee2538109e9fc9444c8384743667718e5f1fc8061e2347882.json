{"ast":null,"code":"import _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match-all.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n  var values = [];\n  var _iterator = _createForOfIteratorHelper(captureGroups),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var captureGroup = _step.value;\n      var parsedNumber = Number(captureGroup);\n      if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n        values.push(parsedNumber);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return values;\n}\nfunction _toIColor(r, g, b, a) {\n  return {\n    red: r / 255,\n    blue: b / 255,\n    green: g / 255,\n    alpha: a\n  };\n}\nfunction _findRange(model, match) {\n  var index = match.index;\n  var length = match[0].length;\n  if (!index) {\n    return;\n  }\n  var startPosition = model.positionAt(index);\n  var range = {\n    startLineNumber: startPosition.lineNumber,\n    startColumn: startPosition.column,\n    endLineNumber: startPosition.lineNumber,\n    endColumn: startPosition.column + length\n  };\n  return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n  if (!range) {\n    return;\n  }\n  var parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n  if (!parsedHexColor) {\n    return;\n  }\n  return {\n    range: range,\n    color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n  };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n  if (!range || matches.length !== 1) {\n    return;\n  }\n  var match = matches[0];\n  var captureGroups = match.values();\n  var parsedRegex = _parseCaptureGroups(captureGroups);\n  return {\n    range: range,\n    color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n  };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n  if (!range || matches.length !== 1) {\n    return;\n  }\n  var match = matches[0];\n  var captureGroups = match.values();\n  var parsedRegex = _parseCaptureGroups(captureGroups);\n  var colorEquivalent = new Color(new HSLA(parsedRegex[0], parsedRegex[1] / 100, parsedRegex[2] / 100, isAlpha ? parsedRegex[3] : 1));\n  return {\n    range: range,\n    color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n  };\n}\nfunction _findMatches(model, regex) {\n  if (typeof model === 'string') {\n    return _toConsumableArray(model.matchAll(regex));\n  } else {\n    return model.findMatches(regex);\n  }\n}\nfunction computeColors(model) {\n  var result = [];\n  // Early validation for RGB and HSL\n  var initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n  var initialValidationMatches = _findMatches(model, initialValidationRegex);\n  // Potential colors have been found, validate the parameters\n  if (initialValidationMatches.length > 0) {\n    var _iterator2 = _createForOfIteratorHelper(initialValidationMatches),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var initialMatch = _step2.value;\n        var initialCaptureGroups = initialMatch.filter(function (captureGroup) {\n          return captureGroup !== undefined;\n        });\n        var colorScheme = initialCaptureGroups[1];\n        var colorParameters = initialCaptureGroups[2];\n        if (!colorParameters) {\n          continue;\n        }\n        var colorInformation = void 0;\n        if (colorScheme === 'rgb') {\n          var regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n          colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n        } else if (colorScheme === 'rgba') {\n          var _regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n          colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, _regexParameters), true);\n        } else if (colorScheme === 'hsl') {\n          var _regexParameters2 = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n          colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, _regexParameters2), false);\n        } else if (colorScheme === 'hsla') {\n          var _regexParameters3 = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n          colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, _regexParameters3), true);\n        } else if (colorScheme === '#') {\n          colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n        }\n        if (colorInformation) {\n          result.push(colorInformation);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return result;\n}\n/**\n * Returns an array of all default document colors in the provided document\n */\nexport function computeDefaultDocumentColors(model) {\n  if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n    // Unknown caller!\n    return [];\n  }\n  return computeColors(model);\n}","map":{"version":3,"names":["Color","HSLA","_parseCaptureGroups","captureGroups","values","_iterator","_createForOfIteratorHelper","_step","s","n","done","captureGroup","value","parsedNumber","Number","replace","push","err","e","f","_toIColor","r","g","b","a","red","blue","green","alpha","_findRange","model","match","index","length","startPosition","positionAt","range","startLineNumber","lineNumber","startColumn","column","endLineNumber","endColumn","_findHexColorInformation","hexValue","parsedHexColor","Format","CSS","parseHex","color","rgba","_findRGBColorInformation","matches","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","regex","_toConsumableArray","matchAll","findMatches","computeColors","result","initialValidationRegex","initialValidationMatches","_iterator2","_step2","initialMatch","initialCaptureGroups","filter","undefined","colorScheme","colorParameters","colorInformation","regexParameters","computeDefaultDocumentColors","getValue"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/languages/defaultDocumentColorsComputer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = new Color(new HSLA(parsedRegex[0], parsedRegex[1] / 100, parsedRegex[2] / 100, isAlpha ? parsedRegex[3] : 1));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    // Early validation for RGB and HSL\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    // Potential colors have been found, validate the parameters\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Returns an array of all default document colors in the provided document\n */\nexport function computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return computeColors(model);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}