{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SuggestModel_1;\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore, dispose as _dispose } from '../../../../base/common/lifecycle.js';\nimport { getLeadingWhitespace, isHighSurrogate, isLowSurrogate } from '../../../../base/common/strings.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { WordDistance } from './wordDistance.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CompletionModel } from './completionModel.js';\nimport { CompletionOptions, getSnippetSuggestSupport, provideSuggestionItems, QuickSuggestionsOptions } from './suggest.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { FuzzyScoreOptions } from '../../../../base/common/filters.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { InlineCompletionContextKeys } from '../../inlineCompletions/browser/inlineCompletionContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nexport var LineContext = /*#__PURE__*/function () {\n  function LineContext(model, position, triggerOptions) {\n    _classCallCheck(this, LineContext);\n    this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n    this.leadingWord = model.getWordUntilPosition(position);\n    this.lineNumber = position.lineNumber;\n    this.column = position.column;\n    this.triggerOptions = triggerOptions;\n  }\n  return _createClass(LineContext, null, [{\n    key: \"shouldAutoTrigger\",\n    value: function shouldAutoTrigger(editor) {\n      if (!editor.hasModel()) {\n        return false;\n      }\n      var model = editor.getModel();\n      var pos = editor.getPosition();\n      model.tokenization.tokenizeIfCheap(pos.lineNumber);\n      var word = model.getWordAtPosition(pos);\n      if (!word) {\n        return false;\n      }\n      if (word.endColumn !== pos.column && word.startColumn + 1 !== pos.column /* after typing a single character before a word */) {\n        return false;\n      }\n      if (!isNaN(Number(word.word))) {\n        return false;\n      }\n      return true;\n    }\n  }]);\n}();\nfunction canShowQuickSuggest(editor, contextKeyService, configurationService) {\n  if (!Boolean(contextKeyService.getContextKeyValue(InlineCompletionContextKeys.inlineSuggestionVisible.key))) {\n    // Allow if there is no inline suggestion.\n    return true;\n  }\n  var suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\n  if (suppressSuggestions !== undefined) {\n    return !suppressSuggestions;\n  }\n  return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\n}\nfunction canShowSuggestOnTriggerCharacters(editor, contextKeyService, configurationService) {\n  if (!Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))) {\n    // Allow if there is no inline suggestion.\n    return true;\n  }\n  var suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\n  if (suppressSuggestions !== undefined) {\n    return !suppressSuggestions;\n  }\n  return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\n}\nvar SuggestModel = SuggestModel_1 = /*#__PURE__*/function () {\n  function SuggestModel(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService, _languageFeaturesService, _envService) {\n    var _this = this;\n    _classCallCheck(this, SuggestModel);\n    this._editor = _editor;\n    this._editorWorkerService = _editorWorkerService;\n    this._clipboardService = _clipboardService;\n    this._telemetryService = _telemetryService;\n    this._logService = _logService;\n    this._contextKeyService = _contextKeyService;\n    this._configurationService = _configurationService;\n    this._languageFeaturesService = _languageFeaturesService;\n    this._envService = _envService;\n    this._toDispose = new DisposableStore();\n    this._triggerCharacterListener = new DisposableStore();\n    this._triggerQuickSuggest = new TimeoutTimer();\n    this._triggerState = undefined;\n    this._completionDisposables = new DisposableStore();\n    this._onDidCancel = new Emitter();\n    this._onDidTrigger = new Emitter();\n    this._onDidSuggest = new Emitter();\n    this.onDidCancel = this._onDidCancel.event;\n    this.onDidTrigger = this._onDidTrigger.event;\n    this.onDidSuggest = this._onDidSuggest.event;\n    this._telemetryGate = 0;\n    this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\n    // wire up various listeners\n    this._toDispose.add(this._editor.onDidChangeModel(function () {\n      _this._updateTriggerCharacters();\n      _this.cancel();\n    }));\n    this._toDispose.add(this._editor.onDidChangeModelLanguage(function () {\n      _this._updateTriggerCharacters();\n      _this.cancel();\n    }));\n    this._toDispose.add(this._editor.onDidChangeConfiguration(function () {\n      _this._updateTriggerCharacters();\n    }));\n    this._toDispose.add(this._languageFeaturesService.completionProvider.onDidChange(function () {\n      _this._updateTriggerCharacters();\n      _this._updateActiveSuggestSession();\n    }));\n    var editorIsComposing = false;\n    this._toDispose.add(this._editor.onDidCompositionStart(function () {\n      editorIsComposing = true;\n    }));\n    this._toDispose.add(this._editor.onDidCompositionEnd(function () {\n      editorIsComposing = false;\n      _this._onCompositionEnd();\n    }));\n    this._toDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\n      // only trigger suggest when the editor isn't composing a character\n      if (!editorIsComposing) {\n        _this._onCursorChange(e);\n      }\n    }));\n    this._toDispose.add(this._editor.onDidChangeModelContent(function () {\n      // only filter completions when the editor isn't composing a character\n      // allow-any-unicode-next-line\n      // e.g. ¨ + u makes ü but just ¨ cannot be used for filtering\n      if (!editorIsComposing && _this._triggerState !== undefined) {\n        _this._refilterCompletionItems();\n      }\n    }));\n    this._updateTriggerCharacters();\n  }\n  return _createClass(SuggestModel, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _dispose(this._triggerCharacterListener);\n      _dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\n      this._toDispose.dispose();\n      this._completionDisposables.dispose();\n      this.cancel();\n    }\n  }, {\n    key: \"_updateTriggerCharacters\",\n    value: function _updateTriggerCharacters() {\n      var _this2 = this;\n      this._triggerCharacterListener.clear();\n      if (this._editor.getOption(91 /* EditorOption.readOnly */) || !this._editor.hasModel() || !this._editor.getOption(121 /* EditorOption.suggestOnTriggerCharacters */)) {\n        return;\n      }\n      var supportsByTriggerCharacter = new Map();\n      var _iterator = _createForOfIteratorHelper(this._languageFeaturesService.completionProvider.all(this._editor.getModel())),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var support = _step.value;\n          var _iterator3 = _createForOfIteratorHelper(support.triggerCharacters || []),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var ch = _step3.value;\n              var set = supportsByTriggerCharacter.get(ch);\n              if (!set) {\n                set = new Set();\n                set.add(getSnippetSuggestSupport());\n                supportsByTriggerCharacter.set(ch, set);\n              }\n              set.add(support);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var checkTriggerCharacter = function checkTriggerCharacter(text) {\n        var _a;\n        if (!canShowSuggestOnTriggerCharacters(_this2._editor, _this2._contextKeyService, _this2._configurationService)) {\n          return;\n        }\n        if (LineContext.shouldAutoTrigger(_this2._editor)) {\n          // don't trigger by trigger characters when this is a case for quick suggest\n          return;\n        }\n        if (!text) {\n          // came here from the compositionEnd-event\n          var position = _this2._editor.getPosition();\n          var model = _this2._editor.getModel();\n          text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n        }\n        var lastChar = '';\n        if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n          if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n            lastChar = text.substr(text.length - 2);\n          }\n        } else {\n          lastChar = text.charAt(text.length - 1);\n        }\n        var supports = supportsByTriggerCharacter.get(lastChar);\n        if (supports) {\n          // keep existing items that where not computed by the\n          // supports/providers that want to trigger now\n          var providerItemsToReuse = new Map();\n          if (_this2._completionModel) {\n            var _iterator2 = _createForOfIteratorHelper(_this2._completionModel.getItemsByProvider()),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _step2$value = _slicedToArray(_step2.value, 2),\n                  provider = _step2$value[0],\n                  items = _step2$value[1];\n                if (!supports.has(provider)) {\n                  providerItemsToReuse.set(provider, items);\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n          _this2.trigger({\n            auto: true,\n            triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\n            triggerCharacter: lastChar,\n            retrigger: Boolean(_this2._completionModel),\n            clipboardText: (_a = _this2._completionModel) === null || _a === void 0 ? void 0 : _a.clipboardText,\n            completionOptions: {\n              providerFilter: supports,\n              providerItemsToReuse: providerItemsToReuse\n            }\n          });\n        }\n      };\n      this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\n      this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(function () {\n        return checkTriggerCharacter();\n      }));\n    }\n    // --- trigger/retrigger/cancel suggest\n  }, {\n    key: \"state\",\n    get: function get() {\n      if (!this._triggerState) {\n        return 0 /* State.Idle */;\n      } else if (!this._triggerState.auto) {\n        return 1 /* State.Manual */;\n      } else {\n        return 2 /* State.Auto */;\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var retrigger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _a;\n      if (this._triggerState !== undefined) {\n        this._triggerQuickSuggest.cancel();\n        (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\n        this._requestToken = undefined;\n        this._triggerState = undefined;\n        this._completionModel = undefined;\n        this._context = undefined;\n        this._onDidCancel.fire({\n          retrigger: retrigger\n        });\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._completionDisposables.clear();\n    }\n  }, {\n    key: \"_updateActiveSuggestSession\",\n    value: function _updateActiveSuggestSession() {\n      if (this._triggerState !== undefined) {\n        if (!this._editor.hasModel() || !this._languageFeaturesService.completionProvider.has(this._editor.getModel())) {\n          this.cancel();\n        } else {\n          this.trigger({\n            auto: this._triggerState.auto,\n            retrigger: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_onCursorChange\",\n    value: function _onCursorChange(e) {\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      var prevSelection = this._currentSelection;\n      this._currentSelection = this._editor.getSelection();\n      if (!e.selection.isEmpty() || e.reason !== 0 /* CursorChangeReason.NotSet */ && e.reason !== 3 /* CursorChangeReason.Explicit */ || e.source !== 'keyboard' && e.source !== 'deleteLeft') {\n        // Early exit if nothing needs to be done!\n        // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n        this.cancel();\n        return;\n      }\n      if (this._triggerState === undefined && e.reason === 0 /* CursorChangeReason.NotSet */) {\n        if (prevSelection.containsRange(this._currentSelection) || prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\n          // cursor did move RIGHT due to typing -> trigger quick suggest\n          this._doTriggerQuickSuggest();\n        }\n      } else if (this._triggerState !== undefined && e.reason === 3 /* CursorChangeReason.Explicit */) {\n        // suggest is active and something like cursor keys are used to move\n        // the cursor. this means we can refilter at the new position\n        this._refilterCompletionItems();\n      }\n    }\n  }, {\n    key: \"_onCompositionEnd\",\n    value: function _onCompositionEnd() {\n      // trigger or refilter when composition ends\n      if (this._triggerState === undefined) {\n        this._doTriggerQuickSuggest();\n      } else {\n        this._refilterCompletionItems();\n      }\n    }\n  }, {\n    key: \"_doTriggerQuickSuggest\",\n    value: function _doTriggerQuickSuggest() {\n      var _this3 = this;\n      var _a;\n      if (QuickSuggestionsOptions.isAllOff(this._editor.getOption(89 /* EditorOption.quickSuggestions */))) {\n        // not enabled\n        return;\n      }\n      if (this._editor.getOption(118 /* EditorOption.suggest */).snippetsPreventQuickSuggestions && ((_a = SnippetController2.get(this._editor)) === null || _a === void 0 ? void 0 : _a.isInSnippet())) {\n        // no quick suggestion when in snippet mode\n        return;\n      }\n      this.cancel();\n      this._triggerQuickSuggest.cancelAndSet(function () {\n        if (_this3._triggerState !== undefined) {\n          return;\n        }\n        if (!LineContext.shouldAutoTrigger(_this3._editor)) {\n          return;\n        }\n        if (!_this3._editor.hasModel() || !_this3._editor.hasWidgetFocus()) {\n          return;\n        }\n        var model = _this3._editor.getModel();\n        var pos = _this3._editor.getPosition();\n        // validate enabled now\n        var config = _this3._editor.getOption(89 /* EditorOption.quickSuggestions */);\n        if (QuickSuggestionsOptions.isAllOff(config)) {\n          return;\n        }\n        if (!QuickSuggestionsOptions.isAllOn(config)) {\n          // Check the type of the token that triggered this\n          model.tokenization.tokenizeIfCheap(pos.lineNumber);\n          var lineTokens = model.tokenization.getLineTokens(pos.lineNumber);\n          var tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\n          if (QuickSuggestionsOptions.valueFor(config, tokenType) !== 'on') {\n            return;\n          }\n        }\n        if (!canShowQuickSuggest(_this3._editor, _this3._contextKeyService, _this3._configurationService)) {\n          // do not trigger quick suggestions if inline suggestions are shown\n          return;\n        }\n        if (!_this3._languageFeaturesService.completionProvider.has(model)) {\n          return;\n        }\n        // we made it till here -> trigger now\n        _this3.trigger({\n          auto: true\n        });\n      }, this._editor.getOption(90 /* EditorOption.quickSuggestionsDelay */));\n    }\n  }, {\n    key: \"_refilterCompletionItems\",\n    value: function _refilterCompletionItems() {\n      assertType(this._editor.hasModel());\n      assertType(this._triggerState !== undefined);\n      var model = this._editor.getModel();\n      var position = this._editor.getPosition();\n      var ctx = new LineContext(model, position, _objectSpread(_objectSpread({}, this._triggerState), {}, {\n        refilter: true\n      }));\n      this._onNewContext(ctx);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(options) {\n      var _this4 = this;\n      var _a, _b, _c, _d, _e, _f;\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      var model = this._editor.getModel();\n      var ctx = new LineContext(model, this._editor.getPosition(), options);\n      // Cancel previous requests, change state & update UI\n      this.cancel(options.retrigger);\n      this._triggerState = options;\n      this._onDidTrigger.fire({\n        auto: options.auto,\n        shy: (_a = options.shy) !== null && _a !== void 0 ? _a : false,\n        position: this._editor.getPosition()\n      });\n      // Capture context when request was sent\n      this._context = ctx;\n      // Build context for request\n      var suggestCtx = {\n        triggerKind: (_b = options.triggerKind) !== null && _b !== void 0 ? _b : 0 /* CompletionTriggerKind.Invoke */\n      };\n      if (options.triggerCharacter) {\n        suggestCtx = {\n          triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\n          triggerCharacter: options.triggerCharacter\n        };\n      }\n      this._requestToken = new CancellationTokenSource();\n      // kind filter and snippet sort rules\n      var snippetSuggestions = this._editor.getOption(112 /* EditorOption.snippetSuggestions */);\n      var snippetSortOrder = 1 /* SnippetSortOrder.Inline */;\n      switch (snippetSuggestions) {\n        case 'top':\n          snippetSortOrder = 0 /* SnippetSortOrder.Top */;\n          break;\n        // \t↓ that's the default anyways...\n        // case 'inline':\n        // \tsnippetSortOrder = SnippetSortOrder.Inline;\n        // \tbreak;\n        case 'bottom':\n          snippetSortOrder = 2 /* SnippetSortOrder.Bottom */;\n          break;\n      }\n      var _SuggestModel_1$creat = SuggestModel_1.createSuggestFilter(this._editor),\n        itemKindFilter = _SuggestModel_1$creat.itemKind,\n        showDeprecated = _SuggestModel_1$creat.showDeprecated;\n      var completionOptions = new CompletionOptions(snippetSortOrder, (_d = (_c = options.completionOptions) === null || _c === void 0 ? void 0 : _c.kindFilter) !== null && _d !== void 0 ? _d : itemKindFilter, (_e = options.completionOptions) === null || _e === void 0 ? void 0 : _e.providerFilter, (_f = options.completionOptions) === null || _f === void 0 ? void 0 : _f.providerItemsToReuse, showDeprecated);\n      var wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\n      var completions = provideSuggestionItems(this._languageFeaturesService.completionProvider, model, this._editor.getPosition(), completionOptions, suggestCtx, this._requestToken.token);\n      Promise.all([completions, wordDistance]).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n          var _ref3, completions, wordDistance, _a, clipboardText, model, ctx, fuzzySearchOptions, _iterator4, _step4, item;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _ref3 = _slicedToArray(_ref, 2), completions = _ref3[0], wordDistance = _ref3[1];\n                (_a = _this4._requestToken) === null || _a === void 0 ? void 0 : _a.dispose();\n                if (_this4._editor.hasModel()) {\n                  _context.next = 4;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 4:\n                clipboardText = options === null || options === void 0 ? void 0 : options.clipboardText;\n                if (!(!clipboardText && completions.needsClipboard)) {\n                  _context.next = 9;\n                  break;\n                }\n                _context.next = 8;\n                return _this4._clipboardService.readText();\n              case 8:\n                clipboardText = _context.sent;\n              case 9:\n                if (!(_this4._triggerState === undefined)) {\n                  _context.next = 11;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 11:\n                model = _this4._editor.getModel(); // const items = completions.items;\n                // if (existing) {\n                // \tconst cmpFn = getSuggestionComparator(snippetSortOrder);\n                // \titems = items.concat(existing.items).sort(cmpFn);\n                // }\n                ctx = new LineContext(model, _this4._editor.getPosition(), options);\n                fuzzySearchOptions = _objectSpread(_objectSpread({}, FuzzyScoreOptions[\"default\"]), {}, {\n                  firstMatchCanBeWeak: !_this4._editor.getOption(118 /* EditorOption.suggest */).matchOnWordStartOnly\n                });\n                _this4._completionModel = new CompletionModel(completions.items, _this4._context.column, {\n                  leadingLineContent: ctx.leadingLineContent,\n                  characterCountDelta: ctx.column - _this4._context.column\n                }, wordDistance, _this4._editor.getOption(118 /* EditorOption.suggest */), _this4._editor.getOption(112 /* EditorOption.snippetSuggestions */), fuzzySearchOptions, clipboardText);\n                // store containers so that they can be disposed later\n                _this4._completionDisposables.add(completions.disposable);\n                _this4._onNewContext(ctx);\n                // finally report telemetry about durations\n                _this4._reportDurationsTelemetry(completions.durations);\n                // report invalid completions by source\n                if (!_this4._envService.isBuilt || _this4._envService.isExtensionDevelopment) {\n                  _iterator4 = _createForOfIteratorHelper(completions.items);\n                  try {\n                    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                      item = _step4.value;\n                      if (item.isInvalid) {\n                        _this4._logService.warn(\"[suggest] did IGNORE invalid completion item from \".concat(item.provider._debugDisplayName), item.completion);\n                      }\n                    }\n                  } catch (err) {\n                    _iterator4.e(err);\n                  } finally {\n                    _iterator4.f();\n                  }\n                }\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }())[\"catch\"](onUnexpectedError);\n    }\n  }, {\n    key: \"_reportDurationsTelemetry\",\n    value: function _reportDurationsTelemetry(durations) {\n      var _this5 = this;\n      if (this._telemetryGate++ % 230 !== 0) {\n        return;\n      }\n      setTimeout(function () {\n        _this5._telemetryService.publicLog2('suggest.durations.json', {\n          data: JSON.stringify(durations)\n        });\n        _this5._logService.debug('suggest.durations.json', durations);\n      });\n    }\n  }, {\n    key: \"_onNewContext\",\n    value: function _onNewContext(ctx) {\n      if (!this._context) {\n        // happens when 24x7 IntelliSense is enabled and still in its delay\n        return;\n      }\n      if (ctx.lineNumber !== this._context.lineNumber) {\n        // e.g. happens when pressing Enter while IntelliSense is computed\n        this.cancel();\n        return;\n      }\n      if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\n        // cancel IntelliSense when line start changes\n        // happens when the current word gets outdented\n        this.cancel();\n        return;\n      }\n      if (ctx.column < this._context.column) {\n        // typed -> moved cursor LEFT -> retrigger if still on a word\n        if (ctx.leadingWord.word) {\n          this.trigger({\n            auto: this._context.triggerOptions.auto,\n            retrigger: true\n          });\n        } else {\n          this.cancel();\n        }\n        return;\n      }\n      if (!this._completionModel) {\n        // happens when IntelliSense is not yet computed\n        return;\n      }\n      if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\n        // started a new word while IntelliSense shows -> retrigger but reuse all items that we currently have\n        var shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n        if (shouldAutoTrigger && this._context) {\n          // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n          // suggestions to be cancelled, which causes `this._context` to be undefined\n          var map = this._completionModel.getItemsByProvider();\n          this.trigger({\n            auto: this._context.triggerOptions.auto,\n            retrigger: true,\n            clipboardText: this._completionModel.clipboardText,\n            completionOptions: {\n              providerItemsToReuse: map\n            }\n          });\n        }\n        return;\n      }\n      if (ctx.column > this._context.column && this._completionModel.getIncompleteProvider().size > 0 && ctx.leadingWord.word.length !== 0) {\n        // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n        var providerItemsToReuse = new Map();\n        var providerFilter = new Set();\n        var _iterator5 = _createForOfIteratorHelper(this._completionModel.getItemsByProvider()),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _step5$value = _slicedToArray(_step5.value, 2),\n              provider = _step5$value[0],\n              items = _step5$value[1];\n            if (items.length > 0 && items[0].container.incomplete) {\n              providerFilter.add(provider);\n            } else {\n              providerItemsToReuse.set(provider, items);\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n        this.trigger({\n          auto: this._context.triggerOptions.auto,\n          triggerKind: 2 /* CompletionTriggerKind.TriggerForIncompleteCompletions */,\n          retrigger: true,\n          clipboardText: this._completionModel.clipboardText,\n          completionOptions: {\n            providerFilter: providerFilter,\n            providerItemsToReuse: providerItemsToReuse\n          }\n        });\n      } else {\n        // typed -> moved cursor RIGHT -> update UI\n        var oldLineContext = this._completionModel.lineContext;\n        var isFrozen = false;\n        this._completionModel.lineContext = {\n          leadingLineContent: ctx.leadingLineContent,\n          characterCountDelta: ctx.column - this._context.column\n        };\n        if (this._completionModel.items.length === 0) {\n          var _shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n          if (!this._context) {\n            // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n            // suggestions to be cancelled, which causes `this._context` to be undefined\n            this.cancel();\n            return;\n          }\n          if (_shouldAutoTrigger && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\n            // retrigger when heading into a new word\n            this.trigger({\n              auto: this._context.triggerOptions.auto,\n              retrigger: true\n            });\n            return;\n          }\n          if (!this._context.triggerOptions.auto) {\n            // freeze when IntelliSense was manually requested\n            this._completionModel.lineContext = oldLineContext;\n            isFrozen = this._completionModel.items.length > 0;\n            if (isFrozen && ctx.leadingWord.word.length === 0) {\n              // there were results before but now there aren't\n              // and also we are not on a word anymore -> cancel\n              this.cancel();\n              return;\n            }\n          } else {\n            // nothing left\n            this.cancel();\n            return;\n          }\n        }\n        this._onDidSuggest.fire({\n          completionModel: this._completionModel,\n          triggerOptions: ctx.triggerOptions,\n          isFrozen: isFrozen\n        });\n      }\n    }\n  }], [{\n    key: \"createSuggestFilter\",\n    value: function createSuggestFilter(editor) {\n      // kind filter and snippet sort rules\n      var result = new Set();\n      // snippet setting\n      var snippetSuggestions = editor.getOption(112 /* EditorOption.snippetSuggestions */);\n      if (snippetSuggestions === 'none') {\n        result.add(27 /* CompletionItemKind.Snippet */);\n      }\n      // type setting\n      var suggestOptions = editor.getOption(118 /* EditorOption.suggest */);\n      if (!suggestOptions.showMethods) {\n        result.add(0 /* CompletionItemKind.Method */);\n      }\n      if (!suggestOptions.showFunctions) {\n        result.add(1 /* CompletionItemKind.Function */);\n      }\n      if (!suggestOptions.showConstructors) {\n        result.add(2 /* CompletionItemKind.Constructor */);\n      }\n      if (!suggestOptions.showFields) {\n        result.add(3 /* CompletionItemKind.Field */);\n      }\n      if (!suggestOptions.showVariables) {\n        result.add(4 /* CompletionItemKind.Variable */);\n      }\n      if (!suggestOptions.showClasses) {\n        result.add(5 /* CompletionItemKind.Class */);\n      }\n      if (!suggestOptions.showStructs) {\n        result.add(6 /* CompletionItemKind.Struct */);\n      }\n      if (!suggestOptions.showInterfaces) {\n        result.add(7 /* CompletionItemKind.Interface */);\n      }\n      if (!suggestOptions.showModules) {\n        result.add(8 /* CompletionItemKind.Module */);\n      }\n      if (!suggestOptions.showProperties) {\n        result.add(9 /* CompletionItemKind.Property */);\n      }\n      if (!suggestOptions.showEvents) {\n        result.add(10 /* CompletionItemKind.Event */);\n      }\n      if (!suggestOptions.showOperators) {\n        result.add(11 /* CompletionItemKind.Operator */);\n      }\n      if (!suggestOptions.showUnits) {\n        result.add(12 /* CompletionItemKind.Unit */);\n      }\n      if (!suggestOptions.showValues) {\n        result.add(13 /* CompletionItemKind.Value */);\n      }\n      if (!suggestOptions.showConstants) {\n        result.add(14 /* CompletionItemKind.Constant */);\n      }\n      if (!suggestOptions.showEnums) {\n        result.add(15 /* CompletionItemKind.Enum */);\n      }\n      if (!suggestOptions.showEnumMembers) {\n        result.add(16 /* CompletionItemKind.EnumMember */);\n      }\n      if (!suggestOptions.showKeywords) {\n        result.add(17 /* CompletionItemKind.Keyword */);\n      }\n      if (!suggestOptions.showWords) {\n        result.add(18 /* CompletionItemKind.Text */);\n      }\n      if (!suggestOptions.showColors) {\n        result.add(19 /* CompletionItemKind.Color */);\n      }\n      if (!suggestOptions.showFiles) {\n        result.add(20 /* CompletionItemKind.File */);\n      }\n      if (!suggestOptions.showReferences) {\n        result.add(21 /* CompletionItemKind.Reference */);\n      }\n      if (!suggestOptions.showColors) {\n        result.add(22 /* CompletionItemKind.Customcolor */);\n      }\n      if (!suggestOptions.showFolders) {\n        result.add(23 /* CompletionItemKind.Folder */);\n      }\n      if (!suggestOptions.showTypeParameters) {\n        result.add(24 /* CompletionItemKind.TypeParameter */);\n      }\n      if (!suggestOptions.showSnippets) {\n        result.add(27 /* CompletionItemKind.Snippet */);\n      }\n      if (!suggestOptions.showUsers) {\n        result.add(25 /* CompletionItemKind.User */);\n      }\n      if (!suggestOptions.showIssues) {\n        result.add(26 /* CompletionItemKind.Issue */);\n      }\n      return {\n        itemKind: result,\n        showDeprecated: suggestOptions.showDeprecated\n      };\n    }\n  }]);\n}();\nSuggestModel = SuggestModel_1 = __decorate([__param(1, IEditorWorkerService), __param(2, IClipboardService), __param(3, ITelemetryService), __param(4, ILogService), __param(5, IContextKeyService), __param(6, IConfigurationService), __param(7, ILanguageFeaturesService), __param(8, IEnvironmentService)], SuggestModel);\nexport { SuggestModel };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","SuggestModel_1","TimeoutTimer","CancellationTokenSource","onUnexpectedError","Emitter","DisposableStore","dispose","getLeadingWhitespace","isHighSurrogate","isLowSurrogate","Selection","IEditorWorkerService","WordDistance","IClipboardService","IConfigurationService","IContextKeyService","ILogService","ITelemetryService","CompletionModel","CompletionOptions","getSnippetSuggestSupport","provideSuggestionItems","QuickSuggestionsOptions","ILanguageFeaturesService","FuzzyScoreOptions","assertType","InlineCompletionContextKeys","SnippetController2","IEnvironmentService","LineContext","model","position","triggerOptions","_classCallCheck","leadingLineContent","getLineContent","lineNumber","substr","column","leadingWord","getWordUntilPosition","_createClass","value","shouldAutoTrigger","editor","hasModel","getModel","pos","getPosition","tokenization","tokenizeIfCheap","word","getWordAtPosition","endColumn","startColumn","isNaN","Number","canShowQuickSuggest","contextKeyService","configurationService","Boolean","getContextKeyValue","inlineSuggestionVisible","suppressSuggestions","undefined","getOption","canShowSuggestOnTriggerCharacters","SuggestModel","_editor","_editorWorkerService","_clipboardService","_telemetryService","_logService","_contextKeyService","_configurationService","_languageFeaturesService","_envService","_this","_toDispose","_triggerCharacterListener","_triggerQuickSuggest","_triggerState","_completionDisposables","_onDidCancel","_onDidTrigger","_onDidSuggest","onDidCancel","event","onDidTrigger","onDidSuggest","_telemetryGate","_currentSelection","getSelection","add","onDidChangeModel","_updateTriggerCharacters","cancel","onDidChangeModelLanguage","onDidChangeConfiguration","completionProvider","onDidChange","_updateActiveSuggestSession","editorIsComposing","onDidCompositionStart","onDidCompositionEnd","_onCompositionEnd","onDidChangeCursorSelection","e","_onCursorChange","onDidChangeModelContent","_refilterCompletionItems","_this2","clear","supportsByTriggerCharacter","Map","_iterator","_createForOfIteratorHelper","all","_step","s","n","done","support","_iterator3","triggerCharacters","_step3","ch","set","get","Set","err","f","checkTriggerCharacter","text","_a","lastChar","charCodeAt","charAt","supports","providerItemsToReuse","_completionModel","_iterator2","getItemsByProvider","_step2","_step2$value","_slicedToArray","provider","items","has","trigger","auto","triggerKind","triggerCharacter","retrigger","clipboardText","completionOptions","providerFilter","onDidType","_requestToken","_context","fire","prevSelection","selection","isEmpty","reason","source","containsRange","getEndPosition","isBeforeOrEqual","_doTriggerQuickSuggest","_this3","isAllOff","snippetsPreventQuickSuggestions","isInSnippet","cancelAndSet","hasWidgetFocus","config","isAllOn","lineTokens","getLineTokens","tokenType","getStandardTokenType","findTokenIndexAtOffset","Math","max","valueFor","ctx","_objectSpread","refilter","_onNewContext","options","_this4","_b","_c","_d","_e","_f","shy","suggestCtx","snippetSuggestions","snippetSortOrder","_SuggestModel_1$creat","createSuggestFilter","itemKindFilter","itemKind","showDeprecated","kindFilter","wordDistance","create","completions","token","Promise","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref3","fuzzySearchOptions","_iterator4","_step4","item","wrap","_callee$","prev","next","abrupt","needsClipboard","readText","sent","firstMatchCanBeWeak","matchOnWordStartOnly","characterCountDelta","disposable","_reportDurationsTelemetry","durations","isBuilt","isExtensionDevelopment","isInvalid","warn","concat","_debugDisplayName","completion","stop","_x","apply","_this5","setTimeout","publicLog2","data","JSON","stringify","debug","map","getIncompleteProvider","size","_iterator5","_step5","_step5$value","container","incomplete","oldLineContext","lineContext","isFrozen","completionModel","result","suggestOptions","showMethods","showFunctions","showConstructors","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showSnippets","showUsers","showIssues"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestModel_1;\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { getLeadingWhitespace, isHighSurrogate, isLowSurrogate } from '../../../../base/common/strings.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { WordDistance } from './wordDistance.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CompletionModel } from './completionModel.js';\nimport { CompletionOptions, getSnippetSuggestSupport, provideSuggestionItems, QuickSuggestionsOptions } from './suggest.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { FuzzyScoreOptions } from '../../../../base/common/filters.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { InlineCompletionContextKeys } from '../../inlineCompletions/browser/inlineCompletionContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nexport class LineContext {\n    static shouldAutoTrigger(editor) {\n        if (!editor.hasModel()) {\n            return false;\n        }\n        const model = editor.getModel();\n        const pos = editor.getPosition();\n        model.tokenization.tokenizeIfCheap(pos.lineNumber);\n        const word = model.getWordAtPosition(pos);\n        if (!word) {\n            return false;\n        }\n        if (word.endColumn !== pos.column &&\n            word.startColumn + 1 !== pos.column /* after typing a single character before a word */) {\n            return false;\n        }\n        if (!isNaN(Number(word.word))) {\n            return false;\n        }\n        return true;\n    }\n    constructor(model, position, triggerOptions) {\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n        this.leadingWord = model.getWordUntilPosition(position);\n        this.lineNumber = position.lineNumber;\n        this.column = position.column;\n        this.triggerOptions = triggerOptions;\n    }\n}\nfunction canShowQuickSuggest(editor, contextKeyService, configurationService) {\n    if (!Boolean(contextKeyService.getContextKeyValue(InlineCompletionContextKeys.inlineSuggestionVisible.key))) {\n        // Allow if there is no inline suggestion.\n        return true;\n    }\n    const suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\n    if (suppressSuggestions !== undefined) {\n        return !suppressSuggestions;\n    }\n    return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\n}\nfunction canShowSuggestOnTriggerCharacters(editor, contextKeyService, configurationService) {\n    if (!Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))) {\n        // Allow if there is no inline suggestion.\n        return true;\n    }\n    const suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\n    if (suppressSuggestions !== undefined) {\n        return !suppressSuggestions;\n    }\n    return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\n}\nlet SuggestModel = SuggestModel_1 = class SuggestModel {\n    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService, _languageFeaturesService, _envService) {\n        this._editor = _editor;\n        this._editorWorkerService = _editorWorkerService;\n        this._clipboardService = _clipboardService;\n        this._telemetryService = _telemetryService;\n        this._logService = _logService;\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._envService = _envService;\n        this._toDispose = new DisposableStore();\n        this._triggerCharacterListener = new DisposableStore();\n        this._triggerQuickSuggest = new TimeoutTimer();\n        this._triggerState = undefined;\n        this._completionDisposables = new DisposableStore();\n        this._onDidCancel = new Emitter();\n        this._onDidTrigger = new Emitter();\n        this._onDidSuggest = new Emitter();\n        this.onDidCancel = this._onDidCancel.event;\n        this.onDidTrigger = this._onDidTrigger.event;\n        this.onDidSuggest = this._onDidSuggest.event;\n        this._telemetryGate = 0;\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\n        // wire up various listeners\n        this._toDispose.add(this._editor.onDidChangeModel(() => {\n            this._updateTriggerCharacters();\n            this.cancel();\n        }));\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\n            this._updateTriggerCharacters();\n            this.cancel();\n        }));\n        this._toDispose.add(this._editor.onDidChangeConfiguration(() => {\n            this._updateTriggerCharacters();\n        }));\n        this._toDispose.add(this._languageFeaturesService.completionProvider.onDidChange(() => {\n            this._updateTriggerCharacters();\n            this._updateActiveSuggestSession();\n        }));\n        let editorIsComposing = false;\n        this._toDispose.add(this._editor.onDidCompositionStart(() => {\n            editorIsComposing = true;\n        }));\n        this._toDispose.add(this._editor.onDidCompositionEnd(() => {\n            editorIsComposing = false;\n            this._onCompositionEnd();\n        }));\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\n            // only trigger suggest when the editor isn't composing a character\n            if (!editorIsComposing) {\n                this._onCursorChange(e);\n            }\n        }));\n        this._toDispose.add(this._editor.onDidChangeModelContent(() => {\n            // only filter completions when the editor isn't composing a character\n            // allow-any-unicode-next-line\n            // e.g. ¨ + u makes ü but just ¨ cannot be used for filtering\n            if (!editorIsComposing && this._triggerState !== undefined) {\n                this._refilterCompletionItems();\n            }\n        }));\n        this._updateTriggerCharacters();\n    }\n    dispose() {\n        dispose(this._triggerCharacterListener);\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\n        this._toDispose.dispose();\n        this._completionDisposables.dispose();\n        this.cancel();\n    }\n    _updateTriggerCharacters() {\n        this._triggerCharacterListener.clear();\n        if (this._editor.getOption(91 /* EditorOption.readOnly */)\n            || !this._editor.hasModel()\n            || !this._editor.getOption(121 /* EditorOption.suggestOnTriggerCharacters */)) {\n            return;\n        }\n        const supportsByTriggerCharacter = new Map();\n        for (const support of this._languageFeaturesService.completionProvider.all(this._editor.getModel())) {\n            for (const ch of support.triggerCharacters || []) {\n                let set = supportsByTriggerCharacter.get(ch);\n                if (!set) {\n                    set = new Set();\n                    set.add(getSnippetSuggestSupport());\n                    supportsByTriggerCharacter.set(ch, set);\n                }\n                set.add(support);\n            }\n        }\n        const checkTriggerCharacter = (text) => {\n            var _a;\n            if (!canShowSuggestOnTriggerCharacters(this._editor, this._contextKeyService, this._configurationService)) {\n                return;\n            }\n            if (LineContext.shouldAutoTrigger(this._editor)) {\n                // don't trigger by trigger characters when this is a case for quick suggest\n                return;\n            }\n            if (!text) {\n                // came here from the compositionEnd-event\n                const position = this._editor.getPosition();\n                const model = this._editor.getModel();\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n            }\n            let lastChar = '';\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n                    lastChar = text.substr(text.length - 2);\n                }\n            }\n            else {\n                lastChar = text.charAt(text.length - 1);\n            }\n            const supports = supportsByTriggerCharacter.get(lastChar);\n            if (supports) {\n                // keep existing items that where not computed by the\n                // supports/providers that want to trigger now\n                const providerItemsToReuse = new Map();\n                if (this._completionModel) {\n                    for (const [provider, items] of this._completionModel.getItemsByProvider()) {\n                        if (!supports.has(provider)) {\n                            providerItemsToReuse.set(provider, items);\n                        }\n                    }\n                }\n                this.trigger({\n                    auto: true,\n                    triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\n                    triggerCharacter: lastChar,\n                    retrigger: Boolean(this._completionModel),\n                    clipboardText: (_a = this._completionModel) === null || _a === void 0 ? void 0 : _a.clipboardText,\n                    completionOptions: { providerFilter: supports, providerItemsToReuse }\n                });\n            }\n        };\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(() => checkTriggerCharacter()));\n    }\n    // --- trigger/retrigger/cancel suggest\n    get state() {\n        if (!this._triggerState) {\n            return 0 /* State.Idle */;\n        }\n        else if (!this._triggerState.auto) {\n            return 1 /* State.Manual */;\n        }\n        else {\n            return 2 /* State.Auto */;\n        }\n    }\n    cancel(retrigger = false) {\n        var _a;\n        if (this._triggerState !== undefined) {\n            this._triggerQuickSuggest.cancel();\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._requestToken = undefined;\n            this._triggerState = undefined;\n            this._completionModel = undefined;\n            this._context = undefined;\n            this._onDidCancel.fire({ retrigger });\n        }\n    }\n    clear() {\n        this._completionDisposables.clear();\n    }\n    _updateActiveSuggestSession() {\n        if (this._triggerState !== undefined) {\n            if (!this._editor.hasModel() || !this._languageFeaturesService.completionProvider.has(this._editor.getModel())) {\n                this.cancel();\n            }\n            else {\n                this.trigger({ auto: this._triggerState.auto, retrigger: true });\n            }\n        }\n    }\n    _onCursorChange(e) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const prevSelection = this._currentSelection;\n        this._currentSelection = this._editor.getSelection();\n        if (!e.selection.isEmpty()\n            || (e.reason !== 0 /* CursorChangeReason.NotSet */ && e.reason !== 3 /* CursorChangeReason.Explicit */)\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\n            // Early exit if nothing needs to be done!\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n            this.cancel();\n            return;\n        }\n        if (this._triggerState === undefined && e.reason === 0 /* CursorChangeReason.NotSet */) {\n            if (prevSelection.containsRange(this._currentSelection) || prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\n                // cursor did move RIGHT due to typing -> trigger quick suggest\n                this._doTriggerQuickSuggest();\n            }\n        }\n        else if (this._triggerState !== undefined && e.reason === 3 /* CursorChangeReason.Explicit */) {\n            // suggest is active and something like cursor keys are used to move\n            // the cursor. this means we can refilter at the new position\n            this._refilterCompletionItems();\n        }\n    }\n    _onCompositionEnd() {\n        // trigger or refilter when composition ends\n        if (this._triggerState === undefined) {\n            this._doTriggerQuickSuggest();\n        }\n        else {\n            this._refilterCompletionItems();\n        }\n    }\n    _doTriggerQuickSuggest() {\n        var _a;\n        if (QuickSuggestionsOptions.isAllOff(this._editor.getOption(89 /* EditorOption.quickSuggestions */))) {\n            // not enabled\n            return;\n        }\n        if (this._editor.getOption(118 /* EditorOption.suggest */).snippetsPreventQuickSuggestions && ((_a = SnippetController2.get(this._editor)) === null || _a === void 0 ? void 0 : _a.isInSnippet())) {\n            // no quick suggestion when in snippet mode\n            return;\n        }\n        this.cancel();\n        this._triggerQuickSuggest.cancelAndSet(() => {\n            if (this._triggerState !== undefined) {\n                return;\n            }\n            if (!LineContext.shouldAutoTrigger(this._editor)) {\n                return;\n            }\n            if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n                return;\n            }\n            const model = this._editor.getModel();\n            const pos = this._editor.getPosition();\n            // validate enabled now\n            const config = this._editor.getOption(89 /* EditorOption.quickSuggestions */);\n            if (QuickSuggestionsOptions.isAllOff(config)) {\n                return;\n            }\n            if (!QuickSuggestionsOptions.isAllOn(config)) {\n                // Check the type of the token that triggered this\n                model.tokenization.tokenizeIfCheap(pos.lineNumber);\n                const lineTokens = model.tokenization.getLineTokens(pos.lineNumber);\n                const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\n                if (QuickSuggestionsOptions.valueFor(config, tokenType) !== 'on') {\n                    return;\n                }\n            }\n            if (!canShowQuickSuggest(this._editor, this._contextKeyService, this._configurationService)) {\n                // do not trigger quick suggestions if inline suggestions are shown\n                return;\n            }\n            if (!this._languageFeaturesService.completionProvider.has(model)) {\n                return;\n            }\n            // we made it till here -> trigger now\n            this.trigger({ auto: true });\n        }, this._editor.getOption(90 /* EditorOption.quickSuggestionsDelay */));\n    }\n    _refilterCompletionItems() {\n        assertType(this._editor.hasModel());\n        assertType(this._triggerState !== undefined);\n        const model = this._editor.getModel();\n        const position = this._editor.getPosition();\n        const ctx = new LineContext(model, position, { ...this._triggerState, refilter: true });\n        this._onNewContext(ctx);\n    }\n    trigger(options) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const ctx = new LineContext(model, this._editor.getPosition(), options);\n        // Cancel previous requests, change state & update UI\n        this.cancel(options.retrigger);\n        this._triggerState = options;\n        this._onDidTrigger.fire({ auto: options.auto, shy: (_a = options.shy) !== null && _a !== void 0 ? _a : false, position: this._editor.getPosition() });\n        // Capture context when request was sent\n        this._context = ctx;\n        // Build context for request\n        let suggestCtx = { triggerKind: (_b = options.triggerKind) !== null && _b !== void 0 ? _b : 0 /* CompletionTriggerKind.Invoke */ };\n        if (options.triggerCharacter) {\n            suggestCtx = {\n                triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\n                triggerCharacter: options.triggerCharacter\n            };\n        }\n        this._requestToken = new CancellationTokenSource();\n        // kind filter and snippet sort rules\n        const snippetSuggestions = this._editor.getOption(112 /* EditorOption.snippetSuggestions */);\n        let snippetSortOrder = 1 /* SnippetSortOrder.Inline */;\n        switch (snippetSuggestions) {\n            case 'top':\n                snippetSortOrder = 0 /* SnippetSortOrder.Top */;\n                break;\n            // \t↓ that's the default anyways...\n            // case 'inline':\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\n            // \tbreak;\n            case 'bottom':\n                snippetSortOrder = 2 /* SnippetSortOrder.Bottom */;\n                break;\n        }\n        const { itemKind: itemKindFilter, showDeprecated } = SuggestModel_1.createSuggestFilter(this._editor);\n        const completionOptions = new CompletionOptions(snippetSortOrder, (_d = (_c = options.completionOptions) === null || _c === void 0 ? void 0 : _c.kindFilter) !== null && _d !== void 0 ? _d : itemKindFilter, (_e = options.completionOptions) === null || _e === void 0 ? void 0 : _e.providerFilter, (_f = options.completionOptions) === null || _f === void 0 ? void 0 : _f.providerItemsToReuse, showDeprecated);\n        const wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\n        const completions = provideSuggestionItems(this._languageFeaturesService.completionProvider, model, this._editor.getPosition(), completionOptions, suggestCtx, this._requestToken.token);\n        Promise.all([completions, wordDistance]).then(async ([completions, wordDistance]) => {\n            var _a;\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.dispose();\n            if (!this._editor.hasModel()) {\n                return;\n            }\n            let clipboardText = options === null || options === void 0 ? void 0 : options.clipboardText;\n            if (!clipboardText && completions.needsClipboard) {\n                clipboardText = await this._clipboardService.readText();\n            }\n            if (this._triggerState === undefined) {\n                return;\n            }\n            const model = this._editor.getModel();\n            // const items = completions.items;\n            // if (existing) {\n            // \tconst cmpFn = getSuggestionComparator(snippetSortOrder);\n            // \titems = items.concat(existing.items).sort(cmpFn);\n            // }\n            const ctx = new LineContext(model, this._editor.getPosition(), options);\n            const fuzzySearchOptions = {\n                ...FuzzyScoreOptions.default,\n                firstMatchCanBeWeak: !this._editor.getOption(118 /* EditorOption.suggest */).matchOnWordStartOnly\n            };\n            this._completionModel = new CompletionModel(completions.items, this._context.column, {\n                leadingLineContent: ctx.leadingLineContent,\n                characterCountDelta: ctx.column - this._context.column\n            }, wordDistance, this._editor.getOption(118 /* EditorOption.suggest */), this._editor.getOption(112 /* EditorOption.snippetSuggestions */), fuzzySearchOptions, clipboardText);\n            // store containers so that they can be disposed later\n            this._completionDisposables.add(completions.disposable);\n            this._onNewContext(ctx);\n            // finally report telemetry about durations\n            this._reportDurationsTelemetry(completions.durations);\n            // report invalid completions by source\n            if (!this._envService.isBuilt || this._envService.isExtensionDevelopment) {\n                for (const item of completions.items) {\n                    if (item.isInvalid) {\n                        this._logService.warn(`[suggest] did IGNORE invalid completion item from ${item.provider._debugDisplayName}`, item.completion);\n                    }\n                }\n            }\n        }).catch(onUnexpectedError);\n    }\n    _reportDurationsTelemetry(durations) {\n        if (this._telemetryGate++ % 230 !== 0) {\n            return;\n        }\n        setTimeout(() => {\n            this._telemetryService.publicLog2('suggest.durations.json', { data: JSON.stringify(durations) });\n            this._logService.debug('suggest.durations.json', durations);\n        });\n    }\n    static createSuggestFilter(editor) {\n        // kind filter and snippet sort rules\n        const result = new Set();\n        // snippet setting\n        const snippetSuggestions = editor.getOption(112 /* EditorOption.snippetSuggestions */);\n        if (snippetSuggestions === 'none') {\n            result.add(27 /* CompletionItemKind.Snippet */);\n        }\n        // type setting\n        const suggestOptions = editor.getOption(118 /* EditorOption.suggest */);\n        if (!suggestOptions.showMethods) {\n            result.add(0 /* CompletionItemKind.Method */);\n        }\n        if (!suggestOptions.showFunctions) {\n            result.add(1 /* CompletionItemKind.Function */);\n        }\n        if (!suggestOptions.showConstructors) {\n            result.add(2 /* CompletionItemKind.Constructor */);\n        }\n        if (!suggestOptions.showFields) {\n            result.add(3 /* CompletionItemKind.Field */);\n        }\n        if (!suggestOptions.showVariables) {\n            result.add(4 /* CompletionItemKind.Variable */);\n        }\n        if (!suggestOptions.showClasses) {\n            result.add(5 /* CompletionItemKind.Class */);\n        }\n        if (!suggestOptions.showStructs) {\n            result.add(6 /* CompletionItemKind.Struct */);\n        }\n        if (!suggestOptions.showInterfaces) {\n            result.add(7 /* CompletionItemKind.Interface */);\n        }\n        if (!suggestOptions.showModules) {\n            result.add(8 /* CompletionItemKind.Module */);\n        }\n        if (!suggestOptions.showProperties) {\n            result.add(9 /* CompletionItemKind.Property */);\n        }\n        if (!suggestOptions.showEvents) {\n            result.add(10 /* CompletionItemKind.Event */);\n        }\n        if (!suggestOptions.showOperators) {\n            result.add(11 /* CompletionItemKind.Operator */);\n        }\n        if (!suggestOptions.showUnits) {\n            result.add(12 /* CompletionItemKind.Unit */);\n        }\n        if (!suggestOptions.showValues) {\n            result.add(13 /* CompletionItemKind.Value */);\n        }\n        if (!suggestOptions.showConstants) {\n            result.add(14 /* CompletionItemKind.Constant */);\n        }\n        if (!suggestOptions.showEnums) {\n            result.add(15 /* CompletionItemKind.Enum */);\n        }\n        if (!suggestOptions.showEnumMembers) {\n            result.add(16 /* CompletionItemKind.EnumMember */);\n        }\n        if (!suggestOptions.showKeywords) {\n            result.add(17 /* CompletionItemKind.Keyword */);\n        }\n        if (!suggestOptions.showWords) {\n            result.add(18 /* CompletionItemKind.Text */);\n        }\n        if (!suggestOptions.showColors) {\n            result.add(19 /* CompletionItemKind.Color */);\n        }\n        if (!suggestOptions.showFiles) {\n            result.add(20 /* CompletionItemKind.File */);\n        }\n        if (!suggestOptions.showReferences) {\n            result.add(21 /* CompletionItemKind.Reference */);\n        }\n        if (!suggestOptions.showColors) {\n            result.add(22 /* CompletionItemKind.Customcolor */);\n        }\n        if (!suggestOptions.showFolders) {\n            result.add(23 /* CompletionItemKind.Folder */);\n        }\n        if (!suggestOptions.showTypeParameters) {\n            result.add(24 /* CompletionItemKind.TypeParameter */);\n        }\n        if (!suggestOptions.showSnippets) {\n            result.add(27 /* CompletionItemKind.Snippet */);\n        }\n        if (!suggestOptions.showUsers) {\n            result.add(25 /* CompletionItemKind.User */);\n        }\n        if (!suggestOptions.showIssues) {\n            result.add(26 /* CompletionItemKind.Issue */);\n        }\n        return { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\n    }\n    _onNewContext(ctx) {\n        if (!this._context) {\n            // happens when 24x7 IntelliSense is enabled and still in its delay\n            return;\n        }\n        if (ctx.lineNumber !== this._context.lineNumber) {\n            // e.g. happens when pressing Enter while IntelliSense is computed\n            this.cancel();\n            return;\n        }\n        if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\n            // cancel IntelliSense when line start changes\n            // happens when the current word gets outdented\n            this.cancel();\n            return;\n        }\n        if (ctx.column < this._context.column) {\n            // typed -> moved cursor LEFT -> retrigger if still on a word\n            if (ctx.leadingWord.word) {\n                this.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\n            }\n            else {\n                this.cancel();\n            }\n            return;\n        }\n        if (!this._completionModel) {\n            // happens when IntelliSense is not yet computed\n            return;\n        }\n        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\n            // started a new word while IntelliSense shows -> retrigger but reuse all items that we currently have\n            const shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n            if (shouldAutoTrigger && this._context) {\n                // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n                // suggestions to be cancelled, which causes `this._context` to be undefined\n                const map = this._completionModel.getItemsByProvider();\n                this.trigger({\n                    auto: this._context.triggerOptions.auto,\n                    retrigger: true,\n                    clipboardText: this._completionModel.clipboardText,\n                    completionOptions: { providerItemsToReuse: map }\n                });\n            }\n            return;\n        }\n        if (ctx.column > this._context.column && this._completionModel.getIncompleteProvider().size > 0 && ctx.leadingWord.word.length !== 0) {\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n            const providerItemsToReuse = new Map();\n            const providerFilter = new Set();\n            for (const [provider, items] of this._completionModel.getItemsByProvider()) {\n                if (items.length > 0 && items[0].container.incomplete) {\n                    providerFilter.add(provider);\n                }\n                else {\n                    providerItemsToReuse.set(provider, items);\n                }\n            }\n            this.trigger({\n                auto: this._context.triggerOptions.auto,\n                triggerKind: 2 /* CompletionTriggerKind.TriggerForIncompleteCompletions */,\n                retrigger: true,\n                clipboardText: this._completionModel.clipboardText,\n                completionOptions: { providerFilter, providerItemsToReuse }\n            });\n        }\n        else {\n            // typed -> moved cursor RIGHT -> update UI\n            const oldLineContext = this._completionModel.lineContext;\n            let isFrozen = false;\n            this._completionModel.lineContext = {\n                leadingLineContent: ctx.leadingLineContent,\n                characterCountDelta: ctx.column - this._context.column\n            };\n            if (this._completionModel.items.length === 0) {\n                const shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n                if (!this._context) {\n                    // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n                    // suggestions to be cancelled, which causes `this._context` to be undefined\n                    this.cancel();\n                    return;\n                }\n                if (shouldAutoTrigger && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\n                    // retrigger when heading into a new word\n                    this.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\n                    return;\n                }\n                if (!this._context.triggerOptions.auto) {\n                    // freeze when IntelliSense was manually requested\n                    this._completionModel.lineContext = oldLineContext;\n                    isFrozen = this._completionModel.items.length > 0;\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\n                        // there were results before but now there aren't\n                        // and also we are not on a word anymore -> cancel\n                        this.cancel();\n                        return;\n                    }\n                }\n                else {\n                    // nothing left\n                    this.cancel();\n                    return;\n                }\n            }\n            this._onDidSuggest.fire({\n                completionModel: this._completionModel,\n                triggerOptions: ctx.triggerOptions,\n                isFrozen,\n            });\n        }\n    }\n};\nSuggestModel = SuggestModel_1 = __decorate([\n    __param(1, IEditorWorkerService),\n    __param(2, IClipboardService),\n    __param(3, ITelemetryService),\n    __param(4, ILogService),\n    __param(5, IContextKeyService),\n    __param(6, IConfigurationService),\n    __param(7, ILanguageFeaturesService),\n    __param(8, IEnvironmentService)\n], SuggestModel);\nexport { SuggestModel };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}