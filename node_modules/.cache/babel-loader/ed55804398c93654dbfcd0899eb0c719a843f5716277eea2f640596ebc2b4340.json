{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\nvar _createClass = require(\"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\nrequire(\"core-js/modules/es.array.splice.js\");\nvar HTML = require('../common/html');\n\n//Aliases\nvar $ = HTML.TAG_NAMES;\nvar NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n    case 3:\n      return tn === $.RTC;\n    case 6:\n      return tn === $.OPTION;\n    case 8:\n      return tn === $.OPTGROUP;\n  }\n  return false;\n}\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI || tn === $.TD || tn === $.TH || tn === $.TR;\n    case 3:\n      return tn === $.RTC;\n    case 5:\n      return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n    case 6:\n      return tn === $.OPTION;\n    case 7:\n      return tn === $.CAPTION;\n    case 8:\n      return tn === $.OPTGROUP || tn === $.COLGROUP;\n  }\n  return false;\n}\nfunction isScopingElement(tn, ns) {\n  switch (tn.length) {\n    case 2:\n      if (tn === $.TD || tn === $.TH) {\n        return ns === NS.HTML;\n      } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n        return ns === NS.MATHML;\n      }\n      break;\n    case 4:\n      if (tn === $.HTML) {\n        return ns === NS.HTML;\n      } else if (tn === $.DESC) {\n        return ns === NS.SVG;\n      }\n      break;\n    case 5:\n      if (tn === $.TABLE) {\n        return ns === NS.HTML;\n      } else if (tn === $.MTEXT) {\n        return ns === NS.MATHML;\n      } else if (tn === $.TITLE) {\n        return ns === NS.SVG;\n      }\n      break;\n    case 6:\n      return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n    case 7:\n      return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n    case 8:\n      return tn === $.TEMPLATE && ns === NS.HTML;\n    case 13:\n      return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n    case 14:\n      return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n  }\n  return false;\n}\n\n//Stack of open elements\nvar OpenElementStack = /*#__PURE__*/function () {\n  function OpenElementStack(document, treeAdapter) {\n    _classCallCheck(this, OpenElementStack);\n    this.stackTop = -1;\n    this.items = [];\n    this.current = document;\n    this.currentTagName = null;\n    this.currentTmplContent = null;\n    this.tmplCount = 0;\n    this.treeAdapter = treeAdapter;\n  }\n\n  //Index of element\n  return _createClass(OpenElementStack, [{\n    key: \"_indexOf\",\n    value: function _indexOf(element) {\n      var idx = -1;\n      for (var i = this.stackTop; i >= 0; i--) {\n        if (this.items[i] === element) {\n          idx = i;\n          break;\n        }\n      }\n      return idx;\n    }\n\n    //Update current element\n  }, {\n    key: \"_isInTemplate\",\n    value: function _isInTemplate() {\n      return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n  }, {\n    key: \"_updateCurrentElement\",\n    value: function _updateCurrentElement() {\n      this.current = this.items[this.stackTop];\n      this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n      this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n  }, {\n    key: \"push\",\n    value: function push(element) {\n      this.items[++this.stackTop] = element;\n      this._updateCurrentElement();\n      if (this._isInTemplate()) {\n        this.tmplCount++;\n      }\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      this.stackTop--;\n      if (this.tmplCount > 0 && this._isInTemplate()) {\n        this.tmplCount--;\n      }\n      this._updateCurrentElement();\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(oldElement, newElement) {\n      var idx = this._indexOf(oldElement);\n      this.items[idx] = newElement;\n      if (idx === this.stackTop) {\n        this._updateCurrentElement();\n      }\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(referenceElement, newElement) {\n      var insertionIdx = this._indexOf(referenceElement) + 1;\n      this.items.splice(insertionIdx, 0, newElement);\n      if (insertionIdx === ++this.stackTop) {\n        this._updateCurrentElement();\n      }\n    }\n  }, {\n    key: \"popUntilTagNamePopped\",\n    value: function popUntilTagNamePopped(tagName) {\n      while (this.stackTop > -1) {\n        var tn = this.currentTagName;\n        var ns = this.treeAdapter.getNamespaceURI(this.current);\n        this.pop();\n        if (tn === tagName && ns === NS.HTML) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popUntilElementPopped\",\n    value: function popUntilElementPopped(element) {\n      while (this.stackTop > -1) {\n        var poppedElement = this.current;\n        this.pop();\n        if (poppedElement === element) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popUntilNumberedHeaderPopped\",\n    value: function popUntilNumberedHeaderPopped() {\n      while (this.stackTop > -1) {\n        var tn = this.currentTagName;\n        var ns = this.treeAdapter.getNamespaceURI(this.current);\n        this.pop();\n        if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6 && ns === NS.HTML) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popUntilTableCellPopped\",\n    value: function popUntilTableCellPopped() {\n      while (this.stackTop > -1) {\n        var tn = this.currentTagName;\n        var ns = this.treeAdapter.getNamespaceURI(this.current);\n        this.pop();\n        if (tn === $.TD || tn === $.TH && ns === NS.HTML) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popAllUpToHtmlElement\",\n    value: function popAllUpToHtmlElement() {\n      //NOTE: here we assume that root <html> element is always first in the open element stack, so\n      //we perform this fast stack clean up.\n      this.stackTop = 0;\n      this._updateCurrentElement();\n    }\n  }, {\n    key: \"clearBackToTableContext\",\n    value: function clearBackToTableContext() {\n      while (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"clearBackToTableBodyContext\",\n    value: function clearBackToTableBodyContext() {\n      while (this.currentTagName !== $.TBODY && this.currentTagName !== $.TFOOT && this.currentTagName !== $.THEAD && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"clearBackToTableRowContext\",\n    value: function clearBackToTableRowContext() {\n      while (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        if (this.items[i] === element) {\n          this.items.splice(i, 1);\n          this.stackTop--;\n          this._updateCurrentElement();\n          break;\n        }\n      }\n    }\n\n    //Search\n  }, {\n    key: \"tryPeekProperlyNestedBodyElement\",\n    value: function tryPeekProperlyNestedBodyElement() {\n      //Properly nested <body> element (should be second element in stack).\n      var element = this.items[1];\n      return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(element) {\n      return this._indexOf(element) > -1;\n    }\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(element) {\n      var elementIdx = this._indexOf(element);\n      return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n  }, {\n    key: \"isRootHtmlElementCurrent\",\n    value: function isRootHtmlElementCurrent() {\n      return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n  }, {\n    key: \"hasInScope\",\n    value: function hasInScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n        if (isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasNumberedHeaderInScope\",\n    value: function hasNumberedHeaderInScope() {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if ((tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) && ns === NS.HTML) {\n          return true;\n        }\n        if (isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInListItemScope\",\n    value: function hasInListItemScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n        if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInButtonScope\",\n    value: function hasInButtonScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n        if (tn === $.BUTTON && ns === NS.HTML || isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInTableScope\",\n    value: function hasInTableScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (ns !== NS.HTML) {\n          continue;\n        }\n        if (tn === tagName) {\n          return true;\n        }\n        if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasTableBodyContextInTableScope\",\n    value: function hasTableBodyContextInTableScope() {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (ns !== NS.HTML) {\n          continue;\n        }\n        if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n          return true;\n        }\n        if (tn === $.TABLE || tn === $.HTML) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"hasInSelectScope\",\n    value: function hasInSelectScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n        if (ns !== NS.HTML) {\n          continue;\n        }\n        if (tn === tagName) {\n          return true;\n        }\n        if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    //Implied end tags\n  }, {\n    key: \"generateImpliedEndTags\",\n    value: function generateImpliedEndTags() {\n      while (isImpliedEndTagRequired(this.currentTagName)) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"generateImpliedEndTagsThoroughly\",\n    value: function generateImpliedEndTagsThoroughly() {\n      while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"generateImpliedEndTagsWithExclusion\",\n    value: function generateImpliedEndTagsWithExclusion(exclusionTagName) {\n      while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n        this.pop();\n      }\n    }\n  }]);\n}();\nmodule.exports = OpenElementStack;","map":{"version":3,"names":["_classCallCheck","require","_createClass","HTML","$","TAG_NAMES","NS","NAMESPACES","isImpliedEndTagRequired","tn","length","P","RB","RP","RT","DD","DT","LI","RTC","OPTION","OPTGROUP","isImpliedEndTagRequiredThoroughly","TD","TH","TR","TBODY","TFOOT","THEAD","CAPTION","COLGROUP","isScopingElement","ns","MI","MO","MN","MS","MATHML","DESC","SVG","TABLE","MTEXT","TITLE","APPLET","OBJECT","MARQUEE","TEMPLATE","FOREIGN_OBJECT","ANNOTATION_XML","OpenElementStack","document","treeAdapter","stackTop","items","current","currentTagName","currentTmplContent","tmplCount","key","value","_indexOf","element","idx","i","_isInTemplate","getNamespaceURI","_updateCurrentElement","getTagName","getTemplateContent","push","pop","replace","oldElement","newElement","insertAfter","referenceElement","insertionIdx","splice","popUntilTagNamePopped","tagName","popUntilElementPopped","poppedElement","popUntilNumberedHeaderPopped","H1","H2","H3","H4","H5","H6","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","BODY","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","hasNumberedHeaderInScope","hasInListItemScope","UL","OL","hasInButtonScope","BUTTON","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionTagName","module","exports"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/hast-util-raw/node_modules/parse5/lib/parser/open-element-stack.js"],"sourcesContent":["'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}