{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport { raw } from 'hast-util-raw';\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  ðŸ™Œ\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (tree, file) {\n    // Assume that when a root was given, itâ€™s also returned.\n    var result = /** @type {Root} */raw(tree, file, options);\n    return result;\n  };\n}","map":{"version":3,"names":["raw","rehypeRaw","options","arguments","length","undefined","tree","file","result"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/rehype-raw/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  ðŸ™Œ\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, itâ€™s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,GAAG,QAAO,eAAe;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,SAASA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC5C,OAAO,UAACG,IAAI,EAAEC,IAAI,EAAK;IACrB;IACA,IAAMC,MAAM,GAAG,mBAAqBR,GAAG,CAACM,IAAI,EAAEC,IAAI,EAAEL,OAAO,CAAE;IAC7D,OAAOM,MAAM;EACf,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}