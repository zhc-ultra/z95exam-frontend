{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { ref, computed } from \"vue\";\nvar useSpan = function useSpan(_ref) {\n  var spanMethod = _ref.spanMethod,\n    data = _ref.data,\n    columns = _ref.columns;\n  var flattenTableSpan = function flattenTableSpan(tableData, span) {\n    tableData == null ? void 0 : tableData.forEach(function (record, rowIndex) {\n      var _a;\n      if (record.hasSubtree && ((_a = record.children) == null ? void 0 : _a.length)) {\n        flattenTableSpan(record.children || [], span);\n      }\n      columns.value.forEach(function (column, columnIndex) {\n        var _a2, _b;\n        var _ref2 = (_b = (_a2 = spanMethod.value) == null ? void 0 : _a2.call(spanMethod, {\n            record: record.raw,\n            column: column,\n            rowIndex: rowIndex,\n            columnIndex: columnIndex\n          })) != null ? _b : {},\n          _ref2$rowspan = _ref2.rowspan,\n          rowspan = _ref2$rowspan === void 0 ? 1 : _ref2$rowspan,\n          _ref2$colspan = _ref2.colspan,\n          colspan = _ref2$colspan === void 0 ? 1 : _ref2$colspan;\n        if (rowspan > 1 || colspan > 1) {\n          span[\"\".concat(rowIndex, \"-\").concat(columnIndex, \"-\").concat(record.key)] = [rowspan, colspan];\n          Array.from({\n            length: rowspan\n          }).forEach(function (_, r) {\n            var _a3;\n            if (rowIndex + r < tableData.length) {\n              var _ref3 = (_a3 = tableData[rowIndex + r]) != null ? _a3 : {},\n                key = _ref3.key;\n              Array.from({\n                length: colspan\n              }).forEach(function (_2, c) {\n                if (columnIndex + c < columns.value.length && \"\".concat(rowIndex, \"-\").concat(columnIndex, \"-\").concat(record.key) !== \"\".concat(rowIndex + r, \"-\").concat(columnIndex + c, \"-\").concat(key)) {\n                  spanzero.value[\"\".concat(rowIndex + r, \"-\").concat(columnIndex + c, \"-\").concat(key)] = [0, 0];\n                }\n              });\n            }\n          });\n        }\n      });\n    });\n  };\n  var spanzero = ref({});\n  var tableSpan = computed(function () {\n    var span = {};\n    spanzero.value = {};\n    if (spanMethod.value) {\n      flattenTableSpan(data.value, span);\n    }\n    return span;\n  });\n  var removedCells = computed(function () {\n    var data2 = [];\n    for (var _i = 0, _Object$keys = Object.keys(spanzero.value); _i < _Object$keys.length; _i++) {\n      var indexKey = _Object$keys[_i];\n      data2.push(indexKey);\n    }\n    return data2;\n  });\n  return {\n    tableSpan: tableSpan,\n    removedCells: removedCells\n  };\n};\nexport { useSpan };","map":{"version":3,"names":["ref","computed","useSpan","_ref","spanMethod","data","columns","flattenTableSpan","tableData","span","forEach","record","rowIndex","_a","hasSubtree","children","length","value","column","columnIndex","_a2","_b","_ref2","call","raw","_ref2$rowspan","rowspan","_ref2$colspan","colspan","concat","key","Array","from","_","r","_a3","_ref3","_2","c","spanzero","tableSpan","removedCells","data2","_i","_Object$keys","Object","keys","indexKey","push"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/@arco-design/web-vue/es/table/hooks/use-span.js"],"sourcesContent":["import { ref, computed } from \"vue\";\nconst useSpan = ({\n  spanMethod,\n  data,\n  columns\n}) => {\n  const flattenTableSpan = (tableData, span) => {\n    tableData == null ? void 0 : tableData.forEach((record, rowIndex) => {\n      var _a;\n      if (record.hasSubtree && ((_a = record.children) == null ? void 0 : _a.length)) {\n        flattenTableSpan(record.children || [], span);\n      }\n      columns.value.forEach((column, columnIndex) => {\n        var _a2, _b;\n        const { rowspan = 1, colspan = 1 } = (_b = (_a2 = spanMethod.value) == null ? void 0 : _a2.call(spanMethod, {\n          record: record.raw,\n          column,\n          rowIndex,\n          columnIndex\n        })) != null ? _b : {};\n        if (rowspan > 1 || colspan > 1) {\n          span[`${rowIndex}-${columnIndex}-${record.key}`] = [rowspan, colspan];\n          Array.from({ length: rowspan }).forEach((_, r) => {\n            var _a3;\n            if (rowIndex + r < tableData.length) {\n              const { key } = (_a3 = tableData[rowIndex + r]) != null ? _a3 : {};\n              Array.from({ length: colspan }).forEach((_2, c) => {\n                if (columnIndex + c < columns.value.length && `${rowIndex}-${columnIndex}-${record.key}` !== `${rowIndex + r}-${columnIndex + c}-${key}`) {\n                  spanzero.value[`${rowIndex + r}-${columnIndex + c}-${key}`] = [0, 0];\n                }\n              });\n            }\n          });\n        }\n      });\n    });\n  };\n  let spanzero = ref({});\n  const tableSpan = computed(() => {\n    const span = {};\n    spanzero.value = {};\n    if (spanMethod.value) {\n      flattenTableSpan(data.value, span);\n    }\n    return span;\n  });\n  const removedCells = computed(() => {\n    const data2 = [];\n    for (const indexKey of Object.keys(spanzero.value)) {\n      data2.push(indexKey);\n    }\n    return data2;\n  });\n  return {\n    tableSpan,\n    removedCells\n  };\n};\nexport { useSpan };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}