{"ast":null,"code":"import _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\nvar $ = dom.$;\nexport var MarginHoverWidget = /*#__PURE__*/function (_Disposable) {\n  function MarginHoverWidget(editor, languageService, openerService) {\n    var _this;\n    _classCallCheck(this, MarginHoverWidget);\n    _this = _callSuper(this, MarginHoverWidget);\n    _this._renderDisposeables = _this._register(new DisposableStore());\n    _this._editor = editor;\n    _this._isVisible = false;\n    _this._messages = [];\n    _this._hover = _this._register(new HoverWidget());\n    _this._hover.containerDomNode.classList.toggle('hidden', !_this._isVisible);\n    _this._markdownRenderer = _this._register(new MarkdownRenderer({\n      editor: _this._editor\n    }, languageService, openerService));\n    _this._computer = new MarginHoverComputer(_this._editor);\n    _this._hoverOperation = _this._register(new HoverOperation(_this._editor, _this._computer));\n    _this._register(_this._hoverOperation.onResult(function (result) {\n      _this._withResult(result.value);\n    }));\n    _this._register(_this._editor.onDidChangeModelDecorations(function () {\n      return _this._onModelDecorationsChanged();\n    }));\n    _this._register(_this._editor.onDidChangeConfiguration(function (e) {\n      if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n        _this._updateFont();\n      }\n    }));\n    _this._editor.addOverlayWidget(_this);\n    return _this;\n  }\n  _inherits(MarginHoverWidget, _Disposable);\n  return _createClass(MarginHoverWidget, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._editor.removeOverlayWidget(this);\n      _get(_getPrototypeOf(MarginHoverWidget.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return MarginHoverWidget.ID;\n    }\n  }, {\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      return this._hover.containerDomNode;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return null;\n    }\n  }, {\n    key: \"_updateFont\",\n    value: function _updateFont() {\n      var _this2 = this;\n      var codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n      codeClasses.forEach(function (node) {\n        return _this2._editor.applyFontInfo(node);\n      });\n    }\n  }, {\n    key: \"_onModelDecorationsChanged\",\n    value: function _onModelDecorationsChanged() {\n      if (this._isVisible) {\n        // The decorations have changed and the hover is visible,\n        // we need to recompute the displayed text\n        this._hoverOperation.cancel();\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n      }\n    }\n  }, {\n    key: \"startShowingAt\",\n    value: function startShowingAt(lineNumber, laneOrLine) {\n      if (this._computer.lineNumber === lineNumber && this._computer.lane === laneOrLine) {\n        // We have to show the widget at the exact same line number as before, so no work is needed\n        return;\n      }\n      this._hoverOperation.cancel();\n      this.hide();\n      this._computer.lineNumber = lineNumber;\n      this._computer.lane = laneOrLine;\n      this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._computer.lineNumber = -1;\n      this._hoverOperation.cancel();\n      if (!this._isVisible) {\n        return;\n      }\n      this._isVisible = false;\n      this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n  }, {\n    key: \"_withResult\",\n    value: function _withResult(result) {\n      this._messages = result;\n      if (this._messages.length > 0) {\n        this._renderMessages(this._computer.lineNumber, this._messages);\n      } else {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"_renderMessages\",\n    value: function _renderMessages(lineNumber, messages) {\n      this._renderDisposeables.clear();\n      var fragment = document.createDocumentFragment();\n      var _iterator = _createForOfIteratorHelper(messages),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var msg = _step.value;\n          var markdownHoverElement = $('div.hover-row.markdown-hover');\n          var hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n          var renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n          hoverContentsElement.appendChild(renderedContents.element);\n          fragment.appendChild(markdownHoverElement);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._updateContents(fragment);\n      this._showAt(lineNumber);\n    }\n  }, {\n    key: \"_updateContents\",\n    value: function _updateContents(node) {\n      this._hover.contentsDomNode.textContent = '';\n      this._hover.contentsDomNode.appendChild(node);\n      this._updateFont();\n    }\n  }, {\n    key: \"_showAt\",\n    value: function _showAt(lineNumber) {\n      if (!this._isVisible) {\n        this._isVisible = true;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n      }\n      var editorLayout = this._editor.getLayoutInfo();\n      var topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n      var editorScrollTop = this._editor.getScrollTop();\n      var lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n      var nodeHeight = this._hover.containerDomNode.clientHeight;\n      var top = topForLineNumber - editorScrollTop - (nodeHeight - lineHeight) / 2;\n      var left = editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth + (this._computer.lane === 'lineNo' ? editorLayout.lineNumbersWidth : 0);\n      this._hover.containerDomNode.style.left = \"\".concat(left, \"px\");\n      this._hover.containerDomNode.style.top = \"\".concat(Math.max(Math.round(top), 0), \"px\");\n    }\n  }]);\n}(Disposable);\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nvar MarginHoverComputer = /*#__PURE__*/function () {\n  function MarginHoverComputer(_editor) {\n    _classCallCheck(this, MarginHoverComputer);\n    this._editor = _editor;\n    this._lineNumber = -1;\n    this._laneOrLine = GlyphMarginLane.Center;\n  }\n  return _createClass(MarginHoverComputer, [{\n    key: \"lineNumber\",\n    get: function get() {\n      return this._lineNumber;\n    },\n    set: function set(value) {\n      this._lineNumber = value;\n    }\n  }, {\n    key: \"lane\",\n    get: function get() {\n      return this._laneOrLine;\n    },\n    set: function set(value) {\n      this._laneOrLine = value;\n    }\n  }, {\n    key: \"computeSync\",\n    value: function computeSync() {\n      var _a, _b;\n      var toHoverMessage = function toHoverMessage(contents) {\n        return {\n          value: contents\n        };\n      };\n      var lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n      var result = [];\n      var isLineHover = this._laneOrLine === 'lineNo';\n      if (!lineDecorations) {\n        return result;\n      }\n      var _iterator2 = _createForOfIteratorHelper(lineDecorations),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var d = _step2.value;\n          var lane = (_b = (_a = d.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Center;\n          if (!isLineHover && lane !== this._laneOrLine) {\n            continue;\n          }\n          var hoverMessage = isLineHover ? d.options.lineNumberHoverMessage : d.options.glyphMarginHoverMessage;\n          if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n            continue;\n          }\n          result.push.apply(result, _toConsumableArray(asArray(hoverMessage).map(toHoverMessage)));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return result;\n    }\n  }]);\n}();","map":{"version":3,"names":["dom","asArray","isEmptyMarkdownString","Disposable","DisposableStore","MarkdownRenderer","HoverOperation","HoverWidget","GlyphMarginLane","$","MarginHoverWidget","_Disposable","editor","languageService","openerService","_this","_classCallCheck","_callSuper","_renderDisposeables","_register","_editor","_isVisible","_messages","_hover","containerDomNode","classList","toggle","_markdownRenderer","_computer","MarginHoverComputer","_hoverOperation","onResult","result","_withResult","value","onDidChangeModelDecorations","_onModelDecorationsChanged","onDidChangeConfiguration","e","hasChanged","_updateFont","addOverlayWidget","_inherits","_createClass","key","dispose","removeOverlayWidget","_get","_getPrototypeOf","prototype","call","getId","ID","getDomNode","getPosition","_this2","codeClasses","Array","slice","contentsDomNode","getElementsByClassName","forEach","node","applyFontInfo","cancel","start","startShowingAt","lineNumber","laneOrLine","lane","hide","length","_renderMessages","messages","clear","fragment","document","createDocumentFragment","_iterator","_createForOfIteratorHelper","_step","s","n","done","msg","markdownHoverElement","hoverContentsElement","append","renderedContents","add","render","appendChild","element","err","f","_updateContents","_showAt","textContent","editorLayout","getLayoutInfo","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","lineHeight","getOption","nodeHeight","clientHeight","top","left","glyphMarginLeft","glyphMarginWidth","lineNumbersWidth","style","concat","Math","max","round","_lineNumber","_laneOrLine","Center","get","set","computeSync","_a","_b","toHoverMessage","contents","lineDecorations","getLineDecorations","isLineHover","_iterator2","_step2","d","options","glyphMargin","position","hoverMessage","lineNumberHoverMessage","glyphMarginHoverMessage","push","apply","_toConsumableArray","map"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber, laneOrLine) {\n        if (this._computer.lineNumber === lineNumber && this._computer.lane === laneOrLine) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._computer.lane = laneOrLine;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        const left = editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth + (this._computer.lane === 'lineNo' ? editorLayout.lineNumbersWidth : 0);\n        this._hover.containerDomNode.style.left = `${left}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    get lane() {\n        return this._laneOrLine;\n    }\n    set lane(value) {\n        this._laneOrLine = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n        this._laneOrLine = GlyphMarginLane.Center;\n    }\n    computeSync() {\n        var _a, _b;\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        const isLineHover = this._laneOrLine === 'lineNo';\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            const lane = (_b = (_a = d.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Center;\n            if (!isLineHover && lane !== this._laneOrLine) {\n                continue;\n            }\n            const hoverMessage = isLineHover ? d.options.lineNumberHoverMessage : d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}