{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { GlyphMarginLane } from '../model.js';\nvar MAX_LANE = GlyphMarginLane.Right;\nexport var GlyphMarginLanesModel = /*#__PURE__*/function () {\n  function GlyphMarginLanesModel(maxLine) {\n    _classCallCheck(this, GlyphMarginLanesModel);\n    this.persist = 0;\n    this._requiredLanes = 1; // always render at least one lane\n    this.lanes = new Uint8Array(Math.ceil((maxLine + 1) * MAX_LANE / 8));\n  }\n  return _createClass(GlyphMarginLanesModel, [{\n    key: \"reset\",\n    value: function reset(maxLine) {\n      var bytes = Math.ceil((maxLine + 1) * MAX_LANE / 8);\n      if (this.lanes.length < bytes) {\n        this.lanes = new Uint8Array(bytes);\n      } else {\n        this.lanes.fill(0);\n      }\n      this._requiredLanes = 1;\n    }\n  }, {\n    key: \"requiredLanes\",\n    get: function get() {\n      return this._requiredLanes;\n    }\n  }, {\n    key: \"push\",\n    value: function push(lane, range, persist) {\n      if (persist) {\n        this.persist |= 1 << lane - 1;\n      }\n      for (var i = range.startLineNumber; i <= range.endLineNumber; i++) {\n        var bit = MAX_LANE * i + (lane - 1);\n        this.lanes[bit >>> 3] |= 1 << bit % 8;\n        this._requiredLanes = Math.max(this._requiredLanes, this.countAtLine(i));\n      }\n    }\n  }, {\n    key: \"getLanesAtLine\",\n    value: function getLanesAtLine(lineNumber) {\n      var lanes = [];\n      var bit = MAX_LANE * lineNumber;\n      for (var i = 0; i < MAX_LANE; i++) {\n        if (this.persist & 1 << i || this.lanes[bit >>> 3] & 1 << bit % 8) {\n          lanes.push(i + 1);\n        }\n        bit++;\n      }\n      return lanes.length ? lanes : [GlyphMarginLane.Center];\n    }\n  }, {\n    key: \"countAtLine\",\n    value: function countAtLine(lineNumber) {\n      var bit = MAX_LANE * lineNumber;\n      var count = 0;\n      for (var i = 0; i < MAX_LANE; i++) {\n        if (this.persist & 1 << i || this.lanes[bit >>> 3] & 1 << bit % 8) {\n          count++;\n        }\n        bit++;\n      }\n      return count;\n    }\n  }]);\n}();","map":{"version":3,"names":["GlyphMarginLane","MAX_LANE","Right","GlyphMarginLanesModel","maxLine","_classCallCheck","persist","_requiredLanes","lanes","Uint8Array","Math","ceil","_createClass","key","value","reset","bytes","length","fill","get","push","lane","range","i","startLineNumber","endLineNumber","bit","max","countAtLine","getLanesAtLine","lineNumber","Center","count"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/viewModel/glyphLanesModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { GlyphMarginLane } from '../model.js';\nconst MAX_LANE = GlyphMarginLane.Right;\nexport class GlyphMarginLanesModel {\n    constructor(maxLine) {\n        this.persist = 0;\n        this._requiredLanes = 1; // always render at least one lane\n        this.lanes = new Uint8Array(Math.ceil(((maxLine + 1) * MAX_LANE) / 8));\n    }\n    reset(maxLine) {\n        const bytes = Math.ceil(((maxLine + 1) * MAX_LANE) / 8);\n        if (this.lanes.length < bytes) {\n            this.lanes = new Uint8Array(bytes);\n        }\n        else {\n            this.lanes.fill(0);\n        }\n        this._requiredLanes = 1;\n    }\n    get requiredLanes() {\n        return this._requiredLanes;\n    }\n    push(lane, range, persist) {\n        if (persist) {\n            this.persist |= (1 << (lane - 1));\n        }\n        for (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n            const bit = (MAX_LANE * i) + (lane - 1);\n            this.lanes[bit >>> 3] |= (1 << (bit % 8));\n            this._requiredLanes = Math.max(this._requiredLanes, this.countAtLine(i));\n        }\n    }\n    getLanesAtLine(lineNumber) {\n        const lanes = [];\n        let bit = MAX_LANE * lineNumber;\n        for (let i = 0; i < MAX_LANE; i++) {\n            if (this.persist & (1 << i) || this.lanes[bit >>> 3] & (1 << (bit % 8))) {\n                lanes.push(i + 1);\n            }\n            bit++;\n        }\n        return lanes.length ? lanes : [GlyphMarginLane.Center];\n    }\n    countAtLine(lineNumber) {\n        let bit = MAX_LANE * lineNumber;\n        let count = 0;\n        for (let i = 0; i < MAX_LANE; i++) {\n            if (this.persist & (1 << i) || this.lanes[bit >>> 3] & (1 << (bit % 8))) {\n                count++;\n            }\n            bit++;\n        }\n        return count;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}