{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.fill.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\nexport var MovingAverage = /*#__PURE__*/function () {\n  function MovingAverage() {\n    _classCallCheck(this, MovingAverage);\n    this._n = 1;\n    this._val = 0;\n  }\n  return _createClass(MovingAverage, [{\n    key: \"update\",\n    value: function update(value) {\n      this._val = this._val + (value - this._val) / this._n;\n      this._n += 1;\n      return this._val;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._val;\n    }\n  }]);\n}();\nexport var SlidingWindowAverage = /*#__PURE__*/function () {\n  function SlidingWindowAverage(size) {\n    _classCallCheck(this, SlidingWindowAverage);\n    this._n = 0;\n    this._val = 0;\n    this._values = [];\n    this._index = 0;\n    this._sum = 0;\n    this._values = new Array(size);\n    this._values.fill(0, 0, size);\n  }\n  return _createClass(SlidingWindowAverage, [{\n    key: \"update\",\n    value: function update(value) {\n      var oldValue = this._values[this._index];\n      this._values[this._index] = value;\n      this._index = (this._index + 1) % this._values.length;\n      this._sum -= oldValue;\n      this._sum += value;\n      if (this._n < this._values.length) {\n        this._n += 1;\n      }\n      this._val = this._sum / this._n;\n      return this._val;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._val;\n    }\n  }]);\n}();","map":{"version":3,"names":["clamp","value","min","max","Math","MovingAverage","_classCallCheck","_n","_val","_createClass","key","update","get","SlidingWindowAverage","size","_values","_index","_sum","Array","fill","oldValue","length"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/base/common/numbers.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\nexport class SlidingWindowAverage {\n    constructor(size) {\n        this._n = 0;\n        this._val = 0;\n        this._values = [];\n        this._index = 0;\n        this._sum = 0;\n        this._values = new Array(size);\n        this._values.fill(0, 0, size);\n    }\n    update(value) {\n        const oldValue = this._values[this._index];\n        this._values[this._index] = value;\n        this._index = (this._index + 1) % this._values.length;\n        this._sum -= oldValue;\n        this._sum += value;\n        if (this._n < this._values.length) {\n            this._n += 1;\n        }\n        this._val = this._sum / this._n;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,KAAKA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EACnC,OAAOC,IAAI,CAACF,GAAG,CAACE,IAAI,CAACD,GAAG,CAACF,KAAK,EAAEC,GAAG,CAAC,EAAEC,GAAG,CAAC;AAC9C;AACA,WAAaE,aAAa;EACtB,SAAAA,cAAA,EAAc;IAAAC,eAAA,OAAAD,aAAA;IACV,IAAI,CAACE,EAAE,GAAG,CAAC;IACX,IAAI,CAACC,IAAI,GAAG,CAAC;EACjB;EAAC,OAAAC,YAAA,CAAAJ,aAAA;IAAAK,GAAA;IAAAT,KAAA,EACD,SAAAU,OAAOV,KAAK,EAAE;MACV,IAAI,CAACO,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,CAACP,KAAK,GAAG,IAAI,CAACO,IAAI,IAAI,IAAI,CAACD,EAAE;MACrD,IAAI,CAACA,EAAE,IAAI,CAAC;MACZ,OAAO,IAAI,CAACC,IAAI;IACpB;EAAC;IAAAE,GAAA;IAAAE,GAAA,EACD,SAAAA,IAAA,EAAY;MACR,OAAO,IAAI,CAACJ,IAAI;IACpB;EAAC;AAAA;AAEL,WAAaK,oBAAoB;EAC7B,SAAAA,qBAAYC,IAAI,EAAE;IAAAR,eAAA,OAAAO,oBAAA;IACd,IAAI,CAACN,EAAE,GAAG,CAAC;IACX,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACO,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACF,OAAO,GAAG,IAAIG,KAAK,CAACJ,IAAI,CAAC;IAC9B,IAAI,CAACC,OAAO,CAACI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAEL,IAAI,CAAC;EACjC;EAAC,OAAAL,YAAA,CAAAI,oBAAA;IAAAH,GAAA;IAAAT,KAAA,EACD,SAAAU,OAAOV,KAAK,EAAE;MACV,IAAMmB,QAAQ,GAAG,IAAI,CAACL,OAAO,CAAC,IAAI,CAACC,MAAM,CAAC;MAC1C,IAAI,CAACD,OAAO,CAAC,IAAI,CAACC,MAAM,CAAC,GAAGf,KAAK;MACjC,IAAI,CAACe,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM,GAAG,CAAC,IAAI,IAAI,CAACD,OAAO,CAACM,MAAM;MACrD,IAAI,CAACJ,IAAI,IAAIG,QAAQ;MACrB,IAAI,CAACH,IAAI,IAAIhB,KAAK;MAClB,IAAI,IAAI,CAACM,EAAE,GAAG,IAAI,CAACQ,OAAO,CAACM,MAAM,EAAE;QAC/B,IAAI,CAACd,EAAE,IAAI,CAAC;MAChB;MACA,IAAI,CAACC,IAAI,GAAG,IAAI,CAACS,IAAI,GAAG,IAAI,CAACV,EAAE;MAC/B,OAAO,IAAI,CAACC,IAAI;IACpB;EAAC;IAAAE,GAAA;IAAAE,GAAA,EACD,SAAAA,IAAA,EAAY;MACR,OAAO,IAAI,CAACJ,IAAI;IACpB;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}