{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nvar SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor) {\n  var seedSearchStringFromSelection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'single';\n  var seedSearchStringFromNonEmptySelection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!editor.hasModel()) {\n    return null;\n  }\n  var selection = editor.getSelection();\n  // if selection spans multiple lines, default search string to empty\n  if (seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber || seedSearchStringFromSelection === 'multiple') {\n    if (selection.isEmpty()) {\n      var wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n      if (wordAtPosition && false === seedSearchStringFromNonEmptySelection) {\n        return wordAtPosition.word;\n      }\n    } else {\n      if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n        return editor.getModel().getValueInRange(selection);\n      }\n    }\n  }\n  return null;\n}\nvar CommonFindController = CommonFindController_1 = /*#__PURE__*/function (_Disposable) {\n  function CommonFindController(editor, contextKeyService, storageService, clipboardService, notificationService) {\n    var _this;\n    _classCallCheck(this, CommonFindController);\n    _this = _callSuper(this, CommonFindController);\n    _this._editor = editor;\n    _this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n    _this._contextKeyService = contextKeyService;\n    _this._storageService = storageService;\n    _this._clipboardService = clipboardService;\n    _this._notificationService = notificationService;\n    _this._updateHistoryDelayer = new Delayer(500);\n    _this._state = _this._register(new FindReplaceState());\n    _this.loadQueryState();\n    _this._register(_this._state.onFindReplaceStateChange(function (e) {\n      return _this._onStateChanged(e);\n    }));\n    _this._model = null;\n    _this._register(_this._editor.onDidChangeModel(function () {\n      var shouldRestartFind = _this._editor.getModel() && _this._state.isRevealed;\n      _this.disposeModel();\n      _this._state.change({\n        searchScope: null,\n        matchCase: _this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n        wholeWord: _this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n        isRegex: _this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n        preserveCase: _this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n      }, false);\n      if (shouldRestartFind) {\n        _this._start({\n          forceRevealReplace: false,\n          seedSearchStringFromSelection: 'none',\n          seedSearchStringFromNonEmptySelection: false,\n          seedSearchStringFromGlobalClipboard: false,\n          shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n          shouldAnimate: false,\n          updateSearchScope: false,\n          loop: _this._editor.getOption(41 /* EditorOption.find */).loop\n        });\n      }\n    }));\n    return _this;\n  }\n  _inherits(CommonFindController, _Disposable);\n  return _createClass(CommonFindController, [{\n    key: \"editor\",\n    get: function get() {\n      return this._editor;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposeModel();\n      _get(_getPrototypeOf(CommonFindController.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"disposeModel\",\n    value: function disposeModel() {\n      if (this._model) {\n        this._model.dispose();\n        this._model = null;\n      }\n    }\n  }, {\n    key: \"_onStateChanged\",\n    value: function _onStateChanged(e) {\n      this.saveQueryState(e);\n      if (e.isRevealed) {\n        if (this._state.isRevealed) {\n          this._findWidgetVisible.set(true);\n        } else {\n          this._findWidgetVisible.reset();\n          this.disposeModel();\n        }\n      }\n      if (e.searchString) {\n        this.setGlobalBufferTerm(this._state.searchString);\n      }\n    }\n  }, {\n    key: \"saveQueryState\",\n    value: function saveQueryState(e) {\n      if (e.isRegex) {\n        this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n      if (e.wholeWord) {\n        this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n      if (e.matchCase) {\n        this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n      if (e.preserveCase) {\n        this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n      }\n    }\n  }, {\n    key: \"loadQueryState\",\n    value: function loadQueryState() {\n      this._state.change({\n        matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n        wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n        isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n        preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n      }, false);\n    }\n  }, {\n    key: \"isFindInputFocused\",\n    value: function isFindInputFocused() {\n      return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this._state;\n    }\n  }, {\n    key: \"closeFindWidget\",\n    value: function closeFindWidget() {\n      this._state.change({\n        isRevealed: false,\n        searchScope: null\n      }, false);\n      this._editor.focus();\n    }\n  }, {\n    key: \"toggleCaseSensitive\",\n    value: function toggleCaseSensitive() {\n      this._state.change({\n        matchCase: !this._state.matchCase\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n  }, {\n    key: \"toggleWholeWords\",\n    value: function toggleWholeWords() {\n      this._state.change({\n        wholeWord: !this._state.wholeWord\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n  }, {\n    key: \"toggleRegex\",\n    value: function toggleRegex() {\n      this._state.change({\n        isRegex: !this._state.isRegex\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n  }, {\n    key: \"togglePreserveCase\",\n    value: function togglePreserveCase() {\n      this._state.change({\n        preserveCase: !this._state.preserveCase\n      }, false);\n      if (!this._state.isRevealed) {\n        this.highlightFindOptions();\n      }\n    }\n  }, {\n    key: \"toggleSearchScope\",\n    value: function toggleSearchScope() {\n      var _this2 = this;\n      if (this._state.searchScope) {\n        this._state.change({\n          searchScope: null\n        }, true);\n      } else {\n        if (this._editor.hasModel()) {\n          var selections = this._editor.getSelections();\n          selections = selections.map(function (selection) {\n            if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n              selection = selection.setEndPosition(selection.endLineNumber - 1, _this2._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n            }\n            if (!selection.isEmpty()) {\n              return selection;\n            }\n            return null;\n          }).filter(function (element) {\n            return !!element;\n          });\n          if (selections.length) {\n            this._state.change({\n              searchScope: selections\n            }, true);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setSearchString\",\n    value: function setSearchString(searchString) {\n      if (this._state.isRegex) {\n        searchString = strings.escapeRegExpCharacters(searchString);\n      }\n      this._state.change({\n        searchString: searchString\n      }, false);\n    }\n  }, {\n    key: \"highlightFindOptions\",\n    value: function highlightFindOptions() {\n      var ignoreWhenVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    } // overwritten in subclass\n  }, {\n    key: \"_start\",\n    value: function () {\n      var _start2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(opts, newState) {\n        var stateChanges, selectionSearchString, _selectionSearchString, _selectionSearchString2, currentSelections;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.disposeModel();\n              if (this._editor.hasModel()) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              stateChanges = _objectSpread(_objectSpread({}, newState), {}, {\n                isRevealed: true\n              });\n              if (opts.seedSearchStringFromSelection === 'single') {\n                selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                  if (this._state.isRegex) {\n                    stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                  } else {\n                    stateChanges.searchString = selectionSearchString;\n                  }\n                }\n              } else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                _selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (_selectionSearchString) {\n                  stateChanges.searchString = _selectionSearchString;\n                }\n              }\n              if (!(!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard)) {\n                _context.next = 12;\n                break;\n              }\n              _context.next = 8;\n              return this.getGlobalBufferTerm();\n            case 8:\n              _selectionSearchString2 = _context.sent;\n              if (this._editor.hasModel()) {\n                _context.next = 11;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 11:\n              if (_selectionSearchString2) {\n                stateChanges.searchString = _selectionSearchString2;\n              }\n            case 12:\n              // Overwrite isReplaceRevealed\n              if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n              } else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n              }\n              if (opts.updateSearchScope) {\n                currentSelections = this._editor.getSelections();\n                if (currentSelections.some(function (selection) {\n                  return !selection.isEmpty();\n                })) {\n                  stateChanges.searchScope = currentSelections;\n                }\n              }\n              stateChanges.loop = opts.loop;\n              this._state.change(stateChanges, false);\n              if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n              }\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _start(_x, _x2) {\n        return _start2.apply(this, arguments);\n      }\n      return _start;\n    }()\n  }, {\n    key: \"start\",\n    value: function start(opts, newState) {\n      return this._start(opts, newState);\n    }\n  }, {\n    key: \"moveToNextMatch\",\n    value: function moveToNextMatch() {\n      if (this._model) {\n        this._model.moveToNextMatch();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"moveToPrevMatch\",\n    value: function moveToPrevMatch() {\n      if (this._model) {\n        this._model.moveToPrevMatch();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"goToMatch\",\n    value: function goToMatch(index) {\n      if (this._model) {\n        this._model.moveToMatch(index);\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"replace\",\n    value: function replace() {\n      if (this._model) {\n        this._model.replace();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"replaceAll\",\n    value: function replaceAll() {\n      var _a;\n      if (this._model) {\n        if ((_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.isTooLargeForHeapOperation()) {\n          this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n          return false;\n        }\n        this._model.replaceAll();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"selectAllMatches\",\n    value: function selectAllMatches() {\n      if (this._model) {\n        this._model.selectAllMatches();\n        this._editor.focus();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"getGlobalBufferTerm\",\n    value: function () {\n      var _getGlobalBufferTerm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing())) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", this._clipboardService.readFindText());\n            case 2:\n              return _context2.abrupt(\"return\", '');\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getGlobalBufferTerm() {\n        return _getGlobalBufferTerm.apply(this, arguments);\n      }\n      return getGlobalBufferTerm;\n    }()\n  }, {\n    key: \"setGlobalBufferTerm\",\n    value: function setGlobalBufferTerm(text) {\n      if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) {\n        // intentionally not awaited\n        this._clipboardService.writeFindText(text);\n      }\n    }\n  }], [{\n    key: \"get\",\n    value: function get(editor) {\n      return editor.getContribution(CommonFindController_1.ID);\n    }\n  }]);\n}(Disposable);\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = CommonFindController_1 = __decorate([__param(1, IContextKeyService), __param(2, IStorageService), __param(3, IClipboardService), __param(4, INotificationService)], CommonFindController);\nexport { CommonFindController };\nvar FindController = /*#__PURE__*/function (_CommonFindController) {\n  function FindController(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService) {\n    var _this3;\n    _classCallCheck(this, FindController);\n    _this3 = _callSuper(this, FindController, [editor, _contextKeyService, _storageService, clipboardService, notificationService]);\n    _this3._contextViewService = _contextViewService;\n    _this3._keybindingService = _keybindingService;\n    _this3._themeService = _themeService;\n    _this3._widget = null;\n    _this3._findOptionsWidget = null;\n    return _this3;\n  }\n  _inherits(FindController, _CommonFindController);\n  return _createClass(FindController, [{\n    key: \"_start\",\n    value: function () {\n      var _start3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(opts, newState) {\n        var selection, updateSearchScope, isSelectionMultipleLine;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!this._widget) {\n                this._createFindWidget();\n              }\n              selection = this._editor.getSelection();\n              updateSearchScope = false;\n              _context3.t0 = this._editor.getOption(41 /* EditorOption.find */).autoFindInSelection;\n              _context3.next = _context3.t0 === 'always' ? 6 : _context3.t0 === 'never' ? 8 : _context3.t0 === 'multiline' ? 10 : 13;\n              break;\n            case 6:\n              updateSearchScope = true;\n              return _context3.abrupt(\"break\", 14);\n            case 8:\n              updateSearchScope = false;\n              return _context3.abrupt(\"break\", 14);\n            case 10:\n              isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n              updateSearchScope = isSelectionMultipleLine;\n              return _context3.abrupt(\"break\", 14);\n            case 13:\n              return _context3.abrupt(\"break\", 14);\n            case 14:\n              opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n              _context3.next = 17;\n              return _get(_getPrototypeOf(FindController.prototype), \"_start\", this).call(this, opts, newState);\n            case 17:\n              if (this._widget) {\n                if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                  this._widget.focusReplaceInput();\n                } else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                  this._widget.focusFindInput();\n                }\n              }\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _start(_x3, _x4) {\n        return _start3.apply(this, arguments);\n      }\n      return _start;\n    }()\n  }, {\n    key: \"highlightFindOptions\",\n    value: function highlightFindOptions() {\n      var ignoreWhenVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this._widget) {\n        this._createFindWidget();\n      }\n      if (this._state.isRevealed && !ignoreWhenVisible) {\n        this._widget.highlightFindOptions();\n      } else {\n        this._findOptionsWidget.highlightFindOptions();\n      }\n    }\n  }, {\n    key: \"_createFindWidget\",\n    value: function _createFindWidget() {\n      this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n      this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n  }]);\n}(CommonFindController);\nFindController = __decorate([__param(1, IContextViewService), __param(2, IContextKeyService), __param(3, IKeybindingService), __param(4, IThemeService), __param(5, INotificationService), __param(6, IStorageService), __param(7, IClipboardService)], FindController);\nexport { FindController };\nexport var StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n  id: FIND_IDS.StartFindAction,\n  label: nls.localize('startFindAction', \"Find\"),\n  alias: 'Find',\n  precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n  kbOpts: {\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n    weight: 100 /* KeybindingWeight.EditorContrib */\n  },\n  menuOpts: {\n    menuId: MenuId.MenubarEditMenu,\n    group: '3_find',\n    title: nls.localize({\n      key: 'miFind',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Find\"),\n    order: 1\n  }\n}));\nStartFindAction.addImplementation(0, function (accessor, editor, args) {\n  var controller = CommonFindController.get(editor);\n  if (!controller) {\n    return false;\n  }\n  return controller.start({\n    forceRevealReplace: false,\n    seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n    seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n    shouldAnimate: true,\n    updateSearchScope: false,\n    loop: editor.getOption(41 /* EditorOption.find */).loop\n  });\n});\nvar findArgDescription = {\n  description: 'Open a new In-Editor Find Widget.',\n  args: [{\n    name: 'Open a new In-Editor Find Widget args',\n    schema: {\n      properties: {\n        searchString: {\n          type: 'string'\n        },\n        replaceString: {\n          type: 'string'\n        },\n        isRegex: {\n          type: 'boolean'\n        },\n        matchWholeWord: {\n          type: 'boolean'\n        },\n        isCaseSensitive: {\n          type: 'boolean'\n        },\n        preserveCase: {\n          type: 'boolean'\n        },\n        findInSelection: {\n          type: 'boolean'\n        }\n      }\n    }\n  }]\n};\nexport var StartFindWithArgsAction = /*#__PURE__*/function (_EditorAction) {\n  function StartFindWithArgsAction() {\n    _classCallCheck(this, StartFindWithArgsAction);\n    return _callSuper(this, StartFindWithArgsAction, [{\n      id: FIND_IDS.StartFindWithArgs,\n      label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n      alias: 'Find With Arguments',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      metadata: findArgDescription\n    }]);\n  }\n  _inherits(StartFindWithArgsAction, _EditorAction);\n  return _createClass(StartFindWithArgsAction, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(accessor, editor, args) {\n        var controller, newState;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              controller = CommonFindController.get(editor);\n              if (!controller) {\n                _context4.next = 6;\n                break;\n              }\n              newState = args ? {\n                searchString: args.searchString,\n                replaceString: args.replaceString,\n                isReplaceRevealed: args.replaceString !== undefined,\n                isRegex: args.isRegex,\n                // isRegexOverride: args.regexOverride,\n                wholeWord: args.matchWholeWord,\n                // wholeWordOverride: args.wholeWordOverride,\n                matchCase: args.isCaseSensitive,\n                // matchCaseOverride: args.matchCaseOverride,\n                preserveCase: args.preserveCase\n                // preserveCaseOverride: args.preserveCaseOverride,\n              } : {};\n              _context4.next = 5;\n              return controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                shouldAnimate: true,\n                updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n              }, newState);\n            case 5:\n              controller.setGlobalBufferTerm(controller.getState().searchString);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function run(_x5, _x6, _x7) {\n        return _run.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var StartFindWithSelectionAction = /*#__PURE__*/function (_EditorAction2) {\n  function StartFindWithSelectionAction() {\n    _classCallCheck(this, StartFindWithSelectionAction);\n    return _callSuper(this, StartFindWithSelectionAction, [{\n      id: FIND_IDS.StartFindWithSelection,\n      label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n      alias: 'Find With Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: null,\n        primary: 0,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    }]);\n  }\n  _inherits(StartFindWithSelectionAction, _EditorAction2);\n  return _createClass(StartFindWithSelectionAction, [{\n    key: \"run\",\n    value: function () {\n      var _run2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(accessor, editor) {\n        var controller;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              controller = CommonFindController.get(editor);\n              if (!controller) {\n                _context5.next = 5;\n                break;\n              }\n              _context5.next = 4;\n              return controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'multiple',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n              });\n            case 4:\n              controller.setGlobalBufferTerm(controller.getState().searchString);\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function run(_x8, _x9) {\n        return _run2.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var MatchFindAction = /*#__PURE__*/function (_EditorAction3) {\n  function MatchFindAction() {\n    _classCallCheck(this, MatchFindAction);\n    return _callSuper(this, MatchFindAction, arguments);\n  }\n  _inherits(MatchFindAction, _EditorAction3);\n  return _createClass(MatchFindAction, [{\n    key: \"run\",\n    value: function () {\n      var _run3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(accessor, editor) {\n        var controller;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              controller = CommonFindController.get(editor);\n              if (!(controller && !this._run(controller))) {\n                _context6.next = 5;\n                break;\n              }\n              _context6.next = 4;\n              return controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n              });\n            case 4:\n              this._run(controller);\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function run(_x10, _x11) {\n        return _run3.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var NextMatchFindAction = /*#__PURE__*/function (_MatchFindAction) {\n  function NextMatchFindAction() {\n    _classCallCheck(this, NextMatchFindAction);\n    return _callSuper(this, NextMatchFindAction, [{\n      id: FIND_IDS.NextMatchFindAction,\n      label: nls.localize('findNextMatchAction', \"Find Next\"),\n      alias: 'Find Next',\n      precondition: undefined,\n      kbOpts: [{\n        kbExpr: EditorContextKeys.focus,\n        primary: 61 /* KeyCode.F3 */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */,\n          secondary: [61 /* KeyCode.F3 */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    }]);\n  }\n  _inherits(NextMatchFindAction, _MatchFindAction);\n  return _createClass(NextMatchFindAction, [{\n    key: \"_run\",\n    value: function _run(controller) {\n      var result = controller.moveToNextMatch();\n      if (result) {\n        controller.editor.pushUndoStop();\n        return true;\n      }\n      return false;\n    }\n  }]);\n}(MatchFindAction);\nexport var PreviousMatchFindAction = /*#__PURE__*/function (_MatchFindAction2) {\n  function PreviousMatchFindAction() {\n    _classCallCheck(this, PreviousMatchFindAction);\n    return _callSuper(this, PreviousMatchFindAction, [{\n      id: FIND_IDS.PreviousMatchFindAction,\n      label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n      alias: 'Find Previous',\n      precondition: undefined,\n      kbOpts: [{\n        kbExpr: EditorContextKeys.focus,\n        primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n        mac: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */,\n          secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    }]);\n  }\n  _inherits(PreviousMatchFindAction, _MatchFindAction2);\n  return _createClass(PreviousMatchFindAction, [{\n    key: \"_run\",\n    value: function _run(controller) {\n      return controller.moveToPrevMatch();\n    }\n  }]);\n}(MatchFindAction);\nexport var MoveToMatchFindAction = /*#__PURE__*/function (_EditorAction4) {\n  function MoveToMatchFindAction() {\n    var _this4;\n    _classCallCheck(this, MoveToMatchFindAction);\n    _this4 = _callSuper(this, MoveToMatchFindAction, [{\n      id: FIND_IDS.GoToMatchFindAction,\n      label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n      alias: 'Go to Match...',\n      precondition: CONTEXT_FIND_WIDGET_VISIBLE\n    }]);\n    _this4._highlightDecorations = [];\n    return _this4;\n  }\n  _inherits(MoveToMatchFindAction, _EditorAction4);\n  return _createClass(MoveToMatchFindAction, [{\n    key: \"run\",\n    value: function run(accessor, editor, args) {\n      var _this5 = this;\n      var controller = CommonFindController.get(editor);\n      if (!controller) {\n        return;\n      }\n      var matchesCount = controller.getState().matchesCount;\n      if (matchesCount < 1) {\n        var notificationService = accessor.get(INotificationService);\n        notificationService.notify({\n          severity: Severity.Warning,\n          message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n        });\n        return;\n      }\n      var quickInputService = accessor.get(IQuickInputService);\n      var inputBox = quickInputService.createInputBox();\n      inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n      var toFindMatchIndex = function toFindMatchIndex(value) {\n        var index = parseInt(value);\n        if (isNaN(index)) {\n          return undefined;\n        }\n        var matchCount = controller.getState().matchesCount;\n        if (index > 0 && index <= matchCount) {\n          return index - 1; // zero based\n        } else if (index < 0 && index >= -matchCount) {\n          return matchCount + index;\n        }\n        return undefined;\n      };\n      var updatePickerAndEditor = function updatePickerAndEditor(value) {\n        var index = toFindMatchIndex(value);\n        if (typeof index === 'number') {\n          // valid\n          inputBox.validationMessage = undefined;\n          controller.goToMatch(index);\n          var currentMatch = controller.getState().currentMatch;\n          if (currentMatch) {\n            _this5.addDecorations(editor, currentMatch);\n          }\n        } else {\n          inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n          _this5.clearDecorations(editor);\n        }\n      };\n      inputBox.onDidChangeValue(function (value) {\n        updatePickerAndEditor(value);\n      });\n      inputBox.onDidAccept(function () {\n        var index = toFindMatchIndex(inputBox.value);\n        if (typeof index === 'number') {\n          controller.goToMatch(index);\n          inputBox.hide();\n        } else {\n          inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n        }\n      });\n      inputBox.onDidHide(function () {\n        _this5.clearDecorations(editor);\n        inputBox.dispose();\n      });\n      inputBox.show();\n    }\n  }, {\n    key: \"clearDecorations\",\n    value: function clearDecorations(editor) {\n      var _this6 = this;\n      editor.changeDecorations(function (changeAccessor) {\n        _this6._highlightDecorations = changeAccessor.deltaDecorations(_this6._highlightDecorations, []);\n      });\n    }\n  }, {\n    key: \"addDecorations\",\n    value: function addDecorations(editor, range) {\n      var _this7 = this;\n      editor.changeDecorations(function (changeAccessor) {\n        _this7._highlightDecorations = changeAccessor.deltaDecorations(_this7._highlightDecorations, [{\n          range: range,\n          options: {\n            description: 'find-match-quick-access-range-highlight',\n            className: 'rangeHighlight',\n            isWholeLine: true\n          }\n        }, {\n          range: range,\n          options: {\n            description: 'find-match-quick-access-range-highlight-overview',\n            overviewRuler: {\n              color: themeColorFromId(overviewRulerRangeHighlight),\n              position: OverviewRulerLane.Full\n            }\n          }\n        }]);\n      });\n    }\n  }]);\n}(EditorAction);\nexport var SelectionMatchFindAction = /*#__PURE__*/function (_EditorAction5) {\n  function SelectionMatchFindAction() {\n    _classCallCheck(this, SelectionMatchFindAction);\n    return _callSuper(this, SelectionMatchFindAction, arguments);\n  }\n  _inherits(SelectionMatchFindAction, _EditorAction5);\n  return _createClass(SelectionMatchFindAction, [{\n    key: \"run\",\n    value: function () {\n      var _run4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(accessor, editor) {\n        var controller, selectionSearchString;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              controller = CommonFindController.get(editor);\n              if (controller) {\n                _context7.next = 3;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 3:\n              selectionSearchString = getSelectionSearchString(editor, 'single', false);\n              if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n              }\n              if (this._run(controller)) {\n                _context7.next = 9;\n                break;\n              }\n              _context7.next = 8;\n              return controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'none',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n              });\n            case 8:\n              this._run(controller);\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function run(_x12, _x13) {\n        return _run4.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var NextSelectionMatchFindAction = /*#__PURE__*/function (_SelectionMatchFindAc) {\n  function NextSelectionMatchFindAction() {\n    _classCallCheck(this, NextSelectionMatchFindAction);\n    return _callSuper(this, NextSelectionMatchFindAction, [{\n      id: FIND_IDS.NextSelectionMatchFindAction,\n      label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n      alias: 'Find Next Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    }]);\n  }\n  _inherits(NextSelectionMatchFindAction, _SelectionMatchFindAc);\n  return _createClass(NextSelectionMatchFindAction, [{\n    key: \"_run\",\n    value: function _run(controller) {\n      return controller.moveToNextMatch();\n    }\n  }]);\n}(SelectionMatchFindAction);\nexport var PreviousSelectionMatchFindAction = /*#__PURE__*/function (_SelectionMatchFindAc2) {\n  function PreviousSelectionMatchFindAction() {\n    _classCallCheck(this, PreviousSelectionMatchFindAction);\n    return _callSuper(this, PreviousSelectionMatchFindAction, [{\n      id: FIND_IDS.PreviousSelectionMatchFindAction,\n      label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n      alias: 'Find Previous Selection',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    }]);\n  }\n  _inherits(PreviousSelectionMatchFindAction, _SelectionMatchFindAc2);\n  return _createClass(PreviousSelectionMatchFindAction, [{\n    key: \"_run\",\n    value: function _run(controller) {\n      return controller.moveToPrevMatch();\n    }\n  }]);\n}(SelectionMatchFindAction);\nexport var StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n  id: FIND_IDS.StartFindReplaceAction,\n  label: nls.localize('startReplace', \"Replace\"),\n  alias: 'Replace',\n  precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n  kbOpts: {\n    kbExpr: null,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */\n    },\n    weight: 100 /* KeybindingWeight.EditorContrib */\n  },\n  menuOpts: {\n    menuId: MenuId.MenubarEditMenu,\n    group: '3_find',\n    title: nls.localize({\n      key: 'miReplace',\n      comment: ['&& denotes a mnemonic']\n    }, \"&&Replace\"),\n    order: 2\n  }\n}));\nStartFindReplaceAction.addImplementation(0, function (accessor, editor, args) {\n  if (!editor.hasModel() || editor.getOption(91 /* EditorOption.readOnly */)) {\n    return false;\n  }\n  var controller = CommonFindController.get(editor);\n  if (!controller) {\n    return false;\n  }\n  var currentSelection = editor.getSelection();\n  var findInputFocused = controller.isFindInputFocused();\n  // we only seed search string from selection when the current selection is single line and not empty,\n  // + the find input is not focused\n  var seedSearchStringFromSelection = !currentSelection.isEmpty() && currentSelection.startLineNumber === currentSelection.endLineNumber && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' && !findInputFocused;\n  /*\n  * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n   * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n  * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n  * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n  */\n  var shouldFocus = findInputFocused || seedSearchStringFromSelection ? 2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n  return controller.start({\n    forceRevealReplace: true,\n    seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n    seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n    shouldFocus: shouldFocus,\n    shouldAnimate: true,\n    updateSearchScope: false,\n    loop: editor.getOption(41 /* EditorOption.find */).loop\n  });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nvar FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.CloseFindWidgetCommand,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: function handler(x) {\n    return x.closeFindWidget();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleCaseSensitiveCommand,\n  precondition: undefined,\n  handler: function handler(x) {\n    return x.toggleCaseSensitive();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleCaseSensitiveKeybinding.primary,\n    mac: ToggleCaseSensitiveKeybinding.mac,\n    win: ToggleCaseSensitiveKeybinding.win,\n    linux: ToggleCaseSensitiveKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleWholeWordCommand,\n  precondition: undefined,\n  handler: function handler(x) {\n    return x.toggleWholeWords();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleWholeWordKeybinding.primary,\n    mac: ToggleWholeWordKeybinding.mac,\n    win: ToggleWholeWordKeybinding.win,\n    linux: ToggleWholeWordKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleRegexCommand,\n  precondition: undefined,\n  handler: function handler(x) {\n    return x.toggleRegex();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleRegexKeybinding.primary,\n    mac: ToggleRegexKeybinding.mac,\n    win: ToggleRegexKeybinding.win,\n    linux: ToggleRegexKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ToggleSearchScopeCommand,\n  precondition: undefined,\n  handler: function handler(x) {\n    return x.toggleSearchScope();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: ToggleSearchScopeKeybinding.primary,\n    mac: ToggleSearchScopeKeybinding.mac,\n    win: ToggleSearchScopeKeybinding.win,\n    linux: ToggleSearchScopeKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.TogglePreserveCaseCommand,\n  precondition: undefined,\n  handler: function handler(x) {\n    return x.togglePreserveCase();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: TogglePreserveCaseKeybinding.primary,\n    mac: TogglePreserveCaseKeybinding.mac,\n    win: TogglePreserveCaseKeybinding.win,\n    linux: TogglePreserveCaseKeybinding.linux\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: function handler(x) {\n    return x.replace();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceOneAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: function handler(x) {\n    return x.replace();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: 3 /* KeyCode.Enter */\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: function handler(x) {\n    return x.replaceAll();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.ReplaceAllAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: function handler(x) {\n    return x.replaceAll();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n    primary: undefined,\n    mac: {\n      primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */\n    }\n  }\n}));\nregisterEditorCommand(new FindCommand({\n  id: FIND_IDS.SelectAllMatchesAction,\n  precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n  handler: function handler(x) {\n    return x.selectAllMatches();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n    kbExpr: EditorContextKeys.focus,\n    primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n  }\n}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","CommonFindController_1","Delayer","Disposable","strings","EditorAction","EditorCommand","MultiEditorAction","registerEditorAction","registerEditorCommand","registerEditorContribution","registerMultiEditorAction","overviewRulerRangeHighlight","EditorContextKeys","OverviewRulerLane","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_REPLACE_INPUT_FOCUSED","FindModelBoundToEditorModel","FIND_IDS","ToggleCaseSensitiveKeybinding","TogglePreserveCaseKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","ToggleWholeWordKeybinding","FindOptionsWidget","FindReplaceState","FindWidget","nls","MenuId","IClipboardService","ContextKeyExpr","IContextKeyService","IContextViewService","IKeybindingService","INotificationService","Severity","IQuickInputService","IStorageService","IThemeService","themeColorFromId","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","editor","seedSearchStringFromSelection","undefined","seedSearchStringFromNonEmptySelection","hasModel","selection","getSelection","startLineNumber","endLineNumber","isEmpty","wordAtPosition","getConfiguredWordAtPosition","getStartPosition","word","getModel","getValueLengthInRange","getValueInRange","CommonFindController","_Disposable","contextKeyService","storageService","clipboardService","notificationService","_this","_classCallCheck","_callSuper","_editor","_findWidgetVisible","bindTo","_contextKeyService","_storageService","_clipboardService","_notificationService","_updateHistoryDelayer","_state","_register","loadQueryState","onFindReplaceStateChange","e","_onStateChanged","_model","onDidChangeModel","shouldRestartFind","isRevealed","disposeModel","change","searchScope","matchCase","getBoolean","wholeWord","isRegex","preserveCase","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","loop","getOption","_inherits","_createClass","get","value","dispose","_get","_getPrototypeOf","prototype","call","saveQueryState","set","reset","searchString","setGlobalBufferTerm","store","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","isFindInputFocused","getValue","getState","closeFindWidget","focus","toggleCaseSensitive","highlightFindOptions","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","_this2","selections","getSelections","map","endColumn","setEndPosition","getLineMaxColumn","filter","element","setSearchString","escapeRegExpCharacters","ignoreWhenVisible","_start2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opts","newState","stateChanges","selectionSearchString","_selectionSearchString","_selectionSearchString2","currentSelections","wrap","_callee$","_context","prev","next","abrupt","_objectSpread","getGlobalBufferTerm","sent","isReplaceRevealed","some","stop","_x","_x2","apply","start","moveToNextMatch","moveToPrevMatch","goToMatch","index","moveToMatch","replace","replaceAll","_a","isTooLargeForHeapOperation","warn","localize","selectAllMatches","_getGlobalBufferTerm","_callee2","_callee2$","_context2","globalFindClipboard","isTooLargeForSyncing","readFindText","text","writeFindText","getContribution","ID","FindController","_CommonFindController","_contextViewService","_keybindingService","_themeService","_this3","_widget","_findOptionsWidget","_start3","_callee3","isSelectionMultipleLine","_callee3$","_context3","_createFindWidget","t0","autoFindInSelection","focusReplaceInput","focusFindInput","_x3","_x4","StartFindAction","id","label","alias","precondition","or","has","kbOpts","kbExpr","primary","weight","menuOpts","menuId","MenubarEditMenu","group","title","comment","order","addImplementation","accessor","args","controller","findArgDescription","description","name","schema","properties","type","replaceString","matchWholeWord","isCaseSensitive","findInSelection","StartFindWithArgsAction","_EditorAction","StartFindWithArgs","metadata","_run","_callee4","_callee4$","_context4","run","_x5","_x6","_x7","StartFindWithSelectionAction","_EditorAction2","StartFindWithSelection","mac","_run2","_callee5","_callee5$","_context5","_x8","_x9","MatchFindAction","_EditorAction3","_run3","_callee6","_callee6$","_context6","_x10","_x11","NextMatchFindAction","_MatchFindAction","secondary","and","result","pushUndoStop","PreviousMatchFindAction","_MatchFindAction2","MoveToMatchFindAction","_EditorAction4","_this4","GoToMatchFindAction","_highlightDecorations","_this5","matchesCount","notify","severity","Warning","message","quickInputService","inputBox","createInputBox","placeholder","toFindMatchIndex","parseInt","isNaN","matchCount","updatePickerAndEditor","validationMessage","currentMatch","addDecorations","clearDecorations","onDidChangeValue","onDidAccept","hide","onDidHide","show","_this6","changeDecorations","changeAccessor","deltaDecorations","range","_this7","options","className","isWholeLine","overviewRuler","color","position","Full","SelectionMatchFindAction","_EditorAction5","_run4","_callee7","_callee7$","_context7","_x12","_x13","NextSelectionMatchFindAction","_SelectionMatchFindAc","PreviousSelectionMatchFindAction","_SelectionMatchFindAc2","StartFindReplaceAction","currentSelection","findInputFocused","FindCommand","bindToContribution","CloseFindWidgetCommand","handler","x","not","ToggleCaseSensitiveCommand","win","linux","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = CommonFindController_1 = class CommonFindController extends Disposable {\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController_1.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService, notificationService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._notificationService = notificationService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(41 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                let selections = this._editor.getSelections();\n                selections = selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter((element) => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    async _start(opts, newState) {\n        this.disposeModel();\n        if (!this._editor.hasModel()) {\n            // cannot do anything with an editor that doesn't have a model...\n            return;\n        }\n        const stateChanges = {\n            ...newState,\n            isRevealed: true\n        };\n        if (opts.seedSearchStringFromSelection === 'single') {\n            const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n            if (selectionSearchString) {\n                if (this._state.isRegex) {\n                    stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                }\n                else {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n        }\n        else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n            const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n            if (selectionSearchString) {\n                stateChanges.searchString = selectionSearchString;\n            }\n        }\n        if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n            const selectionSearchString = await this.getGlobalBufferTerm();\n            if (!this._editor.hasModel()) {\n                // the editor has lost its model in the meantime\n                return;\n            }\n            if (selectionSearchString) {\n                stateChanges.searchString = selectionSearchString;\n            }\n        }\n        // Overwrite isReplaceRevealed\n        if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n            stateChanges.isReplaceRevealed = true;\n        }\n        else if (!this._findWidgetVisible.get()) {\n            stateChanges.isReplaceRevealed = false;\n        }\n        if (opts.updateSearchScope) {\n            const currentSelections = this._editor.getSelections();\n            if (currentSelections.some(selection => !selection.isEmpty())) {\n                stateChanges.searchScope = currentSelections;\n            }\n        }\n        stateChanges.loop = opts.loop;\n        this._state.change(stateChanges, false);\n        if (!this._model) {\n            this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n        }\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        var _a;\n        if (this._model) {\n            if ((_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.isTooLargeForHeapOperation()) {\n                this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n                return false;\n            }\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    async getGlobalBufferTerm() {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            return this._clipboardService.readFindText();\n        }\n        return '';\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = CommonFindController_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService),\n    __param(4, INotificationService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService, notificationService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    async _start(opts, newState) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        const selection = this._editor.getSelection();\n        let updateSearchScope = false;\n        switch (this._editor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n            case 'always':\n                updateSearchScope = true;\n                break;\n            case 'never':\n                updateSearchScope = false;\n                break;\n            case 'multiline': {\n                const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                updateSearchScope = isSelectionMultipleLine;\n                break;\n            }\n            default:\n                break;\n        }\n        opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n        await super._start(opts, newState);\n        if (this._widget) {\n            if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                this._widget.focusReplaceInput();\n            }\n            else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                this._widget.focusFindInput();\n            }\n        }\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    isRegex: { type: 'boolean' },\n                    matchWholeWord: { type: 'boolean' },\n                    isCaseSensitive: { type: 'boolean' },\n                    preserveCase: { type: 'boolean' },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: findArgDescription\n        });\n    }\n    async run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (controller) {\n            const newState = args ? {\n                searchString: args.searchString,\n                replaceString: args.replaceString,\n                isReplaceRevealed: args.replaceString !== undefined,\n                isRegex: args.isRegex,\n                // isRegexOverride: args.regexOverride,\n                wholeWord: args.matchWholeWord,\n                // wholeWordOverride: args.wholeWordOverride,\n                matchCase: args.isCaseSensitive,\n                // matchCaseOverride: args.matchCaseOverride,\n                preserveCase: args.preserveCase,\n                // preserveCaseOverride: args.preserveCaseOverride,\n            } : {};\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                shouldAnimate: true,\n                updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            }, newState);\n            controller.setGlobalBufferTerm(controller.getState().searchString);\n        }\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (controller) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'multiple',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            controller.setGlobalBufferTerm(controller.getState().searchString);\n        }\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (controller && !this._run(controller)) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            this._run(controller);\n        }\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const inputBox = quickInputService.createInputBox();\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        });\n        inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        });\n        inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            inputBox.dispose();\n        });\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n        if (selectionSearchString) {\n            controller.setSearchString(selectionSearchString);\n        }\n        if (!this._run(controller)) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'none',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            this._run(controller);\n        }\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(91 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}