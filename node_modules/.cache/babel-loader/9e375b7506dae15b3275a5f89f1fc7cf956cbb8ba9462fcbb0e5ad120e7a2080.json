{"ast":null,"code":"import _objectSpread from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { ObjectTreeElementCollapseState, TreeError } from './tree.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport var ObjectTreeModel = /*#__PURE__*/function () {\n  function ObjectTreeModel(user, list) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, ObjectTreeModel);\n    this.user = user;\n    this.rootRef = null;\n    this.nodes = new Map();\n    this.nodesByIdentity = new Map();\n    this.model = new IndexTreeModel(user, list, null, options);\n    this.onDidSplice = this.model.onDidSplice;\n    this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n    this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n    if (options.sorter) {\n      this.sorter = {\n        compare: function compare(a, b) {\n          return options.sorter.compare(a.element, b.element);\n        }\n      };\n    }\n    this.identityProvider = options.identityProvider;\n  }\n  return _createClass(ObjectTreeModel, [{\n    key: \"setChildren\",\n    value: function setChildren(element) {\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Iterable.empty();\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var location = this.getElementLocation(element);\n      this._setChildren(location, this.preserveCollapseState(children), options);\n    }\n  }, {\n    key: \"_setChildren\",\n    value: function _setChildren(location) {\n      var _this = this;\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Iterable.empty();\n      var options = arguments.length > 2 ? arguments[2] : undefined;\n      var insertedElements = new Set();\n      var insertedElementIds = new Set();\n      var onDidCreateNode = function onDidCreateNode(node) {\n        var _a;\n        if (node.element === null) {\n          return;\n        }\n        var tnode = node;\n        insertedElements.add(tnode.element);\n        _this.nodes.set(tnode.element, tnode);\n        if (_this.identityProvider) {\n          var id = _this.identityProvider.getId(tnode.element).toString();\n          insertedElementIds.add(id);\n          _this.nodesByIdentity.set(id, tnode);\n        }\n        (_a = options.onDidCreateNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n      };\n      var onDidDeleteNode = function onDidDeleteNode(node) {\n        var _a;\n        if (node.element === null) {\n          return;\n        }\n        var tnode = node;\n        if (!insertedElements.has(tnode.element)) {\n          _this.nodes[\"delete\"](tnode.element);\n        }\n        if (_this.identityProvider) {\n          var id = _this.identityProvider.getId(tnode.element).toString();\n          if (!insertedElementIds.has(id)) {\n            _this.nodesByIdentity[\"delete\"](id);\n          }\n        }\n        (_a = options.onDidDeleteNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n      };\n      this.model.splice([].concat(_toConsumableArray(location), [0]), Number.MAX_VALUE, children, _objectSpread(_objectSpread({}, options), {}, {\n        onDidCreateNode: onDidCreateNode,\n        onDidDeleteNode: onDidDeleteNode\n      }));\n    }\n  }, {\n    key: \"preserveCollapseState\",\n    value: function preserveCollapseState() {\n      var _this2 = this;\n      var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Iterable.empty();\n      if (this.sorter) {\n        elements = _toConsumableArray(elements).sort(this.sorter.compare.bind(this.sorter));\n      }\n      return Iterable.map(elements, function (treeElement) {\n        var node = _this2.nodes.get(treeElement.element);\n        if (!node && _this2.identityProvider) {\n          var id = _this2.identityProvider.getId(treeElement.element).toString();\n          node = _this2.nodesByIdentity.get(id);\n        }\n        if (!node) {\n          var _collapsed;\n          if (typeof treeElement.collapsed === 'undefined') {\n            _collapsed = undefined;\n          } else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed) {\n            _collapsed = true;\n          } else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n            _collapsed = false;\n          } else {\n            _collapsed = Boolean(treeElement.collapsed);\n          }\n          return _objectSpread(_objectSpread({}, treeElement), {}, {\n            children: _this2.preserveCollapseState(treeElement.children),\n            collapsed: _collapsed\n          });\n        }\n        var collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n        var collapsed;\n        if (typeof treeElement.collapsed === 'undefined' || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n          collapsed = node.collapsed;\n        } else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed) {\n          collapsed = true;\n        } else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded) {\n          collapsed = false;\n        } else {\n          collapsed = Boolean(treeElement.collapsed);\n        }\n        return _objectSpread(_objectSpread({}, treeElement), {}, {\n          collapsible: collapsible,\n          collapsed: collapsed,\n          children: _this2.preserveCollapseState(treeElement.children)\n        });\n      });\n    }\n  }, {\n    key: \"rerender\",\n    value: function rerender(element) {\n      var location = this.getElementLocation(element);\n      this.model.rerender(location);\n    }\n  }, {\n    key: \"getFirstElementChild\",\n    value: function getFirstElementChild() {\n      var ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var location = this.getElementLocation(ref);\n      return this.model.getFirstElementChild(location);\n    }\n  }, {\n    key: \"has\",\n    value: function has(element) {\n      return this.nodes.has(element);\n    }\n  }, {\n    key: \"getListIndex\",\n    value: function getListIndex(element) {\n      var location = this.getElementLocation(element);\n      return this.model.getListIndex(location);\n    }\n  }, {\n    key: \"getListRenderCount\",\n    value: function getListRenderCount(element) {\n      var location = this.getElementLocation(element);\n      return this.model.getListRenderCount(location);\n    }\n  }, {\n    key: \"isCollapsible\",\n    value: function isCollapsible(element) {\n      var location = this.getElementLocation(element);\n      return this.model.isCollapsible(location);\n    }\n  }, {\n    key: \"setCollapsible\",\n    value: function setCollapsible(element, collapsible) {\n      var location = this.getElementLocation(element);\n      return this.model.setCollapsible(location, collapsible);\n    }\n  }, {\n    key: \"isCollapsed\",\n    value: function isCollapsed(element) {\n      var location = this.getElementLocation(element);\n      return this.model.isCollapsed(location);\n    }\n  }, {\n    key: \"setCollapsed\",\n    value: function setCollapsed(element, collapsed, recursive) {\n      var location = this.getElementLocation(element);\n      return this.model.setCollapsed(location, collapsed, recursive);\n    }\n  }, {\n    key: \"expandTo\",\n    value: function expandTo(element) {\n      var location = this.getElementLocation(element);\n      this.model.expandTo(location);\n    }\n  }, {\n    key: \"refilter\",\n    value: function refilter() {\n      this.model.refilter();\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (element === null) {\n        return this.model.getNode(this.model.rootRef);\n      }\n      var node = this.nodes.get(element);\n      if (!node) {\n        throw new TreeError(this.user, \"Tree element not found: \".concat(element));\n      }\n      return node;\n    }\n  }, {\n    key: \"getNodeLocation\",\n    value: function getNodeLocation(node) {\n      return node.element;\n    }\n  }, {\n    key: \"getParentNodeLocation\",\n    value: function getParentNodeLocation(element) {\n      if (element === null) {\n        throw new TreeError(this.user, \"Invalid getParentNodeLocation call\");\n      }\n      var node = this.nodes.get(element);\n      if (!node) {\n        throw new TreeError(this.user, \"Tree element not found: \".concat(element));\n      }\n      var location = this.model.getNodeLocation(node);\n      var parentLocation = this.model.getParentNodeLocation(location);\n      var parent = this.model.getNode(parentLocation);\n      return parent.element;\n    }\n  }, {\n    key: \"getElementLocation\",\n    value: function getElementLocation(element) {\n      if (element === null) {\n        return [];\n      }\n      var node = this.nodes.get(element);\n      if (!node) {\n        throw new TreeError(this.user, \"Tree element not found: \".concat(element));\n      }\n      return this.model.getNodeLocation(node);\n    }\n  }]);\n}();","map":{"version":3,"names":["IndexTreeModel","ObjectTreeElementCollapseState","TreeError","Iterable","ObjectTreeModel","user","list","options","arguments","length","undefined","_classCallCheck","rootRef","nodes","Map","nodesByIdentity","model","onDidSplice","onDidChangeCollapseState","onDidChangeRenderNodeCount","sorter","compare","a","b","element","identityProvider","_createClass","key","value","setChildren","children","empty","location","getElementLocation","_setChildren","preserveCollapseState","_this","insertedElements","Set","insertedElementIds","onDidCreateNode","node","_a","tnode","add","set","id","getId","toString","call","onDidDeleteNode","has","splice","concat","_toConsumableArray","Number","MAX_VALUE","_objectSpread","_this2","elements","sort","bind","map","treeElement","get","collapsed","Collapsed","PreserveOrCollapsed","Expanded","PreserveOrExpanded","Boolean","collapsible","rerender","getFirstElementChild","ref","getListIndex","getListRenderCount","isCollapsible","setCollapsible","isCollapsed","setCollapsed","recursive","expandTo","refilter","getNode","getNodeLocation","getParentNodeLocation","parentLocation","parent"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { ObjectTreeElementCollapseState, TreeError } from './tree.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.nodesByIdentity = new Map();\n        this.model = new IndexTreeModel(user, list, null, options);\n        this.onDidSplice = this.model.onDidSplice;\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n        if (options.sorter) {\n            this.sorter = {\n                compare(a, b) {\n                    return options.sorter.compare(a.element, b.element);\n                }\n            };\n        }\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        const location = this.getElementLocation(element);\n        this._setChildren(location, this.preserveCollapseState(children), options);\n    }\n    _setChildren(location, children = Iterable.empty(), options) {\n        const insertedElements = new Set();\n        const insertedElementIds = new Set();\n        const onDidCreateNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            insertedElements.add(tnode.element);\n            this.nodes.set(tnode.element, tnode);\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                insertedElementIds.add(id);\n                this.nodesByIdentity.set(id, tnode);\n            }\n            (_a = options.onDidCreateNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        const onDidDeleteNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            if (!insertedElements.has(tnode.element)) {\n                this.nodes.delete(tnode.element);\n            }\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                if (!insertedElementIds.has(id)) {\n                    this.nodesByIdentity.delete(id);\n                }\n            }\n            (_a = options.onDidDeleteNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        this.model.splice([...location, 0], Number.MAX_VALUE, children, { ...options, onDidCreateNode, onDidDeleteNode });\n    }\n    preserveCollapseState(elements = Iterable.empty()) {\n        if (this.sorter) {\n            elements = [...elements].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return Iterable.map(elements, treeElement => {\n            let node = this.nodes.get(treeElement.element);\n            if (!node && this.identityProvider) {\n                const id = this.identityProvider.getId(treeElement.element).toString();\n                node = this.nodesByIdentity.get(id);\n            }\n            if (!node) {\n                let collapsed;\n                if (typeof treeElement.collapsed === 'undefined') {\n                    collapsed = undefined;\n                }\n                else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed) {\n                    collapsed = true;\n                }\n                else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                    collapsed = false;\n                }\n                else {\n                    collapsed = Boolean(treeElement.collapsed);\n                }\n                return {\n                    ...treeElement,\n                    children: this.preserveCollapseState(treeElement.children),\n                    collapsed\n                };\n            }\n            const collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n            let collapsed;\n            if (typeof treeElement.collapsed === 'undefined' || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                collapsed = node.collapsed;\n            }\n            else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed) {\n                collapsed = true;\n            }\n            else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded) {\n                collapsed = false;\n            }\n            else {\n                collapsed = Boolean(treeElement.collapsed);\n            }\n            return {\n                ...treeElement,\n                collapsible,\n                collapsed,\n                children: this.preserveCollapseState(treeElement.children)\n            };\n        });\n    }\n    rerender(element) {\n        const location = this.getElementLocation(element);\n        this.model.rerender(location);\n    }\n    getFirstElementChild(ref = null) {\n        const location = this.getElementLocation(ref);\n        return this.model.getFirstElementChild(location);\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListRenderCount(location);\n    }\n    isCollapsible(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(element, collapsible) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(element, collapsed, recursive) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(element) {\n        const location = this.getElementLocation(element);\n        this.model.expandTo(location);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getNode(element = null) {\n        if (element === null) {\n            return this.model.getNode(this.model.rootRef);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(element) {\n        if (element === null) {\n            throw new TreeError(this.user, `Invalid getParentNodeLocation call`);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        const location = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(location);\n        const parent = this.model.getNode(parentLocation);\n        return parent.element;\n    }\n    getElementLocation(element) {\n        if (element === null) {\n            return [];\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return this.model.getNodeLocation(node);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}