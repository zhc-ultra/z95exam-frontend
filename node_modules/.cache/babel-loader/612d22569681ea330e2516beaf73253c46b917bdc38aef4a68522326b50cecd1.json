{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/es.typed-array.uint32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nvar ttPolicy = createTrustedTypesPolicy('standaloneColorizer', {\n  createHTML: function createHTML(value) {\n    return value;\n  }\n});\nexport var Colorizer = /*#__PURE__*/function () {\n  function Colorizer() {\n    _classCallCheck(this, Colorizer);\n  }\n  return _createClass(Colorizer, null, [{\n    key: \"colorizeElement\",\n    value: function colorizeElement(themeService, languageService, domNode, options) {\n      options = options || {};\n      var theme = options.theme || 'vs';\n      var mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\n      if (!mimeType) {\n        console.error('Mode not detected');\n        return Promise.resolve();\n      }\n      var languageId = languageService.getLanguageIdByMimeType(mimeType) || mimeType;\n      themeService.setTheme(theme);\n      var text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\n      domNode.className += ' ' + theme;\n      var render = function render(str) {\n        var _a;\n        var trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(str)) !== null && _a !== void 0 ? _a : str;\n        domNode.innerHTML = trustedhtml;\n      };\n      return this.colorize(languageService, text || '', languageId, options).then(render, function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"colorize\",\n    value: function () {\n      var _colorize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(languageService, text, languageId, options) {\n        var languageIdCodec, tabSize, lines, tokenizationSupport;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              languageIdCodec = languageService.languageIdCodec;\n              tabSize = 4;\n              if (options && typeof options.tabSize === 'number') {\n                tabSize = options.tabSize;\n              }\n              if (strings.startsWithUTF8BOM(text)) {\n                text = text.substr(1);\n              }\n              lines = strings.splitLines(text);\n              if (languageService.isRegisteredLanguageId(languageId)) {\n                _context.next = 7;\n                break;\n              }\n              return _context.abrupt(\"return\", _fakeColorize(lines, tabSize, languageIdCodec));\n            case 7:\n              _context.next = 9;\n              return TokenizationRegistry.getOrCreate(languageId);\n            case 9:\n              tokenizationSupport = _context.sent;\n              if (!tokenizationSupport) {\n                _context.next = 12;\n                break;\n              }\n              return _context.abrupt(\"return\", _colorize(lines, tabSize, tokenizationSupport, languageIdCodec));\n            case 12:\n              return _context.abrupt(\"return\", _fakeColorize(lines, tabSize, languageIdCodec));\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function colorize(_x, _x2, _x3, _x4) {\n        return _colorize2.apply(this, arguments);\n      }\n      return colorize;\n    }()\n  }, {\n    key: \"colorizeLine\",\n    value: function colorizeLine(line, mightContainNonBasicASCII, mightContainRTL, tokens) {\n      var tabSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 4;\n      var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\n      var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\n      var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n      return renderResult.html;\n    }\n  }, {\n    key: \"colorizeModelLine\",\n    value: function colorizeModelLine(model, lineNumber) {\n      var tabSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n      var content = model.getLineContent(lineNumber);\n      model.tokenization.forceTokenization(lineNumber);\n      var tokens = model.tokenization.getLineTokens(lineNumber);\n      var inflatedTokens = tokens.inflate();\n      return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\n    }\n  }]);\n}();\nfunction _colorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n  return new Promise(function (c, e) {\n    var execute = function execute() {\n      var result = _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n      if (tokenizationSupport instanceof MonarchTokenizer) {\n        var status = tokenizationSupport.getLoadStatus();\n        if (status.loaded === false) {\n          status.promise.then(execute, e);\n          return;\n        }\n      }\n      c(result);\n    };\n    execute();\n  });\n}\nfunction _fakeColorize(lines, tabSize, languageIdCodec) {\n  var html = [];\n  var defaultMetadata = (0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */ | 1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */ | 2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */) >>> 0;\n  var tokens = new Uint32Array(2);\n  tokens[0] = 0;\n  tokens[1] = defaultMetadata;\n  for (var i = 0, length = lines.length; i < length; i++) {\n    var line = lines[i];\n    tokens[0] = line.length;\n    var lineTokens = new LineTokens(tokens, line, languageIdCodec);\n    var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */true);\n    var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */true);\n    var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n  }\n  return html.join('');\n}\nfunction _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n  var html = [];\n  var state = tokenizationSupport.getInitialState();\n  for (var i = 0, length = lines.length; i < length; i++) {\n    var line = lines[i];\n    var tokenizeResult = tokenizationSupport.tokenizeEncoded(line, true, state);\n    LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\n    var lineTokens = new LineTokens(tokenizeResult.tokens, line, languageIdCodec);\n    var isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */true);\n    var containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */true);\n    var renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n    html = html.concat(renderResult.html);\n    html.push('<br/>');\n    state = tokenizeResult.endState;\n  }\n  return html.join('');\n}","map":{"version":3,"names":["createTrustedTypesPolicy","strings","TokenizationRegistry","LineTokens","RenderLineInput","renderViewLine2","renderViewLine","ViewLineRenderingData","MonarchTokenizer","ttPolicy","createHTML","value","Colorizer","_classCallCheck","_createClass","key","colorizeElement","themeService","languageService","domNode","options","theme","mimeType","getAttribute","console","error","Promise","resolve","languageId","getLanguageIdByMimeType","setTheme","text","firstChild","nodeValue","className","render","str","_a","trustedhtml","innerHTML","colorize","then","err","_colorize2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","languageIdCodec","tabSize","lines","tokenizationSupport","wrap","_callee$","_context","prev","next","startsWithUTF8BOM","substr","splitLines","isRegisteredLanguageId","abrupt","_fakeColorize","getOrCreate","sent","_colorize","stop","_x","_x2","_x3","_x4","apply","arguments","colorizeLine","line","mightContainNonBasicASCII","mightContainRTL","tokens","length","undefined","isBasicASCII","containsRTL","renderResult","html","colorizeModelLine","model","lineNumber","content","getLineContent","tokenization","forceTokenization","getLineTokens","inflatedTokens","inflate","c","e","execute","result","_actualColorize","status","getLoadStatus","loaded","promise","defaultMetadata","Uint32Array","i","lineTokens","concat","push","join","state","getInitialState","tokenizeResult","tokenizeEncoded","convertToEndOffset","endState"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/standalone/browser/colorizer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nconst ttPolicy = createTrustedTypesPolicy('standaloneColorizer', { createHTML: value => value });\nexport class Colorizer {\n    static colorizeElement(themeService, languageService, domNode, options) {\n        options = options || {};\n        const theme = options.theme || 'vs';\n        const mimeType = options.mimeType || domNode.getAttribute('lang') || domNode.getAttribute('data-lang');\n        if (!mimeType) {\n            console.error('Mode not detected');\n            return Promise.resolve();\n        }\n        const languageId = languageService.getLanguageIdByMimeType(mimeType) || mimeType;\n        themeService.setTheme(theme);\n        const text = domNode.firstChild ? domNode.firstChild.nodeValue : '';\n        domNode.className += ' ' + theme;\n        const render = (str) => {\n            var _a;\n            const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(str)) !== null && _a !== void 0 ? _a : str;\n            domNode.innerHTML = trustedhtml;\n        };\n        return this.colorize(languageService, text || '', languageId, options).then(render, (err) => console.error(err));\n    }\n    static async colorize(languageService, text, languageId, options) {\n        const languageIdCodec = languageService.languageIdCodec;\n        let tabSize = 4;\n        if (options && typeof options.tabSize === 'number') {\n            tabSize = options.tabSize;\n        }\n        if (strings.startsWithUTF8BOM(text)) {\n            text = text.substr(1);\n        }\n        const lines = strings.splitLines(text);\n        if (!languageService.isRegisteredLanguageId(languageId)) {\n            return _fakeColorize(lines, tabSize, languageIdCodec);\n        }\n        const tokenizationSupport = await TokenizationRegistry.getOrCreate(languageId);\n        if (tokenizationSupport) {\n            return _colorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n        }\n        return _fakeColorize(lines, tabSize, languageIdCodec);\n    }\n    static colorizeLine(line, mightContainNonBasicASCII, mightContainRTL, tokens, tabSize = 4) {\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, mightContainRTL);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, tokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        return renderResult.html;\n    }\n    static colorizeModelLine(model, lineNumber, tabSize = 4) {\n        const content = model.getLineContent(lineNumber);\n        model.tokenization.forceTokenization(lineNumber);\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        const inflatedTokens = tokens.inflate();\n        return this.colorizeLine(content, model.mightContainNonBasicASCII(), model.mightContainRTL(), inflatedTokens, tabSize);\n    }\n}\nfunction _colorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n    return new Promise((c, e) => {\n        const execute = () => {\n            const result = _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec);\n            if (tokenizationSupport instanceof MonarchTokenizer) {\n                const status = tokenizationSupport.getLoadStatus();\n                if (status.loaded === false) {\n                    status.promise.then(execute, e);\n                    return;\n                }\n            }\n            c(result);\n        };\n        execute();\n    });\n}\nfunction _fakeColorize(lines, tabSize, languageIdCodec) {\n    let html = [];\n    const defaultMetadata = ((0 /* FontStyle.None */ << 11 /* MetadataConsts.FONT_STYLE_OFFSET */)\n        | (1 /* ColorId.DefaultForeground */ << 15 /* MetadataConsts.FOREGROUND_OFFSET */)\n        | (2 /* ColorId.DefaultBackground */ << 24 /* MetadataConsts.BACKGROUND_OFFSET */)) >>> 0;\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = defaultMetadata;\n    for (let i = 0, length = lines.length; i < length; i++) {\n        const line = lines[i];\n        tokens[0] = line.length;\n        const lineTokens = new LineTokens(tokens, line, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        html = html.concat(renderResult.html);\n        html.push('<br/>');\n    }\n    return html.join('');\n}\nfunction _actualColorize(lines, tabSize, tokenizationSupport, languageIdCodec) {\n    let html = [];\n    let state = tokenizationSupport.getInitialState();\n    for (let i = 0, length = lines.length; i < length; i++) {\n        const line = lines[i];\n        const tokenizeResult = tokenizationSupport.tokenizeEncoded(line, true, state);\n        LineTokens.convertToEndOffset(tokenizeResult.tokens, line.length);\n        const lineTokens = new LineTokens(tokenizeResult.tokens, line, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(line, /* check for basic ASCII */ true);\n        const containsRTL = ViewLineRenderingData.containsRTL(line, isBasicASCII, /* check for RTL */ true);\n        const renderResult = renderViewLine(new RenderLineInput(false, true, line, false, isBasicASCII, containsRTL, 0, lineTokens.inflate(), [], tabSize, 0, 0, 0, 0, -1, 'none', false, false, null));\n        html = html.concat(renderResult.html);\n        html.push('<br/>');\n        state = tokenizeResult.endState;\n    }\n    return html.join('');\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,wBAAwB,QAAQ,uCAAuC;AAChF,OAAO,KAAKC,OAAO,MAAM,iCAAiC;AAC1D,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,eAAe,EAAEC,eAAe,IAAIC,cAAc,QAAQ,6CAA6C;AAChH,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,IAAMC,QAAQ,GAAGT,wBAAwB,CAAC,qBAAqB,EAAE;EAAEU,UAAU,EAAE,SAAAA,WAAAC,KAAK;IAAA,OAAIA,KAAK;EAAA;AAAC,CAAC,CAAC;AAChG,WAAaC,SAAS;EAAA,SAAAA,UAAA;IAAAC,eAAA,OAAAD,SAAA;EAAA;EAAA,OAAAE,YAAA,CAAAF,SAAA;IAAAG,GAAA;IAAAJ,KAAA,EAClB,SAAAK,gBAAuBC,YAAY,EAAEC,eAAe,EAAEC,OAAO,EAAEC,OAAO,EAAE;MACpEA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;MACvB,IAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,IAAI,IAAI;MACnC,IAAMC,QAAQ,GAAGF,OAAO,CAACE,QAAQ,IAAIH,OAAO,CAACI,YAAY,CAAC,MAAM,CAAC,IAAIJ,OAAO,CAACI,YAAY,CAAC,WAAW,CAAC;MACtG,IAAI,CAACD,QAAQ,EAAE;QACXE,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;QAClC,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;MAC5B;MACA,IAAMC,UAAU,GAAGV,eAAe,CAACW,uBAAuB,CAACP,QAAQ,CAAC,IAAIA,QAAQ;MAChFL,YAAY,CAACa,QAAQ,CAACT,KAAK,CAAC;MAC5B,IAAMU,IAAI,GAAGZ,OAAO,CAACa,UAAU,GAAGb,OAAO,CAACa,UAAU,CAACC,SAAS,GAAG,EAAE;MACnEd,OAAO,CAACe,SAAS,IAAI,GAAG,GAAGb,KAAK;MAChC,IAAMc,MAAM,GAAG,SAATA,MAAMA,CAAIC,GAAG,EAAK;QACpB,IAAIC,EAAE;QACN,IAAMC,WAAW,GAAG,CAACD,EAAE,GAAG5B,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACC,UAAU,CAAC0B,GAAG,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGD,GAAG;QAC5IjB,OAAO,CAACoB,SAAS,GAAGD,WAAW;MACnC,CAAC;MACD,OAAO,IAAI,CAACE,QAAQ,CAACtB,eAAe,EAAEa,IAAI,IAAI,EAAE,EAAEH,UAAU,EAAER,OAAO,CAAC,CAACqB,IAAI,CAACN,MAAM,EAAE,UAACO,GAAG;QAAA,OAAKlB,OAAO,CAACC,KAAK,CAACiB,GAAG,CAAC;MAAA,EAAC;IACpH;EAAC;IAAA3B,GAAA;IAAAJ,KAAA;MAAA,IAAAgC,UAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAC,QAAsB7B,eAAe,EAAEa,IAAI,EAAEH,UAAU,EAAER,OAAO;QAAA,IAAA4B,eAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,mBAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACtDR,eAAe,GAAG9B,eAAe,CAAC8B,eAAe;cACnDC,OAAO,GAAG,CAAC;cACf,IAAI7B,OAAO,IAAI,OAAOA,OAAO,CAAC6B,OAAO,KAAK,QAAQ,EAAE;gBAChDA,OAAO,GAAG7B,OAAO,CAAC6B,OAAO;cAC7B;cACA,IAAIhD,OAAO,CAACwD,iBAAiB,CAAC1B,IAAI,CAAC,EAAE;gBACjCA,IAAI,GAAGA,IAAI,CAAC2B,MAAM,CAAC,CAAC,CAAC;cACzB;cACMR,KAAK,GAAGjD,OAAO,CAAC0D,UAAU,CAAC5B,IAAI,CAAC;cAAA,IACjCb,eAAe,CAAC0C,sBAAsB,CAAChC,UAAU,CAAC;gBAAA0B,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAO,MAAA,WAC5CC,aAAa,CAACZ,KAAK,EAAED,OAAO,EAAED,eAAe,CAAC;YAAA;cAAAM,QAAA,CAAAE,IAAA;cAAA,OAEvBtD,oBAAoB,CAAC6D,WAAW,CAACnC,UAAU,CAAC;YAAA;cAAxEuB,mBAAmB,GAAAG,QAAA,CAAAU,IAAA;cAAA,KACrBb,mBAAmB;gBAAAG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAO,MAAA,WACZI,SAAS,CAACf,KAAK,EAAED,OAAO,EAAEE,mBAAmB,EAAEH,eAAe,CAAC;YAAA;cAAA,OAAAM,QAAA,CAAAO,MAAA,WAEnEC,aAAa,CAACZ,KAAK,EAAED,OAAO,EAAED,eAAe,CAAC;YAAA;YAAA;cAAA,OAAAM,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAnB,OAAA;MAAA,CACxD;MAAA,SAAAP,SAAA2B,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAA3B,UAAA,CAAA4B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAhC,QAAA;IAAA;EAAA;IAAAzB,GAAA;IAAAJ,KAAA,EACD,SAAA8D,aAAoBC,IAAI,EAAEC,yBAAyB,EAAEC,eAAe,EAAEC,MAAM,EAAe;MAAA,IAAb5B,OAAO,GAAAuB,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAG,CAAC;MACrF,IAAMQ,YAAY,GAAGzE,qBAAqB,CAACyE,YAAY,CAACN,IAAI,EAAEC,yBAAyB,CAAC;MACxF,IAAMM,WAAW,GAAG1E,qBAAqB,CAAC0E,WAAW,CAACP,IAAI,EAAEM,YAAY,EAAEJ,eAAe,CAAC;MAC1F,IAAMM,YAAY,GAAG5E,cAAc,CAAC,IAAIF,eAAe,CAAC,KAAK,EAAE,IAAI,EAAEsE,IAAI,EAAE,KAAK,EAAEM,YAAY,EAAEC,WAAW,EAAE,CAAC,EAAEJ,MAAM,EAAE,EAAE,EAAE5B,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;MACjL,OAAOiC,YAAY,CAACC,IAAI;IAC5B;EAAC;IAAApE,GAAA;IAAAJ,KAAA,EACD,SAAAyE,kBAAyBC,KAAK,EAAEC,UAAU,EAAe;MAAA,IAAbrC,OAAO,GAAAuB,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAAG,CAAC;MACnD,IAAMe,OAAO,GAAGF,KAAK,CAACG,cAAc,CAACF,UAAU,CAAC;MAChDD,KAAK,CAACI,YAAY,CAACC,iBAAiB,CAACJ,UAAU,CAAC;MAChD,IAAMT,MAAM,GAAGQ,KAAK,CAACI,YAAY,CAACE,aAAa,CAACL,UAAU,CAAC;MAC3D,IAAMM,cAAc,GAAGf,MAAM,CAACgB,OAAO,CAAC,CAAC;MACvC,OAAO,IAAI,CAACpB,YAAY,CAACc,OAAO,EAAEF,KAAK,CAACV,yBAAyB,CAAC,CAAC,EAAEU,KAAK,CAACT,eAAe,CAAC,CAAC,EAAEgB,cAAc,EAAE3C,OAAO,CAAC;IAC1H;EAAC;AAAA;AAEL,SAASgB,SAASA,CAACf,KAAK,EAAED,OAAO,EAAEE,mBAAmB,EAAEH,eAAe,EAAE;EACrE,OAAO,IAAItB,OAAO,CAAC,UAACoE,CAAC,EAAEC,CAAC,EAAK;IACzB,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;MAClB,IAAMC,MAAM,GAAGC,eAAe,CAAChD,KAAK,EAAED,OAAO,EAAEE,mBAAmB,EAAEH,eAAe,CAAC;MACpF,IAAIG,mBAAmB,YAAY3C,gBAAgB,EAAE;QACjD,IAAM2F,MAAM,GAAGhD,mBAAmB,CAACiD,aAAa,CAAC,CAAC;QAClD,IAAID,MAAM,CAACE,MAAM,KAAK,KAAK,EAAE;UACzBF,MAAM,CAACG,OAAO,CAAC7D,IAAI,CAACuD,OAAO,EAAED,CAAC,CAAC;UAC/B;QACJ;MACJ;MACAD,CAAC,CAACG,MAAM,CAAC;IACb,CAAC;IACDD,OAAO,CAAC,CAAC;EACb,CAAC,CAAC;AACN;AACA,SAASlC,aAAaA,CAACZ,KAAK,EAAED,OAAO,EAAED,eAAe,EAAE;EACpD,IAAImC,IAAI,GAAG,EAAE;EACb,IAAMoB,eAAe,GAAG,CAAE,CAAC,CAAC,wBAAwB,EAAE,CAAC,yCAChD,CAAC,CAAC,mCAAmC,EAAE,CAAC,sCAAuC,GAC/E,CAAC,CAAC,mCAAmC,EAAE,CAAC,sCAAuC,MAAM,CAAC;EAC7F,IAAM1B,MAAM,GAAG,IAAI2B,WAAW,CAAC,CAAC,CAAC;EACjC3B,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;EACbA,MAAM,CAAC,CAAC,CAAC,GAAG0B,eAAe;EAC3B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAE3B,MAAM,GAAG5B,KAAK,CAAC4B,MAAM,EAAE2B,CAAC,GAAG3B,MAAM,EAAE2B,CAAC,EAAE,EAAE;IACpD,IAAM/B,IAAI,GAAGxB,KAAK,CAACuD,CAAC,CAAC;IACrB5B,MAAM,CAAC,CAAC,CAAC,GAAGH,IAAI,CAACI,MAAM;IACvB,IAAM4B,UAAU,GAAG,IAAIvG,UAAU,CAAC0E,MAAM,EAAEH,IAAI,EAAE1B,eAAe,CAAC;IAChE,IAAMgC,YAAY,GAAGzE,qBAAqB,CAACyE,YAAY,CAACN,IAAI,EAAE,2BAA4B,IAAI,CAAC;IAC/F,IAAMO,WAAW,GAAG1E,qBAAqB,CAAC0E,WAAW,CAACP,IAAI,EAAEM,YAAY,EAAE,mBAAoB,IAAI,CAAC;IACnG,IAAME,YAAY,GAAG5E,cAAc,CAAC,IAAIF,eAAe,CAAC,KAAK,EAAE,IAAI,EAAEsE,IAAI,EAAE,KAAK,EAAEM,YAAY,EAAEC,WAAW,EAAE,CAAC,EAAEyB,UAAU,EAAE,EAAE,EAAEzD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACrLkC,IAAI,GAAGA,IAAI,CAACwB,MAAM,CAACzB,YAAY,CAACC,IAAI,CAAC;IACrCA,IAAI,CAACyB,IAAI,CAAC,OAAO,CAAC;EACtB;EACA,OAAOzB,IAAI,CAAC0B,IAAI,CAAC,EAAE,CAAC;AACxB;AACA,SAASX,eAAeA,CAAChD,KAAK,EAAED,OAAO,EAAEE,mBAAmB,EAAEH,eAAe,EAAE;EAC3E,IAAImC,IAAI,GAAG,EAAE;EACb,IAAI2B,KAAK,GAAG3D,mBAAmB,CAAC4D,eAAe,CAAC,CAAC;EACjD,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAE3B,MAAM,GAAG5B,KAAK,CAAC4B,MAAM,EAAE2B,CAAC,GAAG3B,MAAM,EAAE2B,CAAC,EAAE,EAAE;IACpD,IAAM/B,IAAI,GAAGxB,KAAK,CAACuD,CAAC,CAAC;IACrB,IAAMO,cAAc,GAAG7D,mBAAmB,CAAC8D,eAAe,CAACvC,IAAI,EAAE,IAAI,EAAEoC,KAAK,CAAC;IAC7E3G,UAAU,CAAC+G,kBAAkB,CAACF,cAAc,CAACnC,MAAM,EAAEH,IAAI,CAACI,MAAM,CAAC;IACjE,IAAM4B,UAAU,GAAG,IAAIvG,UAAU,CAAC6G,cAAc,CAACnC,MAAM,EAAEH,IAAI,EAAE1B,eAAe,CAAC;IAC/E,IAAMgC,YAAY,GAAGzE,qBAAqB,CAACyE,YAAY,CAACN,IAAI,EAAE,2BAA4B,IAAI,CAAC;IAC/F,IAAMO,WAAW,GAAG1E,qBAAqB,CAAC0E,WAAW,CAACP,IAAI,EAAEM,YAAY,EAAE,mBAAoB,IAAI,CAAC;IACnG,IAAME,YAAY,GAAG5E,cAAc,CAAC,IAAIF,eAAe,CAAC,KAAK,EAAE,IAAI,EAAEsE,IAAI,EAAE,KAAK,EAAEM,YAAY,EAAEC,WAAW,EAAE,CAAC,EAAEyB,UAAU,CAACb,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE5C,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC/LkC,IAAI,GAAGA,IAAI,CAACwB,MAAM,CAACzB,YAAY,CAACC,IAAI,CAAC;IACrCA,IAAI,CAACyB,IAAI,CAAC,OAAO,CAAC;IAClBE,KAAK,GAAGE,cAAc,CAACG,QAAQ;EACnC;EACA,OAAOhC,IAAI,CAAC0B,IAAI,CAAC,EAAE,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}