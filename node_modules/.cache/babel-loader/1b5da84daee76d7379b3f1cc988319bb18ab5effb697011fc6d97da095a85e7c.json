{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.string.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { combinedDisposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n/**\n * Stores all built-in and extension-provided keybindings (but not ones that user defines themselves)\n */\nvar KeybindingsRegistryImpl = /*#__PURE__*/function () {\n  function KeybindingsRegistryImpl() {\n    _classCallCheck(this, KeybindingsRegistryImpl);\n    this._coreKeybindings = new LinkedList();\n    this._extensionKeybindings = [];\n    this._cachedMergedKeybindings = null;\n  }\n  /**\n   * Take current platform into account and reduce to primary & secondary.\n   */\n  return _createClass(KeybindingsRegistryImpl, [{\n    key: \"registerKeybindingRule\",\n    value: function registerKeybindingRule(rule) {\n      var actualKb = KeybindingsRegistryImpl.bindToCurrentPlatform(rule);\n      var result = new DisposableStore();\n      if (actualKb && actualKb.primary) {\n        var kk = decodeKeybinding(actualKb.primary, OS);\n        if (kk) {\n          result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, 0, rule.when));\n        }\n      }\n      if (actualKb && Array.isArray(actualKb.secondary)) {\n        for (var i = 0, len = actualKb.secondary.length; i < len; i++) {\n          var k = actualKb.secondary[i];\n          var _kk = decodeKeybinding(k, OS);\n          if (_kk) {\n            result.add(this._registerDefaultKeybinding(_kk, rule.id, rule.args, rule.weight, -i - 1, rule.when));\n          }\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"registerCommandAndKeybindingRule\",\n    value: function registerCommandAndKeybindingRule(desc) {\n      return combinedDisposable(this.registerKeybindingRule(desc), CommandsRegistry.registerCommand(desc));\n    }\n  }, {\n    key: \"_registerDefaultKeybinding\",\n    value: function _registerDefaultKeybinding(keybinding, commandId, commandArgs, weight1, weight2, when) {\n      var _this = this;\n      var remove = this._coreKeybindings.push({\n        keybinding: keybinding,\n        command: commandId,\n        commandArgs: commandArgs,\n        when: when,\n        weight1: weight1,\n        weight2: weight2,\n        extensionId: null,\n        isBuiltinExtension: false\n      });\n      this._cachedMergedKeybindings = null;\n      return toDisposable(function () {\n        remove();\n        _this._cachedMergedKeybindings = null;\n      });\n    }\n  }, {\n    key: \"getDefaultKeybindings\",\n    value: function getDefaultKeybindings() {\n      if (!this._cachedMergedKeybindings) {\n        this._cachedMergedKeybindings = Array.from(this._coreKeybindings).concat(this._extensionKeybindings);\n        this._cachedMergedKeybindings.sort(sorter);\n      }\n      return this._cachedMergedKeybindings.slice(0);\n    }\n  }], [{\n    key: \"bindToCurrentPlatform\",\n    value: function bindToCurrentPlatform(kb) {\n      if (OS === 1 /* OperatingSystem.Windows */) {\n        if (kb && kb.win) {\n          return kb.win;\n        }\n      } else if (OS === 2 /* OperatingSystem.Macintosh */) {\n        if (kb && kb.mac) {\n          return kb.mac;\n        }\n      } else {\n        if (kb && kb.linux) {\n          return kb.linux;\n        }\n      }\n      return kb;\n    }\n  }]);\n}();\nexport var KeybindingsRegistry = new KeybindingsRegistryImpl();\n// Define extension point ids\nexport var Extensions = {\n  EditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);\nfunction sorter(a, b) {\n  if (a.weight1 !== b.weight1) {\n    return a.weight1 - b.weight1;\n  }\n  if (a.command && b.command) {\n    if (a.command < b.command) {\n      return -1;\n    }\n    if (a.command > b.command) {\n      return 1;\n    }\n  }\n  return a.weight2 - b.weight2;\n}","map":{"version":3,"names":["decodeKeybinding","OS","CommandsRegistry","Registry","combinedDisposable","DisposableStore","toDisposable","LinkedList","KeybindingsRegistryImpl","_classCallCheck","_coreKeybindings","_extensionKeybindings","_cachedMergedKeybindings","_createClass","key","value","registerKeybindingRule","rule","actualKb","bindToCurrentPlatform","result","primary","kk","add","_registerDefaultKeybinding","id","args","weight","when","Array","isArray","secondary","i","len","length","k","registerCommandAndKeybindingRule","desc","registerCommand","keybinding","commandId","commandArgs","weight1","weight2","_this","remove","push","command","extensionId","isBuiltinExtension","getDefaultKeybindings","from","concat","sort","sorter","slice","kb","win","mac","linux","KeybindingsRegistry","Extensions","EditorModes","a","b"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { combinedDisposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n/**\n * Stores all built-in and extension-provided keybindings (but not ones that user defines themselves)\n */\nclass KeybindingsRegistryImpl {\n    constructor() {\n        this._coreKeybindings = new LinkedList();\n        this._extensionKeybindings = [];\n        this._cachedMergedKeybindings = null;\n    }\n    /**\n     * Take current platform into account and reduce to primary & secondary.\n     */\n    static bindToCurrentPlatform(kb) {\n        if (OS === 1 /* OperatingSystem.Windows */) {\n            if (kb && kb.win) {\n                return kb.win;\n            }\n        }\n        else if (OS === 2 /* OperatingSystem.Macintosh */) {\n            if (kb && kb.mac) {\n                return kb.mac;\n            }\n        }\n        else {\n            if (kb && kb.linux) {\n                return kb.linux;\n            }\n        }\n        return kb;\n    }\n    registerKeybindingRule(rule) {\n        const actualKb = KeybindingsRegistryImpl.bindToCurrentPlatform(rule);\n        const result = new DisposableStore();\n        if (actualKb && actualKb.primary) {\n            const kk = decodeKeybinding(actualKb.primary, OS);\n            if (kk) {\n                result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, 0, rule.when));\n            }\n        }\n        if (actualKb && Array.isArray(actualKb.secondary)) {\n            for (let i = 0, len = actualKb.secondary.length; i < len; i++) {\n                const k = actualKb.secondary[i];\n                const kk = decodeKeybinding(k, OS);\n                if (kk) {\n                    result.add(this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, -i - 1, rule.when));\n                }\n            }\n        }\n        return result;\n    }\n    registerCommandAndKeybindingRule(desc) {\n        return combinedDisposable(this.registerKeybindingRule(desc), CommandsRegistry.registerCommand(desc));\n    }\n    _registerDefaultKeybinding(keybinding, commandId, commandArgs, weight1, weight2, when) {\n        const remove = this._coreKeybindings.push({\n            keybinding: keybinding,\n            command: commandId,\n            commandArgs: commandArgs,\n            when: when,\n            weight1: weight1,\n            weight2: weight2,\n            extensionId: null,\n            isBuiltinExtension: false\n        });\n        this._cachedMergedKeybindings = null;\n        return toDisposable(() => {\n            remove();\n            this._cachedMergedKeybindings = null;\n        });\n    }\n    getDefaultKeybindings() {\n        if (!this._cachedMergedKeybindings) {\n            this._cachedMergedKeybindings = Array.from(this._coreKeybindings).concat(this._extensionKeybindings);\n            this._cachedMergedKeybindings.sort(sorter);\n        }\n        return this._cachedMergedKeybindings.slice(0);\n    }\n}\nexport const KeybindingsRegistry = new KeybindingsRegistryImpl();\n// Define extension point ids\nexport const Extensions = {\n    EditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);\nfunction sorter(a, b) {\n    if (a.weight1 !== b.weight1) {\n        return a.weight1 - b.weight1;\n    }\n    if (a.command && b.command) {\n        if (a.command < b.command) {\n            return -1;\n        }\n        if (a.command > b.command) {\n            return 1;\n        }\n    }\n    return a.weight2 - b.weight2;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}