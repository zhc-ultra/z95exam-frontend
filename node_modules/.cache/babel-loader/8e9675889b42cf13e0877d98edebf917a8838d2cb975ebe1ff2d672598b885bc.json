{"ast":null,"code":"import _objectSpread from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SuggestController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nvar _sticky = false;\nvar LineSuffix = /*#__PURE__*/function () {\n  function LineSuffix(_model, _position) {\n    var _this = this;\n    _classCallCheck(this, LineSuffix);\n    this._model = _model;\n    this._position = _position;\n    this._decorationOptions = ModelDecorationOptions.register({\n      description: 'suggest-line-suffix',\n      stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n    });\n    // spy on what's happening right of the cursor. two cases:\n    // 1. end of line -> check that it's still end of line\n    // 2. mid of line -> add a marker and compute the delta\n    var maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n    if (maxColumn !== _position.column) {\n      var offset = _model.getOffsetAt(_position);\n      var end = _model.getPositionAt(offset + 1);\n      _model.changeDecorations(function (accessor) {\n        if (_this._marker) {\n          accessor.removeDecoration(_this._marker);\n        }\n        _this._marker = accessor.addDecoration(Range.fromPositions(_position, end), _this._decorationOptions);\n      });\n    }\n  }\n  return _createClass(LineSuffix, [{\n    key: \"dispose\",\n    value: function dispose() {\n      var _this2 = this;\n      if (this._marker && !this._model.isDisposed()) {\n        this._model.changeDecorations(function (accessor) {\n          accessor.removeDecoration(_this2._marker);\n          _this2._marker = undefined;\n        });\n      }\n    }\n  }, {\n    key: \"delta\",\n    value: function delta(position) {\n      if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n        // bail out early if things seems fishy\n        return 0;\n      }\n      // read the marker (in case suggest was triggered at line end) or compare\n      // the cursor to the line end.\n      if (this._marker) {\n        var range = this._model.getDecorationRange(this._marker);\n        var end = this._model.getOffsetAt(range.getStartPosition());\n        return end - this._model.getOffsetAt(position);\n      } else {\n        return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n      }\n    }\n  }]);\n}();\nvar SuggestController = SuggestController_1 = /*#__PURE__*/function () {\n  function SuggestController(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n    var _this3 = this;\n    _classCallCheck(this, SuggestController);\n    this._memoryService = _memoryService;\n    this._commandService = _commandService;\n    this._contextKeyService = _contextKeyService;\n    this._instantiationService = _instantiationService;\n    this._logService = _logService;\n    this._telemetryService = _telemetryService;\n    this._lineSuffix = new MutableDisposable();\n    this._toDispose = new DisposableStore();\n    this._selectors = new PriorityRegistry(function (s) {\n      return s.priority;\n    });\n    this._onWillInsertSuggestItem = new Emitter();\n    this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\n    this.editor = editor;\n    this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n    // default selector\n    this._selectors.register({\n      priority: 0,\n      select: function select(model, pos, items) {\n        return _this3._memoryService.select(model, pos, items);\n      }\n    });\n    // context key: update insert/replace mode\n    var ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n    ctxInsertMode.set(editor.getOption(118 /* EditorOption.suggest */).insertMode);\n    this._toDispose.add(this.model.onDidTrigger(function () {\n      return ctxInsertMode.set(editor.getOption(118 /* EditorOption.suggest */).insertMode);\n    }));\n    this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), function () {\n      var widget = _this3._instantiationService.createInstance(SuggestWidget, _this3.editor);\n      _this3._toDispose.add(widget);\n      _this3._toDispose.add(widget.onDidSelect(function (item) {\n        return _this3._insertSuggestion(item, 0 /* InsertFlags.None */);\n      }, _this3));\n      // Wire up logic to accept a suggestion on certain characters\n      var commitCharacterController = new CommitCharacterController(_this3.editor, widget, _this3.model, function (item) {\n        return _this3._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */);\n      });\n      _this3._toDispose.add(commitCharacterController);\n      // Wire up makes text edit context key\n      var ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(_this3._contextKeyService);\n      var ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(_this3._contextKeyService);\n      var ctxCanResolve = SuggestContext.CanResolve.bindTo(_this3._contextKeyService);\n      _this3._toDispose.add(toDisposable(function () {\n        ctxMakesTextEdit.reset();\n        ctxHasInsertAndReplace.reset();\n        ctxCanResolve.reset();\n      }));\n      _this3._toDispose.add(widget.onDidFocus(function (_ref) {\n        var item = _ref.item;\n        // (ctx: makesTextEdit)\n        var position = _this3.editor.getPosition();\n        var startColumn = item.editStart.column;\n        var endColumn = position.column;\n        var value = true;\n        if (_this3.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart' && _this3.model.state === 2 /* State.Auto */ && !item.completion.additionalTextEdits && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) && endColumn - startColumn === item.completion.insertText.length) {\n          var oldText = _this3.editor.getModel().getValueInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: startColumn,\n            endLineNumber: position.lineNumber,\n            endColumn: endColumn\n          });\n          value = oldText !== item.completion.insertText;\n        }\n        ctxMakesTextEdit.set(value);\n        // (ctx: hasInsertAndReplaceRange)\n        ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n        // (ctx: canResolve)\n        ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n      }));\n      _this3._toDispose.add(widget.onDetailsKeyDown(function (e) {\n        // cmd + c on macOS, ctrl + c on Win / Linux\n        if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) || platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */))) {\n          e.stopPropagation();\n          return;\n        }\n        if (!e.toKeyCodeChord().isModifierKey()) {\n          _this3.editor.focus();\n        }\n      }));\n      return widget;\n    }));\n    // Wire up text overtyping capture\n    this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), function () {\n      return _this3._toDispose.add(new OvertypingCapturer(_this3.editor, _this3.model));\n    }));\n    this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), function () {\n      return _this3._toDispose.add(new SuggestAlternatives(_this3.editor, _this3._contextKeyService));\n    }));\n    this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n    this._toDispose.add(this.model.onDidTrigger(function (e) {\n      _this3.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n      _this3._lineSuffix.value = new LineSuffix(_this3.editor.getModel(), e.position);\n    }));\n    this._toDispose.add(this.model.onDidSuggest(function (e) {\n      if (e.triggerOptions.shy) {\n        return;\n      }\n      var index = -1;\n      var _iterator = _createForOfIteratorHelper(_this3._selectors.itemsOrderedByPriorityDesc),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var selector = _step.value;\n          index = selector.select(_this3.editor.getModel(), _this3.editor.getPosition(), e.completionModel.items);\n          if (index !== -1) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (index === -1) {\n        index = 0;\n      }\n      if (_this3.model.state === 0 /* State.Idle */) {\n        // selecting an item can \"pump\" out selection/cursor change events\n        // which can cancel suggest halfway through this function. therefore\n        // we need to check again and bail if the session has been canceled\n        return;\n      }\n      var noFocus = false;\n      if (e.triggerOptions.auto) {\n        // don't \"focus\" item when configured to do\n        var options = _this3.editor.getOption(118 /* EditorOption.suggest */);\n        if (options.selectionMode === 'never' || options.selectionMode === 'always') {\n          // simple: always or never\n          noFocus = options.selectionMode === 'never';\n        } else if (options.selectionMode === 'whenTriggerCharacter') {\n          // on with trigger character\n          noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\n        } else if (options.selectionMode === 'whenQuickSuggestion') {\n          // without trigger character or when refiltering\n          noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\n        }\n      }\n      _this3.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n    }));\n    this._toDispose.add(this.model.onDidCancel(function (e) {\n      if (!e.retrigger) {\n        _this3.widget.value.hideWidget();\n      }\n    }));\n    this._toDispose.add(this.editor.onDidBlurEditorWidget(function () {\n      if (!_sticky) {\n        _this3.model.cancel();\n        _this3.model.clear();\n      }\n    }));\n    // Manage the acceptSuggestionsOnEnter context key\n    var acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n    var updateFromConfig = function updateFromConfig() {\n      var acceptSuggestionOnEnter = _this3.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\n      acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n    };\n    this._toDispose.add(this.editor.onDidChangeConfiguration(function () {\n      return updateFromConfig();\n    }));\n    updateFromConfig();\n  }\n  return _createClass(SuggestController, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._alternatives.dispose();\n      this._toDispose.dispose();\n      this.widget.dispose();\n      this.model.dispose();\n      this._lineSuffix.dispose();\n      this._onWillInsertSuggestItem.dispose();\n    }\n  }, {\n    key: \"_insertSuggestion\",\n    value: function _insertSuggestion(event, flags) {\n      var _this4 = this;\n      if (!event || !event.item) {\n        this._alternatives.value.reset();\n        this.model.cancel();\n        this.model.clear();\n        return;\n      }\n      if (!this.editor.hasModel()) {\n        return;\n      }\n      var snippetController = SnippetController2.get(this.editor);\n      if (!snippetController) {\n        return;\n      }\n      this._onWillInsertSuggestItem.fire({\n        item: event.item\n      });\n      var model = this.editor.getModel();\n      var modelVersionNow = model.getAlternativeVersionId();\n      var item = event.item;\n      //\n      var tasks = [];\n      var cts = new CancellationTokenSource();\n      // pushing undo stops *before* additional text edits and\n      // *after* the main edit\n      if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\n        this.editor.pushUndoStop();\n      }\n      // compute overwrite[Before|After] deltas BEFORE applying extra edits\n      var info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\n      // keep item in memory\n      this._memoryService.memorize(model, this.editor.getPosition(), item);\n      var isResolved = item.isResolved;\n      // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n      var _commandExectionDuration = -1;\n      var _additionalEditsAppliedAsync = -1;\n      if (Array.isArray(item.completion.additionalTextEdits)) {\n        // cancel -> stops all listening and closes widget\n        this.model.cancel();\n        // sync additional edits\n        var scrollState = StableEditorScrollState.capture(this.editor);\n        this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(function (edit) {\n          var range = Range.lift(edit.range);\n          if (range.startLineNumber === item.position.lineNumber && range.startColumn > item.position.column) {\n            // shift additional edit when it is \"after\" the completion insertion position\n            var columnDelta = _this4.editor.getPosition().column - item.position.column;\n            var startColumnDelta = columnDelta;\n            var endColumnDelta = Range.spansMultipleLines(range) ? 0 : columnDelta;\n            range = new Range(range.startLineNumber, range.startColumn + startColumnDelta, range.endLineNumber, range.endColumn + endColumnDelta);\n          }\n          return EditOperation.replaceMove(range, edit.text);\n        }));\n        scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n      } else if (!isResolved) {\n        // async additional edits\n        var sw = new StopWatch();\n        var position;\n        var docListener = model.onDidChangeContent(function (e) {\n          if (e.isFlush) {\n            cts.cancel();\n            docListener.dispose();\n            return;\n          }\n          var _iterator2 = _createForOfIteratorHelper(e.changes),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var change = _step2.value;\n              var thisPosition = Range.getEndPosition(change.range);\n              if (!position || Position.isBefore(thisPosition, position)) {\n                position = thisPosition;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        });\n        var oldFlags = flags;\n        flags |= 2 /* InsertFlags.NoAfterUndoStop */;\n        var didType = false;\n        var typeListener = this.editor.onWillType(function () {\n          typeListener.dispose();\n          didType = true;\n          if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n            _this4.editor.pushUndoStop();\n          }\n        });\n        tasks.push(item.resolve(cts.token).then(function () {\n          if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n            return undefined;\n          }\n          if (position && item.completion.additionalTextEdits.some(function (edit) {\n            return Position.isBefore(position, Range.getStartPosition(edit.range));\n          })) {\n            return false;\n          }\n          if (didType) {\n            _this4.editor.pushUndoStop();\n          }\n          var scrollState = StableEditorScrollState.capture(_this4.editor);\n          _this4.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(function (edit) {\n            return EditOperation.replaceMove(Range.lift(edit.range), edit.text);\n          }));\n          scrollState.restoreRelativeVerticalPositionOfCursor(_this4.editor);\n          if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n            _this4.editor.pushUndoStop();\n          }\n          return true;\n        }).then(function (applied) {\n          _this4._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n          _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n        })[\"finally\"](function () {\n          docListener.dispose();\n          typeListener.dispose();\n        }));\n      }\n      var insertText = item.completion.insertText;\n      if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\n        insertText = SnippetParser.escape(insertText);\n      }\n      // cancel -> stops all listening and closes widget\n      this.model.cancel();\n      snippetController.insert(insertText, {\n        overwriteBefore: info.overwriteBefore,\n        overwriteAfter: info.overwriteAfter,\n        undoStopBefore: false,\n        undoStopAfter: false,\n        adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\n        clipboardText: event.model.clipboardText,\n        overtypingCapturer: this._overtypingCapturer.value\n      });\n      if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n        this.editor.pushUndoStop();\n      }\n      if (item.completion.command) {\n        if (item.completion.command.id === TriggerSuggestAction.id) {\n          // retigger\n          this.model.trigger({\n            auto: true,\n            retrigger: true\n          });\n        } else {\n          var _this$_commandService;\n          // exec command, done\n          var _sw = new StopWatch();\n          tasks.push((_this$_commandService = this._commandService).executeCommand.apply(_this$_commandService, [item.completion.command.id].concat(_toConsumableArray(item.completion.command.arguments ? _toConsumableArray(item.completion.command.arguments) : [])))[\"catch\"](function (e) {\n            if (item.completion.extensionId) {\n              onUnexpectedExternalError(e);\n            } else {\n              onUnexpectedError(e);\n            }\n          })[\"finally\"](function () {\n            _commandExectionDuration = _sw.elapsed();\n          }));\n        }\n      }\n      if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\n        this._alternatives.value.set(event, function (next) {\n          // cancel resolving of additional edits\n          cts.cancel();\n          // this is not so pretty. when inserting the 'next'\n          // suggestion we undo until we are at the state at\n          // which we were before inserting the previous suggestion...\n          while (model.canUndo()) {\n            if (modelVersionNow !== model.getAlternativeVersionId()) {\n              model.undo();\n            }\n            _this4._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\n            break;\n          }\n        });\n      }\n      this._alertCompletionItem(item);\n      // clear only now - after all tasks are done\n      Promise.all(tasks)[\"finally\"](function () {\n        _this4._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync);\n        _this4.model.clear();\n        cts.dispose();\n      });\n    }\n  }, {\n    key: \"_reportSuggestionAcceptedTelemetry\",\n    value: function _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync) {\n      var _a, _b, _c;\n      if (Math.floor(Math.random() * 100) === 0) {\n        // throttle telemetry event because accepting completions happens a lot\n        return;\n      }\n      this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n        extensionId: (_b = (_a = item.extensionId) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 'unknown',\n        providerId: (_c = item.provider._debugDisplayName) !== null && _c !== void 0 ? _c : 'unknown',\n        kind: item.completion.kind,\n        basenameHash: hash(basename(model.uri)).toString(16),\n        languageId: model.getLanguageId(),\n        fileExtension: extname(model.uri),\n        resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n        resolveDuration: item.resolveDuration,\n        commandDuration: commandExectionDuration,\n        additionalEditsAsync: additionalEditsAppliedAsync\n      });\n    }\n  }, {\n    key: \"getOverwriteInfo\",\n    value: function getOverwriteInfo(item, toggleMode) {\n      assertType(this.editor.hasModel());\n      var replace = this.editor.getOption(118 /* EditorOption.suggest */).insertMode === 'replace';\n      if (toggleMode) {\n        replace = !replace;\n      }\n      var overwriteBefore = item.position.column - item.editStart.column;\n      var overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n      var columnDelta = this.editor.getPosition().column - item.position.column;\n      var suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n      return {\n        overwriteBefore: overwriteBefore + columnDelta,\n        overwriteAfter: overwriteAfter + suffixDelta\n      };\n    }\n  }, {\n    key: \"_alertCompletionItem\",\n    value: function _alertCompletionItem(item) {\n      if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n        var msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n        alert(msg);\n      }\n    }\n  }, {\n    key: \"triggerSuggest\",\n    value: function triggerSuggest(onlyFrom, auto, noFilter) {\n      if (this.editor.hasModel()) {\n        this.model.trigger({\n          auto: auto !== null && auto !== void 0 ? auto : false,\n          completionOptions: {\n            providerFilter: onlyFrom,\n            kindFilter: noFilter ? new Set() : undefined\n          }\n        });\n        this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\n        this.editor.focus();\n      }\n    }\n  }, {\n    key: \"triggerSuggestAndAcceptBest\",\n    value: function triggerSuggestAndAcceptBest(arg) {\n      var _this5 = this;\n      if (!this.editor.hasModel()) {\n        return;\n      }\n      var positionNow = this.editor.getPosition();\n      var fallback = function fallback() {\n        if (positionNow.equals(_this5.editor.getPosition())) {\n          _this5._commandService.executeCommand(arg.fallback);\n        }\n      };\n      var makesTextEdit = function makesTextEdit(item) {\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\n          // snippet, other editor -> makes edit\n          return true;\n        }\n        var position = _this5.editor.getPosition();\n        var startColumn = item.editStart.column;\n        var endColumn = position.column;\n        if (endColumn - startColumn !== item.completion.insertText.length) {\n          // unequal lengths -> makes edit\n          return true;\n        }\n        var textNow = _this5.editor.getModel().getValueInRange({\n          startLineNumber: position.lineNumber,\n          startColumn: startColumn,\n          endLineNumber: position.lineNumber,\n          endColumn: endColumn\n        });\n        // unequal text -> makes edit\n        return textNow !== item.completion.insertText;\n      };\n      Event.once(this.model.onDidTrigger)(function (_) {\n        // wait for trigger because only then the cancel-event is trustworthy\n        var listener = [];\n        Event.any(_this5.model.onDidTrigger, _this5.model.onDidCancel)(function () {\n          // retrigger or cancel -> try to type default text\n          dispose(listener);\n          fallback();\n        }, undefined, listener);\n        _this5.model.onDidSuggest(function (_ref2) {\n          var completionModel = _ref2.completionModel;\n          dispose(listener);\n          if (completionModel.items.length === 0) {\n            fallback();\n            return;\n          }\n          var index = _this5._memoryService.select(_this5.editor.getModel(), _this5.editor.getPosition(), completionModel.items);\n          var item = completionModel.items[index];\n          if (!makesTextEdit(item)) {\n            fallback();\n            return;\n          }\n          _this5.editor.pushUndoStop();\n          _this5._insertSuggestion({\n            index: index,\n            item: item,\n            model: completionModel\n          }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\n        }, undefined, listener);\n      });\n      this.model.trigger({\n        auto: false,\n        shy: true\n      });\n      this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\n      this.editor.focus();\n    }\n  }, {\n    key: \"acceptSelectedSuggestion\",\n    value: function acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n      var item = this.widget.value.getFocusedItem();\n      var flags = 0;\n      if (keepAlternativeSuggestions) {\n        flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\n      }\n      if (alternativeOverwriteConfig) {\n        flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\n      }\n      this._insertSuggestion(item, flags);\n    }\n  }, {\n    key: \"acceptNextSuggestion\",\n    value: function acceptNextSuggestion() {\n      this._alternatives.value.next();\n    }\n  }, {\n    key: \"acceptPrevSuggestion\",\n    value: function acceptPrevSuggestion() {\n      this._alternatives.value.prev();\n    }\n  }, {\n    key: \"cancelSuggestWidget\",\n    value: function cancelSuggestWidget() {\n      this.model.cancel();\n      this.model.clear();\n      this.widget.value.hideWidget();\n    }\n  }, {\n    key: \"focusSuggestion\",\n    value: function focusSuggestion() {\n      this.widget.value.focusSelected();\n    }\n  }, {\n    key: \"selectNextSuggestion\",\n    value: function selectNextSuggestion() {\n      this.widget.value.selectNext();\n    }\n  }, {\n    key: \"selectNextPageSuggestion\",\n    value: function selectNextPageSuggestion() {\n      this.widget.value.selectNextPage();\n    }\n  }, {\n    key: \"selectLastSuggestion\",\n    value: function selectLastSuggestion() {\n      this.widget.value.selectLast();\n    }\n  }, {\n    key: \"selectPrevSuggestion\",\n    value: function selectPrevSuggestion() {\n      this.widget.value.selectPrevious();\n    }\n  }, {\n    key: \"selectPrevPageSuggestion\",\n    value: function selectPrevPageSuggestion() {\n      this.widget.value.selectPreviousPage();\n    }\n  }, {\n    key: \"selectFirstSuggestion\",\n    value: function selectFirstSuggestion() {\n      this.widget.value.selectFirst();\n    }\n  }, {\n    key: \"toggleSuggestionDetails\",\n    value: function toggleSuggestionDetails() {\n      this.widget.value.toggleDetails();\n    }\n  }, {\n    key: \"toggleExplainMode\",\n    value: function toggleExplainMode() {\n      this.widget.value.toggleExplainMode();\n    }\n  }, {\n    key: \"toggleSuggestionFocus\",\n    value: function toggleSuggestionFocus() {\n      this.widget.value.toggleDetailsFocus();\n    }\n  }, {\n    key: \"resetWidgetSize\",\n    value: function resetWidgetSize() {\n      this.widget.value.resetPersistedSize();\n    }\n  }, {\n    key: \"forceRenderingAbove\",\n    value: function forceRenderingAbove() {\n      this.widget.value.forceRenderingAbove();\n    }\n  }, {\n    key: \"stopForceRenderingAbove\",\n    value: function stopForceRenderingAbove() {\n      if (!this.widget.isInitialized) {\n        // This method has no effect if the widget is not initialized yet.\n        return;\n      }\n      this.widget.value.stopForceRenderingAbove();\n    }\n  }, {\n    key: \"registerSelector\",\n    value: function registerSelector(selector) {\n      return this._selectors.register(selector);\n    }\n  }], [{\n    key: \"get\",\n    value: function get(editor) {\n      return editor.getContribution(SuggestController_1.ID);\n    }\n  }]);\n}();\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = SuggestController_1 = __decorate([__param(1, ISuggestMemoryService), __param(2, ICommandService), __param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ILogService), __param(6, ITelemetryService)], SuggestController);\nexport { SuggestController };\nvar PriorityRegistry = /*#__PURE__*/function () {\n  function PriorityRegistry(prioritySelector) {\n    _classCallCheck(this, PriorityRegistry);\n    this.prioritySelector = prioritySelector;\n    this._items = new Array();\n  }\n  return _createClass(PriorityRegistry, [{\n    key: \"register\",\n    value: function register(value) {\n      var _this6 = this;\n      if (this._items.indexOf(value) !== -1) {\n        throw new Error('Value is already registered');\n      }\n      this._items.push(value);\n      this._items.sort(function (s1, s2) {\n        return _this6.prioritySelector(s2) - _this6.prioritySelector(s1);\n      });\n      return {\n        dispose: function dispose() {\n          var idx = _this6._items.indexOf(value);\n          if (idx >= 0) {\n            _this6._items.splice(idx, 1);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"itemsOrderedByPriorityDesc\",\n    get: function get() {\n      return this._items;\n    }\n  }]);\n}();\nexport var TriggerSuggestAction = /*#__PURE__*/function (_EditorAction) {\n  function TriggerSuggestAction() {\n    _classCallCheck(this, TriggerSuggestAction);\n    return _callSuper(this, TriggerSuggestAction, [{\n      id: TriggerSuggestAction.id,\n      label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n      alias: 'Trigger Suggest',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n          secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    }]);\n  }\n  _inherits(TriggerSuggestAction, _EditorAction);\n  return _createClass(TriggerSuggestAction, [{\n    key: \"run\",\n    value: function run(_accessor, editor, args) {\n      var controller = SuggestController.get(editor);\n      if (!controller) {\n        return;\n      }\n      var auto;\n      if (args && _typeof(args) === 'object') {\n        if (args.auto === true) {\n          auto = true;\n        }\n      }\n      controller.triggerSuggest(undefined, auto, undefined);\n    }\n  }]);\n}(EditorAction);\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(TriggerSuggestAction);\nvar weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\nvar SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n  handler: function handler(x) {\n    x.acceptSelectedSuggestion(true, false);\n  },\n  kbOpts: [{\n    // normal tab\n    primary: 2 /* KeyCode.Tab */,\n    kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n    weight: weight\n  }, {\n    // accept on enter has special rules\n    primary: 3 /* KeyCode.Enter */,\n    kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n    weight: weight\n  }],\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.insert', \"Insert\"),\n    group: 'left',\n    order: 1,\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.insert', \"Insert\"),\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.replace', \"Replace\"),\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptAlternativeSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n    secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */]\n  },\n  handler: function handler(x) {\n    x.acceptSelectedSuggestion(false, true);\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n    title: nls.localize('accept.replace', \"Replace\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n    title: nls.localize('accept.insert', \"Insert\")\n  }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n  id: 'hideSuggestWidget',\n  precondition: SuggestContext.Visible,\n  handler: function handler(x) {\n    return x.cancelSuggestWidget();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: function handler(c) {\n    return c.selectNextSuggestion();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 18 /* KeyCode.DownArrow */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n    mac: {\n      primary: 18 /* KeyCode.DownArrow */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: function handler(c) {\n    return c.selectNextPageSuggestion();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 12 /* KeyCode.PageDown */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectLastSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: function handler(c) {\n    return c.selectLastSuggestion();\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: function handler(c) {\n    return c.selectPrevSuggestion();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 16 /* KeyCode.UpArrow */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n    mac: {\n      primary: 16 /* KeyCode.UpArrow */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: function handler(c) {\n    return c.selectPrevPageSuggestion();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 11 /* KeyCode.PageUp */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectFirstSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: function handler(c) {\n    return c.selectFirstSuggestion();\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'focusSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n  handler: function handler(x) {\n    return x.focusSuggestion();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'focusAndAcceptSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n  handler: function handler(c) {\n    c.focusSuggestion();\n    c.acceptSelectedSuggestion(true, false);\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionDetails',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n  handler: function handler(x) {\n    return x.toggleSuggestionDetails();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n    }\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n    title: nls.localize('detail.more', \"show less\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n    title: nls.localize('detail.less', \"show more\")\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleExplainMode',\n  precondition: SuggestContext.Visible,\n  handler: function handler(x) {\n    return x.toggleExplainMode();\n  },\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionFocus',\n  precondition: SuggestContext.Visible,\n  handler: function handler(x) {\n    return x.toggleSuggestionFocus();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */\n    }\n  }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertBestCompletion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: function handler(x, arg) {\n    x.triggerSuggestAndAcceptBest(isObject(arg) ? _objectSpread({\n      fallback: 'tab'\n    }, arg) : {\n      fallback: 'tab'\n    });\n  },\n  kbOpts: {\n    weight: weight,\n    primary: 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertNextSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: function handler(x) {\n    return x.acceptNextSuggestion();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertPrevSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: function handler(x) {\n    return x.acceptPrevSuggestion();\n  },\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorAction( /*#__PURE__*/function (_EditorAction2) {\n  function _class() {\n    _classCallCheck(this, _class);\n    return _callSuper(this, _class, [{\n      id: 'editor.action.resetSuggestSize',\n      label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n      alias: 'Reset Suggest Widget Size',\n      precondition: undefined\n    }]);\n  }\n  _inherits(_class, _EditorAction2);\n  return _createClass(_class, [{\n    key: \"run\",\n    value: function run(_accessor, editor) {\n      var _a;\n      (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\n    }\n  }]);\n}(EditorAction));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","SuggestController_1","alert","isNonEmptyArray","CancellationTokenSource","onUnexpectedError","onUnexpectedExternalError","Emitter","Event","KeyCodeChord","DisposableStore","dispose","MutableDisposable","toDisposable","platform","StopWatch","assertType","isObject","StableEditorScrollState","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","EditOperation","Position","Range","EditorContextKeys","SnippetController2","SnippetParser","ISuggestMemoryService","WordContextKey","nls","CommandsRegistry","ICommandService","ContextKeyExpr","IContextKeyService","IInstantiationService","ILogService","Context","SuggestContext","suggestWidgetStatusbarMenu","SuggestAlternatives","CommitCharacterController","SuggestModel","OvertypingCapturer","SuggestWidget","ITelemetryService","basename","extname","hash","WindowIdleValue","getWindow","ModelDecorationOptions","_sticky","LineSuffix","_model","_position","_this","_classCallCheck","_decorationOptions","register","description","stickiness","maxColumn","getLineMaxColumn","lineNumber","column","offset","getOffsetAt","end","getPositionAt","changeDecorations","accessor","_marker","removeDecoration","addDecoration","fromPositions","_createClass","value","_this2","isDisposed","undefined","delta","position","range","getDecorationRange","getStartPosition","SuggestController","editor","_memoryService","_commandService","_contextKeyService","_instantiationService","_logService","_telemetryService","_this3","_lineSuffix","_toDispose","_selectors","PriorityRegistry","s","priority","_onWillInsertSuggestItem","onWillInsertSuggestItem","event","model","createInstance","select","pos","items","ctxInsertMode","InsertMode","bindTo","set","getOption","insertMode","add","onDidTrigger","widget","getDomNode","onDidSelect","item","_insertSuggestion","commitCharacterController","ctxMakesTextEdit","MakesTextEdit","ctxHasInsertAndReplace","HasInsertAndReplaceRange","ctxCanResolve","CanResolve","reset","onDidFocus","_ref","getPosition","startColumn","editStart","endColumn","state","completion","additionalTextEdits","insertTextRules","insertText","oldText","getModel","getValueInRange","startLineNumber","endLineNumber","equals","editInsertEnd","editReplaceEnd","Boolean","provider","resolveCompletionItem","documentation","detail","label","onDetailsKeyDown","e","toKeyCodeChord","isMacintosh","stopPropagation","isModifierKey","focus","_overtypingCapturer","_alternatives","showTriggered","auto","shy","onDidSuggest","triggerOptions","index","_iterator","_createForOfIteratorHelper","itemsOrderedByPriorityDesc","_step","n","done","selector","completionModel","err","f","noFocus","options","selectionMode","triggerKind","refilter","showSuggestions","isFrozen","onDidCancel","retrigger","hideWidget","onDidBlurEditorWidget","cancel","clear","acceptSuggestionsOnEnter","AcceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","onDidChangeConfiguration","flags","_this4","hasModel","snippetController","get","fire","modelVersionNow","getAlternativeVersionId","tasks","cts","pushUndoStop","info","getOverwriteInfo","memorize","isResolved","_commandExectionDuration","_additionalEditsAppliedAsync","Array","isArray","scrollState","capture","executeEdits","map","edit","lift","columnDelta","startColumnDelta","endColumnDelta","spansMultipleLines","replaceMove","text","restoreRelativeVerticalPositionOfCursor","sw","docListener","onDidChangeContent","isFlush","_iterator2","changes","_step2","change","thisPosition","getEndPosition","isBefore","oldFlags","didType","typeListener","onWillType","push","resolve","token","then","isCancellationRequested","some","applied","trace","elapsed","escape","insert","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","overtypingCapturer","command","id","TriggerSuggestAction","trigger","_this$_commandService","executeCommand","apply","concat","_toConsumableArray","extensionId","next","canUndo","undo","_alertCompletionItem","Promise","all","_reportSuggestionAcceptedTelemetry","itemResolved","commandExectionDuration","additionalEditsAppliedAsync","_a","_b","_c","Math","floor","random","publicLog2","providerId","_debugDisplayName","kind","basenameHash","uri","toString","languageId","getLanguageId","fileExtension","resolveInfo","resolveDuration","commandDuration","additionalEditsAsync","toggleMode","replace","suffixDelta","msg","localize","textLabel","triggerSuggest","onlyFrom","noFilter","completionOptions","providerFilter","kindFilter","Set","revealPosition","triggerSuggestAndAcceptBest","arg","_this5","positionNow","fallback","makesTextEdit","textNow","once","_","listener","any","_ref2","acceptSelectedSuggestion","keepAlternativeSuggestions","alternativeOverwriteConfig","getFocusedItem","acceptNextSuggestion","acceptPrevSuggestion","prev","cancelSuggestWidget","focusSuggestion","focusSelected","selectNextSuggestion","selectNext","selectNextPageSuggestion","selectNextPage","selectLastSuggestion","selectLast","selectPrevSuggestion","selectPrevious","selectPrevPageSuggestion","selectPreviousPage","selectFirstSuggestion","selectFirst","toggleSuggestionDetails","toggleDetails","toggleExplainMode","toggleSuggestionFocus","toggleDetailsFocus","resetWidgetSize","resetPersistedSize","forceRenderingAbove","stopForceRenderingAbove","isInitialized","registerSelector","getContribution","ID","prioritySelector","_items","_this6","indexOf","Error","sort","s1","s2","idx","splice","_EditorAction","_callSuper","alias","precondition","and","writable","hasCompletionItemProvider","Visible","toNegated","kbOpts","kbExpr","textInputFocus","primary","secondary","mac","weight","_inherits","run","_accessor","args","controller","SuggestCommand","bindToContribution","HasFocusedSuggestion","handler","x","menuOpts","menuId","title","group","order","when","isEqualTo","registerCommandAlias","or","MultipleSuggestions","negate","DetailsVisible","AtEnd","OtherSuggestions","InSnippetMode","_objectSpread","_EditorAction2","_class"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false;\nclass LineSuffix {\n    constructor(_model, _position) {\n        this._model = _model;\n        this._position = _position;\n        this._decorationOptions = ModelDecorationOptions.register({\n            description: 'suggest-line-suffix',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n        });\n        // spy on what's happening right of the cursor. two cases:\n        // 1. end of line -> check that it's still end of line\n        // 2. mid of line -> add a marker and compute the delta\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n        if (maxColumn !== _position.column) {\n            const offset = _model.getOffsetAt(_position);\n            const end = _model.getPositionAt(offset + 1);\n            _model.changeDecorations(accessor => {\n                if (this._marker) {\n                    accessor.removeDecoration(this._marker);\n                }\n                this._marker = accessor.addDecoration(Range.fromPositions(_position, end), this._decorationOptions);\n            });\n        }\n    }\n    dispose() {\n        if (this._marker && !this._model.isDisposed()) {\n            this._model.changeDecorations(accessor => {\n                accessor.removeDecoration(this._marker);\n                this._marker = undefined;\n            });\n        }\n    }\n    delta(position) {\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n            // bail out early if things seems fishy\n            return 0;\n        }\n        // read the marker (in case suggest was triggered at line end) or compare\n        // the cursor to the line end.\n        if (this._marker) {\n            const range = this._model.getDecorationRange(this._marker);\n            const end = this._model.getOffsetAt(range.getStartPosition());\n            return end - this._model.getOffsetAt(position);\n        }\n        else {\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n        }\n    }\n}\nlet SuggestController = SuggestController_1 = class SuggestController {\n    static get(editor) {\n        return editor.getContribution(SuggestController_1.ID);\n    }\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n        this._memoryService = _memoryService;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._logService = _logService;\n        this._telemetryService = _telemetryService;\n        this._lineSuffix = new MutableDisposable();\n        this._toDispose = new DisposableStore();\n        this._selectors = new PriorityRegistry(s => s.priority);\n        this._onWillInsertSuggestItem = new Emitter();\n        this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\n        this.editor = editor;\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n        // default selector\n        this._selectors.register({\n            priority: 0,\n            select: (model, pos, items) => this._memoryService.select(model, pos, items)\n        });\n        // context key: update insert/replace mode\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n        ctxInsertMode.set(editor.getOption(118 /* EditorOption.suggest */).insertMode);\n        this._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(118 /* EditorOption.suggest */).insertMode)));\n        this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n            this._toDispose.add(widget);\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0 /* InsertFlags.None */), this));\n            // Wire up logic to accept a suggestion on certain characters\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */));\n            this._toDispose.add(commitCharacterController);\n            // Wire up makes text edit context key\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n            this._toDispose.add(toDisposable(() => {\n                ctxMakesTextEdit.reset();\n                ctxHasInsertAndReplace.reset();\n                ctxCanResolve.reset();\n            }));\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\n                // (ctx: makesTextEdit)\n                const position = this.editor.getPosition();\n                const startColumn = item.editStart.column;\n                const endColumn = position.column;\n                let value = true;\n                if (this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart'\n                    && this.model.state === 2 /* State.Auto */\n                    && !item.completion.additionalTextEdits\n                    && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)\n                    && endColumn - startColumn === item.completion.insertText.length) {\n                    const oldText = this.editor.getModel().getValueInRange({\n                        startLineNumber: position.lineNumber,\n                        startColumn,\n                        endLineNumber: position.lineNumber,\n                        endColumn\n                    });\n                    value = oldText !== item.completion.insertText;\n                }\n                ctxMakesTextEdit.set(value);\n                // (ctx: hasInsertAndReplaceRange)\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n                // (ctx: canResolve)\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n            }));\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\n                // cmd + c on macOS, ctrl + c on Win / Linux\n                if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) ||\n                    (platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */)))) {\n                    e.stopPropagation();\n                    return;\n                }\n                if (!e.toKeyCodeChord().isModifierKey()) {\n                    this.editor.focus();\n                }\n            }));\n            return widget;\n        }));\n        // Wire up text overtyping capture\n        this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n        }));\n        this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n        }));\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n        this._toDispose.add(this.model.onDidTrigger(e => {\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n        }));\n        this._toDispose.add(this.model.onDidSuggest(e => {\n            if (e.triggerOptions.shy) {\n                return;\n            }\n            let index = -1;\n            for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n                index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n                if (index !== -1) {\n                    break;\n                }\n            }\n            if (index === -1) {\n                index = 0;\n            }\n            if (this.model.state === 0 /* State.Idle */) {\n                // selecting an item can \"pump\" out selection/cursor change events\n                // which can cancel suggest halfway through this function. therefore\n                // we need to check again and bail if the session has been canceled\n                return;\n            }\n            let noFocus = false;\n            if (e.triggerOptions.auto) {\n                // don't \"focus\" item when configured to do\n                const options = this.editor.getOption(118 /* EditorOption.suggest */);\n                if (options.selectionMode === 'never' || options.selectionMode === 'always') {\n                    // simple: always or never\n                    noFocus = options.selectionMode === 'never';\n                }\n                else if (options.selectionMode === 'whenTriggerCharacter') {\n                    // on with trigger character\n                    noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\n                }\n                else if (options.selectionMode === 'whenQuickSuggestion') {\n                    // without trigger character or when refiltering\n                    noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\n                }\n            }\n            this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n        }));\n        this._toDispose.add(this.model.onDidCancel(e => {\n            if (!e.retrigger) {\n                this.widget.value.hideWidget();\n            }\n        }));\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n            if (!_sticky) {\n                this.model.cancel();\n                this.model.clear();\n            }\n        }));\n        // Manage the acceptSuggestionsOnEnter context key\n        const acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n        const updateFromConfig = () => {\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n        };\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n        updateFromConfig();\n    }\n    dispose() {\n        this._alternatives.dispose();\n        this._toDispose.dispose();\n        this.widget.dispose();\n        this.model.dispose();\n        this._lineSuffix.dispose();\n        this._onWillInsertSuggestItem.dispose();\n    }\n    _insertSuggestion(event, flags) {\n        if (!event || !event.item) {\n            this._alternatives.value.reset();\n            this.model.cancel();\n            this.model.clear();\n            return;\n        }\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const snippetController = SnippetController2.get(this.editor);\n        if (!snippetController) {\n            return;\n        }\n        this._onWillInsertSuggestItem.fire({ item: event.item });\n        const model = this.editor.getModel();\n        const modelVersionNow = model.getAlternativeVersionId();\n        const { item } = event;\n        //\n        const tasks = [];\n        const cts = new CancellationTokenSource();\n        // pushing undo stops *before* additional text edits and\n        // *after* the main edit\n        if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\n        // keep item in memory\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\n        const isResolved = item.isResolved;\n        // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n        let _commandExectionDuration = -1;\n        let _additionalEditsAppliedAsync = -1;\n        if (Array.isArray(item.completion.additionalTextEdits)) {\n            // cancel -> stops all listening and closes widget\n            this.model.cancel();\n            // sync additional edits\n            const scrollState = StableEditorScrollState.capture(this.editor);\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => {\n                let range = Range.lift(edit.range);\n                if (range.startLineNumber === item.position.lineNumber && range.startColumn > item.position.column) {\n                    // shift additional edit when it is \"after\" the completion insertion position\n                    const columnDelta = this.editor.getPosition().column - item.position.column;\n                    const startColumnDelta = columnDelta;\n                    const endColumnDelta = Range.spansMultipleLines(range) ? 0 : columnDelta;\n                    range = new Range(range.startLineNumber, range.startColumn + startColumnDelta, range.endLineNumber, range.endColumn + endColumnDelta);\n                }\n                return EditOperation.replaceMove(range, edit.text);\n            }));\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        }\n        else if (!isResolved) {\n            // async additional edits\n            const sw = new StopWatch();\n            let position;\n            const docListener = model.onDidChangeContent(e => {\n                if (e.isFlush) {\n                    cts.cancel();\n                    docListener.dispose();\n                    return;\n                }\n                for (const change of e.changes) {\n                    const thisPosition = Range.getEndPosition(change.range);\n                    if (!position || Position.isBefore(thisPosition, position)) {\n                        position = thisPosition;\n                    }\n                }\n            });\n            const oldFlags = flags;\n            flags |= 2 /* InsertFlags.NoAfterUndoStop */;\n            let didType = false;\n            const typeListener = this.editor.onWillType(() => {\n                typeListener.dispose();\n                didType = true;\n                if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n            });\n            tasks.push(item.resolve(cts.token).then(() => {\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n                    return undefined;\n                }\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n                    return false;\n                }\n                if (didType) {\n                    this.editor.pushUndoStop();\n                }\n                const scrollState = StableEditorScrollState.capture(this.editor);\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n                if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n                return true;\n            }).then(applied => {\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n                _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n            }).finally(() => {\n                docListener.dispose();\n                typeListener.dispose();\n            }));\n        }\n        let { insertText } = item.completion;\n        if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\n            insertText = SnippetParser.escape(insertText);\n        }\n        // cancel -> stops all listening and closes widget\n        this.model.cancel();\n        snippetController.insert(insertText, {\n            overwriteBefore: info.overwriteBefore,\n            overwriteAfter: info.overwriteAfter,\n            undoStopBefore: false,\n            undoStopAfter: false,\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\n            clipboardText: event.model.clipboardText,\n            overtypingCapturer: this._overtypingCapturer.value\n        });\n        if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        if (item.completion.command) {\n            if (item.completion.command.id === TriggerSuggestAction.id) {\n                // retigger\n                this.model.trigger({ auto: true, retrigger: true });\n            }\n            else {\n                // exec command, done\n                const sw = new StopWatch();\n                tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\n                    if (item.completion.extensionId) {\n                        onUnexpectedExternalError(e);\n                    }\n                    else {\n                        onUnexpectedError(e);\n                    }\n                }).finally(() => {\n                    _commandExectionDuration = sw.elapsed();\n                }));\n            }\n        }\n        if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\n            this._alternatives.value.set(event, next => {\n                // cancel resolving of additional edits\n                cts.cancel();\n                // this is not so pretty. when inserting the 'next'\n                // suggestion we undo until we are at the state at\n                // which we were before inserting the previous suggestion...\n                while (model.canUndo()) {\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\n                        model.undo();\n                    }\n                    this._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\n                    break;\n                }\n            });\n        }\n        this._alertCompletionItem(item);\n        // clear only now - after all tasks are done\n        Promise.all(tasks).finally(() => {\n            this._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync);\n            this.model.clear();\n            cts.dispose();\n        });\n    }\n    _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync) {\n        var _a, _b, _c;\n        if (Math.floor(Math.random() * 100) === 0) {\n            // throttle telemetry event because accepting completions happens a lot\n            return;\n        }\n        this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n            extensionId: (_b = (_a = item.extensionId) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 'unknown',\n            providerId: (_c = item.provider._debugDisplayName) !== null && _c !== void 0 ? _c : 'unknown',\n            kind: item.completion.kind,\n            basenameHash: hash(basename(model.uri)).toString(16),\n            languageId: model.getLanguageId(),\n            fileExtension: extname(model.uri),\n            resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n            resolveDuration: item.resolveDuration,\n            commandDuration: commandExectionDuration,\n            additionalEditsAsync: additionalEditsAppliedAsync\n        });\n    }\n    getOverwriteInfo(item, toggleMode) {\n        assertType(this.editor.hasModel());\n        let replace = this.editor.getOption(118 /* EditorOption.suggest */).insertMode === 'replace';\n        if (toggleMode) {\n            replace = !replace;\n        }\n        const overwriteBefore = item.position.column - item.editStart.column;\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n        const columnDelta = this.editor.getPosition().column - item.position.column;\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n        return {\n            overwriteBefore: overwriteBefore + columnDelta,\n            overwriteAfter: overwriteAfter + suffixDelta\n        };\n    }\n    _alertCompletionItem(item) {\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n            const msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n            alert(msg);\n        }\n    }\n    triggerSuggest(onlyFrom, auto, noFilter) {\n        if (this.editor.hasModel()) {\n            this.model.trigger({\n                auto: auto !== null && auto !== void 0 ? auto : false,\n                completionOptions: { providerFilter: onlyFrom, kindFilter: noFilter ? new Set() : undefined }\n            });\n            this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\n            this.editor.focus();\n        }\n    }\n    triggerSuggestAndAcceptBest(arg) {\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const positionNow = this.editor.getPosition();\n        const fallback = () => {\n            if (positionNow.equals(this.editor.getPosition())) {\n                this._commandService.executeCommand(arg.fallback);\n            }\n        };\n        const makesTextEdit = (item) => {\n            if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\n                // snippet, other editor -> makes edit\n                return true;\n            }\n            const position = this.editor.getPosition();\n            const startColumn = item.editStart.column;\n            const endColumn = position.column;\n            if (endColumn - startColumn !== item.completion.insertText.length) {\n                // unequal lengths -> makes edit\n                return true;\n            }\n            const textNow = this.editor.getModel().getValueInRange({\n                startLineNumber: position.lineNumber,\n                startColumn,\n                endLineNumber: position.lineNumber,\n                endColumn\n            });\n            // unequal text -> makes edit\n            return textNow !== item.completion.insertText;\n        };\n        Event.once(this.model.onDidTrigger)(_ => {\n            // wait for trigger because only then the cancel-event is trustworthy\n            const listener = [];\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n                // retrigger or cancel -> try to type default text\n                dispose(listener);\n                fallback();\n            }, undefined, listener);\n            this.model.onDidSuggest(({ completionModel }) => {\n                dispose(listener);\n                if (completionModel.items.length === 0) {\n                    fallback();\n                    return;\n                }\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n                const item = completionModel.items[index];\n                if (!makesTextEdit(item)) {\n                    fallback();\n                    return;\n                }\n                this.editor.pushUndoStop();\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\n            }, undefined, listener);\n        });\n        this.model.trigger({ auto: false, shy: true });\n        this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\n        this.editor.focus();\n    }\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n        const item = this.widget.value.getFocusedItem();\n        let flags = 0;\n        if (keepAlternativeSuggestions) {\n            flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\n        }\n        if (alternativeOverwriteConfig) {\n            flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\n        }\n        this._insertSuggestion(item, flags);\n    }\n    acceptNextSuggestion() {\n        this._alternatives.value.next();\n    }\n    acceptPrevSuggestion() {\n        this._alternatives.value.prev();\n    }\n    cancelSuggestWidget() {\n        this.model.cancel();\n        this.model.clear();\n        this.widget.value.hideWidget();\n    }\n    focusSuggestion() {\n        this.widget.value.focusSelected();\n    }\n    selectNextSuggestion() {\n        this.widget.value.selectNext();\n    }\n    selectNextPageSuggestion() {\n        this.widget.value.selectNextPage();\n    }\n    selectLastSuggestion() {\n        this.widget.value.selectLast();\n    }\n    selectPrevSuggestion() {\n        this.widget.value.selectPrevious();\n    }\n    selectPrevPageSuggestion() {\n        this.widget.value.selectPreviousPage();\n    }\n    selectFirstSuggestion() {\n        this.widget.value.selectFirst();\n    }\n    toggleSuggestionDetails() {\n        this.widget.value.toggleDetails();\n    }\n    toggleExplainMode() {\n        this.widget.value.toggleExplainMode();\n    }\n    toggleSuggestionFocus() {\n        this.widget.value.toggleDetailsFocus();\n    }\n    resetWidgetSize() {\n        this.widget.value.resetPersistedSize();\n    }\n    forceRenderingAbove() {\n        this.widget.value.forceRenderingAbove();\n    }\n    stopForceRenderingAbove() {\n        if (!this.widget.isInitialized) {\n            // This method has no effect if the widget is not initialized yet.\n            return;\n        }\n        this.widget.value.stopForceRenderingAbove();\n    }\n    registerSelector(selector) {\n        return this._selectors.register(selector);\n    }\n};\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = SuggestController_1 = __decorate([\n    __param(1, ISuggestMemoryService),\n    __param(2, ICommandService),\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ILogService),\n    __param(6, ITelemetryService)\n], SuggestController);\nexport { SuggestController };\nclass PriorityRegistry {\n    constructor(prioritySelector) {\n        this.prioritySelector = prioritySelector;\n        this._items = new Array();\n    }\n    register(value) {\n        if (this._items.indexOf(value) !== -1) {\n            throw new Error('Value is already registered');\n        }\n        this._items.push(value);\n        this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n        return {\n            dispose: () => {\n                const idx = this._items.indexOf(value);\n                if (idx >= 0) {\n                    this._items.splice(idx, 1);\n                }\n            }\n        };\n    }\n    get itemsOrderedByPriorityDesc() {\n        return this._items;\n    }\n}\nexport class TriggerSuggestAction extends EditorAction {\n    constructor() {\n        super({\n            id: TriggerSuggestAction.id,\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n            alias: 'Trigger Suggest',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        const controller = SuggestController.get(editor);\n        if (!controller) {\n            return;\n        }\n        let auto;\n        if (args && typeof args === 'object') {\n            if (args.auto === true) {\n                auto = true;\n            }\n        }\n        controller.triggerSuggest(undefined, auto, undefined);\n    }\n}\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler(x) {\n        x.acceptSelectedSuggestion(true, false);\n    },\n    kbOpts: [{\n            // normal tab\n            primary: 2 /* KeyCode.Tab */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n            weight,\n        }, {\n            // accept on enter has special rules\n            primary: 3 /* KeyCode.Enter */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n            weight,\n        }],\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.replace', \"Replace\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptAlternativeSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n        secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */],\n    },\n    handler(x) {\n        x.acceptSelectedSuggestion(false, true);\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n            title: nls.localize('accept.replace', \"Replace\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n            title: nls.localize('accept.insert', \"Insert\")\n        }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n    id: 'hideSuggestWidget',\n    precondition: SuggestContext.Visible,\n    handler: x => x.cancelSuggestWidget(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 18 /* KeyCode.DownArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n        mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 12 /* KeyCode.PageDown */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectLastSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 16 /* KeyCode.UpArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n        mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 11 /* KeyCode.PageUp */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectFirstSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: x => x.focusSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusAndAcceptSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: c => {\n        c.focusSuggestion();\n        c.acceptSelectedSuggestion(true, false);\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionDetails',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler: x => x.toggleSuggestionDetails(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n            title: nls.localize('detail.more', \"show less\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n            title: nls.localize('detail.less', \"show more\")\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleExplainMode',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleExplainMode(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */,\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionFocus',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleSuggestionFocus(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */ }\n    }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertBestCompletion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: (x, arg) => {\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? { fallback: 'tab', ...arg } : { fallback: 'tab' });\n    },\n    kbOpts: {\n        weight,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertNextSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertPrevSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.resetSuggestSize',\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n            alias: 'Reset Suggest Widget Size',\n            precondition: undefined\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}