{"ast":null,"code":"import _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SuggestMemoryService_1;\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { CompletionItemKinds } from '../../../common/languages.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport var Memory = /*#__PURE__*/function () {\n  function Memory(name) {\n    _classCallCheck(this, Memory);\n    this.name = name;\n  }\n  return _createClass(Memory, [{\n    key: \"select\",\n    value: function select(model, pos, items) {\n      if (items.length === 0) {\n        return 0;\n      }\n      var topScore = items[0].score[0];\n      for (var i = 0; i < items.length; i++) {\n        var _items$i = items[i],\n          score = _items$i.score,\n          suggestion = _items$i.completion;\n        if (score[0] !== topScore) {\n          // stop when leaving the group of top matches\n          break;\n        }\n        if (suggestion.preselect) {\n          // stop when seeing an auto-select-item\n          return i;\n        }\n      }\n      return 0;\n    }\n  }]);\n}();\nexport var NoMemory = /*#__PURE__*/function (_Memory) {\n  function NoMemory() {\n    _classCallCheck(this, NoMemory);\n    return _callSuper(this, NoMemory, ['first']);\n  }\n  _inherits(NoMemory, _Memory);\n  return _createClass(NoMemory, [{\n    key: \"memorize\",\n    value: function memorize(model, pos, item) {\n      // no-op\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return undefined;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON() {\n      //\n    }\n  }]);\n}(Memory);\nexport var LRUMemory = /*#__PURE__*/function (_Memory2) {\n  function LRUMemory() {\n    var _this;\n    _classCallCheck(this, LRUMemory);\n    _this = _callSuper(this, LRUMemory, ['recentlyUsed']);\n    _this._cache = new LRUCache(300, 0.66);\n    _this._seq = 0;\n    return _this;\n  }\n  _inherits(LRUMemory, _Memory2);\n  return _createClass(LRUMemory, [{\n    key: \"memorize\",\n    value: function memorize(model, pos, item) {\n      var key = \"\".concat(model.getLanguageId(), \"/\").concat(item.textLabel);\n      this._cache.set(key, {\n        touch: this._seq++,\n        type: item.completion.kind,\n        insertText: item.completion.insertText\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(model, pos, items) {\n      if (items.length === 0) {\n        return 0;\n      }\n      var lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\n      if (/\\s$/.test(lineSuffix)) {\n        return _get(_getPrototypeOf(LRUMemory.prototype), \"select\", this).call(this, model, pos, items);\n      }\n      var topScore = items[0].score[0];\n      var indexPreselect = -1;\n      var indexRecency = -1;\n      var seq = -1;\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].score[0] !== topScore) {\n          // consider only top items\n          break;\n        }\n        var key = \"\".concat(model.getLanguageId(), \"/\").concat(items[i].textLabel);\n        var item = this._cache.peek(key);\n        if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\n          seq = item.touch;\n          indexRecency = i;\n        }\n        if (items[i].completion.preselect && indexPreselect === -1) {\n          // stop when seeing an auto-select-item\n          return indexPreselect = i;\n        }\n      }\n      if (indexRecency !== -1) {\n        return indexRecency;\n      } else if (indexPreselect !== -1) {\n        return indexPreselect;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._cache.toJSON();\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      this._cache.clear();\n      var seq = 0;\n      var _iterator = _createForOfIteratorHelper(data),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n          value.touch = seq;\n          value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n          this._cache.set(key, value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._seq = this._cache.size;\n    }\n  }]);\n}(Memory);\nexport var PrefixMemory = /*#__PURE__*/function (_Memory3) {\n  function PrefixMemory() {\n    var _this2;\n    _classCallCheck(this, PrefixMemory);\n    _this2 = _callSuper(this, PrefixMemory, ['recentlyUsedByPrefix']);\n    _this2._trie = TernarySearchTree.forStrings();\n    _this2._seq = 0;\n    return _this2;\n  }\n  _inherits(PrefixMemory, _Memory3);\n  return _createClass(PrefixMemory, [{\n    key: \"memorize\",\n    value: function memorize(model, pos, item) {\n      var _model$getWordUntilPo = model.getWordUntilPosition(pos),\n        word = _model$getWordUntilPo.word;\n      var key = \"\".concat(model.getLanguageId(), \"/\").concat(word);\n      this._trie.set(key, {\n        type: item.completion.kind,\n        insertText: item.completion.insertText,\n        touch: this._seq++\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(model, pos, items) {\n      var _model$getWordUntilPo2 = model.getWordUntilPosition(pos),\n        word = _model$getWordUntilPo2.word;\n      if (!word) {\n        return _get(_getPrototypeOf(PrefixMemory.prototype), \"select\", this).call(this, model, pos, items);\n      }\n      var key = \"\".concat(model.getLanguageId(), \"/\").concat(word);\n      var item = this._trie.get(key);\n      if (!item) {\n        item = this._trie.findSubstr(key);\n      }\n      if (item) {\n        for (var i = 0; i < items.length; i++) {\n          var _items$i$completion = items[i].completion,\n            kind = _items$i$completion.kind,\n            insertText = _items$i$completion.insertText;\n          if (kind === item.type && insertText === item.insertText) {\n            return i;\n          }\n        }\n      }\n      return _get(_getPrototypeOf(PrefixMemory.prototype), \"select\", this).call(this, model, pos, items);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var entries = [];\n      this._trie.forEach(function (value, key) {\n        return entries.push([key, value]);\n      });\n      // sort by last recently used (touch), then\n      // take the top 200 item and normalize their\n      // touch\n      entries.sort(function (a, b) {\n        return -(a[1].touch - b[1].touch);\n      }).forEach(function (value, i) {\n        return value[1].touch = i;\n      });\n      return entries.slice(0, 200);\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      this._trie.clear();\n      if (data.length > 0) {\n        this._seq = data[0][1].touch + 1;\n        var _iterator2 = _createForOfIteratorHelper(data),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n              key = _step2$value[0],\n              value = _step2$value[1];\n            value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n            this._trie.set(key, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n  }]);\n}(Memory);\nvar SuggestMemoryService = SuggestMemoryService_1 = /*#__PURE__*/function () {\n  function SuggestMemoryService(_storageService, _configService) {\n    var _this3 = this;\n    _classCallCheck(this, SuggestMemoryService);\n    this._storageService = _storageService;\n    this._configService = _configService;\n    this._disposables = new DisposableStore();\n    this._persistSoon = new RunOnceScheduler(function () {\n      return _this3._saveState();\n    }, 500);\n    this._disposables.add(_storageService.onWillSaveState(function (e) {\n      if (e.reason === WillSaveStateReason.SHUTDOWN) {\n        _this3._saveState();\n      }\n    }));\n  }\n  return _createClass(SuggestMemoryService, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._disposables.dispose();\n      this._persistSoon.dispose();\n    }\n  }, {\n    key: \"memorize\",\n    value: function memorize(model, pos, item) {\n      this._withStrategy(model, pos).memorize(model, pos, item);\n      this._persistSoon.schedule();\n    }\n  }, {\n    key: \"select\",\n    value: function select(model, pos, items) {\n      return this._withStrategy(model, pos).select(model, pos, items);\n    }\n  }, {\n    key: \"_withStrategy\",\n    value: function _withStrategy(model, pos) {\n      var _a;\n      var mode = this._configService.getValue('editor.suggestSelection', {\n        overrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),\n        resource: model.uri\n      });\n      if (((_a = this._strategy) === null || _a === void 0 ? void 0 : _a.name) !== mode) {\n        this._saveState();\n        var ctor = SuggestMemoryService_1._strategyCtors.get(mode) || NoMemory;\n        this._strategy = new ctor();\n        try {\n          var share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n          var scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n          var raw = this._storageService.get(\"\".concat(SuggestMemoryService_1._storagePrefix, \"/\").concat(mode), scope);\n          if (raw) {\n            this._strategy.fromJSON(JSON.parse(raw));\n          }\n        } catch (e) {\n          // things can go wrong with JSON...\n        }\n      }\n      return this._strategy;\n    }\n  }, {\n    key: \"_saveState\",\n    value: function _saveState() {\n      if (this._strategy) {\n        var share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n        var scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n        var raw = JSON.stringify(this._strategy);\n        this._storageService.store(\"\".concat(SuggestMemoryService_1._storagePrefix, \"/\").concat(this._strategy.name), raw, scope, 1 /* StorageTarget.MACHINE */);\n      }\n    }\n  }]);\n}();\nSuggestMemoryService._strategyCtors = new Map([['recentlyUsedByPrefix', PrefixMemory], ['recentlyUsed', LRUMemory], ['first', NoMemory]]);\nSuggestMemoryService._storagePrefix = 'suggest/memories';\nSuggestMemoryService = SuggestMemoryService_1 = __decorate([__param(0, IStorageService), __param(1, IConfigurationService)], SuggestMemoryService);\nexport { SuggestMemoryService };\nexport var ISuggestMemoryService = createDecorator('ISuggestMemories');\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, 1 /* InstantiationType.Delayed */);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","SuggestMemoryService_1","RunOnceScheduler","DisposableStore","LRUCache","TernarySearchTree","CompletionItemKinds","IConfigurationService","registerSingleton","createDecorator","IStorageService","WillSaveStateReason","Memory","name","_classCallCheck","_createClass","value","select","model","pos","items","topScore","score","_items$i","suggestion","completion","preselect","NoMemory","_Memory","_callSuper","_inherits","memorize","item","toJSON","undefined","fromJSON","LRUMemory","_Memory2","_this","_cache","_seq","concat","getLanguageId","textLabel","set","touch","type","kind","insertText","lineSuffix","getLineContent","lineNumber","substr","column","test","_get","_getPrototypeOf","prototype","call","indexPreselect","indexRecency","seq","peek","data","clear","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","fromString","err","e","f","size","PrefixMemory","_Memory3","_this2","_trie","forStrings","_model$getWordUntilPo","getWordUntilPosition","word","_model$getWordUntilPo2","get","findSubstr","_items$i$completion","entries","forEach","push","sort","a","b","slice","_iterator2","_step2","_step2$value","SuggestMemoryService","_storageService","_configService","_this3","_disposables","_persistSoon","_saveState","add","onWillSaveState","reason","SHUTDOWN","dispose","_withStrategy","schedule","_a","mode","getValue","overrideIdentifier","getLanguageIdAtPosition","resource","uri","_strategy","ctor","_strategyCtors","share","scope","raw","_storagePrefix","JSON","parse","stringify","store","Map","ISuggestMemoryService"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestMemory.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestMemoryService_1;\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { CompletionItemKinds } from '../../../common/languages.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport class Memory {\n    constructor(name) {\n        this.name = name;\n    }\n    select(model, pos, items) {\n        if (items.length === 0) {\n            return 0;\n        }\n        const topScore = items[0].score[0];\n        for (let i = 0; i < items.length; i++) {\n            const { score, completion: suggestion } = items[i];\n            if (score[0] !== topScore) {\n                // stop when leaving the group of top matches\n                break;\n            }\n            if (suggestion.preselect) {\n                // stop when seeing an auto-select-item\n                return i;\n            }\n        }\n        return 0;\n    }\n}\nexport class NoMemory extends Memory {\n    constructor() {\n        super('first');\n    }\n    memorize(model, pos, item) {\n        // no-op\n    }\n    toJSON() {\n        return undefined;\n    }\n    fromJSON() {\n        //\n    }\n}\nexport class LRUMemory extends Memory {\n    constructor() {\n        super('recentlyUsed');\n        this._cache = new LRUCache(300, 0.66);\n        this._seq = 0;\n    }\n    memorize(model, pos, item) {\n        const key = `${model.getLanguageId()}/${item.textLabel}`;\n        this._cache.set(key, {\n            touch: this._seq++,\n            type: item.completion.kind,\n            insertText: item.completion.insertText\n        });\n    }\n    select(model, pos, items) {\n        if (items.length === 0) {\n            return 0;\n        }\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\n        if (/\\s$/.test(lineSuffix)) {\n            return super.select(model, pos, items);\n        }\n        const topScore = items[0].score[0];\n        let indexPreselect = -1;\n        let indexRecency = -1;\n        let seq = -1;\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].score[0] !== topScore) {\n                // consider only top items\n                break;\n            }\n            const key = `${model.getLanguageId()}/${items[i].textLabel}`;\n            const item = this._cache.peek(key);\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\n                seq = item.touch;\n                indexRecency = i;\n            }\n            if (items[i].completion.preselect && indexPreselect === -1) {\n                // stop when seeing an auto-select-item\n                return indexPreselect = i;\n            }\n        }\n        if (indexRecency !== -1) {\n            return indexRecency;\n        }\n        else if (indexPreselect !== -1) {\n            return indexPreselect;\n        }\n        else {\n            return 0;\n        }\n    }\n    toJSON() {\n        return this._cache.toJSON();\n    }\n    fromJSON(data) {\n        this._cache.clear();\n        const seq = 0;\n        for (const [key, value] of data) {\n            value.touch = seq;\n            value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n            this._cache.set(key, value);\n        }\n        this._seq = this._cache.size;\n    }\n}\nexport class PrefixMemory extends Memory {\n    constructor() {\n        super('recentlyUsedByPrefix');\n        this._trie = TernarySearchTree.forStrings();\n        this._seq = 0;\n    }\n    memorize(model, pos, item) {\n        const { word } = model.getWordUntilPosition(pos);\n        const key = `${model.getLanguageId()}/${word}`;\n        this._trie.set(key, {\n            type: item.completion.kind,\n            insertText: item.completion.insertText,\n            touch: this._seq++\n        });\n    }\n    select(model, pos, items) {\n        const { word } = model.getWordUntilPosition(pos);\n        if (!word) {\n            return super.select(model, pos, items);\n        }\n        const key = `${model.getLanguageId()}/${word}`;\n        let item = this._trie.get(key);\n        if (!item) {\n            item = this._trie.findSubstr(key);\n        }\n        if (item) {\n            for (let i = 0; i < items.length; i++) {\n                const { kind, insertText } = items[i].completion;\n                if (kind === item.type && insertText === item.insertText) {\n                    return i;\n                }\n            }\n        }\n        return super.select(model, pos, items);\n    }\n    toJSON() {\n        const entries = [];\n        this._trie.forEach((value, key) => entries.push([key, value]));\n        // sort by last recently used (touch), then\n        // take the top 200 item and normalize their\n        // touch\n        entries\n            .sort((a, b) => -(a[1].touch - b[1].touch))\n            .forEach((value, i) => value[1].touch = i);\n        return entries.slice(0, 200);\n    }\n    fromJSON(data) {\n        this._trie.clear();\n        if (data.length > 0) {\n            this._seq = data[0][1].touch + 1;\n            for (const [key, value] of data) {\n                value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n                this._trie.set(key, value);\n            }\n        }\n    }\n}\nlet SuggestMemoryService = SuggestMemoryService_1 = class SuggestMemoryService {\n    constructor(_storageService, _configService) {\n        this._storageService = _storageService;\n        this._configService = _configService;\n        this._disposables = new DisposableStore();\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\n        this._disposables.add(_storageService.onWillSaveState(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                this._saveState();\n            }\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._persistSoon.dispose();\n    }\n    memorize(model, pos, item) {\n        this._withStrategy(model, pos).memorize(model, pos, item);\n        this._persistSoon.schedule();\n    }\n    select(model, pos, items) {\n        return this._withStrategy(model, pos).select(model, pos, items);\n    }\n    _withStrategy(model, pos) {\n        var _a;\n        const mode = this._configService.getValue('editor.suggestSelection', {\n            overrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),\n            resource: model.uri\n        });\n        if (((_a = this._strategy) === null || _a === void 0 ? void 0 : _a.name) !== mode) {\n            this._saveState();\n            const ctor = SuggestMemoryService_1._strategyCtors.get(mode) || NoMemory;\n            this._strategy = new ctor();\n            try {\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n                const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n                const raw = this._storageService.get(`${SuggestMemoryService_1._storagePrefix}/${mode}`, scope);\n                if (raw) {\n                    this._strategy.fromJSON(JSON.parse(raw));\n                }\n            }\n            catch (e) {\n                // things can go wrong with JSON...\n            }\n        }\n        return this._strategy;\n    }\n    _saveState() {\n        if (this._strategy) {\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n            const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n            const raw = JSON.stringify(this._strategy);\n            this._storageService.store(`${SuggestMemoryService_1._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n};\nSuggestMemoryService._strategyCtors = new Map([\n    ['recentlyUsedByPrefix', PrefixMemory],\n    ['recentlyUsed', LRUMemory],\n    ['first', NoMemory]\n]);\nSuggestMemoryService._storagePrefix = 'suggest/memories';\nSuggestMemoryService = SuggestMemoryService_1 = __decorate([\n    __param(0, IStorageService),\n    __param(1, IConfigurationService)\n], SuggestMemoryService);\nexport { SuggestMemoryService };\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, 1 /* InstantiationType.Delayed */);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}