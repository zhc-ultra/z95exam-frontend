{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n  if (isMacintosh) {\n    return e.altKey;\n  } else {\n    return e.ctrlKey;\n  }\n}\nexport var DragAndDropController = /*#__PURE__*/function (_Disposable) {\n  function DragAndDropController(editor) {\n    var _this;\n    _classCallCheck(this, DragAndDropController);\n    _this = _callSuper(this, DragAndDropController);\n    _this._editor = editor;\n    _this._dndDecorationIds = _this._editor.createDecorationsCollection();\n    _this._register(_this._editor.onMouseDown(function (e) {\n      return _this._onEditorMouseDown(e);\n    }));\n    _this._register(_this._editor.onMouseUp(function (e) {\n      return _this._onEditorMouseUp(e);\n    }));\n    _this._register(_this._editor.onMouseDrag(function (e) {\n      return _this._onEditorMouseDrag(e);\n    }));\n    _this._register(_this._editor.onMouseDrop(function (e) {\n      return _this._onEditorMouseDrop(e);\n    }));\n    _this._register(_this._editor.onMouseDropCanceled(function () {\n      return _this._onEditorMouseDropCanceled();\n    }));\n    _this._register(_this._editor.onKeyDown(function (e) {\n      return _this.onEditorKeyDown(e);\n    }));\n    _this._register(_this._editor.onKeyUp(function (e) {\n      return _this.onEditorKeyUp(e);\n    }));\n    _this._register(_this._editor.onDidBlurEditorWidget(function () {\n      return _this.onEditorBlur();\n    }));\n    _this._register(_this._editor.onDidBlurEditorText(function () {\n      return _this.onEditorBlur();\n    }));\n    _this._mouseDown = false;\n    _this._modifierPressed = false;\n    _this._dragSelection = null;\n    return _this;\n  }\n  _inherits(DragAndDropController, _Disposable);\n  return _createClass(DragAndDropController, [{\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this._removeDecoration();\n      this._dragSelection = null;\n      this._mouseDown = false;\n      this._modifierPressed = false;\n    }\n  }, {\n    key: \"onEditorKeyDown\",\n    value: function onEditorKeyDown(e) {\n      if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n        return;\n      }\n      if (hasTriggerModifier(e)) {\n        this._modifierPressed = true;\n      }\n      if (this._mouseDown && hasTriggerModifier(e)) {\n        this._editor.updateOptions({\n          mouseStyle: 'copy'\n        });\n      }\n    }\n  }, {\n    key: \"onEditorKeyUp\",\n    value: function onEditorKeyUp(e) {\n      if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n        return;\n      }\n      if (hasTriggerModifier(e)) {\n        this._modifierPressed = false;\n      }\n      if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n        this._editor.updateOptions({\n          mouseStyle: 'default'\n        });\n      }\n    }\n  }, {\n    key: \"_onEditorMouseDown\",\n    value: function _onEditorMouseDown(mouseEvent) {\n      this._mouseDown = true;\n    }\n  }, {\n    key: \"_onEditorMouseUp\",\n    value: function _onEditorMouseUp(mouseEvent) {\n      this._mouseDown = false;\n      // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n      this._editor.updateOptions({\n        mouseStyle: 'text'\n      });\n    }\n  }, {\n    key: \"_onEditorMouseDrag\",\n    value: function _onEditorMouseDrag(mouseEvent) {\n      var target = mouseEvent.target;\n      if (this._dragSelection === null) {\n        var selections = this._editor.getSelections() || [];\n        var possibleSelections = selections.filter(function (selection) {\n          return target.position && selection.containsPosition(target.position);\n        });\n        if (possibleSelections.length === 1) {\n          this._dragSelection = possibleSelections[0];\n        } else {\n          return;\n        }\n      }\n      if (hasTriggerModifier(mouseEvent.event)) {\n        this._editor.updateOptions({\n          mouseStyle: 'copy'\n        });\n      } else {\n        this._editor.updateOptions({\n          mouseStyle: 'default'\n        });\n      }\n      if (target.position) {\n        if (this._dragSelection.containsPosition(target.position)) {\n          this._removeDecoration();\n        } else {\n          this.showAt(target.position);\n        }\n      }\n    }\n  }, {\n    key: \"_onEditorMouseDropCanceled\",\n    value: function _onEditorMouseDropCanceled() {\n      this._editor.updateOptions({\n        mouseStyle: 'text'\n      });\n      this._removeDecoration();\n      this._dragSelection = null;\n      this._mouseDown = false;\n    }\n  }, {\n    key: \"_onEditorMouseDrop\",\n    value: function _onEditorMouseDrop(mouseEvent) {\n      if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n        var newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n        if (this._dragSelection === null) {\n          var newSelections = null;\n          if (mouseEvent.event.shiftKey) {\n            var primarySelection = this._editor.getSelection();\n            if (primarySelection) {\n              var selectionStartLineNumber = primarySelection.selectionStartLineNumber,\n                selectionStartColumn = primarySelection.selectionStartColumn;\n              newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n            }\n          } else {\n            newSelections = (this._editor.getSelections() || []).map(function (selection) {\n              if (selection.containsPosition(newCursorPosition)) {\n                return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n              } else {\n                return selection;\n              }\n            });\n          }\n          // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n          this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n        } else if (!this._dragSelection.containsPosition(newCursorPosition) || (hasTriggerModifier(mouseEvent.event) || this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n        ) {\n          this._editor.pushUndoStop();\n          this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n          this._editor.pushUndoStop();\n        }\n      }\n      this._editor.updateOptions({\n        mouseStyle: 'text'\n      });\n      this._removeDecoration();\n      this._dragSelection = null;\n      this._mouseDown = false;\n    }\n  }, {\n    key: \"showAt\",\n    value: function showAt(position) {\n      this._dndDecorationIds.set([{\n        range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n        options: DragAndDropController._DECORATION_OPTIONS\n      }]);\n      this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n  }, {\n    key: \"_removeDecoration\",\n    value: function _removeDecoration() {\n      this._dndDecorationIds.clear();\n    }\n  }, {\n    key: \"_hitContent\",\n    value: function _hitContent(target) {\n      return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ || target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n  }, {\n    key: \"_hitMargin\",\n    value: function _hitMargin(target) {\n      return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ || target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ || target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._removeDecoration();\n      this._dragSelection = null;\n      this._mouseDown = false;\n      this._modifierPressed = false;\n      _get(_getPrototypeOf(DragAndDropController.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n}(Disposable);\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n  description: 'dnd-target',\n  className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);","map":{"version":3,"names":["Disposable","isMacintosh","registerEditorContribution","Position","Range","Selection","ModelDecorationOptions","DragAndDropCommand","hasTriggerModifier","e","altKey","ctrlKey","DragAndDropController","_Disposable","editor","_this","_classCallCheck","_callSuper","_editor","_dndDecorationIds","createDecorationsCollection","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_mouseDown","_modifierPressed","_dragSelection","_inherits","_createClass","key","value","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","selections","getSelections","possibleSelections","filter","selection","position","containsPosition","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","lineNumber","column","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","getEndPosition","equals","getStartPosition","pushUndoStop","executeCommand","ID","set","range","options","_DECORATION_OPTIONS","revealPosition","clear","type","dispose","_get","_getPrototypeOf","prototype","call","register","description","className"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._dndDecorationIds = this._editor.createDecorationsCollection();\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        const target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            const possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            const newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    const primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        this._dndDecorationIds.set([{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }]);\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds.clear();\n    }\n    _hitContent(target) {\n        return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ ||\n            target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}