{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstIdxMonotonousOrArrLen } from '../../../../base/common/arraysFind.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose as _dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport var CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport var CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport var CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport var CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport var ToggleCaseSensitiveKeybinding = {\n  primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n  mac: {\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */\n  }\n};\nexport var ToggleWholeWordKeybinding = {\n  primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n  mac: {\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */\n  }\n};\nexport var ToggleRegexKeybinding = {\n  primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n  mac: {\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */\n  }\n};\nexport var ToggleSearchScopeKeybinding = {\n  primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n  mac: {\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */\n  }\n};\nexport var TogglePreserveCaseKeybinding = {\n  primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n  mac: {\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */\n  }\n};\nexport var FIND_IDS = {\n  StartFindAction: 'actions.find',\n  StartFindWithSelection: 'actions.findWithSelection',\n  StartFindWithArgs: 'editor.actions.findWithArgs',\n  NextMatchFindAction: 'editor.action.nextMatchFindAction',\n  PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n  GoToMatchFindAction: 'editor.action.goToMatchFindAction',\n  NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n  PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n  StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n  CloseFindWidgetCommand: 'closeFindWidget',\n  ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n  ToggleWholeWordCommand: 'toggleFindWholeWord',\n  ToggleRegexCommand: 'toggleFindRegex',\n  ToggleSearchScopeCommand: 'toggleFindInSelection',\n  TogglePreserveCaseCommand: 'togglePreserveCase',\n  ReplaceOneAction: 'editor.action.replaceOne',\n  ReplaceAllAction: 'editor.action.replaceAll',\n  SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport var MATCHES_LIMIT = 19999;\nvar RESEARCH_DELAY = 240;\nexport var FindModelBoundToEditorModel = /*#__PURE__*/function () {\n  function FindModelBoundToEditorModel(editor, state) {\n    var _this = this;\n    _classCallCheck(this, FindModelBoundToEditorModel);\n    this._toDispose = new DisposableStore();\n    this._editor = editor;\n    this._state = state;\n    this._isDisposed = false;\n    this._startSearchingTimer = new TimeoutTimer();\n    this._decorations = new FindDecorations(editor);\n    this._toDispose.add(this._decorations);\n    this._updateDecorationsScheduler = new RunOnceScheduler(function () {\n      return _this.research(false);\n    }, 100);\n    this._toDispose.add(this._updateDecorationsScheduler);\n    this._toDispose.add(this._editor.onDidChangeCursorPosition(function (e) {\n      if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.reason === 5 /* CursorChangeReason.Undo */ || e.reason === 6 /* CursorChangeReason.Redo */) {\n        _this._decorations.setStartPosition(_this._editor.getPosition());\n      }\n    }));\n    this._ignoreModelContentChanged = false;\n    this._toDispose.add(this._editor.onDidChangeModelContent(function (e) {\n      if (_this._ignoreModelContentChanged) {\n        return;\n      }\n      if (e.isFlush) {\n        // a model.setValue() was called\n        _this._decorations.reset();\n      }\n      _this._decorations.setStartPosition(_this._editor.getPosition());\n      _this._updateDecorationsScheduler.schedule();\n    }));\n    this._toDispose.add(this._state.onFindReplaceStateChange(function (e) {\n      return _this._onStateChanged(e);\n    }));\n    this.research(false, this._state.searchScope);\n  }\n  return _createClass(FindModelBoundToEditorModel, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._isDisposed = true;\n      _dispose(this._startSearchingTimer);\n      this._toDispose.dispose();\n    }\n  }, {\n    key: \"_onStateChanged\",\n    value: function _onStateChanged(e) {\n      var _this2 = this;\n      if (this._isDisposed) {\n        // The find model is disposed during a find state changed event\n        return;\n      }\n      if (!this._editor.hasModel()) {\n        // The find model will be disposed momentarily\n        return;\n      }\n      if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n        var model = this._editor.getModel();\n        if (model.isTooLargeForSyncing()) {\n          this._startSearchingTimer.cancel();\n          this._startSearchingTimer.setIfNotSet(function () {\n            if (e.searchScope) {\n              _this2.research(e.moveCursor, _this2._state.searchScope);\n            } else {\n              _this2.research(e.moveCursor);\n            }\n          }, RESEARCH_DELAY);\n        } else {\n          if (e.searchScope) {\n            this.research(e.moveCursor, this._state.searchScope);\n          } else {\n            this.research(e.moveCursor);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"research\",\n    value: function research(moveCursor, newFindScope) {\n      var _this3 = this;\n      var findScopes = null;\n      if (typeof newFindScope !== 'undefined') {\n        if (newFindScope !== null) {\n          if (!Array.isArray(newFindScope)) {\n            findScopes = [newFindScope];\n          } else {\n            findScopes = newFindScope;\n          }\n        }\n      } else {\n        findScopes = this._decorations.getFindScopes();\n      }\n      if (findScopes !== null) {\n        findScopes = findScopes.map(function (findScope) {\n          if (findScope.startLineNumber !== findScope.endLineNumber) {\n            var endLineNumber = findScope.endLineNumber;\n            if (findScope.endColumn === 1) {\n              endLineNumber = endLineNumber - 1;\n            }\n            return new Range(findScope.startLineNumber, 1, endLineNumber, _this3._editor.getModel().getLineMaxColumn(endLineNumber));\n          }\n          return findScope;\n        });\n      }\n      var findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n      this._decorations.set(findMatches, findScopes);\n      var editorSelection = this._editor.getSelection();\n      var currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n      if (currentMatchesPosition === 0 && findMatches.length > 0) {\n        // current selection is not on top of a match\n        // try to find its nearest result from the top of the document\n        var matchAfterSelection = findFirstIdxMonotonousOrArrLen(findMatches.map(function (match) {\n          return match.range;\n        }), function (range) {\n          return Range.compareRangesUsingStarts(range, editorSelection) >= 0;\n        });\n        currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n      }\n      this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n      if (moveCursor && this._editor.getOption(41 /* EditorOption.find */).cursorMoveOnType) {\n        this._moveToNextMatch(this._decorations.getStartPosition());\n      }\n    }\n  }, {\n    key: \"_hasMatches\",\n    value: function _hasMatches() {\n      return this._state.matchesCount > 0;\n    }\n  }, {\n    key: \"_cannotFind\",\n    value: function _cannotFind() {\n      if (!this._hasMatches()) {\n        var findScope = this._decorations.getFindScope();\n        if (findScope) {\n          // Reveal the selection so user is reminded that 'selection find' is on.\n          this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n        }\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"_setCurrentFindMatch\",\n    value: function _setCurrentFindMatch(match) {\n      var matchesPosition = this._decorations.setCurrentFindMatch(match);\n      this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n      this._editor.setSelection(match);\n      this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n  }, {\n    key: \"_prevSearchPosition\",\n    value: function _prevSearchPosition(before) {\n      var isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0 || this._state.searchString.indexOf('$') >= 0);\n      var lineNumber = before.lineNumber,\n        column = before.column;\n      var model = this._editor.getModel();\n      if (isUsingLineStops || column === 1) {\n        if (lineNumber === 1) {\n          lineNumber = model.getLineCount();\n        } else {\n          lineNumber--;\n        }\n        column = model.getLineMaxColumn(lineNumber);\n      } else {\n        column--;\n      }\n      return new Position(lineNumber, column);\n    }\n  }, {\n    key: \"_moveToPrevMatch\",\n    value: function _moveToPrevMatch(before) {\n      var isRecursed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this._state.canNavigateBack()) {\n        // we are beyond the first matched find result\n        // instead of doing nothing, we should refocus the first item\n        var nextMatchRange = this._decorations.matchAfterPosition(before);\n        if (nextMatchRange) {\n          this._setCurrentFindMatch(nextMatchRange);\n        }\n        return;\n      }\n      if (this._decorations.getCount() < MATCHES_LIMIT) {\n        var prevMatchRange = this._decorations.matchBeforePosition(before);\n        if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n          before = this._prevSearchPosition(before);\n          prevMatchRange = this._decorations.matchBeforePosition(before);\n        }\n        if (prevMatchRange) {\n          this._setCurrentFindMatch(prevMatchRange);\n        }\n        return;\n      }\n      if (this._cannotFind()) {\n        return;\n      }\n      var findScope = this._decorations.getFindScope();\n      var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n      // ...(----)...|...\n      if (searchRange.getEndPosition().isBefore(before)) {\n        before = searchRange.getEndPosition();\n      }\n      // ...|...(----)...\n      if (before.isBefore(searchRange.getStartPosition())) {\n        before = searchRange.getEndPosition();\n      }\n      var _before = before,\n        lineNumber = _before.lineNumber,\n        column = _before.column;\n      var model = this._editor.getModel();\n      var position = new Position(lineNumber, column);\n      var prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n      if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n        // Looks like we're stuck at this position, unacceptable!\n        position = this._prevSearchPosition(position);\n        prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n      }\n      if (!prevMatch) {\n        // there is precisely one match and selection is on top of it\n        return;\n      }\n      if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n        return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n      }\n      this._setCurrentFindMatch(prevMatch.range);\n    }\n  }, {\n    key: \"moveToPrevMatch\",\n    value: function moveToPrevMatch() {\n      this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n  }, {\n    key: \"_nextSearchPosition\",\n    value: function _nextSearchPosition(after) {\n      var isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0 || this._state.searchString.indexOf('$') >= 0);\n      var lineNumber = after.lineNumber,\n        column = after.column;\n      var model = this._editor.getModel();\n      if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n        if (lineNumber === model.getLineCount()) {\n          lineNumber = 1;\n        } else {\n          lineNumber++;\n        }\n        column = 1;\n      } else {\n        column++;\n      }\n      return new Position(lineNumber, column);\n    }\n  }, {\n    key: \"_moveToNextMatch\",\n    value: function _moveToNextMatch(after) {\n      if (!this._state.canNavigateForward()) {\n        // we are beyond the last matched find result\n        // instead of doing nothing, we should refocus the last item\n        var prevMatchRange = this._decorations.matchBeforePosition(after);\n        if (prevMatchRange) {\n          this._setCurrentFindMatch(prevMatchRange);\n        }\n        return;\n      }\n      if (this._decorations.getCount() < MATCHES_LIMIT) {\n        var nextMatchRange = this._decorations.matchAfterPosition(after);\n        if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n          // Looks like we're stuck at this position, unacceptable!\n          after = this._nextSearchPosition(after);\n          nextMatchRange = this._decorations.matchAfterPosition(after);\n        }\n        if (nextMatchRange) {\n          this._setCurrentFindMatch(nextMatchRange);\n        }\n        return;\n      }\n      var nextMatch = this._getNextMatch(after, false, true);\n      if (nextMatch) {\n        this._setCurrentFindMatch(nextMatch.range);\n      }\n    }\n  }, {\n    key: \"_getNextMatch\",\n    value: function _getNextMatch(after, captureMatches, forceMove) {\n      var isRecursed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (this._cannotFind()) {\n        return null;\n      }\n      var findScope = this._decorations.getFindScope();\n      var searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n      // ...(----)...|...\n      if (searchRange.getEndPosition().isBefore(after)) {\n        after = searchRange.getStartPosition();\n      }\n      // ...|...(----)...\n      if (after.isBefore(searchRange.getStartPosition())) {\n        after = searchRange.getStartPosition();\n      }\n      var _after = after,\n        lineNumber = _after.lineNumber,\n        column = _after.column;\n      var model = this._editor.getModel();\n      var position = new Position(lineNumber, column);\n      var nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches);\n      if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n        // Looks like we're stuck at this position, unacceptable!\n        position = this._nextSearchPosition(position);\n        nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches);\n      }\n      if (!nextMatch) {\n        // there is precisely one match and selection is on top of it\n        return null;\n      }\n      if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n        return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n      }\n      return nextMatch;\n    }\n  }, {\n    key: \"moveToNextMatch\",\n    value: function moveToNextMatch() {\n      this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n  }, {\n    key: \"_moveToMatch\",\n    value: function _moveToMatch(index) {\n      var decorationRange = this._decorations.getDecorationRangeAt(index);\n      if (decorationRange) {\n        this._setCurrentFindMatch(decorationRange);\n      }\n    }\n  }, {\n    key: \"moveToMatch\",\n    value: function moveToMatch(index) {\n      this._moveToMatch(index);\n    }\n  }, {\n    key: \"_getReplacePattern\",\n    value: function _getReplacePattern() {\n      if (this._state.isRegex) {\n        return parseReplaceString(this._state.replaceString);\n      }\n      return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace() {\n      if (!this._hasMatches()) {\n        return;\n      }\n      var replacePattern = this._getReplacePattern();\n      var selection = this._editor.getSelection();\n      var nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n      if (nextMatch) {\n        if (selection.equalsRange(nextMatch.range)) {\n          // selection sits on a find match => replace it!\n          var replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n          var command = new ReplaceCommand(selection, replaceString);\n          this._executeEditorCommand('replace', command);\n          this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n          this.research(true);\n        } else {\n          this._decorations.setStartPosition(this._editor.getPosition());\n          this._setCurrentFindMatch(nextMatch.range);\n        }\n      }\n    }\n  }, {\n    key: \"_findMatches\",\n    value: function _findMatches(findScopes, captureMatches, limitResultCount) {\n      var _this4 = this;\n      var searchRanges = (findScopes || [null]).map(function (scope) {\n        return FindModelBoundToEditorModel._getSearchRange(_this4._editor.getModel(), scope);\n      });\n      return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n  }, {\n    key: \"replaceAll\",\n    value: function replaceAll() {\n      if (!this._hasMatches()) {\n        return;\n      }\n      var findScopes = this._decorations.getFindScopes();\n      if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n        // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n        this._largeReplaceAll();\n      } else {\n        this._regularReplaceAll(findScopes);\n      }\n      this.research(false);\n    }\n  }, {\n    key: \"_largeReplaceAll\",\n    value: function _largeReplaceAll() {\n      var searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null);\n      var searchData = searchParams.parseSearchRequest();\n      if (!searchData) {\n        return;\n      }\n      var searchRegex = searchData.regex;\n      if (!searchRegex.multiline) {\n        var mod = 'mu';\n        if (searchRegex.ignoreCase) {\n          mod += 'i';\n        }\n        if (searchRegex.global) {\n          mod += 'g';\n        }\n        searchRegex = new RegExp(searchRegex.source, mod);\n      }\n      var model = this._editor.getModel();\n      var modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n      var fullModelRange = model.getFullModelRange();\n      var replacePattern = this._getReplacePattern();\n      var resultText;\n      var preserveCase = this._state.preserveCase;\n      if (replacePattern.hasReplacementPatterns || preserveCase) {\n        resultText = modelText.replace(searchRegex, function () {\n          return replacePattern.buildReplaceString(arguments, preserveCase);\n        });\n      } else {\n        resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n      }\n      var command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n      this._executeEditorCommand('replaceAll', command);\n    }\n  }, {\n    key: \"_regularReplaceAll\",\n    value: function _regularReplaceAll(findScopes) {\n      var replacePattern = this._getReplacePattern();\n      // Get all the ranges (even more than the highlighted ones)\n      var matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n      var replaceStrings = [];\n      for (var i = 0, len = matches.length; i < len; i++) {\n        replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n      }\n      var command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(function (m) {\n        return m.range;\n      }), replaceStrings);\n      this._executeEditorCommand('replaceAll', command);\n    }\n  }, {\n    key: \"selectAllMatches\",\n    value: function selectAllMatches() {\n      if (!this._hasMatches()) {\n        return;\n      }\n      var findScopes = this._decorations.getFindScopes();\n      // Get all the ranges (even more than the highlighted ones)\n      var matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n      var selections = matches.map(function (m) {\n        return new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn);\n      });\n      // If one of the ranges is the editor selection, then maintain it as primary\n      var editorSelection = this._editor.getSelection();\n      for (var i = 0, len = selections.length; i < len; i++) {\n        var sel = selections[i];\n        if (sel.equalsRange(editorSelection)) {\n          selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n          break;\n        }\n      }\n      this._editor.setSelections(selections);\n    }\n  }, {\n    key: \"_executeEditorCommand\",\n    value: function _executeEditorCommand(source, command) {\n      try {\n        this._ignoreModelContentChanged = true;\n        this._editor.pushUndoStop();\n        this._editor.executeCommand(source, command);\n        this._editor.pushUndoStop();\n      } finally {\n        this._ignoreModelContentChanged = false;\n      }\n    }\n  }], [{\n    key: \"_getSearchRange\",\n    value: function _getSearchRange(model, findScope) {\n      // If we have set now or before a find scope, use it for computing the search range\n      if (findScope) {\n        return findScope;\n      }\n      return model.getFullModelRange();\n    }\n  }]);\n}();","map":{"version":3,"names":["findFirstIdxMonotonousOrArrLen","RunOnceScheduler","TimeoutTimer","DisposableStore","dispose","ReplaceCommand","ReplaceCommandThatPreservesSelection","Position","Range","Selection","SearchParams","FindDecorations","ReplaceAllCommand","parseReplaceString","ReplacePattern","RawContextKey","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_WIDGET_NOT_VISIBLE","toNegated","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","primary","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","StartFindAction","StartFindWithSelection","StartFindWithArgs","NextMatchFindAction","PreviousMatchFindAction","GoToMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","CloseFindWidgetCommand","ToggleCaseSensitiveCommand","ToggleWholeWordCommand","ToggleRegexCommand","ToggleSearchScopeCommand","TogglePreserveCaseCommand","ReplaceOneAction","ReplaceAllAction","SelectAllMatchesAction","MATCHES_LIMIT","RESEARCH_DELAY","FindModelBoundToEditorModel","editor","state","_this","_classCallCheck","_toDispose","_editor","_state","_isDisposed","_startSearchingTimer","_decorations","add","_updateDecorationsScheduler","research","onDidChangeCursorPosition","e","reason","setStartPosition","getPosition","_ignoreModelContentChanged","onDidChangeModelContent","isFlush","reset","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","_createClass","key","value","_this2","hasModel","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","model","getModel","isTooLargeForSyncing","cancel","setIfNotSet","moveCursor","newFindScope","_this3","findScopes","Array","isArray","getFindScopes","map","findScope","startLineNumber","endLineNumber","endColumn","getLineMaxColumn","findMatches","_findMatches","set","editorSelection","getSelection","currentMatchesPosition","getCurrentMatchesPosition","length","matchAfterSelection","match","range","compareRangesUsingStarts","changeMatchInfo","getCount","undefined","getOption","cursorMoveOnType","_moveToNextMatch","getStartPosition","_hasMatches","matchesCount","_cannotFind","getFindScope","revealRangeInCenterIfOutsideViewport","_setCurrentFindMatch","matchesPosition","setCurrentFindMatch","setSelection","_prevSearchPosition","before","isUsingLineStops","indexOf","lineNumber","column","getLineCount","_moveToPrevMatch","isRecursed","arguments","canNavigateBack","nextMatchRange","matchAfterPosition","prevMatchRange","matchBeforePosition","isEmpty","equals","searchRange","_getSearchRange","getEndPosition","isBefore","_before","position","prevMatch","findPreviousMatch","containsRange","moveToPrevMatch","_nextSearchPosition","after","canNavigateForward","nextMatch","_getNextMatch","captureMatches","forceMove","_after","findNextMatch","moveToNextMatch","_moveToMatch","index","decorationRange","getDecorationRangeAt","moveToMatch","_getReplacePattern","replaceString","fromStaticValue","replace","replacePattern","selection","equalsRange","buildReplaceString","matches","preserveCase","command","_executeEditorCommand","startColumn","limitResultCount","_this4","searchRanges","scope","replaceAll","_largeReplaceAll","_regularReplaceAll","searchParams","searchData","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","source","modelText","getValue","fullModelRange","getFullModelRange","resultText","hasReplacementPatterns","replaceStrings","i","len","m","selectAllMatches","selections","sel","concat","slice","setSelections","pushUndoStop","executeCommand"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstIdxMonotonousOrArrLen } from '../../../../base/common/arraysFind.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    GoToMatchFindAction: 'editor.action.goToMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */\n                || e.reason === 5 /* CursorChangeReason.Undo */\n                || e.reason === 6 /* CursorChangeReason.Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            const model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        const findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstIdxMonotonousOrArrLen(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(41 /* EditorOption.find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            const findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        const matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n    _prevSearchPosition(before) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        const { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        const nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        const { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _moveToMatch(index) {\n        const decorationRange = this._decorations.getDecorationRangeAt(index);\n        if (decorationRange) {\n            this._setCurrentFindMatch(decorationRange);\n        }\n    }\n    moveToMatch(index) {\n        this._moveToMatch(index);\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const replacePattern = this._getReplacePattern();\n        const selection = this._editor.getSelection();\n        const nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                const replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                const command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        const command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        const command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        const editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}