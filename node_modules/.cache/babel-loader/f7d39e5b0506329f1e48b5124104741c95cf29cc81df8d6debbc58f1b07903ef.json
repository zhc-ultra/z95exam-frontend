{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nexport var DiffAlgorithmResult = /*#__PURE__*/function () {\n  function DiffAlgorithmResult(diffs,\n  /**\n   * Indicates if the time out was reached.\n   * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n   */\n  hitTimeout) {\n    _classCallCheck(this, DiffAlgorithmResult);\n    this.diffs = diffs;\n    this.hitTimeout = hitTimeout;\n  }\n  return _createClass(DiffAlgorithmResult, null, [{\n    key: \"trivial\",\n    value: function trivial(seq1, seq2) {\n      return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], false);\n    }\n  }, {\n    key: \"trivialTimedOut\",\n    value: function trivialTimedOut(seq1, seq2) {\n      return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], true);\n    }\n  }]);\n}();\nexport var SequenceDiff = /*#__PURE__*/function () {\n  function SequenceDiff(seq1Range, seq2Range) {\n    _classCallCheck(this, SequenceDiff);\n    this.seq1Range = seq1Range;\n    this.seq2Range = seq2Range;\n  }\n  return _createClass(SequenceDiff, [{\n    key: \"swap\",\n    value: function swap() {\n      return new SequenceDiff(this.seq2Range, this.seq1Range);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.seq1Range, \" <-> \").concat(this.seq2Range);\n    }\n  }, {\n    key: \"join\",\n    value: function join(other) {\n      return new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range));\n    }\n  }, {\n    key: \"delta\",\n    value: function delta(offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset));\n    }\n  }, {\n    key: \"deltaStart\",\n    value: function deltaStart(offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset));\n    }\n  }, {\n    key: \"deltaEnd\",\n    value: function deltaEnd(offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset));\n    }\n  }, {\n    key: \"intersect\",\n    value: function intersect(other) {\n      var i1 = this.seq1Range.intersect(other.seq1Range);\n      var i2 = this.seq2Range.intersect(other.seq2Range);\n      if (!i1 || !i2) {\n        return undefined;\n      }\n      return new SequenceDiff(i1, i2);\n    }\n  }, {\n    key: \"getStarts\",\n    value: function getStarts() {\n      return new OffsetPair(this.seq1Range.start, this.seq2Range.start);\n    }\n  }, {\n    key: \"getEndExclusives\",\n    value: function getEndExclusives() {\n      return new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive);\n    }\n  }], [{\n    key: \"invert\",\n    value: function invert(sequenceDiffs, doc1Length) {\n      var result = [];\n      forEachAdjacent(sequenceDiffs, function (a, b) {\n        result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : new OffsetPair(doc1Length, (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length)));\n      });\n      return result;\n    }\n  }, {\n    key: \"fromOffsetPairs\",\n    value: function fromOffsetPairs(start, endExclusive) {\n      return new SequenceDiff(new OffsetRange(start.offset1, endExclusive.offset1), new OffsetRange(start.offset2, endExclusive.offset2));\n    }\n  }]);\n}();\nexport var OffsetPair = /*#__PURE__*/function () {\n  function OffsetPair(offset1, offset2) {\n    _classCallCheck(this, OffsetPair);\n    this.offset1 = offset1;\n    this.offset2 = offset2;\n  }\n  return _createClass(OffsetPair, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.offset1, \" <-> \").concat(this.offset2);\n    }\n  }, {\n    key: \"delta\",\n    value: function delta(offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new OffsetPair(this.offset1 + offset, this.offset2 + offset);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n  }]);\n}();\nOffsetPair.zero = new OffsetPair(0, 0);\nOffsetPair.max = new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\nexport var InfiniteTimeout = /*#__PURE__*/function () {\n  function InfiniteTimeout() {\n    _classCallCheck(this, InfiniteTimeout);\n  }\n  return _createClass(InfiniteTimeout, [{\n    key: \"isValid\",\n    value: function isValid() {\n      return true;\n    }\n  }]);\n}();\nInfiniteTimeout.instance = new InfiniteTimeout();\nexport var DateTimeout = /*#__PURE__*/function () {\n  function DateTimeout(timeout) {\n    _classCallCheck(this, DateTimeout);\n    this.timeout = timeout;\n    this.startTime = Date.now();\n    this.valid = true;\n    if (timeout <= 0) {\n      throw new BugIndicatingError('timeout must be positive');\n    }\n  }\n  // Recommendation: Set a log-point `{this.disable()}` in the body\n  return _createClass(DateTimeout, [{\n    key: \"isValid\",\n    value: function isValid() {\n      var valid = Date.now() - this.startTime < this.timeout;\n      if (!valid && this.valid) {\n        this.valid = false; // timeout reached\n        // eslint-disable-next-line no-debugger\n        debugger; // WARNING: Most likely debugging caused the timeout. Call `this.disable()` to continue without timing out.\n      }\n      return this.valid;\n    }\n  }]);\n}();","map":{"version":3,"names":["forEachAdjacent","BugIndicatingError","OffsetRange","DiffAlgorithmResult","diffs","hitTimeout","_classCallCheck","_createClass","key","value","trivial","seq1","seq2","SequenceDiff","ofLength","length","trivialTimedOut","seq1Range","seq2Range","swap","toString","concat","join","other","delta","offset","deltaStart","deltaEnd","intersect","i1","i2","undefined","getStarts","OffsetPair","start","getEndExclusives","endExclusive","invert","sequenceDiffs","doc1Length","result","a","b","push","fromOffsetPairs","zero","offset1","offset2","equals","max","Number","MAX_SAFE_INTEGER","InfiniteTimeout","isValid","instance","DateTimeout","timeout","startTime","Date","now","valid"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nexport class DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], false);\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], true);\n    }\n    constructor(diffs, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : new OffsetPair(doc1Length, (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length)));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return new SequenceDiff(new OffsetRange(start.offset1, endExclusive.offset1), new OffsetRange(start.offset2, endExclusive.offset2));\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return new SequenceDiff(this.seq2Range, this.seq1Range);\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset));\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return new SequenceDiff(i1, i2);\n    }\n    getStarts() {\n        return new OffsetPair(this.seq1Range.start, this.seq2Range.start);\n    }\n    getEndExclusives() {\n        return new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive);\n    }\n}\nexport class OffsetPair {\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new OffsetPair(this.offset1 + offset, this.offset2 + offset);\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nOffsetPair.zero = new OffsetPair(0, 0);\nOffsetPair.max = new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\nexport class InfiniteTimeout {\n    isValid() {\n        return true;\n    }\n}\nInfiniteTimeout.instance = new InfiniteTimeout();\nexport class DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw new BugIndicatingError('timeout must be positive');\n        }\n    }\n    // Recommendation: Set a log-point `{this.disable()}` in the body\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false; // timeout reached\n            // eslint-disable-next-line no-debugger\n            debugger; // WARNING: Most likely debugging caused the timeout. Call `this.disable()` to continue without timing out.\n        }\n        return this.valid;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}