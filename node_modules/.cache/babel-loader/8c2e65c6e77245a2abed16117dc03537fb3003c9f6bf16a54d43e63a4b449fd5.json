{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport var ExtensionIdentifier = /*#__PURE__*/function () {\n  function ExtensionIdentifier(value) {\n    _classCallCheck(this, ExtensionIdentifier);\n    this.value = value;\n    this._lower = value.toLowerCase();\n  }\n  /**\n   * Gives the value by which to index (for equality).\n   */\n  return _createClass(ExtensionIdentifier, null, [{\n    key: \"toKey\",\n    value: function toKey(id) {\n      if (typeof id === 'string') {\n        return id.toLowerCase();\n      }\n      return id._lower;\n    }\n  }]);\n}();\nexport var ExtensionIdentifierSet = /*#__PURE__*/function () {\n  function ExtensionIdentifierSet(iterable) {\n    _classCallCheck(this, ExtensionIdentifierSet);\n    this._set = new Set();\n    if (iterable) {\n      var _iterator = _createForOfIteratorHelper(iterable),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var value = _step.value;\n          this.add(value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  return _createClass(ExtensionIdentifierSet, [{\n    key: \"add\",\n    value: function add(id) {\n      this._set.add(ExtensionIdentifier.toKey(id));\n    }\n  }, {\n    key: \"has\",\n    value: function has(id) {\n      return this._set.has(ExtensionIdentifier.toKey(id));\n    }\n  }]);\n}();","map":{"version":3,"names":["ExtensionIdentifier","value","_classCallCheck","_lower","toLowerCase","_createClass","key","toKey","id","ExtensionIdentifierSet","iterable","_set","Set","_iterator","_createForOfIteratorHelper","_step","s","n","done","add","err","e","f","has"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/platform/extensions/common/extensions.js"],"sourcesContent":["/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n    constructor(value) {\n        this.value = value;\n        this._lower = value.toLowerCase();\n    }\n    /**\n     * Gives the value by which to index (for equality).\n     */\n    static toKey(id) {\n        if (typeof id === 'string') {\n            return id.toLowerCase();\n        }\n        return id._lower;\n    }\n}\nexport class ExtensionIdentifierSet {\n    constructor(iterable) {\n        this._set = new Set();\n        if (iterable) {\n            for (const value of iterable) {\n                this.add(value);\n            }\n        }\n    }\n    add(id) {\n        this._set.add(ExtensionIdentifier.toKey(id));\n    }\n    has(id) {\n        return this._set.has(ExtensionIdentifier.toKey(id));\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaA,mBAAmB;EAC5B,SAAAA,oBAAYC,KAAK,EAAE;IAAAC,eAAA,OAAAF,mBAAA;IACf,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,MAAM,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;EACrC;EACA;AACJ;AACA;EAFI,OAAAC,YAAA,CAAAL,mBAAA;IAAAM,GAAA;IAAAL,KAAA,EAGA,SAAAM,MAAaC,EAAE,EAAE;MACb,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;QACxB,OAAOA,EAAE,CAACJ,WAAW,CAAC,CAAC;MAC3B;MACA,OAAOI,EAAE,CAACL,MAAM;IACpB;EAAC;AAAA;AAEL,WAAaM,sBAAsB;EAC/B,SAAAA,uBAAYC,QAAQ,EAAE;IAAAR,eAAA,OAAAO,sBAAA;IAClB,IAAI,CAACE,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB,IAAIF,QAAQ,EAAE;MAAA,IAAAG,SAAA,GAAAC,0BAAA,CACUJ,QAAQ;QAAAK,KAAA;MAAA;QAA5B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8B;UAAA,IAAnBjB,KAAK,GAAAc,KAAA,CAAAd,KAAA;UACZ,IAAI,CAACkB,GAAG,CAAClB,KAAK,CAAC;QACnB;MAAC,SAAAmB,GAAA;QAAAP,SAAA,CAAAQ,CAAA,CAAAD,GAAA;MAAA;QAAAP,SAAA,CAAAS,CAAA;MAAA;IACL;EACJ;EAAC,OAAAjB,YAAA,CAAAI,sBAAA;IAAAH,GAAA;IAAAL,KAAA,EACD,SAAAkB,IAAIX,EAAE,EAAE;MACJ,IAAI,CAACG,IAAI,CAACQ,GAAG,CAACnB,mBAAmB,CAACO,KAAK,CAACC,EAAE,CAAC,CAAC;IAChD;EAAC;IAAAF,GAAA;IAAAL,KAAA,EACD,SAAAsB,IAAIf,EAAE,EAAE;MACJ,OAAO,IAAI,CAACG,IAAI,CAACY,GAAG,CAACvB,mBAAmB,CAACO,KAAK,CAACC,EAAE,CAAC,CAAC;IACvD;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}