{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport var CharacterClassifier = /*#__PURE__*/function () {\n  function CharacterClassifier(_defaultValue) {\n    _classCallCheck(this, CharacterClassifier);\n    var defaultValue = toUint8(_defaultValue);\n    this._defaultValue = defaultValue;\n    this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n    this._map = new Map();\n  }\n  return _createClass(CharacterClassifier, [{\n    key: \"set\",\n    value: function set(charCode, _value) {\n      var value = toUint8(_value);\n      if (charCode >= 0 && charCode < 256) {\n        this._asciiMap[charCode] = value;\n      } else {\n        this._map.set(charCode, value);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(charCode) {\n      if (charCode >= 0 && charCode < 256) {\n        return this._asciiMap[charCode];\n      } else {\n        return this._map.get(charCode) || this._defaultValue;\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._asciiMap.fill(this._defaultValue);\n      this._map.clear();\n    }\n  }], [{\n    key: \"_createAsciiMap\",\n    value: function _createAsciiMap(defaultValue) {\n      var asciiMap = new Uint8Array(256);\n      asciiMap.fill(defaultValue);\n      return asciiMap;\n    }\n  }]);\n}();\nexport var CharacterSet = /*#__PURE__*/function () {\n  function CharacterSet() {\n    _classCallCheck(this, CharacterSet);\n    this._actual = new CharacterClassifier(0 /* Boolean.False */);\n  }\n  return _createClass(CharacterSet, [{\n    key: \"add\",\n    value: function add(charCode) {\n      this._actual.set(charCode, 1 /* Boolean.True */);\n    }\n  }, {\n    key: \"has\",\n    value: function has(charCode) {\n      return this._actual.get(charCode) === 1 /* Boolean.True */;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return this._actual.clear();\n    }\n  }]);\n}();","map":{"version":3,"names":["toUint8","CharacterClassifier","_defaultValue","_classCallCheck","defaultValue","_asciiMap","_createAsciiMap","_map","Map","_createClass","key","value","set","charCode","_value","get","clear","fill","asciiMap","Uint8Array","CharacterSet","_actual","add","has"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = new Uint8Array(256);\n        asciiMap.fill(defaultValue);\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n    clear() {\n        this._asciiMap.fill(this._defaultValue);\n        this._map.clear();\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* Boolean.False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* Boolean.True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* Boolean.True */);\n    }\n    clear() {\n        return this._actual.clear();\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,8BAA8B;AACtD;AACA;AACA;AACA,WAAaC,mBAAmB;EAC5B,SAAAA,oBAAYC,aAAa,EAAE;IAAAC,eAAA,OAAAF,mBAAA;IACvB,IAAMG,YAAY,GAAGJ,OAAO,CAACE,aAAa,CAAC;IAC3C,IAAI,CAACA,aAAa,GAAGE,YAAY;IACjC,IAAI,CAACC,SAAS,GAAGJ,mBAAmB,CAACK,eAAe,CAACF,YAAY,CAAC;IAClE,IAAI,CAACG,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzB;EAAC,OAAAC,YAAA,CAAAR,mBAAA;IAAAS,GAAA;IAAAC,KAAA,EAMD,SAAAC,IAAIC,QAAQ,EAAEC,MAAM,EAAE;MAClB,IAAMH,KAAK,GAAGX,OAAO,CAACc,MAAM,CAAC;MAC7B,IAAID,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAG,GAAG,EAAE;QACjC,IAAI,CAACR,SAAS,CAACQ,QAAQ,CAAC,GAAGF,KAAK;MACpC,CAAC,MACI;QACD,IAAI,CAACJ,IAAI,CAACK,GAAG,CAACC,QAAQ,EAAEF,KAAK,CAAC;MAClC;IACJ;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAI,IAAIF,QAAQ,EAAE;MACV,IAAIA,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAG,GAAG,EAAE;QACjC,OAAO,IAAI,CAACR,SAAS,CAACQ,QAAQ,CAAC;MACnC,CAAC,MACI;QACD,OAAQ,IAAI,CAACN,IAAI,CAACQ,GAAG,CAACF,QAAQ,CAAC,IAAI,IAAI,CAACX,aAAa;MACzD;IACJ;EAAC;IAAAQ,GAAA;IAAAC,KAAA,EACD,SAAAK,MAAA,EAAQ;MACJ,IAAI,CAACX,SAAS,CAACY,IAAI,CAAC,IAAI,CAACf,aAAa,CAAC;MACvC,IAAI,CAACK,IAAI,CAACS,KAAK,CAAC,CAAC;IACrB;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAzBD,SAAAL,gBAAuBF,YAAY,EAAE;MACjC,IAAMc,QAAQ,GAAG,IAAIC,UAAU,CAAC,GAAG,CAAC;MACpCD,QAAQ,CAACD,IAAI,CAACb,YAAY,CAAC;MAC3B,OAAOc,QAAQ;IACnB;EAAC;AAAA;AAuBL,WAAaE,YAAY;EACrB,SAAAA,aAAA,EAAc;IAAAjB,eAAA,OAAAiB,YAAA;IACV,IAAI,CAACC,OAAO,GAAG,IAAIpB,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;EACjE;EAAC,OAAAQ,YAAA,CAAAW,YAAA;IAAAV,GAAA;IAAAC,KAAA,EACD,SAAAW,IAAIT,QAAQ,EAAE;MACV,IAAI,CAACQ,OAAO,CAACT,GAAG,CAACC,QAAQ,EAAE,CAAC,CAAC,kBAAkB,CAAC;IACpD;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAY,IAAIV,QAAQ,EAAE;MACV,OAAQ,IAAI,CAACQ,OAAO,CAACN,GAAG,CAACF,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAK,MAAA,EAAQ;MACJ,OAAO,IAAI,CAACK,OAAO,CAACL,KAAK,CAAC,CAAC;IAC/B;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}