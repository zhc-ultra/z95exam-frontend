{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isLowerAsciiLetter, isUpperAsciiLetter } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nexport var WordSelectionRangeProvider = /*#__PURE__*/function () {\n  function WordSelectionRangeProvider() {\n    var selectSubwords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    _classCallCheck(this, WordSelectionRangeProvider);\n    this.selectSubwords = selectSubwords;\n  }\n  return _createClass(WordSelectionRangeProvider, [{\n    key: \"provideSelectionRanges\",\n    value: function provideSelectionRanges(model, positions) {\n      var result = [];\n      var _iterator = _createForOfIteratorHelper(positions),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var position = _step.value;\n          var bucket = [];\n          result.push(bucket);\n          if (this.selectSubwords) {\n            this._addInWordRanges(bucket, model, position);\n          }\n          this._addWordRanges(bucket, model, position);\n          this._addWhitespaceLine(bucket, model, position);\n          bucket.push({\n            range: model.getFullModelRange()\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"_addInWordRanges\",\n    value: function _addInWordRanges(bucket, model, pos) {\n      var obj = model.getWordAtPosition(pos);\n      if (!obj) {\n        return;\n      }\n      var word = obj.word,\n        startColumn = obj.startColumn;\n      var offset = pos.column - startColumn;\n      var start = offset;\n      var end = offset;\n      var lastCh = 0;\n      // LEFT anchor (start)\n      for (; start >= 0; start--) {\n        var ch = word.charCodeAt(start);\n        if (start !== offset && (ch === 95 /* CharCode.Underline */ || ch === 45 /* CharCode.Dash */)) {\n          // foo-bar OR foo_bar\n          break;\n        } else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\n          // fooBar\n          break;\n        }\n        lastCh = ch;\n      }\n      start += 1;\n      // RIGHT anchor (end)\n      for (; end < word.length; end++) {\n        var _ch = word.charCodeAt(end);\n        if (isUpperAsciiLetter(_ch) && isLowerAsciiLetter(lastCh)) {\n          // fooBar\n          break;\n        } else if (_ch === 95 /* CharCode.Underline */ || _ch === 45 /* CharCode.Dash */) {\n          // foo-bar OR foo_bar\n          break;\n        }\n        lastCh = _ch;\n      }\n      if (start < end) {\n        bucket.push({\n          range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end)\n        });\n      }\n    }\n  }, {\n    key: \"_addWordRanges\",\n    value: function _addWordRanges(bucket, model, pos) {\n      var word = model.getWordAtPosition(pos);\n      if (word) {\n        bucket.push({\n          range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn)\n        });\n      }\n    }\n  }, {\n    key: \"_addWhitespaceLine\",\n    value: function _addWhitespaceLine(bucket, model, pos) {\n      if (model.getLineLength(pos.lineNumber) > 0 && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0 && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\n        bucket.push({\n          range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber))\n        });\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["isLowerAsciiLetter","isUpperAsciiLetter","Range","WordSelectionRangeProvider","selectSubwords","arguments","length","undefined","_classCallCheck","_createClass","key","value","provideSelectionRanges","model","positions","result","_iterator","_createForOfIteratorHelper","_step","s","n","done","position","bucket","push","_addInWordRanges","_addWordRanges","_addWhitespaceLine","range","getFullModelRange","err","e","f","pos","obj","getWordAtPosition","word","startColumn","offset","column","start","end","lastCh","ch","charCodeAt","lineNumber","endColumn","getLineLength","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","getLineMaxColumn"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/wordSelections.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isLowerAsciiLetter, isUpperAsciiLetter } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nexport class WordSelectionRangeProvider {\n    constructor(selectSubwords = true) {\n        this.selectSubwords = selectSubwords;\n    }\n    provideSelectionRanges(model, positions) {\n        const result = [];\n        for (const position of positions) {\n            const bucket = [];\n            result.push(bucket);\n            if (this.selectSubwords) {\n                this._addInWordRanges(bucket, model, position);\n            }\n            this._addWordRanges(bucket, model, position);\n            this._addWhitespaceLine(bucket, model, position);\n            bucket.push({ range: model.getFullModelRange() });\n        }\n        return result;\n    }\n    _addInWordRanges(bucket, model, pos) {\n        const obj = model.getWordAtPosition(pos);\n        if (!obj) {\n            return;\n        }\n        const { word, startColumn } = obj;\n        const offset = pos.column - startColumn;\n        let start = offset;\n        let end = offset;\n        let lastCh = 0;\n        // LEFT anchor (start)\n        for (; start >= 0; start--) {\n            const ch = word.charCodeAt(start);\n            if ((start !== offset) && (ch === 95 /* CharCode.Underline */ || ch === 45 /* CharCode.Dash */)) {\n                // foo-bar OR foo_bar\n                break;\n            }\n            else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\n                // fooBar\n                break;\n            }\n            lastCh = ch;\n        }\n        start += 1;\n        // RIGHT anchor (end)\n        for (; end < word.length; end++) {\n            const ch = word.charCodeAt(end);\n            if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\n                // fooBar\n                break;\n            }\n            else if (ch === 95 /* CharCode.Underline */ || ch === 45 /* CharCode.Dash */) {\n                // foo-bar OR foo_bar\n                break;\n            }\n            lastCh = ch;\n        }\n        if (start < end) {\n            bucket.push({ range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end) });\n        }\n    }\n    _addWordRanges(bucket, model, pos) {\n        const word = model.getWordAtPosition(pos);\n        if (word) {\n            bucket.push({ range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn) });\n        }\n    }\n    _addWhitespaceLine(bucket, model, pos) {\n        if (model.getLineLength(pos.lineNumber) > 0\n            && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0\n            && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\n            bucket.push({ range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber)) });\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}