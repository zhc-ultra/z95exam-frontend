{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.uint32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport * as platform from '../../../base/common/platform.js';\nfunction reverseEndianness(arr) {\n  for (var i = 0, len = arr.length; i < len; i += 4) {\n    // flip bytes 0<->3 and 1<->2\n    var b0 = arr[i + 0];\n    var b1 = arr[i + 1];\n    var b2 = arr[i + 2];\n    var b3 = arr[i + 3];\n    arr[i + 0] = b3;\n    arr[i + 1] = b2;\n    arr[i + 2] = b1;\n    arr[i + 3] = b0;\n  }\n}\nfunction toLittleEndianBuffer(arr) {\n  var uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n  if (!platform.isLittleEndian()) {\n    // the byte order must be changed\n    reverseEndianness(uint8Arr);\n  }\n  return VSBuffer.wrap(uint8Arr);\n}\nexport function encodeSemanticTokensDto(semanticTokens) {\n  var dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n  var offset = 0;\n  dest[offset++] = semanticTokens.id;\n  if (semanticTokens.type === 'full') {\n    dest[offset++] = 1 /* EncodedSemanticTokensType.Full */;\n    dest[offset++] = semanticTokens.data.length;\n    dest.set(semanticTokens.data, offset);\n    offset += semanticTokens.data.length;\n  } else {\n    dest[offset++] = 2 /* EncodedSemanticTokensType.Delta */;\n    dest[offset++] = semanticTokens.deltas.length;\n    var _iterator = _createForOfIteratorHelper(semanticTokens.deltas),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var delta = _step.value;\n        dest[offset++] = delta.start;\n        dest[offset++] = delta.deleteCount;\n        if (delta.data) {\n          dest[offset++] = delta.data.length;\n          dest.set(delta.data, offset);\n          offset += delta.data.length;\n        } else {\n          dest[offset++] = 0;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return toLittleEndianBuffer(dest);\n}\nfunction encodeSemanticTokensDtoSize(semanticTokens) {\n  var result = 0;\n  result += +1 // id\n  + 1 // type\n  ;\n  if (semanticTokens.type === 'full') {\n    result += +1 // data length\n    + semanticTokens.data.length;\n  } else {\n    result += +1 // delta count\n    ;\n    result += (+1 // start\n    + 1 // deleteCount\n    + 1 // data length\n    ) * semanticTokens.deltas.length;\n    var _iterator2 = _createForOfIteratorHelper(semanticTokens.deltas),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var delta = _step2.value;\n        if (delta.data) {\n          result += delta.data.length;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["VSBuffer","platform","reverseEndianness","arr","i","len","length","b0","b1","b2","b3","toLittleEndianBuffer","uint8Arr","Uint8Array","buffer","byteOffset","isLittleEndian","wrap","encodeSemanticTokensDto","semanticTokens","dest","Uint32Array","encodeSemanticTokensDtoSize","offset","id","type","data","set","deltas","_iterator","_createForOfIteratorHelper","_step","s","n","done","delta","value","start","deleteCount","err","e","f","result","_iterator2","_step2"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport * as platform from '../../../base/common/platform.js';\nfunction reverseEndianness(arr) {\n    for (let i = 0, len = arr.length; i < len; i += 4) {\n        // flip bytes 0<->3 and 1<->2\n        const b0 = arr[i + 0];\n        const b1 = arr[i + 1];\n        const b2 = arr[i + 2];\n        const b3 = arr[i + 3];\n        arr[i + 0] = b3;\n        arr[i + 1] = b2;\n        arr[i + 2] = b1;\n        arr[i + 3] = b0;\n    }\n}\nfunction toLittleEndianBuffer(arr) {\n    const uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n    if (!platform.isLittleEndian()) {\n        // the byte order must be changed\n        reverseEndianness(uint8Arr);\n    }\n    return VSBuffer.wrap(uint8Arr);\n}\nexport function encodeSemanticTokensDto(semanticTokens) {\n    const dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n    let offset = 0;\n    dest[offset++] = semanticTokens.id;\n    if (semanticTokens.type === 'full') {\n        dest[offset++] = 1 /* EncodedSemanticTokensType.Full */;\n        dest[offset++] = semanticTokens.data.length;\n        dest.set(semanticTokens.data, offset);\n        offset += semanticTokens.data.length;\n    }\n    else {\n        dest[offset++] = 2 /* EncodedSemanticTokensType.Delta */;\n        dest[offset++] = semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            dest[offset++] = delta.start;\n            dest[offset++] = delta.deleteCount;\n            if (delta.data) {\n                dest[offset++] = delta.data.length;\n                dest.set(delta.data, offset);\n                offset += delta.data.length;\n            }\n            else {\n                dest[offset++] = 0;\n            }\n        }\n    }\n    return toLittleEndianBuffer(dest);\n}\nfunction encodeSemanticTokensDtoSize(semanticTokens) {\n    let result = 0;\n    result += (+1 // id\n        + 1 // type\n    );\n    if (semanticTokens.type === 'full') {\n        result += (+1 // data length\n            + semanticTokens.data.length);\n    }\n    else {\n        result += (+1 // delta count\n        );\n        result += (+1 // start\n            + 1 // deleteCount\n            + 1 // data length\n        ) * semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            if (delta.data) {\n                result += delta.data.length;\n            }\n        }\n    }\n    return result;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,gCAAgC;AACzD,OAAO,KAAKC,QAAQ,MAAM,kCAAkC;AAC5D,SAASC,iBAAiBA,CAACC,GAAG,EAAE;EAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGF,GAAG,CAACG,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,IAAI,CAAC,EAAE;IAC/C;IACA,IAAMG,EAAE,GAAGJ,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC;IACrB,IAAMI,EAAE,GAAGL,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC;IACrB,IAAMK,EAAE,GAAGN,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC;IACrB,IAAMM,EAAE,GAAGP,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC;IACrBD,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGM,EAAE;IACfP,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGK,EAAE;IACfN,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGI,EAAE;IACfL,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGG,EAAE;EACnB;AACJ;AACA,SAASI,oBAAoBA,CAACR,GAAG,EAAE;EAC/B,IAAMS,QAAQ,GAAG,IAAIC,UAAU,CAACV,GAAG,CAACW,MAAM,EAAEX,GAAG,CAACY,UAAU,EAAEZ,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC;EAC3E,IAAI,CAACL,QAAQ,CAACe,cAAc,CAAC,CAAC,EAAE;IAC5B;IACAd,iBAAiB,CAACU,QAAQ,CAAC;EAC/B;EACA,OAAOZ,QAAQ,CAACiB,IAAI,CAACL,QAAQ,CAAC;AAClC;AACA,OAAO,SAASM,uBAAuBA,CAACC,cAAc,EAAE;EACpD,IAAMC,IAAI,GAAG,IAAIC,WAAW,CAACC,2BAA2B,CAACH,cAAc,CAAC,CAAC;EACzE,IAAII,MAAM,GAAG,CAAC;EACdH,IAAI,CAACG,MAAM,EAAE,CAAC,GAAGJ,cAAc,CAACK,EAAE;EAClC,IAAIL,cAAc,CAACM,IAAI,KAAK,MAAM,EAAE;IAChCL,IAAI,CAACG,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;IACnBH,IAAI,CAACG,MAAM,EAAE,CAAC,GAAGJ,cAAc,CAACO,IAAI,CAACpB,MAAM;IAC3Cc,IAAI,CAACO,GAAG,CAACR,cAAc,CAACO,IAAI,EAAEH,MAAM,CAAC;IACrCA,MAAM,IAAIJ,cAAc,CAACO,IAAI,CAACpB,MAAM;EACxC,CAAC,MACI;IACDc,IAAI,CAACG,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;IACnBH,IAAI,CAACG,MAAM,EAAE,CAAC,GAAGJ,cAAc,CAACS,MAAM,CAACtB,MAAM;IAAC,IAAAuB,SAAA,GAAAC,0BAAA,CAC1BX,cAAc,CAACS,MAAM;MAAAG,KAAA;IAAA;MAAzC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA2C;QAAA,IAAhCC,KAAK,GAAAJ,KAAA,CAAAK,KAAA;QACZhB,IAAI,CAACG,MAAM,EAAE,CAAC,GAAGY,KAAK,CAACE,KAAK;QAC5BjB,IAAI,CAACG,MAAM,EAAE,CAAC,GAAGY,KAAK,CAACG,WAAW;QAClC,IAAIH,KAAK,CAACT,IAAI,EAAE;UACZN,IAAI,CAACG,MAAM,EAAE,CAAC,GAAGY,KAAK,CAACT,IAAI,CAACpB,MAAM;UAClCc,IAAI,CAACO,GAAG,CAACQ,KAAK,CAACT,IAAI,EAAEH,MAAM,CAAC;UAC5BA,MAAM,IAAIY,KAAK,CAACT,IAAI,CAACpB,MAAM;QAC/B,CAAC,MACI;UACDc,IAAI,CAACG,MAAM,EAAE,CAAC,GAAG,CAAC;QACtB;MACJ;IAAC,SAAAgB,GAAA;MAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA;IAAA;MAAAV,SAAA,CAAAY,CAAA;IAAA;EACL;EACA,OAAO9B,oBAAoB,CAACS,IAAI,CAAC;AACrC;AACA,SAASE,2BAA2BA,CAACH,cAAc,EAAE;EACjD,IAAIuB,MAAM,GAAG,CAAC;EACdA,MAAM,IAAK,CAAC,CAAC,CAAC;EAAA,EACR,CAAC,CAAC;EACP;EACD,IAAIvB,cAAc,CAACM,IAAI,KAAK,MAAM,EAAE;IAChCiB,MAAM,IAAK,CAAC,CAAC,CAAC;IAAA,EACRvB,cAAc,CAACO,IAAI,CAACpB,MAAO;EACrC,CAAC,MACI;IACDoC,MAAM,IAAK,CAAC,CAAC,CAAC;IACb;IACDA,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,EACR,CAAC,CAAC;IAAA,EACF,CAAC,CAAC;IAAA,IACJvB,cAAc,CAACS,MAAM,CAACtB,MAAM;IAAC,IAAAqC,UAAA,GAAAb,0BAAA,CACbX,cAAc,CAACS,MAAM;MAAAgB,MAAA;IAAA;MAAzC,KAAAD,UAAA,CAAAX,CAAA,MAAAY,MAAA,GAAAD,UAAA,CAAAV,CAAA,IAAAC,IAAA,GAA2C;QAAA,IAAhCC,KAAK,GAAAS,MAAA,CAAAR,KAAA;QACZ,IAAID,KAAK,CAACT,IAAI,EAAE;UACZgB,MAAM,IAAIP,KAAK,CAACT,IAAI,CAACpB,MAAM;QAC/B;MACJ;IAAC,SAAAiC,GAAA;MAAAI,UAAA,CAAAH,CAAA,CAAAD,GAAA;IAAA;MAAAI,UAAA,CAAAF,CAAA;IAAA;EACL;EACA,OAAOC,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}