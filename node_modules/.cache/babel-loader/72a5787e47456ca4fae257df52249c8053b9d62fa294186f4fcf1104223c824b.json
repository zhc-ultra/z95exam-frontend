{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && _typeof(from) === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __reExport = function __reExport(target, mod, secondTarget) {\n  return __copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\");\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [{\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", \"i\"),\n    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(\"<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", \"i\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  // Useful regular expressions\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [[/[^<&]+/, \"\"], {\n      include: \"@whitespace\"\n    },\n    // Standard opening tag\n    [/(<)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"tag\",\n      next: \"@tag\"\n    }]],\n    // Standard closing tag\n    [/(<\\/)(@qualifiedName)(\\s*)(>)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"tag\"\n    }, \"\", {\n      token: \"delimiter\"\n    }]],\n    // Meta tags - instruction\n    [/(<\\?)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"metatag\",\n      next: \"@tag\"\n    }]],\n    // Meta tags - declaration\n    [/(<\\!)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"metatag\",\n      next: \"@tag\"\n    }]],\n    // CDATA\n    [/<\\!\\[CDATA\\[/, {\n      token: \"delimiter.cdata\",\n      next: \"@cdata\"\n    }], [/&\\w+;/, \"string.escape\"]],\n    cdata: [[/[^\\]]+/, \"\"], [/\\]\\]>/, {\n      token: \"delimiter.cdata\",\n      next: \"@pop\"\n    }], [/\\]/, \"\"]],\n    tag: [[/[ \\t\\r\\n]+/, \"\"], [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, [\"attribute.name\", \"\", \"attribute.value\"]], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]], [/@qualifiedName/, \"attribute.name\"], [/\\?>/, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }], [/(\\/)(>)/, [{\n      token: \"tag\"\n    }, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]], [/>/, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/<!--/, {\n      token: \"comment\",\n      next: \"@comment\"\n    }]],\n    comment: [[/[^<\\-]+/, \"comment.content\"], [/-->/, {\n      token: \"comment\",\n      next: \"@pop\"\n    }], [/<!--/, \"comment.content.invalid\"], [/[<\\-]/, \"comment.content\"]]\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","_typeof","_iterator","_createForOfIteratorHelper","_step","_loop","key","value","call","get","enumerable","s","n","done","err","e","f","__reExport","target","mod","secondTarget","monaco_editor_core_exports","monaco_editor_core_star","conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  // Useful regular expressions\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [\n      [/[^<&]+/, \"\"],\n      { include: \"@whitespace\" },\n      // Standard opening tag\n      [/(<)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"tag\", next: \"@tag\" }]],\n      // Standard closing tag\n      [\n        /(<\\/)(@qualifiedName)(\\s*)(>)/,\n        [{ token: \"delimiter\" }, { token: \"tag\" }, \"\", { token: \"delimiter\" }]\n      ],\n      // Meta tags - instruction\n      [/(<\\?)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      // Meta tags - declaration\n      [/(<\\!)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      // CDATA\n      [/<\\!\\[CDATA\\[/, { token: \"delimiter.cdata\", next: \"@cdata\" }],\n      [/&\\w+;/, \"string.escape\"]\n    ],\n    cdata: [\n      [/[^\\]]+/, \"\"],\n      [/\\]\\]>/, { token: \"delimiter.cdata\", next: \"@pop\" }],\n      [/\\]/, \"\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [\n        /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\n        [\"attribute.name\", \"\", \"attribute.value\"]\n      ],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [/@qualifiedName/, \"attribute.name\"],\n      [/\\?>/, { token: \"delimiter\", next: \"@pop\" }],\n      [/(\\/)(>)/, [{ token: \"tag\" }, { token: \"delimiter\", next: \"@pop\" }]],\n      [/>/, { token: \"delimiter\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}