{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstIdxMonotonousOrArrLen } from '../../../../base/common/arraysFind.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Range } from '../../../common/core/range.js';\nimport { countEOL } from '../../../common/core/eolCounter.js';\nexport var HiddenRangeModel = /*#__PURE__*/function () {\n  function HiddenRangeModel(model) {\n    var _this = this;\n    _classCallCheck(this, HiddenRangeModel);\n    this._updateEventEmitter = new Emitter();\n    this._hasLineChanges = false;\n    this._foldingModel = model;\n    this._foldingModelListener = model.onDidChange(function (_) {\n      return _this.updateHiddenRanges();\n    });\n    this._hiddenRanges = [];\n    if (model.regions.length) {\n      this.updateHiddenRanges();\n    }\n  }\n  return _createClass(HiddenRangeModel, [{\n    key: \"onDidChange\",\n    get: function get() {\n      return this._updateEventEmitter.event;\n    }\n  }, {\n    key: \"hiddenRanges\",\n    get: function get() {\n      return this._hiddenRanges;\n    }\n  }, {\n    key: \"notifyChangeModelContent\",\n    value: function notifyChangeModelContent(e) {\n      if (this._hiddenRanges.length && !this._hasLineChanges) {\n        this._hasLineChanges = e.changes.some(function (change) {\n          return change.range.endLineNumber !== change.range.startLineNumber || countEOL(change.text)[0] !== 0;\n        });\n      }\n    }\n  }, {\n    key: \"updateHiddenRanges\",\n    value: function updateHiddenRanges() {\n      var updateHiddenAreas = false;\n      var newHiddenAreas = [];\n      var i = 0; // index into hidden\n      var k = 0;\n      var lastCollapsedStart = Number.MAX_VALUE;\n      var lastCollapsedEnd = -1;\n      var ranges = this._foldingModel.regions;\n      for (; i < ranges.length; i++) {\n        if (!ranges.isCollapsed(i)) {\n          continue;\n        }\n        var startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\n        var endLineNumber = ranges.getEndLineNumber(i);\n        if (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\n          // ignore ranges contained in collapsed regions\n          continue;\n        }\n        if (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {\n          // reuse the old ranges\n          newHiddenAreas.push(this._hiddenRanges[k]);\n          k++;\n        } else {\n          updateHiddenAreas = true;\n          newHiddenAreas.push(new Range(startLineNumber, 1, endLineNumber, 1));\n        }\n        lastCollapsedStart = startLineNumber;\n        lastCollapsedEnd = endLineNumber;\n      }\n      if (this._hasLineChanges || updateHiddenAreas || k < this._hiddenRanges.length) {\n        this.applyHiddenRanges(newHiddenAreas);\n      }\n    }\n  }, {\n    key: \"applyHiddenRanges\",\n    value: function applyHiddenRanges(newHiddenAreas) {\n      this._hiddenRanges = newHiddenAreas;\n      this._hasLineChanges = false;\n      this._updateEventEmitter.fire(newHiddenAreas);\n    }\n  }, {\n    key: \"hasRanges\",\n    value: function hasRanges() {\n      return this._hiddenRanges.length > 0;\n    }\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(line) {\n      return findRange(this._hiddenRanges, line) !== null;\n    }\n  }, {\n    key: \"adjustSelections\",\n    value: function adjustSelections(selections) {\n      var _this2 = this;\n      var hasChanges = false;\n      var editorModel = this._foldingModel.textModel;\n      var lastRange = null;\n      var adjustLine = function adjustLine(line) {\n        if (!lastRange || !isInside(line, lastRange)) {\n          lastRange = findRange(_this2._hiddenRanges, line);\n        }\n        if (lastRange) {\n          return lastRange.startLineNumber - 1;\n        }\n        return null;\n      };\n      for (var i = 0, len = selections.length; i < len; i++) {\n        var selection = selections[i];\n        var adjustedStartLine = adjustLine(selection.startLineNumber);\n        if (adjustedStartLine) {\n          selection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));\n          hasChanges = true;\n        }\n        var adjustedEndLine = adjustLine(selection.endLineNumber);\n        if (adjustedEndLine) {\n          selection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));\n          hasChanges = true;\n        }\n        selections[i] = selection;\n      }\n      return hasChanges;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.hiddenRanges.length > 0) {\n        this._hiddenRanges = [];\n        this._updateEventEmitter.fire(this._hiddenRanges);\n      }\n      if (this._foldingModelListener) {\n        this._foldingModelListener.dispose();\n        this._foldingModelListener = null;\n      }\n    }\n  }]);\n}();\nfunction isInside(line, range) {\n  return line >= range.startLineNumber && line <= range.endLineNumber;\n}\nfunction findRange(ranges, line) {\n  var i = findFirstIdxMonotonousOrArrLen(ranges, function (r) {\n    return line < r.startLineNumber;\n  }) - 1;\n  if (i >= 0 && ranges[i].endLineNumber >= line) {\n    return ranges[i];\n  }\n  return null;\n}","map":{"version":3,"names":["findFirstIdxMonotonousOrArrLen","Emitter","Range","countEOL","HiddenRangeModel","model","_this","_classCallCheck","_updateEventEmitter","_hasLineChanges","_foldingModel","_foldingModelListener","onDidChange","_","updateHiddenRanges","_hiddenRanges","regions","length","_createClass","key","get","event","value","notifyChangeModelContent","e","changes","some","change","range","endLineNumber","startLineNumber","text","updateHiddenAreas","newHiddenAreas","i","k","lastCollapsedStart","Number","MAX_VALUE","lastCollapsedEnd","ranges","isCollapsed","getStartLineNumber","getEndLineNumber","push","applyHiddenRanges","fire","hasRanges","isHidden","line","findRange","adjustSelections","selections","_this2","hasChanges","editorModel","textModel","lastRange","adjustLine","isInside","len","selection","adjustedStartLine","setStartPosition","getLineMaxColumn","adjustedEndLine","setEndPosition","dispose","hiddenRanges","r"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/folding/browser/hiddenRangeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstIdxMonotonousOrArrLen } from '../../../../base/common/arraysFind.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Range } from '../../../common/core/range.js';\nimport { countEOL } from '../../../common/core/eolCounter.js';\nexport class HiddenRangeModel {\n    get onDidChange() { return this._updateEventEmitter.event; }\n    get hiddenRanges() { return this._hiddenRanges; }\n    constructor(model) {\n        this._updateEventEmitter = new Emitter();\n        this._hasLineChanges = false;\n        this._foldingModel = model;\n        this._foldingModelListener = model.onDidChange(_ => this.updateHiddenRanges());\n        this._hiddenRanges = [];\n        if (model.regions.length) {\n            this.updateHiddenRanges();\n        }\n    }\n    notifyChangeModelContent(e) {\n        if (this._hiddenRanges.length && !this._hasLineChanges) {\n            this._hasLineChanges = e.changes.some(change => {\n                return change.range.endLineNumber !== change.range.startLineNumber || countEOL(change.text)[0] !== 0;\n            });\n        }\n    }\n    updateHiddenRanges() {\n        let updateHiddenAreas = false;\n        const newHiddenAreas = [];\n        let i = 0; // index into hidden\n        let k = 0;\n        let lastCollapsedStart = Number.MAX_VALUE;\n        let lastCollapsedEnd = -1;\n        const ranges = this._foldingModel.regions;\n        for (; i < ranges.length; i++) {\n            if (!ranges.isCollapsed(i)) {\n                continue;\n            }\n            const startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\n            const endLineNumber = ranges.getEndLineNumber(i);\n            if (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\n                // ignore ranges contained in collapsed regions\n                continue;\n            }\n            if (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {\n                // reuse the old ranges\n                newHiddenAreas.push(this._hiddenRanges[k]);\n                k++;\n            }\n            else {\n                updateHiddenAreas = true;\n                newHiddenAreas.push(new Range(startLineNumber, 1, endLineNumber, 1));\n            }\n            lastCollapsedStart = startLineNumber;\n            lastCollapsedEnd = endLineNumber;\n        }\n        if (this._hasLineChanges || updateHiddenAreas || k < this._hiddenRanges.length) {\n            this.applyHiddenRanges(newHiddenAreas);\n        }\n    }\n    applyHiddenRanges(newHiddenAreas) {\n        this._hiddenRanges = newHiddenAreas;\n        this._hasLineChanges = false;\n        this._updateEventEmitter.fire(newHiddenAreas);\n    }\n    hasRanges() {\n        return this._hiddenRanges.length > 0;\n    }\n    isHidden(line) {\n        return findRange(this._hiddenRanges, line) !== null;\n    }\n    adjustSelections(selections) {\n        let hasChanges = false;\n        const editorModel = this._foldingModel.textModel;\n        let lastRange = null;\n        const adjustLine = (line) => {\n            if (!lastRange || !isInside(line, lastRange)) {\n                lastRange = findRange(this._hiddenRanges, line);\n            }\n            if (lastRange) {\n                return lastRange.startLineNumber - 1;\n            }\n            return null;\n        };\n        for (let i = 0, len = selections.length; i < len; i++) {\n            let selection = selections[i];\n            const adjustedStartLine = adjustLine(selection.startLineNumber);\n            if (adjustedStartLine) {\n                selection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));\n                hasChanges = true;\n            }\n            const adjustedEndLine = adjustLine(selection.endLineNumber);\n            if (adjustedEndLine) {\n                selection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));\n                hasChanges = true;\n            }\n            selections[i] = selection;\n        }\n        return hasChanges;\n    }\n    dispose() {\n        if (this.hiddenRanges.length > 0) {\n            this._hiddenRanges = [];\n            this._updateEventEmitter.fire(this._hiddenRanges);\n        }\n        if (this._foldingModelListener) {\n            this._foldingModelListener.dispose();\n            this._foldingModelListener = null;\n        }\n    }\n}\nfunction isInside(line, range) {\n    return line >= range.startLineNumber && line <= range.endLineNumber;\n}\nfunction findRange(ranges, line) {\n    const i = findFirstIdxMonotonousOrArrLen(ranges, r => line < r.startLineNumber) - 1;\n    if (i >= 0 && ranges[i].endLineNumber >= line) {\n        return ranges[i];\n    }\n    return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}