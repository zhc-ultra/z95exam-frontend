{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transaction } from '../../../../base/common/observable.js';\nimport { asyncTransaction } from '../../../../base/common/observableInternal/base.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nexport var ShowNextInlineSuggestionAction = /*#__PURE__*/function (_EditorAction) {\n  function ShowNextInlineSuggestionAction() {\n    _classCallCheck(this, ShowNextInlineSuggestionAction);\n    return _callSuper(this, ShowNextInlineSuggestionAction, [{\n      id: ShowNextInlineSuggestionAction.ID,\n      label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n      alias: 'Show Next Inline Suggestion',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n      kbOpts: {\n        weight: 100,\n        primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */\n      }\n    }]);\n  }\n  _inherits(ShowNextInlineSuggestionAction, _EditorAction);\n  return _createClass(ShowNextInlineSuggestionAction, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(accessor, editor) {\n        var _a, controller;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              controller = InlineCompletionsController.get(editor);\n              (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.next();\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function run(_x, _x2) {\n        return _run.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport var ShowPreviousInlineSuggestionAction = /*#__PURE__*/function (_EditorAction2) {\n  function ShowPreviousInlineSuggestionAction() {\n    _classCallCheck(this, ShowPreviousInlineSuggestionAction);\n    return _callSuper(this, ShowPreviousInlineSuggestionAction, [{\n      id: ShowPreviousInlineSuggestionAction.ID,\n      label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n      alias: 'Show Previous Inline Suggestion',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n      kbOpts: {\n        weight: 100,\n        primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */\n      }\n    }]);\n  }\n  _inherits(ShowPreviousInlineSuggestionAction, _EditorAction2);\n  return _createClass(ShowPreviousInlineSuggestionAction, [{\n    key: \"run\",\n    value: function () {\n      var _run2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accessor, editor) {\n        var _a, controller;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              controller = InlineCompletionsController.get(editor);\n              (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.previous();\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function run(_x3, _x4) {\n        return _run2.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport var TriggerInlineSuggestionAction = /*#__PURE__*/function (_EditorAction3) {\n  function TriggerInlineSuggestionAction() {\n    _classCallCheck(this, TriggerInlineSuggestionAction);\n    return _callSuper(this, TriggerInlineSuggestionAction, [{\n      id: 'editor.action.inlineSuggest.trigger',\n      label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n      alias: 'Trigger Inline Suggestion',\n      precondition: EditorContextKeys.writable\n    }]);\n  }\n  _inherits(TriggerInlineSuggestionAction, _EditorAction3);\n  return _createClass(TriggerInlineSuggestionAction, [{\n    key: \"run\",\n    value: function () {\n      var _run3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(accessor, editor) {\n        var controller;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              controller = InlineCompletionsController.get(editor);\n              _context4.next = 3;\n              return asyncTransaction( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(tx) {\n                  var _a;\n                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                    while (1) switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.triggerExplicitly(tx);\n                      case 2:\n                        controller === null || controller === void 0 ? void 0 : controller.playAccessibilitySignal(tx);\n                      case 3:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }, _callee3);\n                }));\n                return function (_x7) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function run(_x5, _x6) {\n        return _run3.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var AcceptNextWordOfInlineCompletion = /*#__PURE__*/function (_EditorAction4) {\n  function AcceptNextWordOfInlineCompletion() {\n    _classCallCheck(this, AcceptNextWordOfInlineCompletion);\n    return _callSuper(this, AcceptNextWordOfInlineCompletion, [{\n      id: 'editor.action.inlineSuggest.acceptNextWord',\n      label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n      alias: 'Accept Next Word Of Inline Suggestion',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n      kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible)\n      },\n      menuOpts: [{\n        menuId: MenuId.InlineSuggestionToolbar,\n        title: nls.localize('acceptWord', 'Accept Word'),\n        group: 'primary',\n        order: 2\n      }]\n    }]);\n  }\n  _inherits(AcceptNextWordOfInlineCompletion, _EditorAction4);\n  return _createClass(AcceptNextWordOfInlineCompletion, [{\n    key: \"run\",\n    value: function () {\n      var _run4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(accessor, editor) {\n        var _a, controller;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              controller = InlineCompletionsController.get(editor);\n              _context5.next = 3;\n              return (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextWord(controller.editor);\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function run(_x8, _x9) {\n        return _run4.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var AcceptNextLineOfInlineCompletion = /*#__PURE__*/function (_EditorAction5) {\n  function AcceptNextLineOfInlineCompletion() {\n    _classCallCheck(this, AcceptNextLineOfInlineCompletion);\n    return _callSuper(this, AcceptNextLineOfInlineCompletion, [{\n      id: 'editor.action.inlineSuggest.acceptNextLine',\n      label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n      alias: 'Accept Next Line Of Inline Suggestion',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n      kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 1\n      },\n      menuOpts: [{\n        menuId: MenuId.InlineSuggestionToolbar,\n        title: nls.localize('acceptLine', 'Accept Line'),\n        group: 'secondary',\n        order: 2\n      }]\n    }]);\n  }\n  _inherits(AcceptNextLineOfInlineCompletion, _EditorAction5);\n  return _createClass(AcceptNextLineOfInlineCompletion, [{\n    key: \"run\",\n    value: function () {\n      var _run5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(accessor, editor) {\n        var _a, controller;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              controller = InlineCompletionsController.get(editor);\n              _context6.next = 3;\n              return (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextLine(controller.editor);\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function run(_x10, _x11) {\n        return _run5.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var AcceptInlineCompletion = /*#__PURE__*/function (_EditorAction6) {\n  function AcceptInlineCompletion() {\n    _classCallCheck(this, AcceptInlineCompletion);\n    return _callSuper(this, AcceptInlineCompletion, [{\n      id: inlineSuggestCommitId,\n      label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n      alias: 'Accept Inline Suggestion',\n      precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n      menuOpts: [{\n        menuId: MenuId.InlineSuggestionToolbar,\n        title: nls.localize('accept', \"Accept\"),\n        group: 'primary',\n        order: 1\n      }],\n      kbOpts: {\n        primary: 2 /* KeyCode.Tab */,\n        weight: 200,\n        kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, SuggestContext.Visible.toNegated(), EditorContextKeys.hoverFocused.toNegated())\n      }\n    }]);\n  }\n  _inherits(AcceptInlineCompletion, _EditorAction6);\n  return _createClass(AcceptInlineCompletion, [{\n    key: \"run\",\n    value: function () {\n      var _run6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(accessor, editor) {\n        var _a, controller;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              controller = InlineCompletionsController.get(editor);\n              if (controller) {\n                (_a = controller.model.get()) === null || _a === void 0 ? void 0 : _a.accept(controller.editor);\n                controller.editor.focus();\n              }\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      function run(_x12, _x13) {\n        return _run6.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nexport var HideInlineCompletion = /*#__PURE__*/function (_EditorAction7) {\n  function HideInlineCompletion() {\n    _classCallCheck(this, HideInlineCompletion);\n    return _callSuper(this, HideInlineCompletion, [{\n      id: HideInlineCompletion.ID,\n      label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n      alias: 'Hide Inline Suggestion',\n      precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n      kbOpts: {\n        weight: 100,\n        primary: 9 /* KeyCode.Escape */\n      }\n    }]);\n  }\n  _inherits(HideInlineCompletion, _EditorAction7);\n  return _createClass(HideInlineCompletion, [{\n    key: \"run\",\n    value: function () {\n      var _run7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(accessor, editor) {\n        var controller;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              controller = InlineCompletionsController.get(editor);\n              transaction(function (tx) {\n                var _a;\n                (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n              });\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }));\n      function run(_x14, _x15) {\n        return _run7.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(EditorAction);\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport var ToggleAlwaysShowInlineSuggestionToolbar = /*#__PURE__*/function (_Action) {\n  function ToggleAlwaysShowInlineSuggestionToolbar() {\n    _classCallCheck(this, ToggleAlwaysShowInlineSuggestionToolbar);\n    return _callSuper(this, ToggleAlwaysShowInlineSuggestionToolbar, [{\n      id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n      title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n      f1: false,\n      precondition: undefined,\n      menu: [{\n        id: MenuId.InlineSuggestionToolbar,\n        group: 'secondary',\n        order: 10\n      }],\n      toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n    }]);\n  }\n  _inherits(ToggleAlwaysShowInlineSuggestionToolbar, _Action);\n  return _createClass(ToggleAlwaysShowInlineSuggestionToolbar, [{\n    key: \"run\",\n    value: function () {\n      var _run8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(accessor, editor) {\n        var configService, currentValue, newValue;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              configService = accessor.get(IConfigurationService);\n              currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n              newValue = currentValue === 'always' ? 'onHover' : 'always';\n              configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }));\n      function run(_x16, _x17) {\n        return _run8.apply(this, arguments);\n      }\n      return run;\n    }()\n  }]);\n}(Action2);\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';","map":{"version":3,"names":["transaction","asyncTransaction","EditorAction","EditorContextKeys","showNextInlineSuggestionActionId","showPreviousInlineSuggestionActionId","inlineSuggestCommitId","InlineCompletionContextKeys","InlineCompletionsController","Context","SuggestContext","nls","MenuId","Action2","IConfigurationService","ContextKeyExpr","ShowNextInlineSuggestionAction","_EditorAction","_classCallCheck","_callSuper","id","ID","label","localize","alias","precondition","and","writable","inlineSuggestionVisible","kbOpts","weight","primary","_inherits","_createClass","key","value","_run","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accessor","editor","_a","controller","wrap","_callee$","_context","prev","next","get","model","stop","run","_x","_x2","apply","arguments","ShowPreviousInlineSuggestionAction","_EditorAction2","_run2","_callee2","_callee2$","_context2","previous","_x3","_x4","TriggerInlineSuggestionAction","_EditorAction3","_run3","_callee4","_callee4$","_context4","_ref","_callee3","tx","_callee3$","_context3","triggerExplicitly","playAccessibilitySignal","_x7","_x5","_x6","AcceptNextWordOfInlineCompletion","_EditorAction4","kbExpr","menuOpts","menuId","InlineSuggestionToolbar","title","group","order","_run4","_callee5","_callee5$","_context5","acceptNextWord","_x8","_x9","AcceptNextLineOfInlineCompletion","_EditorAction5","_run5","_callee6","_callee6$","_context6","acceptNextLine","_x10","_x11","AcceptInlineCompletion","_EditorAction6","tabMovesFocus","toNegated","inlineSuggestionHasIndentationLessThanTabSize","Visible","hoverFocused","_run6","_callee7","_callee7$","_context7","accept","focus","_x12","_x13","HideInlineCompletion","_EditorAction7","_run7","_callee8","_callee8$","_context8","_x14","_x15","ToggleAlwaysShowInlineSuggestionToolbar","_Action","f1","undefined","menu","toggled","equals","_run8","_callee9","configService","currentValue","newValue","_callee9$","_context9","getValue","updateValue","_x16","_x17"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transaction } from '../../../../base/common/observable.js';\nimport { asyncTransaction } from '../../../../base/common/observableInternal/base.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    async run(accessor, editor) {\n        var _a;\n        const controller = InlineCompletionsController.get(editor);\n        (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.next();\n    }\n}\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    async run(accessor, editor) {\n        var _a;\n        const controller = InlineCompletionsController.get(editor);\n        (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.previous();\n    }\n}\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        await asyncTransaction(async (tx) => {\n            var _a;\n            /** @description triggerExplicitly from command */\n            await ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.triggerExplicitly(tx));\n            controller === null || controller === void 0 ? void 0 : controller.playAccessibilitySignal(tx);\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    async run(accessor, editor) {\n        var _a;\n        const controller = InlineCompletionsController.get(editor);\n        await ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextWord(controller.editor));\n    }\n}\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextLine',\n            label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n            alias: 'Accept Next Line Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptLine', 'Accept Line'),\n                    group: 'secondary',\n                    order: 2,\n                }],\n        });\n    }\n    async run(accessor, editor) {\n        var _a;\n        const controller = InlineCompletionsController.get(editor);\n        await ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextLine(controller.editor));\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, SuggestContext.Visible.toNegated(), EditorContextKeys.hoverFocused.toNegated()),\n            }\n        });\n    }\n    async run(accessor, editor) {\n        var _a;\n        const controller = InlineCompletionsController.get(editor);\n        if (controller) {\n            (_a = controller.model.get()) === null || _a === void 0 ? void 0 : _a.accept(controller.editor);\n            controller.editor.focus();\n        }\n    }\n}\nexport class HideInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const controller = InlineCompletionsController.get(editor);\n        transaction(tx => {\n            var _a;\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n        });\n    }\n}\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n        });\n    }\n    async run(accessor, editor) {\n        const configService = accessor.get(IConfigurationService);\n        const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n        const newValue = currentValue === 'always' ? 'onHover' : 'always';\n        configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n    }\n}\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}