{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncIterator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport \"core-js/modules/es.symbol.async-iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.queue-microtask.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nimport { CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable } from './lifecycle.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nexport function isThenable(obj) {\n  return !!obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n  var source = new CancellationTokenSource();\n  var thenable = callback(source.token);\n  var promise = new Promise(function (resolve, reject) {\n    var subscription = source.token.onCancellationRequested(function () {\n      subscription.dispose();\n      reject(new CancellationError());\n    });\n    Promise.resolve(thenable).then(function (value) {\n      subscription.dispose();\n      source.dispose();\n      resolve(value);\n    }, function (err) {\n      subscription.dispose();\n      source.dispose();\n      reject(err);\n    });\n  });\n  return new ( /*#__PURE__*/function () {\n    function _class() {\n      _classCallCheck(this, _class);\n    }\n    return _createClass(_class, [{\n      key: \"cancel\",\n      value: function cancel() {\n        source.cancel();\n        source.dispose();\n      }\n    }, {\n      key: \"then\",\n      value: function then(resolve, reject) {\n        return promise.then(resolve, reject);\n      }\n    }, {\n      key: \"catch\",\n      value: function _catch(reject) {\n        return this.then(undefined, reject);\n      }\n    }, {\n      key: \"finally\",\n      value: function _finally(onfinally) {\n        return promise[\"finally\"](onfinally);\n      }\n    }]);\n  }())();\n}\nexport function raceCancellation(promise, token, defaultValue) {\n  return new Promise(function (resolve, reject) {\n    var ref = token.onCancellationRequested(function () {\n      ref.dispose();\n      resolve(defaultValue);\n    });\n    promise.then(resolve, reject)[\"finally\"](function () {\n      return ref.dispose();\n    });\n  });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport var Throttler = /*#__PURE__*/function () {\n  function Throttler() {\n    _classCallCheck(this, Throttler);\n    this.isDisposed = false;\n    this.activePromise = null;\n    this.queuedPromise = null;\n    this.queuedPromiseFactory = null;\n  }\n  return _createClass(Throttler, [{\n    key: \"queue\",\n    value: function queue(promiseFactory) {\n      var _this = this;\n      if (this.isDisposed) {\n        return Promise.reject(new Error('Throttler is disposed'));\n      }\n      if (this.activePromise) {\n        this.queuedPromiseFactory = promiseFactory;\n        if (!this.queuedPromise) {\n          var onComplete = function onComplete() {\n            _this.queuedPromise = null;\n            if (_this.isDisposed) {\n              return;\n            }\n            var result = _this.queue(_this.queuedPromiseFactory);\n            _this.queuedPromiseFactory = null;\n            return result;\n          };\n          this.queuedPromise = new Promise(function (resolve) {\n            _this.activePromise.then(onComplete, onComplete).then(resolve);\n          });\n        }\n        return new Promise(function (resolve, reject) {\n          _this.queuedPromise.then(resolve, reject);\n        });\n      }\n      this.activePromise = promiseFactory();\n      return new Promise(function (resolve, reject) {\n        _this.activePromise.then(function (result) {\n          _this.activePromise = null;\n          resolve(result);\n        }, function (err) {\n          _this.activePromise = null;\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.isDisposed = true;\n    }\n  }]);\n}();\nvar timeoutDeferred = function timeoutDeferred(timeout, fn) {\n  var scheduled = true;\n  var handle = setTimeout(function () {\n    scheduled = false;\n    fn();\n  }, timeout);\n  return {\n    isTriggered: function isTriggered() {\n      return scheduled;\n    },\n    dispose: function dispose() {\n      clearTimeout(handle);\n      scheduled = false;\n    }\n  };\n};\nvar microtaskDeferred = function microtaskDeferred(fn) {\n  var scheduled = true;\n  queueMicrotask(function () {\n    if (scheduled) {\n      scheduled = false;\n      fn();\n    }\n  });\n  return {\n    isTriggered: function isTriggered() {\n      return scheduled;\n    },\n    dispose: function dispose() {\n      scheduled = false;\n    }\n  };\n};\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport var Delayer = /*#__PURE__*/function () {\n  function Delayer(defaultDelay) {\n    _classCallCheck(this, Delayer);\n    this.defaultDelay = defaultDelay;\n    this.deferred = null;\n    this.completionPromise = null;\n    this.doResolve = null;\n    this.doReject = null;\n    this.task = null;\n  }\n  return _createClass(Delayer, [{\n    key: \"trigger\",\n    value: function trigger(task) {\n      var _this2 = this;\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultDelay;\n      this.task = task;\n      this.cancelTimeout();\n      if (!this.completionPromise) {\n        this.completionPromise = new Promise(function (resolve, reject) {\n          _this2.doResolve = resolve;\n          _this2.doReject = reject;\n        }).then(function () {\n          _this2.completionPromise = null;\n          _this2.doResolve = null;\n          if (_this2.task) {\n            var _task = _this2.task;\n            _this2.task = null;\n            return _task();\n          }\n          return undefined;\n        });\n      }\n      var fn = function fn() {\n        var _a;\n        _this2.deferred = null;\n        (_a = _this2.doResolve) === null || _a === void 0 ? void 0 : _a.call(_this2, null);\n      };\n      this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n      return this.completionPromise;\n    }\n  }, {\n    key: \"isTriggered\",\n    value: function isTriggered() {\n      var _a;\n      return !!((_a = this.deferred) === null || _a === void 0 ? void 0 : _a.isTriggered());\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var _a;\n      this.cancelTimeout();\n      if (this.completionPromise) {\n        (_a = this.doReject) === null || _a === void 0 ? void 0 : _a.call(this, new CancellationError());\n        this.completionPromise = null;\n      }\n    }\n  }, {\n    key: \"cancelTimeout\",\n    value: function cancelTimeout() {\n      var _a;\n      (_a = this.deferred) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.deferred = null;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.cancel();\n    }\n  }]);\n}();\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport var ThrottledDelayer = /*#__PURE__*/function () {\n  function ThrottledDelayer(defaultDelay) {\n    _classCallCheck(this, ThrottledDelayer);\n    this.delayer = new Delayer(defaultDelay);\n    this.throttler = new Throttler();\n  }\n  return _createClass(ThrottledDelayer, [{\n    key: \"trigger\",\n    value: function trigger(promiseFactory, delay) {\n      var _this3 = this;\n      return this.delayer.trigger(function () {\n        return _this3.throttler.queue(promiseFactory);\n      }, delay);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.delayer.cancel();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.delayer.dispose();\n      this.throttler.dispose();\n    }\n  }]);\n}();\nexport function timeout(millis, token) {\n  if (!token) {\n    return createCancelablePromise(function (token) {\n      return timeout(millis, token);\n    });\n  }\n  return new Promise(function (resolve, reject) {\n    var handle = setTimeout(function () {\n      disposable.dispose();\n      resolve();\n    }, millis);\n    var disposable = token.onCancellationRequested(function () {\n      clearTimeout(handle);\n      disposable.dispose();\n      reject(new CancellationError());\n    });\n  });\n}\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler) {\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var store = arguments.length > 2 ? arguments[2] : undefined;\n  var timer = setTimeout(function () {\n    handler();\n    if (store) {\n      disposable.dispose();\n    }\n  }, timeout);\n  var disposable = toDisposable(function () {\n    clearTimeout(timer);\n    store === null || store === void 0 ? void 0 : store.deleteAndLeak(disposable);\n  });\n  store === null || store === void 0 ? void 0 : store.add(disposable);\n  return disposable;\n}\nexport function first(promiseFactories) {\n  var shouldStop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (t) {\n    return !!t;\n  };\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var index = 0;\n  var len = promiseFactories.length;\n  var loop = function loop() {\n    if (index >= len) {\n      return Promise.resolve(defaultValue);\n    }\n    var factory = promiseFactories[index++];\n    var promise = Promise.resolve(factory());\n    return promise.then(function (result) {\n      if (shouldStop(result)) {\n        return Promise.resolve(result);\n      }\n      return loop();\n    });\n  };\n  return loop();\n}\nexport var TimeoutTimer = /*#__PURE__*/function () {\n  function TimeoutTimer(runner, timeout) {\n    _classCallCheck(this, TimeoutTimer);\n    this._token = -1;\n    if (typeof runner === 'function' && typeof timeout === 'number') {\n      this.setIfNotSet(runner, timeout);\n    }\n  }\n  return _createClass(TimeoutTimer, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.cancel();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._token !== -1) {\n        clearTimeout(this._token);\n        this._token = -1;\n      }\n    }\n  }, {\n    key: \"cancelAndSet\",\n    value: function cancelAndSet(runner, timeout) {\n      var _this4 = this;\n      this.cancel();\n      this._token = setTimeout(function () {\n        _this4._token = -1;\n        runner();\n      }, timeout);\n    }\n  }, {\n    key: \"setIfNotSet\",\n    value: function setIfNotSet(runner, timeout) {\n      var _this5 = this;\n      if (this._token !== -1) {\n        // timer is already set\n        return;\n      }\n      this._token = setTimeout(function () {\n        _this5._token = -1;\n        runner();\n      }, timeout);\n    }\n  }]);\n}();\nexport var IntervalTimer = /*#__PURE__*/function () {\n  function IntervalTimer() {\n    _classCallCheck(this, IntervalTimer);\n    this.disposable = undefined;\n  }\n  return _createClass(IntervalTimer, [{\n    key: \"cancel\",\n    value: function cancel() {\n      var _a;\n      (_a = this.disposable) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.disposable = undefined;\n    }\n  }, {\n    key: \"cancelAndSet\",\n    value: function cancelAndSet(runner, interval) {\n      var _this6 = this;\n      var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : globalThis;\n      this.cancel();\n      var handle = context.setInterval(function () {\n        runner();\n      }, interval);\n      this.disposable = toDisposable(function () {\n        context.clearInterval(handle);\n        _this6.disposable = undefined;\n      });\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.cancel();\n    }\n  }]);\n}();\nexport var RunOnceScheduler = /*#__PURE__*/function () {\n  function RunOnceScheduler(runner, delay) {\n    _classCallCheck(this, RunOnceScheduler);\n    this.timeoutToken = -1;\n    this.runner = runner;\n    this.timeout = delay;\n    this.timeoutHandler = this.onTimeout.bind(this);\n  }\n  /**\n   * Dispose RunOnceScheduler\n   */\n  return _createClass(RunOnceScheduler, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this.cancel();\n      this.runner = null;\n    }\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.isScheduled()) {\n        clearTimeout(this.timeoutToken);\n        this.timeoutToken = -1;\n      }\n    }\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n  }, {\n    key: \"schedule\",\n    value: function schedule() {\n      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeout;\n      this.cancel();\n      this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n  }, {\n    key: \"delay\",\n    get: function get() {\n      return this.timeout;\n    },\n    set: function set(value) {\n      this.timeout = value;\n    }\n    /**\n     * Returns true if scheduled.\n     */\n  }, {\n    key: \"isScheduled\",\n    value: function isScheduled() {\n      return this.timeoutToken !== -1;\n    }\n  }, {\n    key: \"onTimeout\",\n    value: function onTimeout() {\n      this.timeoutToken = -1;\n      if (this.runner) {\n        this.doRun();\n      }\n    }\n  }, {\n    key: \"doRun\",\n    value: function doRun() {\n      var _a;\n      (_a = this.runner) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }]);\n}();\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport var runWhenGlobalIdle;\nexport var _runWhenIdle;\n(function () {\n  if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n    _runWhenIdle = function _runWhenIdle(_targetWindow, runner) {\n      setTimeout0(function () {\n        if (disposed) {\n          return;\n        }\n        var end = Date.now() + 15; // one frame at 64fps\n        var deadline = {\n          didTimeout: true,\n          timeRemaining: function timeRemaining() {\n            return Math.max(0, end - Date.now());\n          }\n        };\n        runner(Object.freeze(deadline));\n      });\n      var disposed = false;\n      return {\n        dispose: function dispose() {\n          if (disposed) {\n            return;\n          }\n          disposed = true;\n        }\n      };\n    };\n  } else {\n    _runWhenIdle = function _runWhenIdle(targetWindow, runner, timeout) {\n      var handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? {\n        timeout: timeout\n      } : undefined);\n      var disposed = false;\n      return {\n        dispose: function dispose() {\n          if (disposed) {\n            return;\n          }\n          disposed = true;\n          targetWindow.cancelIdleCallback(handle);\n        }\n      };\n    };\n  }\n  runWhenGlobalIdle = function runWhenGlobalIdle(runner) {\n    return _runWhenIdle(globalThis, runner);\n  };\n})();\nexport var AbstractIdleValue = /*#__PURE__*/function () {\n  function AbstractIdleValue(targetWindow, executor) {\n    var _this7 = this;\n    _classCallCheck(this, AbstractIdleValue);\n    this._didRun = false;\n    this._executor = function () {\n      try {\n        _this7._value = executor();\n      } catch (err) {\n        _this7._error = err;\n      } finally {\n        _this7._didRun = true;\n      }\n    };\n    this._handle = _runWhenIdle(targetWindow, function () {\n      return _this7._executor();\n    });\n  }\n  return _createClass(AbstractIdleValue, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._handle.dispose();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      if (!this._didRun) {\n        this._handle.dispose();\n        this._executor();\n      }\n      if (this._error) {\n        throw this._error;\n      }\n      return this._value;\n    }\n  }, {\n    key: \"isInitialized\",\n    get: function get() {\n      return this._didRun;\n    }\n  }]);\n}();\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport var GlobalIdleValue = /*#__PURE__*/function (_AbstractIdleValue) {\n  function GlobalIdleValue(executor) {\n    _classCallCheck(this, GlobalIdleValue);\n    return _callSuper(this, GlobalIdleValue, [globalThis, executor]);\n  }\n  _inherits(GlobalIdleValue, _AbstractIdleValue);\n  return _createClass(GlobalIdleValue);\n}(AbstractIdleValue);\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport var DeferredPromise = /*#__PURE__*/function () {\n  function DeferredPromise() {\n    var _this8 = this;\n    _classCallCheck(this, DeferredPromise);\n    this.p = new Promise(function (c, e) {\n      _this8.completeCallback = c;\n      _this8.errorCallback = e;\n    });\n  }\n  return _createClass(DeferredPromise, [{\n    key: \"isRejected\",\n    get: function get() {\n      var _a;\n      return ((_a = this.outcome) === null || _a === void 0 ? void 0 : _a.outcome) === 1 /* DeferredOutcome.Rejected */;\n    }\n  }, {\n    key: \"isSettled\",\n    get: function get() {\n      return !!this.outcome;\n    }\n  }, {\n    key: \"complete\",\n    value: function complete(value) {\n      var _this9 = this;\n      return new Promise(function (resolve) {\n        _this9.completeCallback(value);\n        _this9.outcome = {\n          outcome: 0 /* DeferredOutcome.Resolved */,\n          value: value\n        };\n        resolve();\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var _this10 = this;\n      return new Promise(function (resolve) {\n        _this10.errorCallback(err);\n        _this10.outcome = {\n          outcome: 1 /* DeferredOutcome.Rejected */,\n          value: err\n        };\n        resolve();\n      });\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      return this.error(new CancellationError());\n    }\n  }]);\n}();\n//#endregion\n//#region Promises\nexport var Promises;\n(function (Promises) {\n  /**\n   * A drop-in replacement for `Promise.all` with the only difference\n   * that the method awaits every promise to either fulfill or reject.\n   *\n   * Similar to `Promise.all`, only the first error will be returned\n   * if any.\n   */\n  function settled(_x) {\n    return _settled.apply(this, arguments);\n  }\n  function _settled() {\n    _settled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(promises) {\n      var firstError, result;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            firstError = undefined;\n            _context2.next = 3;\n            return Promise.all(promises.map(function (promise) {\n              return promise.then(function (value) {\n                return value;\n              }, function (error) {\n                if (!firstError) {\n                  firstError = error;\n                }\n                return undefined; // do not rethrow so that other promises can settle\n              });\n            }));\n          case 3:\n            result = _context2.sent;\n            if (!(typeof firstError !== 'undefined')) {\n              _context2.next = 6;\n              break;\n            }\n            throw firstError;\n          case 6:\n            return _context2.abrupt(\"return\", result);\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return _settled.apply(this, arguments);\n  }\n  Promises.settled = settled;\n  /**\n   * A helper to create a new `Promise<T>` with a body that is a promise\n   * itself. By default, an error that raises from the async body will\n   * end up as a unhandled rejection, so this utility properly awaits the\n   * body and rejects the promise as a normal promise does without async\n   * body.\n   *\n   * This method should only be used in rare cases where otherwise `async`\n   * cannot be used (e.g. when callbacks are involved that require this).\n   */\n  function withAsyncBody(bodyFn) {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve, reject) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return bodyFn(resolve, reject);\n            case 3:\n              _context.next = 8;\n              break;\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              reject(_context.t0);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n      return function (_x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport var AsyncIterableObject = /*#__PURE__*/function () {\n  function AsyncIterableObject(executor) {\n    var _this11 = this;\n    _classCallCheck(this, AsyncIterableObject);\n    this._state = 0 /* AsyncIterableSourceState.Initial */;\n    this._results = [];\n    this._error = null;\n    this._onStateChanged = new Emitter();\n    queueMicrotask( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var writer;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            writer = {\n              emitOne: function emitOne(item) {\n                return _this11.emitOne(item);\n              },\n              emitMany: function emitMany(items) {\n                return _this11.emitMany(items);\n              },\n              reject: function reject(error) {\n                return _this11.reject(error);\n              }\n            };\n            _context3.prev = 1;\n            _context3.next = 4;\n            return Promise.resolve(executor(writer));\n          case 4:\n            _this11.resolve();\n            _context3.next = 10;\n            break;\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            _this11.reject(_context3.t0);\n          case 10:\n            _context3.prev = 10;\n            writer.emitOne = undefined;\n            writer.emitMany = undefined;\n            writer.reject = undefined;\n            return _context3.finish(10);\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[1, 7, 10, 15]]);\n    })));\n  }\n  return _createClass(AsyncIterableObject, [{\n    key: Symbol.asyncIterator,\n    value: function value() {\n      var _this12 = this;\n      var i = 0;\n      return {\n        next: function () {\n          var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  if (!(_this12._state === 2 /* AsyncIterableSourceState.DoneError */)) {\n                    _context4.next = 2;\n                    break;\n                  }\n                  throw _this12._error;\n                case 2:\n                  if (!(i < _this12._results.length)) {\n                    _context4.next = 4;\n                    break;\n                  }\n                  return _context4.abrupt(\"return\", {\n                    done: false,\n                    value: _this12._results[i++]\n                  });\n                case 4:\n                  if (!(_this12._state === 1 /* AsyncIterableSourceState.DoneOK */)) {\n                    _context4.next = 6;\n                    break;\n                  }\n                  return _context4.abrupt(\"return\", {\n                    done: true,\n                    value: undefined\n                  });\n                case 6:\n                  _context4.next = 8;\n                  return Event.toPromise(_this12._onStateChanged.event);\n                case 8:\n                  if (true) {\n                    _context4.next = 0;\n                    break;\n                  }\n                case 9:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }));\n          function next() {\n            return _next.apply(this, arguments);\n          }\n          return next;\n        }()\n      };\n    }\n  }, {\n    key: \"map\",\n    value: function map(mapFn) {\n      return AsyncIterableObject.map(this, mapFn);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(filterFn) {\n      return AsyncIterableObject.filter(this, filterFn);\n    }\n  }, {\n    key: \"coalesce\",\n    value: function coalesce() {\n      return AsyncIterableObject.coalesce(this);\n    }\n  }, {\n    key: \"toPromise\",\n    value: function toPromise() {\n      return AsyncIterableObject.toPromise(this);\n    }\n    /**\n     * The value will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n  }, {\n    key: \"emitOne\",\n    value: function emitOne(value) {\n      if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n        return;\n      }\n      // it is important to add new values at the end,\n      // as we may have iterators already running on the array\n      this._results.push(value);\n      this._onStateChanged.fire();\n    }\n    /**\n     * The values will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n  }, {\n    key: \"emitMany\",\n    value: function emitMany(values) {\n      if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n        return;\n      }\n      // it is important to add new values at the end,\n      // as we may have iterators already running on the array\n      this._results = this._results.concat(values);\n      this._onStateChanged.fire();\n    }\n    /**\n     * Calling `resolve()` will mark the result array as complete.\n     *\n     * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n  }, {\n    key: \"resolve\",\n    value: function resolve() {\n      if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n        return;\n      }\n      this._state = 1 /* AsyncIterableSourceState.DoneOK */;\n      this._onStateChanged.fire();\n    }\n    /**\n     * Writing an error will permanently invalidate this iterable.\n     * The current users will receive an error thrown, as will all future users.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n  }, {\n    key: \"reject\",\n    value: function reject(error) {\n      if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n        return;\n      }\n      this._state = 2 /* AsyncIterableSourceState.DoneError */;\n      this._error = error;\n      this._onStateChanged.fire();\n    }\n  }], [{\n    key: \"fromArray\",\n    value: function fromArray(items) {\n      return new AsyncIterableObject(function (writer) {\n        writer.emitMany(items);\n      });\n    }\n  }, {\n    key: \"fromPromise\",\n    value: function fromPromise(promise) {\n      return new AsyncIterableObject( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(emitter) {\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.t0 = emitter;\n                _context5.next = 3;\n                return promise;\n              case 3:\n                _context5.t1 = _context5.sent;\n                _context5.t0.emitMany.call(_context5.t0, _context5.t1);\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5);\n        }));\n        return function (_x4) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"fromPromises\",\n    value: function fromPromises(promises) {\n      return new AsyncIterableObject( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(emitter) {\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Promise.all(promises.map( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(p) {\n                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                      while (1) switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.t0 = emitter;\n                          _context6.next = 3;\n                          return p;\n                        case 3:\n                          _context6.t1 = _context6.sent;\n                          return _context6.abrupt(\"return\", _context6.t0.emitOne.call(_context6.t0, _context6.t1));\n                        case 5:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }, _callee6);\n                  }));\n                  return function (_x6) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }()));\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7);\n        }));\n        return function (_x5) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(iterables) {\n      return new AsyncIterableObject( /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(emitter) {\n          return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n            while (1) switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return Promise.all(iterables.map( /*#__PURE__*/function () {\n                  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(iterable) {\n                    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, item;\n                    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                      while (1) switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _iteratorAbruptCompletion = false;\n                          _didIteratorError = false;\n                          _context8.prev = 2;\n                          _iterator = _asyncIterator(iterable);\n                        case 4:\n                          _context8.next = 6;\n                          return _iterator.next();\n                        case 6:\n                          if (!(_iteratorAbruptCompletion = !(_step = _context8.sent).done)) {\n                            _context8.next = 12;\n                            break;\n                          }\n                          item = _step.value;\n                          emitter.emitOne(item);\n                        case 9:\n                          _iteratorAbruptCompletion = false;\n                          _context8.next = 4;\n                          break;\n                        case 12:\n                          _context8.next = 18;\n                          break;\n                        case 14:\n                          _context8.prev = 14;\n                          _context8.t0 = _context8[\"catch\"](2);\n                          _didIteratorError = true;\n                          _iteratorError = _context8.t0;\n                        case 18:\n                          _context8.prev = 18;\n                          _context8.prev = 19;\n                          if (!(_iteratorAbruptCompletion && _iterator[\"return\"] != null)) {\n                            _context8.next = 23;\n                            break;\n                          }\n                          _context8.next = 23;\n                          return _iterator[\"return\"]();\n                        case 23:\n                          _context8.prev = 23;\n                          if (!_didIteratorError) {\n                            _context8.next = 26;\n                            break;\n                          }\n                          throw _iteratorError;\n                        case 26:\n                          return _context8.finish(23);\n                        case 27:\n                          return _context8.finish(18);\n                        case 28:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }, _callee8, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n                  }));\n                  return function (_x8) {\n                    return _ref7.apply(this, arguments);\n                  };\n                }()));\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }, _callee9);\n        }));\n        return function (_x7) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"map\",\n    value: function map(iterable, mapFn) {\n      return new AsyncIterableObject( /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(emitter) {\n          var _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, item;\n          return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n            while (1) switch (_context10.prev = _context10.next) {\n              case 0:\n                _iteratorAbruptCompletion2 = false;\n                _didIteratorError2 = false;\n                _context10.prev = 2;\n                _iterator2 = _asyncIterator(iterable);\n              case 4:\n                _context10.next = 6;\n                return _iterator2.next();\n              case 6:\n                if (!(_iteratorAbruptCompletion2 = !(_step2 = _context10.sent).done)) {\n                  _context10.next = 12;\n                  break;\n                }\n                item = _step2.value;\n                emitter.emitOne(mapFn(item));\n              case 9:\n                _iteratorAbruptCompletion2 = false;\n                _context10.next = 4;\n                break;\n              case 12:\n                _context10.next = 18;\n                break;\n              case 14:\n                _context10.prev = 14;\n                _context10.t0 = _context10[\"catch\"](2);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context10.t0;\n              case 18:\n                _context10.prev = 18;\n                _context10.prev = 19;\n                if (!(_iteratorAbruptCompletion2 && _iterator2[\"return\"] != null)) {\n                  _context10.next = 23;\n                  break;\n                }\n                _context10.next = 23;\n                return _iterator2[\"return\"]();\n              case 23:\n                _context10.prev = 23;\n                if (!_didIteratorError2) {\n                  _context10.next = 26;\n                  break;\n                }\n                throw _iteratorError2;\n              case 26:\n                return _context10.finish(23);\n              case 27:\n                return _context10.finish(18);\n              case 28:\n              case \"end\":\n                return _context10.stop();\n            }\n          }, _callee10, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n        }));\n        return function (_x9) {\n          return _ref8.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(iterable, filterFn) {\n      return new AsyncIterableObject( /*#__PURE__*/function () {\n        var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(emitter) {\n          var _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, item;\n          return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n            while (1) switch (_context11.prev = _context11.next) {\n              case 0:\n                _iteratorAbruptCompletion3 = false;\n                _didIteratorError3 = false;\n                _context11.prev = 2;\n                _iterator3 = _asyncIterator(iterable);\n              case 4:\n                _context11.next = 6;\n                return _iterator3.next();\n              case 6:\n                if (!(_iteratorAbruptCompletion3 = !(_step3 = _context11.sent).done)) {\n                  _context11.next = 12;\n                  break;\n                }\n                item = _step3.value;\n                if (filterFn(item)) {\n                  emitter.emitOne(item);\n                }\n              case 9:\n                _iteratorAbruptCompletion3 = false;\n                _context11.next = 4;\n                break;\n              case 12:\n                _context11.next = 18;\n                break;\n              case 14:\n                _context11.prev = 14;\n                _context11.t0 = _context11[\"catch\"](2);\n                _didIteratorError3 = true;\n                _iteratorError3 = _context11.t0;\n              case 18:\n                _context11.prev = 18;\n                _context11.prev = 19;\n                if (!(_iteratorAbruptCompletion3 && _iterator3[\"return\"] != null)) {\n                  _context11.next = 23;\n                  break;\n                }\n                _context11.next = 23;\n                return _iterator3[\"return\"]();\n              case 23:\n                _context11.prev = 23;\n                if (!_didIteratorError3) {\n                  _context11.next = 26;\n                  break;\n                }\n                throw _iteratorError3;\n              case 26:\n                return _context11.finish(23);\n              case 27:\n                return _context11.finish(18);\n              case 28:\n              case \"end\":\n                return _context11.stop();\n            }\n          }, _callee11, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n        }));\n        return function (_x10) {\n          return _ref9.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"coalesce\",\n    value: function coalesce(iterable) {\n      return AsyncIterableObject.filter(iterable, function (item) {\n        return !!item;\n      });\n    }\n  }, {\n    key: \"toPromise\",\n    value: function () {\n      var _toPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(iterable) {\n        var result, _iteratorAbruptCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, item;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              result = [];\n              _iteratorAbruptCompletion4 = false;\n              _didIteratorError4 = false;\n              _context12.prev = 3;\n              _iterator4 = _asyncIterator(iterable);\n            case 5:\n              _context12.next = 7;\n              return _iterator4.next();\n            case 7:\n              if (!(_iteratorAbruptCompletion4 = !(_step4 = _context12.sent).done)) {\n                _context12.next = 13;\n                break;\n              }\n              item = _step4.value;\n              result.push(item);\n            case 10:\n              _iteratorAbruptCompletion4 = false;\n              _context12.next = 5;\n              break;\n            case 13:\n              _context12.next = 19;\n              break;\n            case 15:\n              _context12.prev = 15;\n              _context12.t0 = _context12[\"catch\"](3);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context12.t0;\n            case 19:\n              _context12.prev = 19;\n              _context12.prev = 20;\n              if (!(_iteratorAbruptCompletion4 && _iterator4[\"return\"] != null)) {\n                _context12.next = 24;\n                break;\n              }\n              _context12.next = 24;\n              return _iterator4[\"return\"]();\n            case 24:\n              _context12.prev = 24;\n              if (!_didIteratorError4) {\n                _context12.next = 27;\n                break;\n              }\n              throw _iteratorError4;\n            case 27:\n              return _context12.finish(24);\n            case 28:\n              return _context12.finish(19);\n            case 29:\n              return _context12.abrupt(\"return\", result);\n            case 30:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, null, [[3, 15, 19, 29], [20,, 24, 28]]);\n      }));\n      function toPromise(_x11) {\n        return _toPromise.apply(this, arguments);\n      }\n      return toPromise;\n    }()\n  }]);\n}();\nAsyncIterableObject.EMPTY = AsyncIterableObject.fromArray([]);\nexport var CancelableAsyncIterableObject = /*#__PURE__*/function (_AsyncIterableObject) {\n  function CancelableAsyncIterableObject(_source, executor) {\n    var _this13;\n    _classCallCheck(this, CancelableAsyncIterableObject);\n    _this13 = _callSuper(this, CancelableAsyncIterableObject, [executor]);\n    _this13._source = _source;\n    return _this13;\n  }\n  _inherits(CancelableAsyncIterableObject, _AsyncIterableObject);\n  return _createClass(CancelableAsyncIterableObject, [{\n    key: \"cancel\",\n    value: function cancel() {\n      this._source.cancel();\n    }\n  }]);\n}(AsyncIterableObject);\nexport function createCancelableAsyncIterable(callback) {\n  var source = new CancellationTokenSource();\n  var innerIterable = callback(source.token);\n  return new CancelableAsyncIterableObject(source, /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(emitter) {\n      var subscription, _iteratorAbruptCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, item;\n      return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            subscription = source.token.onCancellationRequested(function () {\n              subscription.dispose();\n              source.dispose();\n              emitter.reject(new CancellationError());\n            });\n            _context13.prev = 1;\n            _iteratorAbruptCompletion5 = false;\n            _didIteratorError5 = false;\n            _context13.prev = 4;\n            _iterator5 = _asyncIterator(innerIterable);\n          case 6:\n            _context13.next = 8;\n            return _iterator5.next();\n          case 8:\n            if (!(_iteratorAbruptCompletion5 = !(_step5 = _context13.sent).done)) {\n              _context13.next = 16;\n              break;\n            }\n            item = _step5.value;\n            if (!source.token.isCancellationRequested) {\n              _context13.next = 12;\n              break;\n            }\n            return _context13.abrupt(\"return\");\n          case 12:\n            emitter.emitOne(item);\n          case 13:\n            _iteratorAbruptCompletion5 = false;\n            _context13.next = 6;\n            break;\n          case 16:\n            _context13.next = 22;\n            break;\n          case 18:\n            _context13.prev = 18;\n            _context13.t0 = _context13[\"catch\"](4);\n            _didIteratorError5 = true;\n            _iteratorError5 = _context13.t0;\n          case 22:\n            _context13.prev = 22;\n            _context13.prev = 23;\n            if (!(_iteratorAbruptCompletion5 && _iterator5[\"return\"] != null)) {\n              _context13.next = 27;\n              break;\n            }\n            _context13.next = 27;\n            return _iterator5[\"return\"]();\n          case 27:\n            _context13.prev = 27;\n            if (!_didIteratorError5) {\n              _context13.next = 30;\n              break;\n            }\n            throw _iteratorError5;\n          case 30:\n            return _context13.finish(27);\n          case 31:\n            return _context13.finish(22);\n          case 32:\n            subscription.dispose();\n            source.dispose();\n            _context13.next = 41;\n            break;\n          case 36:\n            _context13.prev = 36;\n            _context13.t1 = _context13[\"catch\"](1);\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(_context13.t1);\n          case 41:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, _callee13, null, [[1, 36], [4, 18, 22, 32], [23,, 27, 31]]);\n    }));\n    return function (_x12) {\n      return _ref10.apply(this, arguments);\n    };\n  }());\n}\n//#endregion","map":{"version":3,"names":["CancellationTokenSource","CancellationError","Emitter","Event","toDisposable","setTimeout0","MicrotaskDelay","isThenable","obj","then","createCancelablePromise","callback","source","thenable","token","promise","Promise","resolve","reject","subscription","onCancellationRequested","dispose","value","err","_class","_classCallCheck","_createClass","key","cancel","_catch","undefined","_finally","onfinally","raceCancellation","defaultValue","ref","Throttler","isDisposed","activePromise","queuedPromise","queuedPromiseFactory","queue","promiseFactory","_this","Error","onComplete","result","timeoutDeferred","timeout","fn","scheduled","handle","setTimeout","isTriggered","clearTimeout","microtaskDeferred","queueMicrotask","Delayer","defaultDelay","deferred","completionPromise","doResolve","doReject","task","trigger","_this2","delay","arguments","length","cancelTimeout","_a","call","ThrottledDelayer","delayer","throttler","_this3","millis","disposable","disposableTimeout","handler","store","timer","deleteAndLeak","add","first","promiseFactories","shouldStop","t","index","len","loop","factory","TimeoutTimer","runner","_token","setIfNotSet","cancelAndSet","_this4","_this5","IntervalTimer","interval","_this6","context","globalThis","setInterval","clearInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","bind","isScheduled","schedule","get","set","doRun","runWhenGlobalIdle","_runWhenIdle","requestIdleCallback","cancelIdleCallback","_targetWindow","disposed","end","Date","now","deadline","didTimeout","timeRemaining","Math","max","Object","freeze","targetWindow","AbstractIdleValue","executor","_this7","_didRun","_executor","_value","_error","_handle","GlobalIdleValue","_AbstractIdleValue","_callSuper","_inherits","DeferredPromise","_this8","p","c","e","completeCallback","errorCallback","outcome","complete","_this9","error","_this10","Promises","settled","_x","_settled","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","promises","firstError","wrap","_callee2$","_context2","prev","next","all","map","sent","abrupt","stop","withAsyncBody","bodyFn","_ref","_callee","_callee$","_context","t0","_x2","_x3","AsyncIterableObject","_this11","_state","_results","_onStateChanged","_callee3","writer","_callee3$","_context3","emitOne","item","emitMany","items","finish","Symbol","asyncIterator","_this12","i","_next","_callee4","_callee4$","_context4","done","toPromise","event","mapFn","filter","filterFn","coalesce","push","fire","values","concat","fromArray","fromPromise","_ref3","_callee5","emitter","_callee5$","_context5","t1","_x4","fromPromises","_ref4","_callee7","_callee7$","_context7","_ref5","_callee6","_callee6$","_context6","_x6","_x5","merge","iterables","_ref6","_callee9","_callee9$","_context9","_ref7","_callee8","iterable","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_callee8$","_context8","_asyncIterator","_x8","_x7","_ref8","_callee10","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee10$","_context10","_x9","_ref9","_callee11","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_callee11$","_context11","_x10","_toPromise","_callee12","_iteratorAbruptCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_callee12$","_context12","_x11","EMPTY","CancelableAsyncIterableObject","_AsyncIterableObject","_source","_this13","createCancelableAsyncIterable","innerIterable","_ref10","_callee13","_iteratorAbruptCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","_callee13$","_context13","isCancellationRequested","_x12"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/common/async.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nimport { CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable } from './lifecycle.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nexport function isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n    const source = new CancellationTokenSource();\n    const thenable = callback(source.token);\n    const promise = new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(new CancellationError());\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    };\n}\nexport function raceCancellation(promise, token, defaultValue) {\n    return new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(new Error('Throttler is disposed'));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                });\n            }\n            return new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        });\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            }).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            var _a;\n            this.deferred = null;\n            (_a = this.doResolve) === null || _a === void 0 ? void 0 : _a.call(this, null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        var _a;\n        return !!((_a = this.deferred) === null || _a === void 0 ? void 0 : _a.isTriggered());\n    }\n    cancel() {\n        var _a;\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            (_a = this.doReject) === null || _a === void 0 ? void 0 : _a.call(this, new CancellationError());\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        var _a;\n        (_a = this.deferred) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = new Delayer(defaultDelay);\n        this.throttler = new Throttler();\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nexport function timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(new CancellationError());\n        });\n    });\n}\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store === null || store === void 0 ? void 0 : store.deleteAndLeak(disposable);\n    });\n    store === null || store === void 0 ? void 0 : store.add(disposable);\n    return disposable;\n}\nexport function first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport class TimeoutTimer {\n    constructor(runner, timeout) {\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nexport class IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n    }\n    cancel() {\n        var _a;\n        (_a = this.disposable) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n    }\n}\nexport class RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    /**\n     * Returns true if scheduled.\n     */\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        var _a;\n        (_a = this.runner) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle;\nexport let _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15; // one frame at 64fps\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(Object.freeze(deadline));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\nexport class AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise {\n    get isRejected() {\n        var _a;\n        return ((_a = this.outcome) === null || _a === void 0 ? void 0 : _a.outcome) === 1 /* DeferredOutcome.Rejected */;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    constructor() {\n        this.p = new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        });\n    }\n    complete(value) {\n        return new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: 0 /* DeferredOutcome.Resolved */, value };\n            resolve();\n        });\n    }\n    error(err) {\n        return new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: 1 /* DeferredOutcome.Rejected */, value: err };\n            resolve();\n        });\n    }\n    cancel() {\n        return this.error(new CancellationError());\n    }\n}\n//#endregion\n//#region Promises\nexport var Promises;\n(function (Promises) {\n    /**\n     * A drop-in replacement for `Promise.all` with the only difference\n     * that the method awaits every promise to either fulfill or reject.\n     *\n     * Similar to `Promise.all`, only the first error will be returned\n     * if any.\n     */\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined; // do not rethrow so that other promises can settle\n        })));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result; // cast is needed and protected by the `throw` above\n    }\n    Promises.settled = settled;\n    /**\n     * A helper to create a new `Promise<T>` with a body that is a promise\n     * itself. By default, an error that raises from the async body will\n     * end up as a unhandled rejection, so this utility properly awaits the\n     * body and rejects the promise as a normal promise does without async\n     * body.\n     *\n     * This method should only be used in rare cases where otherwise `async`\n     * cannot be used (e.g. when callbacks are involved that require this).\n     */\n    function withAsyncBody(bodyFn) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject {\n    static fromArray(items) {\n        return new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        });\n    }\n    static fromPromise(promise) {\n        return new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        });\n    }\n    static fromPromises(promises) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n        });\n    }\n    static merge(iterables) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            }));\n        });\n    }\n    constructor(executor) {\n        this._state = 0 /* AsyncIterableSourceState.Initial */;\n        this._results = [];\n        this._error = null;\n        this._onStateChanged = new Emitter();\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === 2 /* AsyncIterableSourceState.DoneError */) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 /* AsyncIterableSourceState.DoneOK */) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        });\n    }\n    map(mapFn) {\n        return AsyncIterableObject.map(this, mapFn);\n    }\n    static filter(iterable, filterFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        });\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    /**\n     * The value will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitOne(value) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    /**\n     * The values will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitMany(values) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    /**\n     * Calling `resolve()` will mark the result array as complete.\n     *\n     * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    resolve() {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 1 /* AsyncIterableSourceState.DoneOK */;\n        this._onStateChanged.fire();\n    }\n    /**\n     * Writing an error will permanently invalidate this iterable.\n     * The current users will receive an error thrown, as will all future users.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    reject(error) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 2 /* AsyncIterableSourceState.DoneError */;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nAsyncIterableObject.EMPTY = AsyncIterableObject.fromArray([]);\nexport class CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nexport function createCancelableAsyncIterable(callback) {\n    const source = new CancellationTokenSource();\n    const innerIterable = callback(source.token);\n    return new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(new CancellationError());\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    // canceled in the meantime\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    });\n}\n//#endregion\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}