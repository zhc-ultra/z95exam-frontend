{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.flags.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { Permutation } from '../../../../base/common/arrays.js';\nimport { mapFindFirst } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedHandleChanges, derivedOpts, recomputeInitiallyAndOnChange, observableSignal, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { commonPrefixLength, splitLinesIncludeSeparators } from '../../../../base/common/strings.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText, ghostTextOrReplacementEquals, ghostTextsOrReplacementsEqual } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { SingleTextEdit, TextEdit } from '../../../common/core/textEdit.js';\nimport { addPositions, subtractPositions } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { singleTextEditAugments, computeGhostText, singleTextRemoveCommonPrefix } from './singleTextEdit.js';\nimport { TextLength } from '../../../common/core/textLength.js';\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n  VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n  VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n  VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n  VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nvar InlineCompletionsModel = /*#__PURE__*/function (_Disposable) {\n  function InlineCompletionsModel(textModel, selectedSuggestItem, textModelVersionId, _positions, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n    var _this;\n    _classCallCheck(this, InlineCompletionsModel);\n    _this = _callSuper(this, InlineCompletionsModel);\n    _this.textModel = textModel;\n    _this.selectedSuggestItem = selectedSuggestItem;\n    _this.textModelVersionId = textModelVersionId;\n    _this._positions = _positions;\n    _this._debounceValue = _debounceValue;\n    _this._suggestPreviewEnabled = _suggestPreviewEnabled;\n    _this._suggestPreviewMode = _suggestPreviewMode;\n    _this._inlineSuggestMode = _inlineSuggestMode;\n    _this._enabled = _enabled;\n    _this._instantiationService = _instantiationService;\n    _this._commandService = _commandService;\n    _this._languageConfigurationService = _languageConfigurationService;\n    _this._source = _this._register(_this._instantiationService.createInstance(InlineCompletionsSource, _this.textModel, _this.textModelVersionId, _this._debounceValue));\n    _this._isActive = observableValue(_this, false);\n    _this._forceUpdateSignal = observableSignal('forceUpdate');\n    // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n    _this._selectedInlineCompletionId = observableValue(_this, undefined);\n    _this._primaryPosition = derived(_this, function (reader) {\n      var _a;\n      return (_a = _this._positions.read(reader)[0]) !== null && _a !== void 0 ? _a : new Position(1, 1);\n    });\n    _this._isAcceptingPartially = false;\n    _this._preserveCurrentCompletionReasons = new Set([VersionIdChangeReason.Redo, VersionIdChangeReason.Undo, VersionIdChangeReason.AcceptWord]);\n    _this._fetchInlineCompletions = derivedHandleChanges({\n      owner: _this,\n      createEmptyChangeSummary: function createEmptyChangeSummary() {\n        return {\n          preserveCurrentCompletion: false,\n          inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n        };\n      },\n      handleChange: function handleChange(ctx, changeSummary) {\n        /** @description fetch inline completions */\n        if (ctx.didChange(_this.textModelVersionId) && _this._preserveCurrentCompletionReasons.has(ctx.change)) {\n          changeSummary.preserveCurrentCompletion = true;\n        } else if (ctx.didChange(_this._forceUpdateSignal)) {\n          changeSummary.inlineCompletionTriggerKind = ctx.change;\n        }\n        return true;\n      }\n    }, function (reader, changeSummary) {\n      _this._forceUpdateSignal.read(reader);\n      var shouldUpdate = _this._enabled.read(reader) && _this.selectedSuggestItem.read(reader) || _this._isActive.read(reader);\n      if (!shouldUpdate) {\n        _this._source.cancelUpdate();\n        return undefined;\n      }\n      _this.textModelVersionId.read(reader); // Refetch on text change\n      var itemToPreserveCandidate = _this.selectedInlineCompletion.get();\n      var itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable) ? itemToPreserveCandidate : undefined;\n      var suggestWidgetInlineCompletions = _this._source.suggestWidgetInlineCompletions.get();\n      var suggestItem = _this.selectedSuggestItem.read(reader);\n      if (suggestWidgetInlineCompletions && !suggestItem) {\n        var inlineCompletions = _this._source.inlineCompletions.get();\n        transaction(function (tx) {\n          /** @description Seed inline completions with (newer) suggest widget inline completions */\n          if (!inlineCompletions || suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n            _this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n          }\n          _this._source.clearSuggestWidgetInlineCompletions(tx);\n        });\n      }\n      var cursorPosition = _this._primaryPosition.read(reader);\n      var context = {\n        triggerKind: changeSummary.inlineCompletionTriggerKind,\n        selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo()\n      };\n      return _this._source.fetch(cursorPosition, context, itemToPreserve);\n    });\n    _this._filteredInlineCompletionItems = derived(_this, function (reader) {\n      var c = _this._source.inlineCompletions.read(reader);\n      if (!c) {\n        return [];\n      }\n      var cursorPosition = _this._primaryPosition.read(reader);\n      var filteredCompletions = c.inlineCompletions.filter(function (c) {\n        return c.isVisible(_this.textModel, cursorPosition, reader);\n      });\n      return filteredCompletions;\n    });\n    _this.selectedInlineCompletionIndex = derived(_this, function (reader) {\n      var selectedInlineCompletionId = _this._selectedInlineCompletionId.read(reader);\n      var filteredCompletions = _this._filteredInlineCompletionItems.read(reader);\n      var idx = _this._selectedInlineCompletionId === undefined ? -1 : filteredCompletions.findIndex(function (v) {\n        return v.semanticId === selectedInlineCompletionId;\n      });\n      if (idx === -1) {\n        // Reset the selection so that the selection does not jump back when it appears again\n        _this._selectedInlineCompletionId.set(undefined, undefined);\n        return 0;\n      }\n      return idx;\n    });\n    _this.selectedInlineCompletion = derived(_this, function (reader) {\n      var filteredCompletions = _this._filteredInlineCompletionItems.read(reader);\n      var idx = _this.selectedInlineCompletionIndex.read(reader);\n      return filteredCompletions[idx];\n    });\n    _this.lastTriggerKind = _this._source.inlineCompletions.map(_this, function (v) {\n      return v === null || v === void 0 ? void 0 : v.request.context.triggerKind;\n    });\n    _this.inlineCompletionsCount = derived(_this, function (reader) {\n      if (_this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n        return _this._filteredInlineCompletionItems.read(reader).length;\n      } else {\n        return undefined;\n      }\n    });\n    _this.state = derivedOpts({\n      owner: _this,\n      equalityComparer: function equalityComparer(a, b) {\n        if (!a || !b) {\n          return a === b;\n        }\n        return ghostTextsOrReplacementsEqual(a.ghostTexts, b.ghostTexts) && a.inlineCompletion === b.inlineCompletion && a.suggestItem === b.suggestItem;\n      }\n    }, function (reader) {\n      var _a, _b;\n      var model = _this.textModel;\n      var suggestItem = _this.selectedSuggestItem.read(reader);\n      if (suggestItem) {\n        var suggestCompletionEdit = singleTextRemoveCommonPrefix(suggestItem.toSingleTextEdit(), model);\n        var augmentation = _this._computeAugmentation(suggestCompletionEdit, reader);\n        var isSuggestionPreviewEnabled = _this._suggestPreviewEnabled.read(reader);\n        if (!isSuggestionPreviewEnabled && !augmentation) {\n          return undefined;\n        }\n        var fullEdit = (_a = augmentation === null || augmentation === void 0 ? void 0 : augmentation.edit) !== null && _a !== void 0 ? _a : suggestCompletionEdit;\n        var fullEditPreviewLength = augmentation ? augmentation.edit.text.length - suggestCompletionEdit.text.length : 0;\n        var mode = _this._suggestPreviewMode.read(reader);\n        var positions = _this._positions.read(reader);\n        var edits = [fullEdit].concat(_toConsumableArray(getSecondaryEdits(_this.textModel, positions, fullEdit)));\n        var ghostTexts = edits.map(function (edit, idx) {\n          return computeGhostText(edit, model, mode, positions[idx], fullEditPreviewLength);\n        }).filter(isDefined);\n        var primaryGhostText = (_b = ghostTexts[0]) !== null && _b !== void 0 ? _b : new GhostText(fullEdit.range.endLineNumber, []);\n        return {\n          edits: edits,\n          primaryGhostText: primaryGhostText,\n          ghostTexts: ghostTexts,\n          inlineCompletion: augmentation === null || augmentation === void 0 ? void 0 : augmentation.completion,\n          suggestItem: suggestItem\n        };\n      } else {\n        if (!_this._isActive.read(reader)) {\n          return undefined;\n        }\n        var inlineCompletion = _this.selectedInlineCompletion.read(reader);\n        if (!inlineCompletion) {\n          return undefined;\n        }\n        var replacement = inlineCompletion.toSingleTextEdit(reader);\n        var _mode = _this._inlineSuggestMode.read(reader);\n        var _positions2 = _this._positions.read(reader);\n        var _edits = [replacement].concat(_toConsumableArray(getSecondaryEdits(_this.textModel, _positions2, replacement)));\n        var _ghostTexts = _edits.map(function (edit, idx) {\n          return computeGhostText(edit, model, _mode, _positions2[idx], 0);\n        }).filter(isDefined);\n        if (!_ghostTexts[0]) {\n          return undefined;\n        }\n        return {\n          edits: _edits,\n          primaryGhostText: _ghostTexts[0],\n          ghostTexts: _ghostTexts,\n          inlineCompletion: inlineCompletion,\n          suggestItem: undefined\n        };\n      }\n    });\n    _this.ghostTexts = derivedOpts({\n      owner: _this,\n      equalityComparer: ghostTextsOrReplacementsEqual\n    }, function (reader) {\n      var v = _this.state.read(reader);\n      if (!v) {\n        return undefined;\n      }\n      return v.ghostTexts;\n    });\n    _this.primaryGhostText = derivedOpts({\n      owner: _this,\n      equalityComparer: ghostTextOrReplacementEquals\n    }, function (reader) {\n      var v = _this.state.read(reader);\n      if (!v) {\n        return undefined;\n      }\n      return v === null || v === void 0 ? void 0 : v.primaryGhostText;\n    });\n    _this._register(recomputeInitiallyAndOnChange(_this._fetchInlineCompletions));\n    var lastItem = undefined;\n    _this._register(autorun(function (reader) {\n      var _a, _b;\n      /** @description call handleItemDidShow */\n      var item = _this.state.read(reader);\n      var completion = item === null || item === void 0 ? void 0 : item.inlineCompletion;\n      if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\n        lastItem = completion;\n        if (completion) {\n          var i = completion.inlineCompletion;\n          var src = i.source;\n          (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n        }\n      }\n    }));\n    return _this;\n  }\n  _inherits(InlineCompletionsModel, _Disposable);\n  return _createClass(InlineCompletionsModel, [{\n    key: \"isAcceptingPartially\",\n    get: function get() {\n      return this._isAcceptingPartially;\n    }\n  }, {\n    key: \"trigger\",\n    value: function () {\n      var _trigger = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(tx) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this._isActive.set(true, tx);\n              _context.next = 3;\n              return this._fetchInlineCompletions.get();\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function trigger(_x) {\n        return _trigger.apply(this, arguments);\n      }\n      return trigger;\n    }()\n  }, {\n    key: \"triggerExplicitly\",\n    value: function () {\n      var _triggerExplicitly = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tx) {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              subtransaction(tx, function (tx) {\n                _this2._isActive.set(true, tx);\n                _this2._forceUpdateSignal.trigger(tx, InlineCompletionTriggerKind.Explicit);\n              });\n              _context2.next = 3;\n              return this._fetchInlineCompletions.get();\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function triggerExplicitly(_x2) {\n        return _triggerExplicitly.apply(this, arguments);\n      }\n      return triggerExplicitly;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop(tx) {\n      var _this3 = this;\n      subtransaction(tx, function (tx) {\n        _this3._isActive.set(false, tx);\n        _this3._source.clear(tx);\n      });\n    }\n  }, {\n    key: \"_computeAugmentation\",\n    value: function _computeAugmentation(suggestCompletion, reader) {\n      var model = this.textModel;\n      var suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n      var candidateInlineCompletions = suggestWidgetInlineCompletions ? suggestWidgetInlineCompletions.inlineCompletions : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n      var augmentedCompletion = mapFindFirst(candidateInlineCompletions, function (completion) {\n        var r = completion.toSingleTextEdit(reader);\n        r = singleTextRemoveCommonPrefix(r, model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\n        return singleTextEditAugments(r, suggestCompletion) ? {\n          completion: completion,\n          edit: r\n        } : undefined;\n      });\n      return augmentedCompletion;\n    }\n  }, {\n    key: \"_deltaSelectedInlineCompletionIndex\",\n    value: function () {\n      var _deltaSelectedInlineCompletionIndex2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var completions, newIdx;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.triggerExplicitly();\n            case 2:\n              completions = this._filteredInlineCompletionItems.get() || [];\n              if (completions.length > 0) {\n                newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n                this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n              } else {\n                this._selectedInlineCompletionId.set(undefined, undefined);\n              }\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _deltaSelectedInlineCompletionIndex(_x3) {\n        return _deltaSelectedInlineCompletionIndex2.apply(this, arguments);\n      }\n      return _deltaSelectedInlineCompletionIndex;\n    }()\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this._deltaSelectedInlineCompletionIndex(1);\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function next() {\n        return _next.apply(this, arguments);\n      }\n      return next;\n    }()\n  }, {\n    key: \"previous\",\n    value: function () {\n      var _previous = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this._deltaSelectedInlineCompletionIndex(-1);\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function previous() {\n        return _previous.apply(this, arguments);\n      }\n      return previous;\n    }()\n  }, {\n    key: \"accept\",\n    value: function () {\n      var _accept = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(editor) {\n        var _this4 = this;\n        var _a, state, completion, edits, selections, _this$_commandService;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(editor.getModel() !== this.textModel)) {\n                _context6.next = 2;\n                break;\n              }\n              throw new BugIndicatingError();\n            case 2:\n              state = this.state.get();\n              if (!(!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion)) {\n                _context6.next = 5;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 5:\n              completion = state.inlineCompletion.toInlineCompletion(undefined);\n              editor.pushUndoStop();\n              if (completion.snippetInfo) {\n                editor.executeEdits('inlineSuggestion.accept', [EditOperation.replaceMove(completion.range, '')].concat(_toConsumableArray(completion.additionalTextEdits)));\n                editor.setPosition(completion.snippetInfo.range.getStartPosition(), 'inlineCompletionAccept');\n                (_a = SnippetController2.get(editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, {\n                  undoStopBefore: false\n                });\n              } else {\n                edits = state.edits;\n                selections = getEndPositionsAfterApplying(edits).map(function (p) {\n                  return Selection.fromPositions(p);\n                });\n                editor.executeEdits('inlineSuggestion.accept', [].concat(_toConsumableArray(edits.map(function (edit) {\n                  return EditOperation.replaceMove(edit.range, edit.text);\n                })), _toConsumableArray(completion.additionalTextEdits)));\n                editor.setSelections(selections, 'inlineCompletionAccept');\n              }\n              if (completion.command) {\n                // Make sure the completion list will not be disposed.\n                completion.source.addRef();\n              }\n              // Reset before invoking the command, since the command might cause a follow up trigger.\n              transaction(function (tx) {\n                _this4._source.clear(tx);\n                // Potentially, isActive will get set back to true by the typing or accept inline suggest event\n                // if automatic inline suggestions are enabled.\n                _this4._isActive.set(false, tx);\n              });\n              if (!completion.command) {\n                _context6.next = 14;\n                break;\n              }\n              _context6.next = 13;\n              return (_this$_commandService = this._commandService).executeCommand.apply(_this$_commandService, [completion.command.id].concat(_toConsumableArray(completion.command.arguments || []))).then(undefined, onUnexpectedExternalError);\n            case 13:\n              completion.source.removeRef();\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function accept(_x4) {\n        return _accept.apply(this, arguments);\n      }\n      return accept;\n    }()\n  }, {\n    key: \"acceptNextWord\",\n    value: function () {\n      var _acceptNextWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(editor) {\n        var _this5 = this;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this._acceptNext(editor, function (pos, text) {\n                var langId = _this5.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n                var config = _this5._languageConfigurationService.getLanguageConfiguration(langId);\n                var wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n                var m1 = text.match(wordRegExp);\n                var acceptUntilIndexExclusive = 0;\n                if (m1 && m1.index !== undefined) {\n                  if (m1.index === 0) {\n                    acceptUntilIndexExclusive = m1[0].length;\n                  } else {\n                    acceptUntilIndexExclusive = m1.index;\n                  }\n                } else {\n                  acceptUntilIndexExclusive = text.length;\n                }\n                var wsRegExp = /\\s+/g;\n                var m2 = wsRegExp.exec(text);\n                if (m2 && m2.index !== undefined) {\n                  if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                    acceptUntilIndexExclusive = m2.index + m2[0].length;\n                  }\n                }\n                return acceptUntilIndexExclusive;\n              }, 0 /* PartialAcceptTriggerKind.Word */);\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function acceptNextWord(_x5) {\n        return _acceptNextWord.apply(this, arguments);\n      }\n      return acceptNextWord;\n    }()\n  }, {\n    key: \"acceptNextLine\",\n    value: function () {\n      var _acceptNextLine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(editor) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this._acceptNext(editor, function (pos, text) {\n                var m = text.match(/\\n/);\n                if (m && m.index !== undefined) {\n                  return m.index + 1;\n                }\n                return text.length;\n              }, 1 /* PartialAcceptTriggerKind.Line */);\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function acceptNextLine(_x6) {\n        return _acceptNextLine.apply(this, arguments);\n      }\n      return acceptNextLine;\n    }()\n  }, {\n    key: \"_acceptNext\",\n    value: function () {\n      var _acceptNext2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(editor, getAcceptUntilIndex, kind) {\n        var state, ghostText, completion, firstPart, ghostTextPos, ghostTextVal, acceptUntilIndexExclusive, partialGhostTextVal, positions, cursorPosition, replaceRange, newText, primaryEdit, edits, selections, acceptedRange, text;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(editor.getModel() !== this.textModel)) {\n                _context9.next = 2;\n                break;\n              }\n              throw new BugIndicatingError();\n            case 2:\n              state = this.state.get();\n              if (!(!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion)) {\n                _context9.next = 5;\n                break;\n              }\n              return _context9.abrupt(\"return\");\n            case 5:\n              ghostText = state.primaryGhostText;\n              completion = state.inlineCompletion.toInlineCompletion(undefined);\n              if (!(completion.snippetInfo || completion.filterText !== completion.insertText)) {\n                _context9.next = 11;\n                break;\n              }\n              _context9.next = 10;\n              return this.accept(editor);\n            case 10:\n              return _context9.abrupt(\"return\");\n            case 11:\n              firstPart = ghostText.parts[0];\n              ghostTextPos = new Position(ghostText.lineNumber, firstPart.column);\n              ghostTextVal = firstPart.text;\n              acceptUntilIndexExclusive = getAcceptUntilIndex(ghostTextPos, ghostTextVal);\n              if (!(acceptUntilIndexExclusive === ghostTextVal.length && ghostText.parts.length === 1)) {\n                _context9.next = 18;\n                break;\n              }\n              this.accept(editor);\n              return _context9.abrupt(\"return\");\n            case 18:\n              partialGhostTextVal = ghostTextVal.substring(0, acceptUntilIndexExclusive);\n              positions = this._positions.get();\n              cursorPosition = positions[0]; // Executing the edit might free the completion, so we have to hold a reference on it.\n              completion.source.addRef();\n              try {\n                this._isAcceptingPartially = true;\n                try {\n                  editor.pushUndoStop();\n                  replaceRange = Range.fromPositions(cursorPosition, ghostTextPos);\n                  newText = editor.getModel().getValueInRange(replaceRange) + partialGhostTextVal;\n                  primaryEdit = new SingleTextEdit(replaceRange, newText);\n                  edits = [primaryEdit].concat(_toConsumableArray(getSecondaryEdits(this.textModel, positions, primaryEdit)));\n                  selections = getEndPositionsAfterApplying(edits).map(function (p) {\n                    return Selection.fromPositions(p);\n                  });\n                  editor.executeEdits('inlineSuggestion.accept', edits.map(function (edit) {\n                    return EditOperation.replaceMove(edit.range, edit.text);\n                  }));\n                  editor.setSelections(selections, 'inlineCompletionPartialAccept');\n                } finally {\n                  this._isAcceptingPartially = false;\n                }\n                if (completion.source.provider.handlePartialAccept) {\n                  acceptedRange = Range.fromPositions(completion.range.getStartPosition(), TextLength.ofText(partialGhostTextVal).addToPosition(ghostTextPos)); // This assumes that the inline completion and the model use the same EOL style.\n                  text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n                  completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length, {\n                    kind: kind\n                  });\n                }\n              } finally {\n                completion.source.removeRef();\n              }\n            case 23:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function _acceptNext(_x7, _x8, _x9) {\n        return _acceptNext2.apply(this, arguments);\n      }\n      return _acceptNext;\n    }()\n  }, {\n    key: \"handleSuggestAccepted\",\n    value: function handleSuggestAccepted(item) {\n      var _a, _b;\n      var itemEdit = singleTextRemoveCommonPrefix(item.toSingleTextEdit(), this.textModel);\n      var augmentedCompletion = this._computeAugmentation(itemEdit, undefined);\n      if (!augmentedCompletion) {\n        return;\n      }\n      var inlineCompletion = augmentedCompletion.completion.inlineCompletion;\n      (_b = (_a = inlineCompletion.source.provider).handlePartialAccept) === null || _b === void 0 ? void 0 : _b.call(_a, inlineCompletion.source.inlineCompletions, inlineCompletion.sourceInlineCompletion, itemEdit.text.length, {\n        kind: 2 /* PartialAcceptTriggerKind.Suggest */\n      });\n    }\n  }]);\n}(Disposable);\nInlineCompletionsModel = __decorate([__param(9, IInstantiationService), __param(10, ICommandService), __param(11, ILanguageConfigurationService)], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport function getSecondaryEdits(textModel, positions, primaryEdit) {\n  if (positions.length === 1) {\n    // No secondary cursor positions\n    return [];\n  }\n  var primaryPosition = positions[0];\n  var secondaryPositions = positions.slice(1);\n  var primaryEditStartPosition = primaryEdit.range.getStartPosition();\n  var primaryEditEndPosition = primaryEdit.range.getEndPosition();\n  var replacedTextAfterPrimaryCursor = textModel.getValueInRange(Range.fromPositions(primaryPosition, primaryEditEndPosition));\n  var positionWithinTextEdit = subtractPositions(primaryPosition, primaryEditStartPosition);\n  if (positionWithinTextEdit.lineNumber < 1) {\n    onUnexpectedError(new BugIndicatingError(\"positionWithinTextEdit line number should be bigger than 0.\\n\\t\\t\\tInvalid subtraction between \".concat(primaryPosition.toString(), \" and \").concat(primaryEditStartPosition.toString())));\n    return [];\n  }\n  var secondaryEditText = substringPos(primaryEdit.text, positionWithinTextEdit);\n  return secondaryPositions.map(function (pos) {\n    var posEnd = addPositions(subtractPositions(pos, primaryEditStartPosition), primaryEditEndPosition);\n    var textAfterSecondaryCursor = textModel.getValueInRange(Range.fromPositions(pos, posEnd));\n    var l = commonPrefixLength(replacedTextAfterPrimaryCursor, textAfterSecondaryCursor);\n    var range = Range.fromPositions(pos, pos.delta(0, l));\n    return new SingleTextEdit(range, secondaryEditText);\n  });\n}\nfunction substringPos(text, pos) {\n  var subtext = '';\n  var lines = splitLinesIncludeSeparators(text);\n  for (var i = pos.lineNumber - 1; i < lines.length; i++) {\n    subtext += lines[i].substring(i === pos.lineNumber - 1 ? pos.column - 1 : 0);\n  }\n  return subtext;\n}\nfunction getEndPositionsAfterApplying(edits) {\n  var sortPerm = Permutation.createSortPermutation(edits, function (edit1, edit2) {\n    return Range.compareRangesUsingStarts(edit1.range, edit2.range);\n  });\n  var edit = new TextEdit(sortPerm.apply(edits));\n  var sortedNewRanges = edit.getNewRanges();\n  var newRanges = sortPerm.inverse().apply(sortedNewRanges);\n  return newRanges.map(function (range) {\n    return range.getEndPosition();\n  });\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","Permutation","mapFindFirst","BugIndicatingError","onUnexpectedError","onUnexpectedExternalError","Disposable","autorun","derived","derivedHandleChanges","derivedOpts","recomputeInitiallyAndOnChange","observableSignal","observableValue","subtransaction","transaction","commonPrefixLength","splitLinesIncludeSeparators","isDefined","EditOperation","Position","Range","Selection","InlineCompletionTriggerKind","ILanguageConfigurationService","GhostText","ghostTextOrReplacementEquals","ghostTextsOrReplacementsEqual","InlineCompletionsSource","SingleTextEdit","TextEdit","addPositions","subtractPositions","SnippetController2","ICommandService","IInstantiationService","singleTextEditAugments","computeGhostText","singleTextRemoveCommonPrefix","TextLength","VersionIdChangeReason","InlineCompletionsModel","_Disposable","textModel","selectedSuggestItem","textModelVersionId","_positions","_debounceValue","_suggestPreviewEnabled","_suggestPreviewMode","_inlineSuggestMode","_enabled","_instantiationService","_commandService","_languageConfigurationService","_this","_classCallCheck","_callSuper","_source","_register","createInstance","_isActive","_forceUpdateSignal","_selectedInlineCompletionId","undefined","_primaryPosition","reader","_a","read","_isAcceptingPartially","_preserveCurrentCompletionReasons","Set","Redo","Undo","AcceptWord","_fetchInlineCompletions","owner","createEmptyChangeSummary","preserveCurrentCompletion","inlineCompletionTriggerKind","Automatic","handleChange","ctx","changeSummary","didChange","has","change","shouldUpdate","cancelUpdate","itemToPreserveCandidate","selectedInlineCompletion","get","itemToPreserve","forwardStable","suggestWidgetInlineCompletions","suggestItem","inlineCompletions","tx","request","versionId","set","clone","clearSuggestWidgetInlineCompletions","cursorPosition","context","triggerKind","selectedSuggestionInfo","toSelectedSuggestionInfo","fetch","_filteredInlineCompletionItems","filteredCompletions","filter","isVisible","selectedInlineCompletionIndex","selectedInlineCompletionId","idx","findIndex","v","semanticId","lastTriggerKind","map","inlineCompletionsCount","Explicit","state","equalityComparer","a","b","ghostTexts","inlineCompletion","_b","model","suggestCompletionEdit","toSingleTextEdit","augmentation","_computeAugmentation","isSuggestionPreviewEnabled","fullEdit","edit","fullEditPreviewLength","text","mode","positions","edits","concat","_toConsumableArray","getSecondaryEdits","primaryGhostText","range","endLineNumber","completion","replacement","lastItem","item","src","source","provider","handleItemDidShow","call","sourceInlineCompletion","insertText","_inherits","_createClass","value","_trigger","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","trigger","_x","apply","_triggerExplicitly","_callee2","_this2","_callee2$","_context2","triggerExplicitly","_x2","_this3","clear","suggestCompletion","candidateInlineCompletions","augmentedCompletion","fromPositions","getStartPosition","getEndPosition","_deltaSelectedInlineCompletionIndex2","_callee3","delta","completions","newIdx","_callee3$","_context3","_deltaSelectedInlineCompletionIndex","_x3","_next","_callee4","_callee4$","_context4","_previous","_callee5","_callee5$","_context5","previous","_accept","_callee6","editor","_this4","selections","_this$_commandService","_callee6$","_context6","getModel","isEmpty","abrupt","toInlineCompletion","pushUndoStop","snippetInfo","executeEdits","replaceMove","additionalTextEdits","setPosition","insert","snippet","undoStopBefore","getEndPositionsAfterApplying","p","setSelections","command","addRef","executeCommand","id","then","removeRef","accept","_x4","_acceptNextWord","_callee7","_this5","_callee7$","_context7","_acceptNext","pos","langId","getLanguageIdAtPosition","lineNumber","column","config","getLanguageConfiguration","wordRegExp","RegExp","wordDefinition","flags","replace","m1","match","acceptUntilIndexExclusive","index","wsRegExp","m2","exec","acceptNextWord","_x5","_acceptNextLine","_callee8","_callee8$","_context8","m","acceptNextLine","_x6","_acceptNext2","_callee9","getAcceptUntilIndex","kind","ghostText","firstPart","ghostTextPos","ghostTextVal","partialGhostTextVal","replaceRange","newText","primaryEdit","acceptedRange","_callee9$","_context9","filterText","parts","substring","getValueInRange","handlePartialAccept","ofText","addToPosition","_x7","_x8","_x9","handleSuggestAccepted","itemEdit","primaryPosition","secondaryPositions","slice","primaryEditStartPosition","primaryEditEndPosition","replacedTextAfterPrimaryCursor","positionWithinTextEdit","toString","secondaryEditText","substringPos","posEnd","textAfterSecondaryCursor","l","subtext","lines","sortPerm","createSortPermutation","edit1","edit2","compareRangesUsingStarts","sortedNewRanges","getNewRanges","newRanges","inverse"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Permutation } from '../../../../base/common/arrays.js';\nimport { mapFindFirst } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedHandleChanges, derivedOpts, recomputeInitiallyAndOnChange, observableSignal, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { commonPrefixLength, splitLinesIncludeSeparators } from '../../../../base/common/strings.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText, ghostTextOrReplacementEquals, ghostTextsOrReplacementsEqual } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { SingleTextEdit, TextEdit } from '../../../common/core/textEdit.js';\nimport { addPositions, subtractPositions } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { singleTextEditAugments, computeGhostText, singleTextRemoveCommonPrefix } from './singleTextEdit.js';\nimport { TextLength } from '../../../common/core/textLength.js';\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\n    constructor(textModel, selectedSuggestItem, textModelVersionId, _positions, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.selectedSuggestItem = selectedSuggestItem;\n        this.textModelVersionId = textModelVersionId;\n        this._positions = _positions;\n        this._debounceValue = _debounceValue;\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\n        this._suggestPreviewMode = _suggestPreviewMode;\n        this._inlineSuggestMode = _inlineSuggestMode;\n        this._enabled = _enabled;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\n        this._isActive = observableValue(this, false);\n        this._forceUpdateSignal = observableSignal('forceUpdate');\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue(this, undefined);\n        this._primaryPosition = derived(this, reader => { var _a; return (_a = this._positions.read(reader)[0]) !== null && _a !== void 0 ? _a : new Position(1, 1); });\n        this._isAcceptingPartially = false;\n        this._preserveCurrentCompletionReasons = new Set([\n            VersionIdChangeReason.Redo,\n            VersionIdChangeReason.Undo,\n            VersionIdChangeReason.AcceptWord,\n        ]);\n        this._fetchInlineCompletions = derivedHandleChanges({\n            owner: this,\n            createEmptyChangeSummary: () => ({\n                preserveCurrentCompletion: false,\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                /** @description fetch inline completions */\n                if (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\n                    changeSummary.preserveCurrentCompletion = true;\n                }\n                else if (ctx.didChange(this._forceUpdateSignal)) {\n                    changeSummary.inlineCompletionTriggerKind = ctx.change;\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            this._forceUpdateSignal.read(reader);\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n            if (!shouldUpdate) {\n                this._source.cancelUpdate();\n                return undefined;\n            }\n            this.textModelVersionId.read(reader); // Refetch on text change\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable)\n                ? itemToPreserveCandidate : undefined;\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestWidgetInlineCompletions && !suggestItem) {\n                const inlineCompletions = this._source.inlineCompletions.get();\n                transaction(tx => {\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\n                    if (!inlineCompletions || suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n                    }\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\n                });\n            }\n            const cursorPosition = this._primaryPosition.read(reader);\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo(),\n            };\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\n        });\n        this._filteredInlineCompletionItems = derived(this, reader => {\n            const c = this._source.inlineCompletions.read(reader);\n            if (!c) {\n                return [];\n            }\n            const cursorPosition = this._primaryPosition.read(reader);\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n            return filteredCompletions;\n        });\n        this.selectedInlineCompletionIndex = derived(this, (reader) => {\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineCompletion = derived(this, (reader) => {\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this.lastTriggerKind = this._source.inlineCompletions.map(this, v => v === null || v === void 0 ? void 0 : v.request.context.triggerKind);\n        this.inlineCompletionsCount = derived(this, reader => {\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n                return this._filteredInlineCompletionItems.read(reader).length;\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.state = derivedOpts({\n            owner: this,\n            equalityComparer: (a, b) => {\n                if (!a || !b) {\n                    return a === b;\n                }\n                return ghostTextsOrReplacementsEqual(a.ghostTexts, b.ghostTexts)\n                    && a.inlineCompletion === b.inlineCompletion\n                    && a.suggestItem === b.suggestItem;\n            }\n        }, (reader) => {\n            var _a, _b;\n            const model = this.textModel;\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestItem) {\n                const suggestCompletionEdit = singleTextRemoveCommonPrefix(suggestItem.toSingleTextEdit(), model);\n                const augmentation = this._computeAugmentation(suggestCompletionEdit, reader);\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n                if (!isSuggestionPreviewEnabled && !augmentation) {\n                    return undefined;\n                }\n                const fullEdit = (_a = augmentation === null || augmentation === void 0 ? void 0 : augmentation.edit) !== null && _a !== void 0 ? _a : suggestCompletionEdit;\n                const fullEditPreviewLength = augmentation ? augmentation.edit.text.length - suggestCompletionEdit.text.length : 0;\n                const mode = this._suggestPreviewMode.read(reader);\n                const positions = this._positions.read(reader);\n                const edits = [fullEdit, ...getSecondaryEdits(this.textModel, positions, fullEdit)];\n                const ghostTexts = edits\n                    .map((edit, idx) => computeGhostText(edit, model, mode, positions[idx], fullEditPreviewLength))\n                    .filter(isDefined);\n                const primaryGhostText = (_b = ghostTexts[0]) !== null && _b !== void 0 ? _b : new GhostText(fullEdit.range.endLineNumber, []);\n                return { edits, primaryGhostText, ghostTexts, inlineCompletion: augmentation === null || augmentation === void 0 ? void 0 : augmentation.completion, suggestItem };\n            }\n            else {\n                if (!this._isActive.read(reader)) {\n                    return undefined;\n                }\n                const inlineCompletion = this.selectedInlineCompletion.read(reader);\n                if (!inlineCompletion) {\n                    return undefined;\n                }\n                const replacement = inlineCompletion.toSingleTextEdit(reader);\n                const mode = this._inlineSuggestMode.read(reader);\n                const positions = this._positions.read(reader);\n                const edits = [replacement, ...getSecondaryEdits(this.textModel, positions, replacement)];\n                const ghostTexts = edits\n                    .map((edit, idx) => computeGhostText(edit, model, mode, positions[idx], 0))\n                    .filter(isDefined);\n                if (!ghostTexts[0]) {\n                    return undefined;\n                }\n                return { edits, primaryGhostText: ghostTexts[0], ghostTexts, inlineCompletion, suggestItem: undefined };\n            }\n        });\n        this.ghostTexts = derivedOpts({\n            owner: this,\n            equalityComparer: ghostTextsOrReplacementsEqual\n        }, reader => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v.ghostTexts;\n        });\n        this.primaryGhostText = derivedOpts({\n            owner: this,\n            equalityComparer: ghostTextOrReplacementEquals\n        }, reader => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v === null || v === void 0 ? void 0 : v.primaryGhostText;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletions));\n        let lastItem = undefined;\n        this._register(autorun(reader => {\n            var _a, _b;\n            /** @description call handleItemDidShow */\n            const item = this.state.read(reader);\n            const completion = item === null || item === void 0 ? void 0 : item.inlineCompletion;\n            if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\n                lastItem = completion;\n                if (completion) {\n                    const i = completion.inlineCompletion;\n                    const src = i.source;\n                    (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n                }\n            }\n        }));\n    }\n    async trigger(tx) {\n        this._isActive.set(true, tx);\n        await this._fetchInlineCompletions.get();\n    }\n    async triggerExplicitly(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(true, tx);\n            this._forceUpdateSignal.trigger(tx, InlineCompletionTriggerKind.Explicit);\n        });\n        await this._fetchInlineCompletions.get();\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(false, tx);\n            this._source.clear(tx);\n        });\n    }\n    _computeAugmentation(suggestCompletion, reader) {\n        const model = this.textModel;\n        const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n        const candidateInlineCompletions = suggestWidgetInlineCompletions\n            ? suggestWidgetInlineCompletions.inlineCompletions\n            : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n        const augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\n            let r = completion.toSingleTextEdit(reader);\n            r = singleTextRemoveCommonPrefix(r, model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\n            return singleTextEditAugments(r, suggestCompletion) ? { completion, edit: r } : undefined;\n        });\n        return augmentedCompletion;\n    }\n    async _deltaSelectedInlineCompletionIndex(delta) {\n        await this.triggerExplicitly();\n        const completions = this._filteredInlineCompletionItems.get() || [];\n        if (completions.length > 0) {\n            const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n            this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n        }\n        else {\n            this._selectedInlineCompletionId.set(undefined, undefined);\n        }\n    }\n    async next() {\n        await this._deltaSelectedInlineCompletionIndex(1);\n    }\n    async previous() {\n        await this._deltaSelectedInlineCompletionIndex(-1);\n    }\n    async accept(editor) {\n        var _a;\n        if (editor.getModel() !== this.textModel) {\n            throw new BugIndicatingError();\n        }\n        const state = this.state.get();\n        if (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n            return;\n        }\n        const completion = state.inlineCompletion.toInlineCompletion(undefined);\n        editor.pushUndoStop();\n        if (completion.snippetInfo) {\n            editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, ''),\n                ...completion.additionalTextEdits\n            ]);\n            editor.setPosition(completion.snippetInfo.range.getStartPosition(), 'inlineCompletionAccept');\n            (_a = SnippetController2.get(editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n        }\n        else {\n            const edits = state.edits;\n            const selections = getEndPositionsAfterApplying(edits).map(p => Selection.fromPositions(p));\n            editor.executeEdits('inlineSuggestion.accept', [\n                ...edits.map(edit => EditOperation.replaceMove(edit.range, edit.text)),\n                ...completion.additionalTextEdits\n            ]);\n            editor.setSelections(selections, 'inlineCompletionAccept');\n        }\n        if (completion.command) {\n            // Make sure the completion list will not be disposed.\n            completion.source.addRef();\n        }\n        // Reset before invoking the command, since the command might cause a follow up trigger.\n        transaction(tx => {\n            this._source.clear(tx);\n            // Potentially, isActive will get set back to true by the typing or accept inline suggest event\n            // if automatic inline suggestions are enabled.\n            this._isActive.set(false, tx);\n        });\n        if (completion.command) {\n            await this._commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .then(undefined, onUnexpectedExternalError);\n            completion.source.removeRef();\n        }\n    }\n    async acceptNextWord(editor) {\n        await this._acceptNext(editor, (pos, text) => {\n            const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n            const config = this._languageConfigurationService.getLanguageConfiguration(langId);\n            const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n            const m1 = text.match(wordRegExp);\n            let acceptUntilIndexExclusive = 0;\n            if (m1 && m1.index !== undefined) {\n                if (m1.index === 0) {\n                    acceptUntilIndexExclusive = m1[0].length;\n                }\n                else {\n                    acceptUntilIndexExclusive = m1.index;\n                }\n            }\n            else {\n                acceptUntilIndexExclusive = text.length;\n            }\n            const wsRegExp = /\\s+/g;\n            const m2 = wsRegExp.exec(text);\n            if (m2 && m2.index !== undefined) {\n                if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                    acceptUntilIndexExclusive = m2.index + m2[0].length;\n                }\n            }\n            return acceptUntilIndexExclusive;\n        }, 0 /* PartialAcceptTriggerKind.Word */);\n    }\n    async acceptNextLine(editor) {\n        await this._acceptNext(editor, (pos, text) => {\n            const m = text.match(/\\n/);\n            if (m && m.index !== undefined) {\n                return m.index + 1;\n            }\n            return text.length;\n        }, 1 /* PartialAcceptTriggerKind.Line */);\n    }\n    async _acceptNext(editor, getAcceptUntilIndex, kind) {\n        if (editor.getModel() !== this.textModel) {\n            throw new BugIndicatingError();\n        }\n        const state = this.state.get();\n        if (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n            return;\n        }\n        const ghostText = state.primaryGhostText;\n        const completion = state.inlineCompletion.toInlineCompletion(undefined);\n        if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n            // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n            await this.accept(editor);\n            return;\n        }\n        const firstPart = ghostText.parts[0];\n        const ghostTextPos = new Position(ghostText.lineNumber, firstPart.column);\n        const ghostTextVal = firstPart.text;\n        const acceptUntilIndexExclusive = getAcceptUntilIndex(ghostTextPos, ghostTextVal);\n        if (acceptUntilIndexExclusive === ghostTextVal.length && ghostText.parts.length === 1) {\n            this.accept(editor);\n            return;\n        }\n        const partialGhostTextVal = ghostTextVal.substring(0, acceptUntilIndexExclusive);\n        const positions = this._positions.get();\n        const cursorPosition = positions[0];\n        // Executing the edit might free the completion, so we have to hold a reference on it.\n        completion.source.addRef();\n        try {\n            this._isAcceptingPartially = true;\n            try {\n                editor.pushUndoStop();\n                const replaceRange = Range.fromPositions(cursorPosition, ghostTextPos);\n                const newText = editor.getModel().getValueInRange(replaceRange) + partialGhostTextVal;\n                const primaryEdit = new SingleTextEdit(replaceRange, newText);\n                const edits = [primaryEdit, ...getSecondaryEdits(this.textModel, positions, primaryEdit)];\n                const selections = getEndPositionsAfterApplying(edits).map(p => Selection.fromPositions(p));\n                editor.executeEdits('inlineSuggestion.accept', edits.map(edit => EditOperation.replaceMove(edit.range, edit.text)));\n                editor.setSelections(selections, 'inlineCompletionPartialAccept');\n            }\n            finally {\n                this._isAcceptingPartially = false;\n            }\n            if (completion.source.provider.handlePartialAccept) {\n                const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), TextLength.ofText(partialGhostTextVal).addToPosition(ghostTextPos));\n                // This assumes that the inline completion and the model use the same EOL style.\n                const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n                completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length, {\n                    kind,\n                });\n            }\n        }\n        finally {\n            completion.source.removeRef();\n        }\n    }\n    handleSuggestAccepted(item) {\n        var _a, _b;\n        const itemEdit = singleTextRemoveCommonPrefix(item.toSingleTextEdit(), this.textModel);\n        const augmentedCompletion = this._computeAugmentation(itemEdit, undefined);\n        if (!augmentedCompletion) {\n            return;\n        }\n        const inlineCompletion = augmentedCompletion.completion.inlineCompletion;\n        (_b = (_a = inlineCompletion.source.provider).handlePartialAccept) === null || _b === void 0 ? void 0 : _b.call(_a, inlineCompletion.source.inlineCompletions, inlineCompletion.sourceInlineCompletion, itemEdit.text.length, {\n            kind: 2 /* PartialAcceptTriggerKind.Suggest */,\n        });\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(9, IInstantiationService),\n    __param(10, ICommandService),\n    __param(11, ILanguageConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport function getSecondaryEdits(textModel, positions, primaryEdit) {\n    if (positions.length === 1) {\n        // No secondary cursor positions\n        return [];\n    }\n    const primaryPosition = positions[0];\n    const secondaryPositions = positions.slice(1);\n    const primaryEditStartPosition = primaryEdit.range.getStartPosition();\n    const primaryEditEndPosition = primaryEdit.range.getEndPosition();\n    const replacedTextAfterPrimaryCursor = textModel.getValueInRange(Range.fromPositions(primaryPosition, primaryEditEndPosition));\n    const positionWithinTextEdit = subtractPositions(primaryPosition, primaryEditStartPosition);\n    if (positionWithinTextEdit.lineNumber < 1) {\n        onUnexpectedError(new BugIndicatingError(`positionWithinTextEdit line number should be bigger than 0.\n\t\t\tInvalid subtraction between ${primaryPosition.toString()} and ${primaryEditStartPosition.toString()}`));\n        return [];\n    }\n    const secondaryEditText = substringPos(primaryEdit.text, positionWithinTextEdit);\n    return secondaryPositions.map(pos => {\n        const posEnd = addPositions(subtractPositions(pos, primaryEditStartPosition), primaryEditEndPosition);\n        const textAfterSecondaryCursor = textModel.getValueInRange(Range.fromPositions(pos, posEnd));\n        const l = commonPrefixLength(replacedTextAfterPrimaryCursor, textAfterSecondaryCursor);\n        const range = Range.fromPositions(pos, pos.delta(0, l));\n        return new SingleTextEdit(range, secondaryEditText);\n    });\n}\nfunction substringPos(text, pos) {\n    let subtext = '';\n    const lines = splitLinesIncludeSeparators(text);\n    for (let i = pos.lineNumber - 1; i < lines.length; i++) {\n        subtext += lines[i].substring(i === pos.lineNumber - 1 ? pos.column - 1 : 0);\n    }\n    return subtext;\n}\nfunction getEndPositionsAfterApplying(edits) {\n    const sortPerm = Permutation.createSortPermutation(edits, (edit1, edit2) => Range.compareRangesUsingStarts(edit1.range, edit2.range));\n    const edit = new TextEdit(sortPerm.apply(edits));\n    const sortedNewRanges = edit.getNewRanges();\n    const newRanges = sortPerm.inverse().apply(sortedNewRanges);\n    return newRanges.map(range => range.getEndPosition());\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}