{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var ICommandService = createDecorator('commandService');\nexport var CommandsRegistry = new ( /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n    this._commands = new Map();\n    this._onDidRegisterCommand = new Emitter();\n    this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n  }\n  return _createClass(_class, [{\n    key: \"registerCommand\",\n    value: function registerCommand(idOrCommand, handler) {\n      var _this = this;\n      if (!idOrCommand) {\n        throw new Error(\"invalid command\");\n      }\n      if (typeof idOrCommand === 'string') {\n        if (!handler) {\n          throw new Error(\"invalid command\");\n        }\n        return this.registerCommand({\n          id: idOrCommand,\n          handler: handler\n        });\n      }\n      // add argument validation if rich command metadata is provided\n      if (idOrCommand.metadata && Array.isArray(idOrCommand.metadata.args)) {\n        var constraints = [];\n        var _iterator = _createForOfIteratorHelper(idOrCommand.metadata.args),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var arg = _step.value;\n            constraints.push(arg.constraint);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        var actualHandler = idOrCommand.handler;\n        idOrCommand.handler = function (accessor) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          validateConstraints(args, constraints);\n          return actualHandler.apply(void 0, [accessor].concat(args));\n        };\n      }\n      // find a place to store the command\n      var id = idOrCommand.id;\n      var commands = this._commands.get(id);\n      if (!commands) {\n        commands = new LinkedList();\n        this._commands.set(id, commands);\n      }\n      var removeFn = commands.unshift(idOrCommand);\n      var ret = toDisposable(function () {\n        removeFn();\n        var command = _this._commands.get(id);\n        if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n          _this._commands[\"delete\"](id);\n        }\n      });\n      // tell the world about this command\n      this._onDidRegisterCommand.fire(id);\n      return ret;\n    }\n  }, {\n    key: \"registerCommandAlias\",\n    value: function registerCommandAlias(oldId, newId) {\n      return CommandsRegistry.registerCommand(oldId, function (accessor) {\n        var _accessor$get;\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        return (_accessor$get = accessor.get(ICommandService)).executeCommand.apply(_accessor$get, [newId].concat(args));\n      });\n    }\n  }, {\n    key: \"getCommand\",\n    value: function getCommand(id) {\n      var list = this._commands.get(id);\n      if (!list || list.isEmpty()) {\n        return undefined;\n      }\n      return Iterable.first(list);\n    }\n  }, {\n    key: \"getCommands\",\n    value: function getCommands() {\n      var result = new Map();\n      var _iterator2 = _createForOfIteratorHelper(this._commands.keys()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          var command = this.getCommand(key);\n          if (command) {\n            result.set(key, command);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return result;\n    }\n  }]);\n}())();\nCommandsRegistry.registerCommand('noop', function () {});","map":{"version":3,"names":["Emitter","Iterable","toDisposable","LinkedList","validateConstraints","createDecorator","ICommandService","CommandsRegistry","_class","_classCallCheck","_commands","Map","_onDidRegisterCommand","onDidRegisterCommand","event","_createClass","key","value","registerCommand","idOrCommand","handler","_this","Error","id","metadata","Array","isArray","args","constraints","_iterator","_createForOfIteratorHelper","_step","s","n","done","arg","push","constraint","err","e","f","actualHandler","accessor","_len","arguments","length","_key","apply","concat","commands","get","set","removeFn","unshift","ret","command","isEmpty","fire","registerCommandAlias","oldId","newId","_accessor$get","_len2","_key2","executeCommand","getCommand","list","undefined","first","getCommands","result","_iterator2","keys","_step2"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.metadata && Array.isArray(idOrCommand.metadata.args)) {\n            const constraints = [];\n            for (const arg of idOrCommand.metadata.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        const removeFn = commands.unshift(idOrCommand);\n        const ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}