{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n  /**\n   * Insert new line and copy the previous line's indentation.\n   */\n  IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n  /**\n   * Insert new line and indent once (relative to the previous line's indentation).\n   */\n  IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n  /**\n   * Insert two new lines:\n   *  - the first one indented which will hold the cursor\n   *  - the second one at the same indentation level\n   */\n  IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n  /**\n   * Insert new line and outdent once (relative to the previous line's indentation).\n   */\n  IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\n * @internal\n */\nexport var StandardAutoClosingPairConditional = /*#__PURE__*/function () {\n  function StandardAutoClosingPairConditional(source) {\n    _classCallCheck(this, StandardAutoClosingPairConditional);\n    this._neutralCharacter = null;\n    this._neutralCharacterSearched = false;\n    this.open = source.open;\n    this.close = source.close;\n    // initially allowed in all tokens\n    this._inString = true;\n    this._inComment = true;\n    this._inRegEx = true;\n    if (Array.isArray(source.notIn)) {\n      for (var i = 0, len = source.notIn.length; i < len; i++) {\n        var notIn = source.notIn[i];\n        switch (notIn) {\n          case 'string':\n            this._inString = false;\n            break;\n          case 'comment':\n            this._inComment = false;\n            break;\n          case 'regex':\n            this._inRegEx = false;\n            break;\n        }\n      }\n    }\n  }\n  return _createClass(StandardAutoClosingPairConditional, [{\n    key: \"isOK\",\n    value: function isOK(standardToken) {\n      switch (standardToken) {\n        case 0 /* StandardTokenType.Other */:\n          return true;\n        case 1 /* StandardTokenType.Comment */:\n          return this._inComment;\n        case 2 /* StandardTokenType.String */:\n          return this._inString;\n        case 3 /* StandardTokenType.RegEx */:\n          return this._inRegEx;\n      }\n    }\n  }, {\n    key: \"shouldAutoClose\",\n    value: function shouldAutoClose(context, column) {\n      // Always complete on empty line\n      if (context.getTokenCount() === 0) {\n        return true;\n      }\n      var tokenIndex = context.findTokenIndexAtOffset(column - 2);\n      var standardTokenType = context.getStandardTokenType(tokenIndex);\n      return this.isOK(standardTokenType);\n    }\n  }, {\n    key: \"_findNeutralCharacterInRange\",\n    value: function _findNeutralCharacterInRange(fromCharCode, toCharCode) {\n      for (var charCode = fromCharCode; charCode <= toCharCode; charCode++) {\n        var character = String.fromCharCode(charCode);\n        if (!this.open.includes(character) && !this.close.includes(character)) {\n          return character;\n        }\n      }\n      return null;\n    }\n    /**\n     * Find a character in the range [0-9a-zA-Z] that does not appear in the open or close\n     */\n  }, {\n    key: \"findNeutralCharacter\",\n    value: function findNeutralCharacter() {\n      if (!this._neutralCharacterSearched) {\n        this._neutralCharacterSearched = true;\n        if (!this._neutralCharacter) {\n          this._neutralCharacter = this._findNeutralCharacterInRange(48 /* CharCode.Digit0 */, 57 /* CharCode.Digit9 */);\n        }\n        if (!this._neutralCharacter) {\n          this._neutralCharacter = this._findNeutralCharacterInRange(97 /* CharCode.a */, 122 /* CharCode.z */);\n        }\n        if (!this._neutralCharacter) {\n          this._neutralCharacter = this._findNeutralCharacterInRange(65 /* CharCode.A */, 90 /* CharCode.Z */);\n        }\n      }\n      return this._neutralCharacter;\n    }\n  }]);\n}();\n/**\n * @internal\n */\nexport var AutoClosingPairs = /*#__PURE__*/_createClass(function AutoClosingPairs(autoClosingPairs) {\n  _classCallCheck(this, AutoClosingPairs);\n  this.autoClosingPairsOpenByStart = new Map();\n  this.autoClosingPairsOpenByEnd = new Map();\n  this.autoClosingPairsCloseByStart = new Map();\n  this.autoClosingPairsCloseByEnd = new Map();\n  this.autoClosingPairsCloseSingleChar = new Map();\n  var _iterator = _createForOfIteratorHelper(autoClosingPairs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var pair = _step.value;\n      appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n      appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n      appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n      appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n      if (pair.close.length === 1 && pair.open.length === 1) {\n        appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n});\nfunction appendEntry(target, key, value) {\n  if (target.has(key)) {\n    target.get(key).push(value);\n  } else {\n    target.set(key, [value]);\n  }\n}","map":{"version":3,"names":["IndentAction","StandardAutoClosingPairConditional","source","_classCallCheck","_neutralCharacter","_neutralCharacterSearched","open","close","_inString","_inComment","_inRegEx","Array","isArray","notIn","i","len","length","_createClass","key","value","isOK","standardToken","shouldAutoClose","context","column","getTokenCount","tokenIndex","findTokenIndexAtOffset","standardTokenType","getStandardTokenType","_findNeutralCharacterInRange","fromCharCode","toCharCode","charCode","character","String","includes","findNeutralCharacter","AutoClosingPairs","autoClosingPairs","autoClosingPairsOpenByStart","Map","autoClosingPairsOpenByEnd","autoClosingPairsCloseByStart","autoClosingPairsCloseByEnd","autoClosingPairsCloseSingleChar","_iterator","_createForOfIteratorHelper","_step","s","n","done","pair","appendEntry","charAt","err","e","f","target","has","get","push","set"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/languages/languageConfiguration.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\n * @internal\n */\nexport class StandardAutoClosingPairConditional {\n    constructor(source) {\n        this._neutralCharacter = null;\n        this._neutralCharacterSearched = false;\n        this.open = source.open;\n        this.close = source.close;\n        // initially allowed in all tokens\n        this._inString = true;\n        this._inComment = true;\n        this._inRegEx = true;\n        if (Array.isArray(source.notIn)) {\n            for (let i = 0, len = source.notIn.length; i < len; i++) {\n                const notIn = source.notIn[i];\n                switch (notIn) {\n                    case 'string':\n                        this._inString = false;\n                        break;\n                    case 'comment':\n                        this._inComment = false;\n                        break;\n                    case 'regex':\n                        this._inRegEx = false;\n                        break;\n                }\n            }\n        }\n    }\n    isOK(standardToken) {\n        switch (standardToken) {\n            case 0 /* StandardTokenType.Other */:\n                return true;\n            case 1 /* StandardTokenType.Comment */:\n                return this._inComment;\n            case 2 /* StandardTokenType.String */:\n                return this._inString;\n            case 3 /* StandardTokenType.RegEx */:\n                return this._inRegEx;\n        }\n    }\n    shouldAutoClose(context, column) {\n        // Always complete on empty line\n        if (context.getTokenCount() === 0) {\n            return true;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 2);\n        const standardTokenType = context.getStandardTokenType(tokenIndex);\n        return this.isOK(standardTokenType);\n    }\n    _findNeutralCharacterInRange(fromCharCode, toCharCode) {\n        for (let charCode = fromCharCode; charCode <= toCharCode; charCode++) {\n            const character = String.fromCharCode(charCode);\n            if (!this.open.includes(character) && !this.close.includes(character)) {\n                return character;\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a character in the range [0-9a-zA-Z] that does not appear in the open or close\n     */\n    findNeutralCharacter() {\n        if (!this._neutralCharacterSearched) {\n            this._neutralCharacterSearched = true;\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(48 /* CharCode.Digit0 */, 57 /* CharCode.Digit9 */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(97 /* CharCode.a */, 122 /* CharCode.z */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(65 /* CharCode.A */, 90 /* CharCode.Z */);\n            }\n        }\n        return this._neutralCharacter;\n    }\n}\n/**\n * @internal\n */\nexport class AutoClosingPairs {\n    constructor(autoClosingPairs) {\n        this.autoClosingPairsOpenByStart = new Map();\n        this.autoClosingPairsOpenByEnd = new Map();\n        this.autoClosingPairsCloseByStart = new Map();\n        this.autoClosingPairsCloseByEnd = new Map();\n        this.autoClosingPairsCloseSingleChar = new Map();\n        for (const pair of autoClosingPairs) {\n            appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n            appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n            appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n            appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n            if (pair.close.length === 1 && pair.open.length === 1) {\n                appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n            }\n        }\n    }\n}\nfunction appendEntry(target, key, value) {\n    if (target.has(key)) {\n        target.get(key).push(value);\n    }\n    else {\n        target.set(key, [value]);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}