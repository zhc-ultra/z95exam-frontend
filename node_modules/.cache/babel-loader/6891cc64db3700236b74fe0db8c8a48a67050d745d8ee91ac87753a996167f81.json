{"ast":null,"code":"/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n// To do: next major: expose function instead of object.\n\n/**\n * Extension for `micromark` that can be passed in `htmlExtensions`, to\n * support GFM strikethrough when serializing to HTML.\n *\n * @type {HtmlExtension}\n */\nexport var gfmStrikethroughHtml = {\n  enter: {\n    strikethrough: function strikethrough() {\n      this.tag('<del>');\n    }\n  },\n  exit: {\n    strikethrough: function strikethrough() {\n      this.tag('</del>');\n    }\n  }\n};","map":{"version":3,"names":["gfmStrikethroughHtml","enter","strikethrough","tag","exit"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/micromark-extension-gfm-strikethrough/dev/lib/html.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n// To do: next major: expose function instead of object.\n\n/**\n * Extension for `micromark` that can be passed in `htmlExtensions`, to\n * support GFM strikethrough when serializing to HTML.\n *\n * @type {HtmlExtension}\n */\nexport const gfmStrikethroughHtml = {\n  enter: {\n    strikethrough() {\n      this.tag('<del>')\n    }\n  },\n  exit: {\n    strikethrough() {\n      this.tag('</del>')\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,oBAAoB,GAAG;EAClCC,KAAK,EAAE;IACLC,aAAa,WAAAA,cAAA,EAAG;MACd,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC;IACnB;EACF,CAAC;EACDC,IAAI,EAAE;IACJF,aAAa,WAAAA,cAAA,EAAG;MACd,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC;IACpB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}