{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $ } from '../../dom.js';\nfunction removeFromParent(element) {\n  var _a;\n  try {\n    (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(element);\n  } catch (e) {\n    // this will throw if this happens due to a blur event, nasty business\n  }\n}\nexport var RowCache = /*#__PURE__*/function () {\n  function RowCache(renderers) {\n    _classCallCheck(this, RowCache);\n    this.renderers = renderers;\n    this.cache = new Map();\n    this.transactionNodesPendingRemoval = new Set();\n    this.inTransaction = false;\n  }\n  /**\n   * Returns a row either by creating a new one or reusing\n   * a previously released row which shares the same templateId.\n   *\n   * @returns A row and `isReusingConnectedDomNode` if the row's node is already in the dom in a stale position.\n   */\n  return _createClass(RowCache, [{\n    key: \"alloc\",\n    value: function alloc(templateId) {\n      var result = this.getTemplateCache(templateId).pop();\n      var isStale = false;\n      if (result) {\n        isStale = this.transactionNodesPendingRemoval.has(result.domNode);\n        if (isStale) {\n          this.transactionNodesPendingRemoval[\"delete\"](result.domNode);\n        }\n      } else {\n        var domNode = $('.monaco-list-row');\n        var renderer = this.getRenderer(templateId);\n        var templateData = renderer.renderTemplate(domNode);\n        result = {\n          domNode: domNode,\n          templateId: templateId,\n          templateData: templateData\n        };\n      }\n      return {\n        row: result,\n        isReusingConnectedDomNode: isStale\n      };\n    }\n    /**\n     * Releases the row for eventual reuse.\n     */\n  }, {\n    key: \"release\",\n    value: function release(row) {\n      if (!row) {\n        return;\n      }\n      this.releaseRow(row);\n    }\n    /**\n     * Begin a set of changes that use the cache. This lets us skip work when a row is removed and then inserted again.\n     */\n  }, {\n    key: \"transact\",\n    value: function transact(makeChanges) {\n      if (this.inTransaction) {\n        throw new Error('Already in transaction');\n      }\n      this.inTransaction = true;\n      try {\n        makeChanges();\n      } finally {\n        var _iterator = _createForOfIteratorHelper(this.transactionNodesPendingRemoval),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var domNode = _step.value;\n            this.doRemoveNode(domNode);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this.transactionNodesPendingRemoval.clear();\n        this.inTransaction = false;\n      }\n    }\n  }, {\n    key: \"releaseRow\",\n    value: function releaseRow(row) {\n      var domNode = row.domNode,\n        templateId = row.templateId;\n      if (domNode) {\n        if (this.inTransaction) {\n          this.transactionNodesPendingRemoval.add(domNode);\n        } else {\n          this.doRemoveNode(domNode);\n        }\n      }\n      var cache = this.getTemplateCache(templateId);\n      cache.push(row);\n    }\n  }, {\n    key: \"doRemoveNode\",\n    value: function doRemoveNode(domNode) {\n      domNode.classList.remove('scrolling');\n      removeFromParent(domNode);\n    }\n  }, {\n    key: \"getTemplateCache\",\n    value: function getTemplateCache(templateId) {\n      var result = this.cache.get(templateId);\n      if (!result) {\n        result = [];\n        this.cache.set(templateId, result);\n      }\n      return result;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this = this;\n      this.cache.forEach(function (cachedRows, templateId) {\n        var _iterator2 = _createForOfIteratorHelper(cachedRows),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var cachedRow = _step2.value;\n            var renderer = _this.getRenderer(templateId);\n            renderer.disposeTemplate(cachedRow.templateData);\n            cachedRow.templateData = null;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      });\n      this.cache.clear();\n      this.transactionNodesPendingRemoval.clear();\n    }\n  }, {\n    key: \"getRenderer\",\n    value: function getRenderer(templateId) {\n      var renderer = this.renderers.get(templateId);\n      if (!renderer) {\n        throw new Error(\"No renderer found for \".concat(templateId));\n      }\n      return renderer;\n    }\n  }]);\n}();","map":{"version":3,"names":["$","removeFromParent","element","_a","parentElement","removeChild","e","RowCache","renderers","_classCallCheck","cache","Map","transactionNodesPendingRemoval","Set","inTransaction","_createClass","key","value","alloc","templateId","result","getTemplateCache","pop","isStale","has","domNode","renderer","getRenderer","templateData","renderTemplate","row","isReusingConnectedDomNode","release","releaseRow","transact","makeChanges","Error","_iterator","_createForOfIteratorHelper","_step","s","n","done","doRemoveNode","err","f","clear","add","push","classList","remove","get","set","dispose","_this","forEach","cachedRows","_iterator2","_step2","cachedRow","disposeTemplate","concat"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/base/browser/ui/list/rowCache.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $ } from '../../dom.js';\nfunction removeFromParent(element) {\n    var _a;\n    try {\n        (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(element);\n    }\n    catch (e) {\n        // this will throw if this happens due to a blur event, nasty business\n    }\n}\nexport class RowCache {\n    constructor(renderers) {\n        this.renderers = renderers;\n        this.cache = new Map();\n        this.transactionNodesPendingRemoval = new Set();\n        this.inTransaction = false;\n    }\n    /**\n     * Returns a row either by creating a new one or reusing\n     * a previously released row which shares the same templateId.\n     *\n     * @returns A row and `isReusingConnectedDomNode` if the row's node is already in the dom in a stale position.\n     */\n    alloc(templateId) {\n        let result = this.getTemplateCache(templateId).pop();\n        let isStale = false;\n        if (result) {\n            isStale = this.transactionNodesPendingRemoval.has(result.domNode);\n            if (isStale) {\n                this.transactionNodesPendingRemoval.delete(result.domNode);\n            }\n        }\n        else {\n            const domNode = $('.monaco-list-row');\n            const renderer = this.getRenderer(templateId);\n            const templateData = renderer.renderTemplate(domNode);\n            result = { domNode, templateId, templateData };\n        }\n        return { row: result, isReusingConnectedDomNode: isStale };\n    }\n    /**\n     * Releases the row for eventual reuse.\n     */\n    release(row) {\n        if (!row) {\n            return;\n        }\n        this.releaseRow(row);\n    }\n    /**\n     * Begin a set of changes that use the cache. This lets us skip work when a row is removed and then inserted again.\n     */\n    transact(makeChanges) {\n        if (this.inTransaction) {\n            throw new Error('Already in transaction');\n        }\n        this.inTransaction = true;\n        try {\n            makeChanges();\n        }\n        finally {\n            for (const domNode of this.transactionNodesPendingRemoval) {\n                this.doRemoveNode(domNode);\n            }\n            this.transactionNodesPendingRemoval.clear();\n            this.inTransaction = false;\n        }\n    }\n    releaseRow(row) {\n        const { domNode, templateId } = row;\n        if (domNode) {\n            if (this.inTransaction) {\n                this.transactionNodesPendingRemoval.add(domNode);\n            }\n            else {\n                this.doRemoveNode(domNode);\n            }\n        }\n        const cache = this.getTemplateCache(templateId);\n        cache.push(row);\n    }\n    doRemoveNode(domNode) {\n        domNode.classList.remove('scrolling');\n        removeFromParent(domNode);\n    }\n    getTemplateCache(templateId) {\n        let result = this.cache.get(templateId);\n        if (!result) {\n            result = [];\n            this.cache.set(templateId, result);\n        }\n        return result;\n    }\n    dispose() {\n        this.cache.forEach((cachedRows, templateId) => {\n            for (const cachedRow of cachedRows) {\n                const renderer = this.getRenderer(templateId);\n                renderer.disposeTemplate(cachedRow.templateData);\n                cachedRow.templateData = null;\n            }\n        });\n        this.cache.clear();\n        this.transactionNodesPendingRemoval.clear();\n    }\n    getRenderer(templateId) {\n        const renderer = this.renderers.get(templateId);\n        if (!renderer) {\n            throw new Error(`No renderer found for ${templateId}`);\n        }\n        return renderer;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}