{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.with.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Range } from '../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nexport function provideInlineCompletions(_x, _x2, _x3, _x4) {\n  return _provideInlineCompletions.apply(this, arguments);\n}\nfunction _provideInlineCompletions() {\n  _provideInlineCompletions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(registry, position, model, context) {\n    var token,\n      languageConfigurationService,\n      defaultReplaceRange,\n      providers,\n      multiMap,\n      _iterator2,\n      _step2,\n      provider,\n      getPreferredProviders,\n      states,\n      seen,\n      findPreferredProviderCircle,\n      processProvider,\n      providerResults,\n      itemsByHash,\n      lists,\n      _iterator7,\n      _step7,\n      result,\n      completions,\n      list,\n      _iterator8,\n      _step8,\n      item,\n      inlineCompletionItem,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          processProvider = function _processProvider(provider) {\n            var state = states.get(provider);\n            if (state) {\n              return state;\n            }\n            var circle = findPreferredProviderCircle(provider, []);\n            if (circle) {\n              onUnexpectedExternalError(new Error(\"Inline completions: cyclic yield-to dependency detected. Path: \".concat(circle.map(function (s) {\n                return s.toString ? s.toString() : '' + s;\n              }).join(' -> '))));\n            }\n            var deferredPromise = new DeferredPromise();\n            states.set(provider, deferredPromise.p);\n            _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n              var preferred, _iterator6, _step6, p, result, completions;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    if (circle) {\n                      _context.next = 22;\n                      break;\n                    }\n                    preferred = getPreferredProviders(provider);\n                    _iterator6 = _createForOfIteratorHelper(preferred);\n                    _context.prev = 3;\n                    _iterator6.s();\n                  case 5:\n                    if ((_step6 = _iterator6.n()).done) {\n                      _context.next = 14;\n                      break;\n                    }\n                    p = _step6.value;\n                    _context.next = 9;\n                    return processProvider(p);\n                  case 9:\n                    result = _context.sent;\n                    if (!(result && result.items.length > 0)) {\n                      _context.next = 12;\n                      break;\n                    }\n                    return _context.abrupt(\"return\", undefined);\n                  case 12:\n                    _context.next = 5;\n                    break;\n                  case 14:\n                    _context.next = 19;\n                    break;\n                  case 16:\n                    _context.prev = 16;\n                    _context.t0 = _context[\"catch\"](3);\n                    _iterator6.e(_context.t0);\n                  case 19:\n                    _context.prev = 19;\n                    _iterator6.f();\n                    return _context.finish(19);\n                  case 22:\n                    _context.prev = 22;\n                    _context.next = 25;\n                    return provider.provideInlineCompletions(model, position, context, token);\n                  case 25:\n                    completions = _context.sent;\n                    return _context.abrupt(\"return\", completions);\n                  case 29:\n                    _context.prev = 29;\n                    _context.t1 = _context[\"catch\"](22);\n                    onUnexpectedExternalError(_context.t1);\n                    return _context.abrupt(\"return\", undefined);\n                  case 33:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee, null, [[3, 16, 19, 22], [22, 29]]);\n            }))().then(function (c) {\n              return deferredPromise.complete(c);\n            }, function (e) {\n              return deferredPromise.error(e);\n            });\n            return deferredPromise.p;\n          };\n          findPreferredProviderCircle = function _findPreferredProvide(provider, stack) {\n            stack = [].concat(_toConsumableArray(stack), [provider]);\n            if (seen.has(provider)) {\n              return stack;\n            }\n            seen.add(provider);\n            try {\n              var preferred = getPreferredProviders(provider);\n              var _iterator5 = _createForOfIteratorHelper(preferred),\n                _step5;\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var p = _step5.value;\n                  var c = findPreferredProviderCircle(p, stack);\n                  if (c) {\n                    return c;\n                  }\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n            } finally {\n              seen[\"delete\"](provider);\n            }\n            return undefined;\n          };\n          getPreferredProviders = function _getPreferredProvider(provider) {\n            if (!provider.yieldsToGroupIds) {\n              return [];\n            }\n            var result = [];\n            var _iterator3 = _createForOfIteratorHelper(provider.yieldsToGroupIds || []),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var groupId = _step3.value;\n                var _providers = multiMap.get(groupId);\n                var _iterator4 = _createForOfIteratorHelper(_providers),\n                  _step4;\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var p = _step4.value;\n                    result.push(p);\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            return result;\n          };\n          token = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : CancellationToken.None;\n          languageConfigurationService = _args3.length > 5 ? _args3[5] : undefined;\n          // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n          defaultReplaceRange = getDefaultRange(position, model);\n          providers = registry.all(model);\n          multiMap = new SetMap();\n          _iterator2 = _createForOfIteratorHelper(providers);\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              provider = _step2.value;\n              if (provider.groupId) {\n                multiMap.add(provider.groupId, provider);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          states = new Map();\n          seen = new Set();\n          _context3.next = 14;\n          return Promise.all(providers.map( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider) {\n              return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.t0 = provider;\n                    _context2.next = 3;\n                    return processProvider(provider);\n                  case 3:\n                    _context2.t1 = _context2.sent;\n                    return _context2.abrupt(\"return\", {\n                      provider: _context2.t0,\n                      completions: _context2.t1\n                    });\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function (_x5) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n        case 14:\n          providerResults = _context3.sent;\n          itemsByHash = new Map();\n          lists = [];\n          _iterator7 = _createForOfIteratorHelper(providerResults);\n          _context3.prev = 18;\n          _iterator7.s();\n        case 20:\n          if ((_step7 = _iterator7.n()).done) {\n            _context3.next = 31;\n            break;\n          }\n          result = _step7.value;\n          completions = result.completions;\n          if (completions) {\n            _context3.next = 25;\n            break;\n          }\n          return _context3.abrupt(\"continue\", 29);\n        case 25:\n          list = new InlineCompletionList(completions, result.provider);\n          lists.push(list);\n          _iterator8 = _createForOfIteratorHelper(completions.items);\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              item = _step8.value;\n              inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n              itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n        case 29:\n          _context3.next = 20;\n          break;\n        case 31:\n          _context3.next = 36;\n          break;\n        case 33:\n          _context3.prev = 33;\n          _context3.t0 = _context3[\"catch\"](18);\n          _iterator7.e(_context3.t0);\n        case 36:\n          _context3.prev = 36;\n          _iterator7.f();\n          return _context3.finish(36);\n        case 39:\n          return _context3.abrupt(\"return\", new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists));\n        case 40:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[18, 33, 36, 39]]);\n  }));\n  return _provideInlineCompletions.apply(this, arguments);\n}\nexport var InlineCompletionProviderResult = /*#__PURE__*/function () {\n  function InlineCompletionProviderResult(\n  /**\n   * Free of duplicates.\n   */\n  completions, hashs, providerResults) {\n    _classCallCheck(this, InlineCompletionProviderResult);\n    this.completions = completions;\n    this.hashs = hashs;\n    this.providerResults = providerResults;\n  }\n  return _createClass(InlineCompletionProviderResult, [{\n    key: \"has\",\n    value: function has(item) {\n      return this.hashs.has(item.hash());\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _iterator = _createForOfIteratorHelper(this.providerResults),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var result = _step.value;\n          result.removeRef();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n}();\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport var InlineCompletionList = /*#__PURE__*/function () {\n  function InlineCompletionList(inlineCompletions, provider) {\n    _classCallCheck(this, InlineCompletionList);\n    this.inlineCompletions = inlineCompletions;\n    this.provider = provider;\n    this.refCount = 1;\n  }\n  return _createClass(InlineCompletionList, [{\n    key: \"addRef\",\n    value: function addRef() {\n      this.refCount++;\n    }\n  }, {\n    key: \"removeRef\",\n    value: function removeRef() {\n      this.refCount--;\n      if (this.refCount === 0) {\n        this.provider.freeInlineCompletions(this.inlineCompletions);\n      }\n    }\n  }]);\n}();\nexport var InlineCompletionItem = /*#__PURE__*/function () {\n  function InlineCompletionItem(filterText, command, range, insertText, snippetInfo, additionalTextEdits,\n  /**\n   * A reference to the original inline completion this inline completion has been constructed from.\n   * Used for event data to ensure referential equality.\n  */\n  sourceInlineCompletion,\n  /**\n   * A reference to the original inline completion list this inline completion has been constructed from.\n   * Used for event data to ensure referential equality.\n  */\n  source) {\n    _classCallCheck(this, InlineCompletionItem);\n    this.filterText = filterText;\n    this.command = command;\n    this.range = range;\n    this.insertText = insertText;\n    this.snippetInfo = snippetInfo;\n    this.additionalTextEdits = additionalTextEdits;\n    this.sourceInlineCompletion = sourceInlineCompletion;\n    this.source = source;\n    filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n  }\n  return _createClass(InlineCompletionItem, [{\n    key: \"withRange\",\n    value: function withRange(updatedRange) {\n      return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash() {\n      return JSON.stringify({\n        insertText: this.insertText,\n        range: this.range.toString()\n      });\n    }\n  }], [{\n    key: \"from\",\n    value: function from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n      var insertText;\n      var snippetInfo;\n      var range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n      if (typeof inlineCompletion.insertText === 'string') {\n        insertText = inlineCompletion.insertText;\n        if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n          insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n          // Modify range depending on if brackets are added or removed\n          var diff = insertText.length - inlineCompletion.insertText.length;\n          if (diff !== 0) {\n            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n          }\n        }\n        snippetInfo = undefined;\n      } else if ('snippet' in inlineCompletion.insertText) {\n        var preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n        if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n          inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n          // Modify range depending on if brackets are added or removed\n          var _diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n          if (_diff !== 0) {\n            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + _diff);\n          }\n        }\n        var snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n        if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n          insertText = snippet.children[0].value;\n          snippetInfo = undefined;\n        } else {\n          insertText = snippet.toString();\n          snippetInfo = {\n            snippet: inlineCompletion.insertText.snippet,\n            range: range\n          };\n        }\n      } else {\n        assertNever(inlineCompletion.insertText);\n      }\n      return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n  }]);\n}();\nfunction getDefaultRange(position, model) {\n  var word = model.getWordAtPosition(position);\n  var maxColumn = model.getLineMaxColumn(position.lineNumber);\n  // By default, always replace up until the end of the current line.\n  // This default might be subject to change!\n  return word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn) : Range.fromPositions(position, position[\"with\"](undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n  var lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n  var newLine = lineStart + text;\n  var newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n  var slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n  if (!slicedTokens) {\n    return text;\n  }\n  var newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n  return newText;\n}","map":{"version":3,"names":["assertNever","DeferredPromise","CancellationToken","SetMap","onUnexpectedExternalError","Range","fixBracketsInLine","getReadonlyEmptyArray","SnippetParser","Text","provideInlineCompletions","_x","_x2","_x3","_x4","_provideInlineCompletions","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","registry","position","model","context","token","languageConfigurationService","defaultReplaceRange","providers","multiMap","_iterator2","_step2","provider","getPreferredProviders","states","seen","findPreferredProviderCircle","processProvider","providerResults","itemsByHash","lists","_iterator7","_step7","result","completions","list","_iterator8","_step8","item","inlineCompletionItem","_args3","wrap","_callee3$","_context3","prev","next","_processProvider","state","get","circle","Error","concat","map","s","toString","join","deferredPromise","set","p","_callee","preferred","_iterator6","_step6","_callee$","_context","_createForOfIteratorHelper","n","done","value","sent","items","length","abrupt","undefined","t0","e","f","finish","t1","stop","then","c","complete","error","_findPreferredProvide","stack","_toConsumableArray","has","add","_iterator5","_step5","err","_getPreferredProvider","yieldsToGroupIds","_iterator3","_step3","groupId","_iterator4","_step4","push","None","getDefaultRange","all","Map","Set","Promise","_ref2","_callee2","_callee2$","_context2","_x5","InlineCompletionList","InlineCompletionItem","from","hash","InlineCompletionProviderResult","Array","values","keys","hashs","_classCallCheck","_createClass","key","dispose","_iterator","_step","removeRef","inlineCompletions","refCount","addRef","freeInlineCompletions","filterText","command","range","insertText","snippetInfo","additionalTextEdits","sourceInlineCompletion","source","replace","withRange","updatedRange","JSON","stringify","inlineCompletion","textModel","lift","completeBracketPairs","closeBrackets","getStartPosition","diff","startLineNumber","startColumn","endLineNumber","endColumn","preBracketCompletionLength","snippet","parse","children","word","getWordAtPosition","maxColumn","getLineMaxColumn","lineNumber","fromPositions","text","lineStart","getLineContent","substring","column","newLine","newTokens","tokenization","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","newText"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Range } from '../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nexport async function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n    const defaultReplaceRange = getDefaultRange(position, model);\n    const providers = registry.all(model);\n    const multiMap = new SetMap();\n    for (const provider of providers) {\n        if (provider.groupId) {\n            multiMap.add(provider.groupId, provider);\n        }\n    }\n    function getPreferredProviders(provider) {\n        if (!provider.yieldsToGroupIds) {\n            return [];\n        }\n        const result = [];\n        for (const groupId of provider.yieldsToGroupIds || []) {\n            const providers = multiMap.get(groupId);\n            for (const p of providers) {\n                result.push(p);\n            }\n        }\n        return result;\n    }\n    const states = new Map();\n    const seen = new Set();\n    function findPreferredProviderCircle(provider, stack) {\n        stack = [...stack, provider];\n        if (seen.has(provider)) {\n            return stack;\n        }\n        seen.add(provider);\n        try {\n            const preferred = getPreferredProviders(provider);\n            for (const p of preferred) {\n                const c = findPreferredProviderCircle(p, stack);\n                if (c) {\n                    return c;\n                }\n            }\n        }\n        finally {\n            seen.delete(provider);\n        }\n        return undefined;\n    }\n    function processProvider(provider) {\n        const state = states.get(provider);\n        if (state) {\n            return state;\n        }\n        const circle = findPreferredProviderCircle(provider, []);\n        if (circle) {\n            onUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${circle.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n        }\n        const deferredPromise = new DeferredPromise();\n        states.set(provider, deferredPromise.p);\n        (async () => {\n            if (!circle) {\n                const preferred = getPreferredProviders(provider);\n                for (const p of preferred) {\n                    const result = await processProvider(p);\n                    if (result && result.items.length > 0) {\n                        // Skip provider\n                        return undefined;\n                    }\n                }\n            }\n            try {\n                const completions = await provider.provideInlineCompletions(model, position, context, token);\n                return completions;\n            }\n            catch (e) {\n                onUnexpectedExternalError(e);\n                return undefined;\n            }\n        })().then(c => deferredPromise.complete(c), e => deferredPromise.error(e));\n        return deferredPromise.p;\n    }\n    const providerResults = await Promise.all(providers.map(async (provider) => ({ provider, completions: await processProvider(provider) })));\n    const itemsByHash = new Map();\n    const lists = [];\n    for (const result of providerResults) {\n        const completions = result.completions;\n        if (!completions) {\n            continue;\n        }\n        const list = new InlineCompletionList(completions, result.provider);\n        lists.push(list);\n        for (const item of completions.items) {\n            const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n            itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n        }\n    }\n    return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\n}\nexport class InlineCompletionProviderResult {\n    constructor(\n    /**\n     * Free of duplicates.\n     */\n    completions, hashs, providerResults) {\n        this.completions = completions;\n        this.hashs = hashs;\n        this.providerResults = providerResults;\n    }\n    has(item) {\n        return this.hashs.has(item.hash());\n    }\n    dispose() {\n        for (const result of this.providerResults) {\n            result.removeRef();\n        }\n    }\n}\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineCompletionList {\n    constructor(inlineCompletions, provider) {\n        this.inlineCompletions = inlineCompletions;\n        this.provider = provider;\n        this.refCount = 1;\n    }\n    addRef() {\n        this.refCount++;\n    }\n    removeRef() {\n        this.refCount--;\n        if (this.refCount === 0) {\n            this.provider.freeInlineCompletions(this.inlineCompletions);\n        }\n    }\n}\nexport class InlineCompletionItem {\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n        let insertText;\n        let snippetInfo;\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n        if (typeof inlineCompletion.insertText === 'string') {\n            insertText = inlineCompletion.insertText;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = insertText.length - inlineCompletion.insertText.length;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            snippetInfo = undefined;\n        }\n        else if ('snippet' in inlineCompletion.insertText) {\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                insertText = snippet.children[0].value;\n                snippetInfo = undefined;\n            }\n            else {\n                insertText = snippet.toString();\n                snippetInfo = {\n                    snippet: inlineCompletion.insertText.snippet,\n                    range: range\n                };\n            }\n        }\n        else {\n            assertNever(inlineCompletion.insertText);\n        }\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \n    /**\n     * A reference to the original inline completion this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    sourceInlineCompletion, \n    /**\n     * A reference to the original inline completion list this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    source) {\n        this.filterText = filterText;\n        this.command = command;\n        this.range = range;\n        this.insertText = insertText;\n        this.snippetInfo = snippetInfo;\n        this.additionalTextEdits = additionalTextEdits;\n        this.sourceInlineCompletion = sourceInlineCompletion;\n        this.source = source;\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    }\n    withRange(updatedRange) {\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n    hash() {\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}