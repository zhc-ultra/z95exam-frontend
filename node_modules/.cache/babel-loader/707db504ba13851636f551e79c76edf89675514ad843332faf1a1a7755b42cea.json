{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from './trustedTypes.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport { logOnceWebWorkerWarning } from '../common/worker/simpleWorker.js';\nimport { Disposable, toDisposable } from '../common/lifecycle.js';\nvar ttPolicy = createTrustedTypesPolicy('defaultWorkerFactory', {\n  createScriptURL: function createScriptURL(value) {\n    return value;\n  }\n});\nfunction getWorker(label) {\n  var monacoEnvironment = globalThis.MonacoEnvironment;\n  if (monacoEnvironment) {\n    if (typeof monacoEnvironment.getWorker === 'function') {\n      return monacoEnvironment.getWorker('workerMain.js', label);\n    }\n    if (typeof monacoEnvironment.getWorkerUrl === 'function') {\n      var workerUrl = monacoEnvironment.getWorkerUrl('workerMain.js', label);\n      return new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) : workerUrl, {\n        name: label\n      });\n    }\n  }\n  // ESM-comment-begin\n  // \tif (typeof require === 'function') {\n  // \t\t// check if the JS lives on a different origin\n  // \t\tconst workerMain = require.toUrl('vs/base/worker/workerMain.js'); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n  // \t\tconst workerUrl = getWorkerBootstrapUrl(workerMain, label);\n  // \t\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) as unknown as string : workerUrl, { name: label });\n  // \t}\n  // ESM-comment-end\n  throw new Error(\"You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker\");\n}\n// ESM-comment-begin\n// export function getWorkerBootstrapUrl(scriptPath: string, label: string): string {\n// \tif (/^((http:)|(https:)|(file:))/.test(scriptPath) && scriptPath.substring(0, globalThis.origin.length) !== globalThis.origin) {\n// \t\t// this is the cross-origin case\n// \t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\n// \t\tconst myPath = 'vs/base/worker/defaultWorkerFactory.js';\n// \t\tconst workerBaseUrl = require.toUrl(myPath).slice(0, -myPath.length); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n// \t\tconst js = `/*${label}*/globalThis.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};const ttPolicy = globalThis.trustedTypes?.createPolicy('defaultWorkerFactory', { createScriptURL: value => value });importScripts(ttPolicy?.createScriptURL('${scriptPath}') ?? '${scriptPath}');/*${label}*/`;\n// \t\tconst blob = new Blob([js], { type: 'application/javascript' });\n// \t\treturn URL.createObjectURL(blob);\n// \t}\n// \n// \tconst start = scriptPath.lastIndexOf('?');\n// \tconst end = scriptPath.lastIndexOf('#', start);\n// \tconst params = start > 0\n// \t\t? new URLSearchParams(scriptPath.substring(start + 1, ~end ? end : undefined))\n// \t\t: new URLSearchParams();\n// \n// \tCOI.addSearchParam(params, true, true);\n// \tconst search = params.toString();\n// \n// \tif (!search) {\n// \t\treturn `${scriptPath}#${label}`;\n// \t} else {\n// \t\treturn `${scriptPath}?${params.toString()}#${label}`;\n// \t}\n// }\n// ESM-comment-end\nfunction isPromiseLike(obj) {\n  if (typeof obj.then === 'function') {\n    return true;\n  }\n  return false;\n}\n/**\n * A worker that uses HTML5 web workers so that is has\n * its own global scope and its own thread.\n */\nvar WebWorker = /*#__PURE__*/function (_Disposable) {\n  function WebWorker(moduleId, id, label, onMessageCallback, onErrorCallback) {\n    var _this;\n    _classCallCheck(this, WebWorker);\n    _this = _callSuper(this, WebWorker);\n    _this.id = id;\n    _this.label = label;\n    var workerOrPromise = getWorker(label);\n    if (isPromiseLike(workerOrPromise)) {\n      _this.worker = workerOrPromise;\n    } else {\n      _this.worker = Promise.resolve(workerOrPromise);\n    }\n    _this.postMessage(moduleId, []);\n    _this.worker.then(function (w) {\n      w.onmessage = function (ev) {\n        onMessageCallback(ev.data);\n      };\n      w.onmessageerror = onErrorCallback;\n      if (typeof w.addEventListener === 'function') {\n        w.addEventListener('error', onErrorCallback);\n      }\n    });\n    _this._register(toDisposable(function () {\n      var _a;\n      (_a = _this.worker) === null || _a === void 0 ? void 0 : _a.then(function (w) {\n        w.onmessage = null;\n        w.onmessageerror = null;\n        w.removeEventListener('error', onErrorCallback);\n        w.terminate();\n      });\n      _this.worker = null;\n    }));\n    return _this;\n  }\n  _inherits(WebWorker, _Disposable);\n  return _createClass(WebWorker, [{\n    key: \"getId\",\n    value: function getId() {\n      return this.id;\n    }\n  }, {\n    key: \"postMessage\",\n    value: function postMessage(message, transfer) {\n      var _this2 = this;\n      var _a;\n      (_a = this.worker) === null || _a === void 0 ? void 0 : _a.then(function (w) {\n        try {\n          w.postMessage(message, transfer);\n        } catch (err) {\n          onUnexpectedError(err);\n          onUnexpectedError(new Error(\"FAILED to post message to '\".concat(_this2.label, \"'-worker\"), {\n            cause: err\n          }));\n        }\n      });\n    }\n  }]);\n}(Disposable);\nexport var DefaultWorkerFactory = /*#__PURE__*/function () {\n  function DefaultWorkerFactory(label) {\n    _classCallCheck(this, DefaultWorkerFactory);\n    this._label = label;\n    this._webWorkerFailedBeforeError = false;\n  }\n  return _createClass(DefaultWorkerFactory, [{\n    key: \"create\",\n    value: function create(moduleId, onMessageCallback, onErrorCallback) {\n      var _this3 = this;\n      var workerId = ++DefaultWorkerFactory.LAST_WORKER_ID;\n      if (this._webWorkerFailedBeforeError) {\n        throw this._webWorkerFailedBeforeError;\n      }\n      return new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, function (err) {\n        logOnceWebWorkerWarning(err);\n        _this3._webWorkerFailedBeforeError = err;\n        onErrorCallback(err);\n      });\n    }\n  }]);\n}();\nDefaultWorkerFactory.LAST_WORKER_ID = 0;","map":{"version":3,"names":["createTrustedTypesPolicy","onUnexpectedError","logOnceWebWorkerWarning","Disposable","toDisposable","ttPolicy","createScriptURL","value","getWorker","label","monacoEnvironment","globalThis","MonacoEnvironment","getWorkerUrl","workerUrl","Worker","name","Error","isPromiseLike","obj","then","WebWorker","_Disposable","moduleId","id","onMessageCallback","onErrorCallback","_this","_classCallCheck","_callSuper","workerOrPromise","worker","Promise","resolve","postMessage","w","onmessage","ev","data","onmessageerror","addEventListener","_register","_a","removeEventListener","terminate","_inherits","_createClass","key","getId","message","transfer","_this2","err","concat","cause","DefaultWorkerFactory","_label","_webWorkerFailedBeforeError","create","_this3","workerId","LAST_WORKER_ID"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/base/browser/defaultWorkerFactory.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from './trustedTypes.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport { logOnceWebWorkerWarning } from '../common/worker/simpleWorker.js';\nimport { Disposable, toDisposable } from '../common/lifecycle.js';\nconst ttPolicy = createTrustedTypesPolicy('defaultWorkerFactory', { createScriptURL: value => value });\nfunction getWorker(label) {\n    const monacoEnvironment = globalThis.MonacoEnvironment;\n    if (monacoEnvironment) {\n        if (typeof monacoEnvironment.getWorker === 'function') {\n            return monacoEnvironment.getWorker('workerMain.js', label);\n        }\n        if (typeof monacoEnvironment.getWorkerUrl === 'function') {\n            const workerUrl = monacoEnvironment.getWorkerUrl('workerMain.js', label);\n            return new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) : workerUrl, { name: label });\n        }\n    }\n    // ESM-comment-begin\n    // \tif (typeof require === 'function') {\n    // \t\t// check if the JS lives on a different origin\n    // \t\tconst workerMain = require.toUrl('vs/base/worker/workerMain.js'); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n    // \t\tconst workerUrl = getWorkerBootstrapUrl(workerMain, label);\n    // \t\treturn new Worker(ttPolicy ? ttPolicy.createScriptURL(workerUrl) as unknown as string : workerUrl, { name: label });\n    // \t}\n    // ESM-comment-end\n    throw new Error(`You must define a function MonacoEnvironment.getWorkerUrl or MonacoEnvironment.getWorker`);\n}\n// ESM-comment-begin\n// export function getWorkerBootstrapUrl(scriptPath: string, label: string): string {\n// \tif (/^((http:)|(https:)|(file:))/.test(scriptPath) && scriptPath.substring(0, globalThis.origin.length) !== globalThis.origin) {\n// \t\t// this is the cross-origin case\n// \t\t// i.e. the webpage is running at a different origin than where the scripts are loaded from\n// \t\tconst myPath = 'vs/base/worker/defaultWorkerFactory.js';\n// \t\tconst workerBaseUrl = require.toUrl(myPath).slice(0, -myPath.length); // explicitly using require.toUrl(), see https://github.com/microsoft/vscode/issues/107440#issuecomment-698982321\n// \t\tconst js = `/*${label}*/globalThis.MonacoEnvironment={baseUrl: '${workerBaseUrl}'};const ttPolicy = globalThis.trustedTypes?.createPolicy('defaultWorkerFactory', { createScriptURL: value => value });importScripts(ttPolicy?.createScriptURL('${scriptPath}') ?? '${scriptPath}');/*${label}*/`;\n// \t\tconst blob = new Blob([js], { type: 'application/javascript' });\n// \t\treturn URL.createObjectURL(blob);\n// \t}\n// \n// \tconst start = scriptPath.lastIndexOf('?');\n// \tconst end = scriptPath.lastIndexOf('#', start);\n// \tconst params = start > 0\n// \t\t? new URLSearchParams(scriptPath.substring(start + 1, ~end ? end : undefined))\n// \t\t: new URLSearchParams();\n// \n// \tCOI.addSearchParam(params, true, true);\n// \tconst search = params.toString();\n// \n// \tif (!search) {\n// \t\treturn `${scriptPath}#${label}`;\n// \t} else {\n// \t\treturn `${scriptPath}?${params.toString()}#${label}`;\n// \t}\n// }\n// ESM-comment-end\nfunction isPromiseLike(obj) {\n    if (typeof obj.then === 'function') {\n        return true;\n    }\n    return false;\n}\n/**\n * A worker that uses HTML5 web workers so that is has\n * its own global scope and its own thread.\n */\nclass WebWorker extends Disposable {\n    constructor(moduleId, id, label, onMessageCallback, onErrorCallback) {\n        super();\n        this.id = id;\n        this.label = label;\n        const workerOrPromise = getWorker(label);\n        if (isPromiseLike(workerOrPromise)) {\n            this.worker = workerOrPromise;\n        }\n        else {\n            this.worker = Promise.resolve(workerOrPromise);\n        }\n        this.postMessage(moduleId, []);\n        this.worker.then((w) => {\n            w.onmessage = function (ev) {\n                onMessageCallback(ev.data);\n            };\n            w.onmessageerror = onErrorCallback;\n            if (typeof w.addEventListener === 'function') {\n                w.addEventListener('error', onErrorCallback);\n            }\n        });\n        this._register(toDisposable(() => {\n            var _a;\n            (_a = this.worker) === null || _a === void 0 ? void 0 : _a.then(w => {\n                w.onmessage = null;\n                w.onmessageerror = null;\n                w.removeEventListener('error', onErrorCallback);\n                w.terminate();\n            });\n            this.worker = null;\n        }));\n    }\n    getId() {\n        return this.id;\n    }\n    postMessage(message, transfer) {\n        var _a;\n        (_a = this.worker) === null || _a === void 0 ? void 0 : _a.then(w => {\n            try {\n                w.postMessage(message, transfer);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n                onUnexpectedError(new Error(`FAILED to post message to '${this.label}'-worker`, { cause: err }));\n            }\n        });\n    }\n}\nexport class DefaultWorkerFactory {\n    constructor(label) {\n        this._label = label;\n        this._webWorkerFailedBeforeError = false;\n    }\n    create(moduleId, onMessageCallback, onErrorCallback) {\n        const workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\n        if (this._webWorkerFailedBeforeError) {\n            throw this._webWorkerFailedBeforeError;\n        }\n        return new WebWorker(moduleId, workerId, this._label || 'anonymous' + workerId, onMessageCallback, (err) => {\n            logOnceWebWorkerWarning(err);\n            this._webWorkerFailedBeforeError = err;\n            onErrorCallback(err);\n        });\n    }\n}\nDefaultWorkerFactory.LAST_WORKER_ID = 0;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}