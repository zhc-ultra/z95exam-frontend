{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { DEFAULT_WORD_REGEXP, ensureValidWordDefinition } from '../core/wordHelper.js';\nimport { AutoClosingPairs } from './languageConfiguration.js';\nimport { createScopedLineTokens } from './supports.js';\nimport { CharacterPairSupport } from './supports/characterPair.js';\nimport { BracketElectricCharacterSupport } from './supports/electricCharacter.js';\nimport { IndentRulesSupport } from './supports/indentRules.js';\nimport { OnEnterSupport } from './supports/onEnter.js';\nimport { RichEditBrackets } from './supports/richEditBrackets.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ILanguageService } from './language.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { PLAINTEXT_LANGUAGE_ID } from './modesRegistry.js';\nimport { LanguageBracketsConfiguration } from './supports/languageBracketsConfiguration.js';\nexport var LanguageConfigurationServiceChangeEvent = /*#__PURE__*/function () {\n  function LanguageConfigurationServiceChangeEvent(languageId) {\n    _classCallCheck(this, LanguageConfigurationServiceChangeEvent);\n    this.languageId = languageId;\n  }\n  return _createClass(LanguageConfigurationServiceChangeEvent, [{\n    key: \"affects\",\n    value: function affects(languageId) {\n      return !this.languageId ? true : this.languageId === languageId;\n    }\n  }]);\n}();\nexport var ILanguageConfigurationService = createDecorator('languageConfigurationService');\nvar LanguageConfigurationService = /*#__PURE__*/function (_Disposable) {\n  function LanguageConfigurationService(configurationService, languageService) {\n    var _this;\n    _classCallCheck(this, LanguageConfigurationService);\n    _this = _callSuper(this, LanguageConfigurationService);\n    _this.configurationService = configurationService;\n    _this.languageService = languageService;\n    _this._registry = _this._register(new LanguageConfigurationRegistry());\n    _this.onDidChangeEmitter = _this._register(new Emitter());\n    _this.onDidChange = _this.onDidChangeEmitter.event;\n    _this.configurations = new Map();\n    var languageConfigKeys = new Set(Object.values(customizedLanguageConfigKeys));\n    _this._register(_this.configurationService.onDidChangeConfiguration(function (e) {\n      var globalConfigChanged = e.change.keys.some(function (k) {\n        return languageConfigKeys.has(k);\n      });\n      var localConfigChanged = e.change.overrides.filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          overrideLangName = _ref2[0],\n          keys = _ref2[1];\n        return keys.some(function (k) {\n          return languageConfigKeys.has(k);\n        });\n      }).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n          overrideLangName = _ref4[0];\n        return overrideLangName;\n      });\n      if (globalConfigChanged) {\n        _this.configurations.clear();\n        _this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(undefined));\n      } else {\n        var _iterator = _createForOfIteratorHelper(localConfigChanged),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var languageId = _step.value;\n            if (_this.languageService.isRegisteredLanguageId(languageId)) {\n              _this.configurations[\"delete\"](languageId);\n              _this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(languageId));\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }));\n    _this._register(_this._registry.onDidChange(function (e) {\n      _this.configurations[\"delete\"](e.languageId);\n      _this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(e.languageId));\n    }));\n    return _this;\n  }\n  _inherits(LanguageConfigurationService, _Disposable);\n  return _createClass(LanguageConfigurationService, [{\n    key: \"register\",\n    value: function register(languageId, configuration, priority) {\n      return this._registry.register(languageId, configuration, priority);\n    }\n  }, {\n    key: \"getLanguageConfiguration\",\n    value: function getLanguageConfiguration(languageId) {\n      var result = this.configurations.get(languageId);\n      if (!result) {\n        result = computeConfig(languageId, this._registry, this.configurationService, this.languageService);\n        this.configurations.set(languageId, result);\n      }\n      return result;\n    }\n  }]);\n}(Disposable);\nLanguageConfigurationService = __decorate([__param(0, IConfigurationService), __param(1, ILanguageService)], LanguageConfigurationService);\nexport { LanguageConfigurationService };\nfunction computeConfig(languageId, registry, configurationService, languageService) {\n  var languageConfig = registry.getLanguageConfiguration(languageId);\n  if (!languageConfig) {\n    if (!languageService.isRegisteredLanguageId(languageId)) {\n      // this happens for the null language, which can be returned by monarch.\n      // Instead of throwing an error, we just return a default config.\n      return new ResolvedLanguageConfiguration(languageId, {});\n    }\n    languageConfig = new ResolvedLanguageConfiguration(languageId, {});\n  }\n  var customizedConfig = getCustomizedLanguageConfig(languageConfig.languageId, configurationService);\n  var data = combineLanguageConfigurations([languageConfig.underlyingConfig, customizedConfig]);\n  var config = new ResolvedLanguageConfiguration(languageConfig.languageId, data);\n  return config;\n}\nvar customizedLanguageConfigKeys = {\n  brackets: 'editor.language.brackets',\n  colorizedBracketPairs: 'editor.language.colorizedBracketPairs'\n};\nfunction getCustomizedLanguageConfig(languageId, configurationService) {\n  var brackets = configurationService.getValue(customizedLanguageConfigKeys.brackets, {\n    overrideIdentifier: languageId\n  });\n  var colorizedBracketPairs = configurationService.getValue(customizedLanguageConfigKeys.colorizedBracketPairs, {\n    overrideIdentifier: languageId\n  });\n  return {\n    brackets: validateBracketPairs(brackets),\n    colorizedBracketPairs: validateBracketPairs(colorizedBracketPairs)\n  };\n}\nfunction validateBracketPairs(data) {\n  if (!Array.isArray(data)) {\n    return undefined;\n  }\n  return data.map(function (pair) {\n    if (!Array.isArray(pair) || pair.length !== 2) {\n      return undefined;\n    }\n    return [pair[0], pair[1]];\n  }).filter(function (p) {\n    return !!p;\n  });\n}\nexport function getIndentationAtPosition(model, lineNumber, column) {\n  var lineText = model.getLineContent(lineNumber);\n  var indentation = strings.getLeadingWhitespace(lineText);\n  if (indentation.length > column - 1) {\n    indentation = indentation.substring(0, column - 1);\n  }\n  return indentation;\n}\nexport function getScopedLineTokens(model, lineNumber, columnNumber) {\n  model.tokenization.forceTokenization(lineNumber);\n  var lineTokens = model.tokenization.getLineTokens(lineNumber);\n  var column = typeof columnNumber === 'undefined' ? model.getLineMaxColumn(lineNumber) - 1 : columnNumber - 1;\n  return createScopedLineTokens(lineTokens, column);\n}\nvar ComposedLanguageConfiguration = /*#__PURE__*/function () {\n  function ComposedLanguageConfiguration(languageId) {\n    _classCallCheck(this, ComposedLanguageConfiguration);\n    this.languageId = languageId;\n    this._resolved = null;\n    this._entries = [];\n    this._order = 0;\n    this._resolved = null;\n  }\n  return _createClass(ComposedLanguageConfiguration, [{\n    key: \"register\",\n    value: function register(configuration, priority) {\n      var _this2 = this;\n      var entry = new LanguageConfigurationContribution(configuration, priority, ++this._order);\n      this._entries.push(entry);\n      this._resolved = null;\n      return toDisposable(function () {\n        for (var i = 0; i < _this2._entries.length; i++) {\n          if (_this2._entries[i] === entry) {\n            _this2._entries.splice(i, 1);\n            _this2._resolved = null;\n            break;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getResolvedConfiguration\",\n    value: function getResolvedConfiguration() {\n      if (!this._resolved) {\n        var config = this._resolve();\n        if (config) {\n          this._resolved = new ResolvedLanguageConfiguration(this.languageId, config);\n        }\n      }\n      return this._resolved;\n    }\n  }, {\n    key: \"_resolve\",\n    value: function _resolve() {\n      if (this._entries.length === 0) {\n        return null;\n      }\n      this._entries.sort(LanguageConfigurationContribution.cmp);\n      return combineLanguageConfigurations(this._entries.map(function (e) {\n        return e.configuration;\n      }));\n    }\n  }]);\n}();\nfunction combineLanguageConfigurations(configs) {\n  var result = {\n    comments: undefined,\n    brackets: undefined,\n    wordPattern: undefined,\n    indentationRules: undefined,\n    onEnterRules: undefined,\n    autoClosingPairs: undefined,\n    surroundingPairs: undefined,\n    autoCloseBefore: undefined,\n    folding: undefined,\n    colorizedBracketPairs: undefined,\n    __electricCharacterSupport: undefined\n  };\n  var _iterator2 = _createForOfIteratorHelper(configs),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var entry = _step2.value;\n      result = {\n        comments: entry.comments || result.comments,\n        brackets: entry.brackets || result.brackets,\n        wordPattern: entry.wordPattern || result.wordPattern,\n        indentationRules: entry.indentationRules || result.indentationRules,\n        onEnterRules: entry.onEnterRules || result.onEnterRules,\n        autoClosingPairs: entry.autoClosingPairs || result.autoClosingPairs,\n        surroundingPairs: entry.surroundingPairs || result.surroundingPairs,\n        autoCloseBefore: entry.autoCloseBefore || result.autoCloseBefore,\n        folding: entry.folding || result.folding,\n        colorizedBracketPairs: entry.colorizedBracketPairs || result.colorizedBracketPairs,\n        __electricCharacterSupport: entry.__electricCharacterSupport || result.__electricCharacterSupport\n      };\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return result;\n}\nvar LanguageConfigurationContribution = /*#__PURE__*/function () {\n  function LanguageConfigurationContribution(configuration, priority, order) {\n    _classCallCheck(this, LanguageConfigurationContribution);\n    this.configuration = configuration;\n    this.priority = priority;\n    this.order = order;\n  }\n  return _createClass(LanguageConfigurationContribution, null, [{\n    key: \"cmp\",\n    value: function cmp(a, b) {\n      if (a.priority === b.priority) {\n        // higher order last\n        return a.order - b.order;\n      }\n      // higher priority last\n      return a.priority - b.priority;\n    }\n  }]);\n}();\nexport var LanguageConfigurationChangeEvent = /*#__PURE__*/_createClass(function LanguageConfigurationChangeEvent(languageId) {\n  _classCallCheck(this, LanguageConfigurationChangeEvent);\n  this.languageId = languageId;\n});\nexport var LanguageConfigurationRegistry = /*#__PURE__*/function (_Disposable2) {\n  function LanguageConfigurationRegistry() {\n    var _this3;\n    _classCallCheck(this, LanguageConfigurationRegistry);\n    _this3 = _callSuper(this, LanguageConfigurationRegistry);\n    _this3._entries = new Map();\n    _this3._onDidChange = _this3._register(new Emitter());\n    _this3.onDidChange = _this3._onDidChange.event;\n    _this3._register(_this3.register(PLAINTEXT_LANGUAGE_ID, {\n      brackets: [['(', ')'], ['[', ']'], ['{', '}']],\n      surroundingPairs: [{\n        open: '{',\n        close: '}'\n      }, {\n        open: '[',\n        close: ']'\n      }, {\n        open: '(',\n        close: ')'\n      }, {\n        open: '<',\n        close: '>'\n      }, {\n        open: '\\\"',\n        close: '\\\"'\n      }, {\n        open: '\\'',\n        close: '\\''\n      }, {\n        open: '`',\n        close: '`'\n      }],\n      colorizedBracketPairs: [],\n      folding: {\n        offSide: true\n      }\n    }, 0));\n    return _this3;\n  }\n  /**\n   * @param priority Use a higher number for higher priority\n   */\n  _inherits(LanguageConfigurationRegistry, _Disposable2);\n  return _createClass(LanguageConfigurationRegistry, [{\n    key: \"register\",\n    value: function register(languageId, configuration) {\n      var _this4 = this;\n      var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var entries = this._entries.get(languageId);\n      if (!entries) {\n        entries = new ComposedLanguageConfiguration(languageId);\n        this._entries.set(languageId, entries);\n      }\n      var disposable = entries.register(configuration, priority);\n      this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n      return toDisposable(function () {\n        disposable.dispose();\n        _this4._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n      });\n    }\n  }, {\n    key: \"getLanguageConfiguration\",\n    value: function getLanguageConfiguration(languageId) {\n      var entries = this._entries.get(languageId);\n      return (entries === null || entries === void 0 ? void 0 : entries.getResolvedConfiguration()) || null;\n    }\n  }]);\n}(Disposable);\n/**\n * Immutable.\n*/\nexport var ResolvedLanguageConfiguration = /*#__PURE__*/function () {\n  function ResolvedLanguageConfiguration(languageId, underlyingConfig) {\n    _classCallCheck(this, ResolvedLanguageConfiguration);\n    this.languageId = languageId;\n    this.underlyingConfig = underlyingConfig;\n    this._brackets = null;\n    this._electricCharacter = null;\n    this._onEnterSupport = this.underlyingConfig.brackets || this.underlyingConfig.indentationRules || this.underlyingConfig.onEnterRules ? new OnEnterSupport(this.underlyingConfig) : null;\n    this.comments = ResolvedLanguageConfiguration._handleComments(this.underlyingConfig);\n    this.characterPair = new CharacterPairSupport(this.underlyingConfig);\n    this.wordDefinition = this.underlyingConfig.wordPattern || DEFAULT_WORD_REGEXP;\n    this.indentationRules = this.underlyingConfig.indentationRules;\n    if (this.underlyingConfig.indentationRules) {\n      this.indentRulesSupport = new IndentRulesSupport(this.underlyingConfig.indentationRules);\n    } else {\n      this.indentRulesSupport = null;\n    }\n    this.foldingRules = this.underlyingConfig.folding || {};\n    this.bracketsNew = new LanguageBracketsConfiguration(languageId, this.underlyingConfig);\n  }\n  return _createClass(ResolvedLanguageConfiguration, [{\n    key: \"getWordDefinition\",\n    value: function getWordDefinition() {\n      return ensureValidWordDefinition(this.wordDefinition);\n    }\n  }, {\n    key: \"brackets\",\n    get: function get() {\n      if (!this._brackets && this.underlyingConfig.brackets) {\n        this._brackets = new RichEditBrackets(this.languageId, this.underlyingConfig.brackets);\n      }\n      return this._brackets;\n    }\n  }, {\n    key: \"electricCharacter\",\n    get: function get() {\n      if (!this._electricCharacter) {\n        this._electricCharacter = new BracketElectricCharacterSupport(this.brackets);\n      }\n      return this._electricCharacter;\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n      if (!this._onEnterSupport) {\n        return null;\n      }\n      return this._onEnterSupport.onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText);\n    }\n  }, {\n    key: \"getAutoClosingPairs\",\n    value: function getAutoClosingPairs() {\n      return new AutoClosingPairs(this.characterPair.getAutoClosingPairs());\n    }\n  }, {\n    key: \"getAutoCloseBeforeSet\",\n    value: function getAutoCloseBeforeSet(forQuotes) {\n      return this.characterPair.getAutoCloseBeforeSet(forQuotes);\n    }\n  }, {\n    key: \"getSurroundingPairs\",\n    value: function getSurroundingPairs() {\n      return this.characterPair.getSurroundingPairs();\n    }\n  }], [{\n    key: \"_handleComments\",\n    value: function _handleComments(conf) {\n      var commentRule = conf.comments;\n      if (!commentRule) {\n        return null;\n      }\n      // comment configuration\n      var comments = {};\n      if (commentRule.lineComment) {\n        comments.lineCommentToken = commentRule.lineComment;\n      }\n      if (commentRule.blockComment) {\n        var _commentRule$blockCom = _slicedToArray(commentRule.blockComment, 2),\n          blockStart = _commentRule$blockCom[0],\n          blockEnd = _commentRule$blockCom[1];\n        comments.blockCommentStartToken = blockStart;\n        comments.blockCommentEndToken = blockEnd;\n      }\n      return comments;\n    }\n  }]);\n}();\nregisterSingleton(ILanguageConfigurationService, LanguageConfigurationService, 1 /* InstantiationType.Delayed */);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","Emitter","Disposable","toDisposable","strings","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","AutoClosingPairs","createScopedLineTokens","CharacterPairSupport","BracketElectricCharacterSupport","IndentRulesSupport","OnEnterSupport","RichEditBrackets","createDecorator","IConfigurationService","ILanguageService","registerSingleton","PLAINTEXT_LANGUAGE_ID","LanguageBracketsConfiguration","LanguageConfigurationServiceChangeEvent","languageId","_classCallCheck","_createClass","value","affects","ILanguageConfigurationService","LanguageConfigurationService","_Disposable","configurationService","languageService","_this","_callSuper","_registry","_register","LanguageConfigurationRegistry","onDidChangeEmitter","onDidChange","event","configurations","Map","languageConfigKeys","Set","values","customizedLanguageConfigKeys","onDidChangeConfiguration","e","globalConfigChanged","change","keys","some","k","has","localConfigChanged","overrides","filter","_ref","_ref2","_slicedToArray","overrideLangName","map","_ref3","_ref4","clear","fire","undefined","_iterator","_createForOfIteratorHelper","_step","s","n","done","isRegisteredLanguageId","err","f","_inherits","register","configuration","priority","getLanguageConfiguration","result","get","computeConfig","set","registry","languageConfig","ResolvedLanguageConfiguration","customizedConfig","getCustomizedLanguageConfig","data","combineLanguageConfigurations","underlyingConfig","config","brackets","colorizedBracketPairs","getValue","overrideIdentifier","validateBracketPairs","Array","isArray","pair","p","getIndentationAtPosition","model","lineNumber","column","lineText","getLineContent","indentation","getLeadingWhitespace","substring","getScopedLineTokens","columnNumber","tokenization","forceTokenization","lineTokens","getLineTokens","getLineMaxColumn","ComposedLanguageConfiguration","_resolved","_entries","_order","_this2","entry","LanguageConfigurationContribution","push","splice","getResolvedConfiguration","_resolve","sort","cmp","configs","comments","wordPattern","indentationRules","onEnterRules","autoClosingPairs","surroundingPairs","autoCloseBefore","folding","__electricCharacterSupport","_iterator2","_step2","order","a","b","LanguageConfigurationChangeEvent","_Disposable2","_this3","_onDidChange","open","close","offSide","_this4","entries","disposable","dispose","_brackets","_electricCharacter","_onEnterSupport","_handleComments","characterPair","wordDefinition","indentRulesSupport","foldingRules","bracketsNew","getWordDefinition","onEnter","autoIndent","previousLineText","beforeEnterText","afterEnterText","getAutoClosingPairs","getAutoCloseBeforeSet","forQuotes","getSurroundingPairs","conf","commentRule","lineComment","lineCommentToken","blockComment","_commentRule$blockCom","blockStart","blockEnd","blockCommentStartToken","blockCommentEndToken"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { DEFAULT_WORD_REGEXP, ensureValidWordDefinition } from '../core/wordHelper.js';\nimport { AutoClosingPairs } from './languageConfiguration.js';\nimport { createScopedLineTokens } from './supports.js';\nimport { CharacterPairSupport } from './supports/characterPair.js';\nimport { BracketElectricCharacterSupport } from './supports/electricCharacter.js';\nimport { IndentRulesSupport } from './supports/indentRules.js';\nimport { OnEnterSupport } from './supports/onEnter.js';\nimport { RichEditBrackets } from './supports/richEditBrackets.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ILanguageService } from './language.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { PLAINTEXT_LANGUAGE_ID } from './modesRegistry.js';\nimport { LanguageBracketsConfiguration } from './supports/languageBracketsConfiguration.js';\nexport class LanguageConfigurationServiceChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n    affects(languageId) {\n        return !this.languageId ? true : this.languageId === languageId;\n    }\n}\nexport const ILanguageConfigurationService = createDecorator('languageConfigurationService');\nlet LanguageConfigurationService = class LanguageConfigurationService extends Disposable {\n    constructor(configurationService, languageService) {\n        super();\n        this.configurationService = configurationService;\n        this.languageService = languageService;\n        this._registry = this._register(new LanguageConfigurationRegistry());\n        this.onDidChangeEmitter = this._register(new Emitter());\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.configurations = new Map();\n        const languageConfigKeys = new Set(Object.values(customizedLanguageConfigKeys));\n        this._register(this.configurationService.onDidChangeConfiguration((e) => {\n            const globalConfigChanged = e.change.keys.some((k) => languageConfigKeys.has(k));\n            const localConfigChanged = e.change.overrides\n                .filter(([overrideLangName, keys]) => keys.some((k) => languageConfigKeys.has(k)))\n                .map(([overrideLangName]) => overrideLangName);\n            if (globalConfigChanged) {\n                this.configurations.clear();\n                this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(undefined));\n            }\n            else {\n                for (const languageId of localConfigChanged) {\n                    if (this.languageService.isRegisteredLanguageId(languageId)) {\n                        this.configurations.delete(languageId);\n                        this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(languageId));\n                    }\n                }\n            }\n        }));\n        this._register(this._registry.onDidChange((e) => {\n            this.configurations.delete(e.languageId);\n            this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(e.languageId));\n        }));\n    }\n    register(languageId, configuration, priority) {\n        return this._registry.register(languageId, configuration, priority);\n    }\n    getLanguageConfiguration(languageId) {\n        let result = this.configurations.get(languageId);\n        if (!result) {\n            result = computeConfig(languageId, this._registry, this.configurationService, this.languageService);\n            this.configurations.set(languageId, result);\n        }\n        return result;\n    }\n};\nLanguageConfigurationService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, ILanguageService)\n], LanguageConfigurationService);\nexport { LanguageConfigurationService };\nfunction computeConfig(languageId, registry, configurationService, languageService) {\n    let languageConfig = registry.getLanguageConfiguration(languageId);\n    if (!languageConfig) {\n        if (!languageService.isRegisteredLanguageId(languageId)) {\n            // this happens for the null language, which can be returned by monarch.\n            // Instead of throwing an error, we just return a default config.\n            return new ResolvedLanguageConfiguration(languageId, {});\n        }\n        languageConfig = new ResolvedLanguageConfiguration(languageId, {});\n    }\n    const customizedConfig = getCustomizedLanguageConfig(languageConfig.languageId, configurationService);\n    const data = combineLanguageConfigurations([languageConfig.underlyingConfig, customizedConfig]);\n    const config = new ResolvedLanguageConfiguration(languageConfig.languageId, data);\n    return config;\n}\nconst customizedLanguageConfigKeys = {\n    brackets: 'editor.language.brackets',\n    colorizedBracketPairs: 'editor.language.colorizedBracketPairs'\n};\nfunction getCustomizedLanguageConfig(languageId, configurationService) {\n    const brackets = configurationService.getValue(customizedLanguageConfigKeys.brackets, {\n        overrideIdentifier: languageId,\n    });\n    const colorizedBracketPairs = configurationService.getValue(customizedLanguageConfigKeys.colorizedBracketPairs, {\n        overrideIdentifier: languageId,\n    });\n    return {\n        brackets: validateBracketPairs(brackets),\n        colorizedBracketPairs: validateBracketPairs(colorizedBracketPairs),\n    };\n}\nfunction validateBracketPairs(data) {\n    if (!Array.isArray(data)) {\n        return undefined;\n    }\n    return data.map(pair => {\n        if (!Array.isArray(pair) || pair.length !== 2) {\n            return undefined;\n        }\n        return [pair[0], pair[1]];\n    }).filter((p) => !!p);\n}\nexport function getIndentationAtPosition(model, lineNumber, column) {\n    const lineText = model.getLineContent(lineNumber);\n    let indentation = strings.getLeadingWhitespace(lineText);\n    if (indentation.length > column - 1) {\n        indentation = indentation.substring(0, column - 1);\n    }\n    return indentation;\n}\nexport function getScopedLineTokens(model, lineNumber, columnNumber) {\n    model.tokenization.forceTokenization(lineNumber);\n    const lineTokens = model.tokenization.getLineTokens(lineNumber);\n    const column = (typeof columnNumber === 'undefined' ? model.getLineMaxColumn(lineNumber) - 1 : columnNumber - 1);\n    return createScopedLineTokens(lineTokens, column);\n}\nclass ComposedLanguageConfiguration {\n    constructor(languageId) {\n        this.languageId = languageId;\n        this._resolved = null;\n        this._entries = [];\n        this._order = 0;\n        this._resolved = null;\n    }\n    register(configuration, priority) {\n        const entry = new LanguageConfigurationContribution(configuration, priority, ++this._order);\n        this._entries.push(entry);\n        this._resolved = null;\n        return toDisposable(() => {\n            for (let i = 0; i < this._entries.length; i++) {\n                if (this._entries[i] === entry) {\n                    this._entries.splice(i, 1);\n                    this._resolved = null;\n                    break;\n                }\n            }\n        });\n    }\n    getResolvedConfiguration() {\n        if (!this._resolved) {\n            const config = this._resolve();\n            if (config) {\n                this._resolved = new ResolvedLanguageConfiguration(this.languageId, config);\n            }\n        }\n        return this._resolved;\n    }\n    _resolve() {\n        if (this._entries.length === 0) {\n            return null;\n        }\n        this._entries.sort(LanguageConfigurationContribution.cmp);\n        return combineLanguageConfigurations(this._entries.map(e => e.configuration));\n    }\n}\nfunction combineLanguageConfigurations(configs) {\n    let result = {\n        comments: undefined,\n        brackets: undefined,\n        wordPattern: undefined,\n        indentationRules: undefined,\n        onEnterRules: undefined,\n        autoClosingPairs: undefined,\n        surroundingPairs: undefined,\n        autoCloseBefore: undefined,\n        folding: undefined,\n        colorizedBracketPairs: undefined,\n        __electricCharacterSupport: undefined,\n    };\n    for (const entry of configs) {\n        result = {\n            comments: entry.comments || result.comments,\n            brackets: entry.brackets || result.brackets,\n            wordPattern: entry.wordPattern || result.wordPattern,\n            indentationRules: entry.indentationRules || result.indentationRules,\n            onEnterRules: entry.onEnterRules || result.onEnterRules,\n            autoClosingPairs: entry.autoClosingPairs || result.autoClosingPairs,\n            surroundingPairs: entry.surroundingPairs || result.surroundingPairs,\n            autoCloseBefore: entry.autoCloseBefore || result.autoCloseBefore,\n            folding: entry.folding || result.folding,\n            colorizedBracketPairs: entry.colorizedBracketPairs || result.colorizedBracketPairs,\n            __electricCharacterSupport: entry.__electricCharacterSupport || result.__electricCharacterSupport,\n        };\n    }\n    return result;\n}\nclass LanguageConfigurationContribution {\n    constructor(configuration, priority, order) {\n        this.configuration = configuration;\n        this.priority = priority;\n        this.order = order;\n    }\n    static cmp(a, b) {\n        if (a.priority === b.priority) {\n            // higher order last\n            return a.order - b.order;\n        }\n        // higher priority last\n        return a.priority - b.priority;\n    }\n}\nexport class LanguageConfigurationChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n}\nexport class LanguageConfigurationRegistry extends Disposable {\n    constructor() {\n        super();\n        this._entries = new Map();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._register(this.register(PLAINTEXT_LANGUAGE_ID, {\n            brackets: [\n                ['(', ')'],\n                ['[', ']'],\n                ['{', '}'],\n            ],\n            surroundingPairs: [\n                { open: '{', close: '}' },\n                { open: '[', close: ']' },\n                { open: '(', close: ')' },\n                { open: '<', close: '>' },\n                { open: '\\\"', close: '\\\"' },\n                { open: '\\'', close: '\\'' },\n                { open: '`', close: '`' },\n            ],\n            colorizedBracketPairs: [],\n            folding: {\n                offSide: true\n            }\n        }, 0));\n    }\n    /**\n     * @param priority Use a higher number for higher priority\n     */\n    register(languageId, configuration, priority = 0) {\n        let entries = this._entries.get(languageId);\n        if (!entries) {\n            entries = new ComposedLanguageConfiguration(languageId);\n            this._entries.set(languageId, entries);\n        }\n        const disposable = entries.register(configuration, priority);\n        this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        return toDisposable(() => {\n            disposable.dispose();\n            this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        });\n    }\n    getLanguageConfiguration(languageId) {\n        const entries = this._entries.get(languageId);\n        return (entries === null || entries === void 0 ? void 0 : entries.getResolvedConfiguration()) || null;\n    }\n}\n/**\n * Immutable.\n*/\nexport class ResolvedLanguageConfiguration {\n    constructor(languageId, underlyingConfig) {\n        this.languageId = languageId;\n        this.underlyingConfig = underlyingConfig;\n        this._brackets = null;\n        this._electricCharacter = null;\n        this._onEnterSupport =\n            this.underlyingConfig.brackets ||\n                this.underlyingConfig.indentationRules ||\n                this.underlyingConfig.onEnterRules\n                ? new OnEnterSupport(this.underlyingConfig)\n                : null;\n        this.comments = ResolvedLanguageConfiguration._handleComments(this.underlyingConfig);\n        this.characterPair = new CharacterPairSupport(this.underlyingConfig);\n        this.wordDefinition = this.underlyingConfig.wordPattern || DEFAULT_WORD_REGEXP;\n        this.indentationRules = this.underlyingConfig.indentationRules;\n        if (this.underlyingConfig.indentationRules) {\n            this.indentRulesSupport = new IndentRulesSupport(this.underlyingConfig.indentationRules);\n        }\n        else {\n            this.indentRulesSupport = null;\n        }\n        this.foldingRules = this.underlyingConfig.folding || {};\n        this.bracketsNew = new LanguageBracketsConfiguration(languageId, this.underlyingConfig);\n    }\n    getWordDefinition() {\n        return ensureValidWordDefinition(this.wordDefinition);\n    }\n    get brackets() {\n        if (!this._brackets && this.underlyingConfig.brackets) {\n            this._brackets = new RichEditBrackets(this.languageId, this.underlyingConfig.brackets);\n        }\n        return this._brackets;\n    }\n    get electricCharacter() {\n        if (!this._electricCharacter) {\n            this._electricCharacter = new BracketElectricCharacterSupport(this.brackets);\n        }\n        return this._electricCharacter;\n    }\n    onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n        if (!this._onEnterSupport) {\n            return null;\n        }\n        return this._onEnterSupport.onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText);\n    }\n    getAutoClosingPairs() {\n        return new AutoClosingPairs(this.characterPair.getAutoClosingPairs());\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n        return this.characterPair.getAutoCloseBeforeSet(forQuotes);\n    }\n    getSurroundingPairs() {\n        return this.characterPair.getSurroundingPairs();\n    }\n    static _handleComments(conf) {\n        const commentRule = conf.comments;\n        if (!commentRule) {\n            return null;\n        }\n        // comment configuration\n        const comments = {};\n        if (commentRule.lineComment) {\n            comments.lineCommentToken = commentRule.lineComment;\n        }\n        if (commentRule.blockComment) {\n            const [blockStart, blockEnd] = commentRule.blockComment;\n            comments.blockCommentStartToken = blockStart;\n            comments.blockCommentEndToken = blockEnd;\n        }\n        return comments;\n    }\n}\nregisterSingleton(ILanguageConfigurationService, LanguageConfigurationService, 1 /* InstantiationType.Delayed */);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}