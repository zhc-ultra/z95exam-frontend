{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.create.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var ColorZone = /*#__PURE__*/function () {\n  function ColorZone(from, to, colorId) {\n    _classCallCheck(this, ColorZone);\n    this._colorZoneBrand = undefined;\n    this.from = from | 0;\n    this.to = to | 0;\n    this.colorId = colorId | 0;\n  }\n  return _createClass(ColorZone, null, [{\n    key: \"compare\",\n    value: function compare(a, b) {\n      if (a.colorId === b.colorId) {\n        if (a.from === b.from) {\n          return a.to - b.to;\n        }\n        return a.from - b.from;\n      }\n      return a.colorId - b.colorId;\n    }\n  }]);\n}();\n/**\n * A zone in the overview ruler\n */\nexport var OverviewRulerZone = /*#__PURE__*/function () {\n  function OverviewRulerZone(startLineNumber, endLineNumber, heightInLines, color) {\n    _classCallCheck(this, OverviewRulerZone);\n    this._overviewRulerZoneBrand = undefined;\n    this.startLineNumber = startLineNumber;\n    this.endLineNumber = endLineNumber;\n    this.heightInLines = heightInLines;\n    this.color = color;\n    this._colorZone = null;\n  }\n  return _createClass(OverviewRulerZone, [{\n    key: \"setColorZone\",\n    value: function setColorZone(colorZone) {\n      this._colorZone = colorZone;\n    }\n  }, {\n    key: \"getColorZones\",\n    value: function getColorZones() {\n      return this._colorZone;\n    }\n  }], [{\n    key: \"compare\",\n    value: function compare(a, b) {\n      if (a.color === b.color) {\n        if (a.startLineNumber === b.startLineNumber) {\n          if (a.heightInLines === b.heightInLines) {\n            return a.endLineNumber - b.endLineNumber;\n          }\n          return a.heightInLines - b.heightInLines;\n        }\n        return a.startLineNumber - b.startLineNumber;\n      }\n      return a.color < b.color ? -1 : 1;\n    }\n  }]);\n}();\nexport var OverviewZoneManager = /*#__PURE__*/function () {\n  function OverviewZoneManager(getVerticalOffsetForLine) {\n    _classCallCheck(this, OverviewZoneManager);\n    this._getVerticalOffsetForLine = getVerticalOffsetForLine;\n    this._zones = [];\n    this._colorZonesInvalid = false;\n    this._lineHeight = 0;\n    this._domWidth = 0;\n    this._domHeight = 0;\n    this._outerHeight = 0;\n    this._pixelRatio = 1;\n    this._lastAssignedId = 0;\n    this._color2Id = Object.create(null);\n    this._id2Color = [];\n  }\n  return _createClass(OverviewZoneManager, [{\n    key: \"getId2Color\",\n    value: function getId2Color() {\n      return this._id2Color;\n    }\n  }, {\n    key: \"setZones\",\n    value: function setZones(newZones) {\n      this._zones = newZones;\n      this._zones.sort(OverviewRulerZone.compare);\n    }\n  }, {\n    key: \"setLineHeight\",\n    value: function setLineHeight(lineHeight) {\n      if (this._lineHeight === lineHeight) {\n        return false;\n      }\n      this._lineHeight = lineHeight;\n      this._colorZonesInvalid = true;\n      return true;\n    }\n  }, {\n    key: \"setPixelRatio\",\n    value: function setPixelRatio(pixelRatio) {\n      this._pixelRatio = pixelRatio;\n      this._colorZonesInvalid = true;\n    }\n  }, {\n    key: \"getDOMWidth\",\n    value: function getDOMWidth() {\n      return this._domWidth;\n    }\n  }, {\n    key: \"getCanvasWidth\",\n    value: function getCanvasWidth() {\n      return this._domWidth * this._pixelRatio;\n    }\n  }, {\n    key: \"setDOMWidth\",\n    value: function setDOMWidth(width) {\n      if (this._domWidth === width) {\n        return false;\n      }\n      this._domWidth = width;\n      this._colorZonesInvalid = true;\n      return true;\n    }\n  }, {\n    key: \"getDOMHeight\",\n    value: function getDOMHeight() {\n      return this._domHeight;\n    }\n  }, {\n    key: \"getCanvasHeight\",\n    value: function getCanvasHeight() {\n      return this._domHeight * this._pixelRatio;\n    }\n  }, {\n    key: \"setDOMHeight\",\n    value: function setDOMHeight(height) {\n      if (this._domHeight === height) {\n        return false;\n      }\n      this._domHeight = height;\n      this._colorZonesInvalid = true;\n      return true;\n    }\n  }, {\n    key: \"getOuterHeight\",\n    value: function getOuterHeight() {\n      return this._outerHeight;\n    }\n  }, {\n    key: \"setOuterHeight\",\n    value: function setOuterHeight(outerHeight) {\n      if (this._outerHeight === outerHeight) {\n        return false;\n      }\n      this._outerHeight = outerHeight;\n      this._colorZonesInvalid = true;\n      return true;\n    }\n  }, {\n    key: \"resolveColorZones\",\n    value: function resolveColorZones() {\n      var colorZonesInvalid = this._colorZonesInvalid;\n      var lineHeight = Math.floor(this._lineHeight);\n      var totalHeight = Math.floor(this.getCanvasHeight());\n      var outerHeight = Math.floor(this._outerHeight);\n      var heightRatio = totalHeight / outerHeight;\n      var halfMinimumHeight = Math.floor(4 /* Constants.MINIMUM_HEIGHT */ * this._pixelRatio / 2);\n      var allColorZones = [];\n      for (var i = 0, len = this._zones.length; i < len; i++) {\n        var zone = this._zones[i];\n        if (!colorZonesInvalid) {\n          var _colorZone = zone.getColorZones();\n          if (_colorZone) {\n            allColorZones.push(_colorZone);\n            continue;\n          }\n        }\n        var offset1 = this._getVerticalOffsetForLine(zone.startLineNumber);\n        var offset2 = zone.heightInLines === 0 ? this._getVerticalOffsetForLine(zone.endLineNumber) + lineHeight : offset1 + zone.heightInLines * lineHeight;\n        var y1 = Math.floor(heightRatio * offset1);\n        var y2 = Math.floor(heightRatio * offset2);\n        var ycenter = Math.floor((y1 + y2) / 2);\n        var halfHeight = y2 - ycenter;\n        if (halfHeight < halfMinimumHeight) {\n          halfHeight = halfMinimumHeight;\n        }\n        if (ycenter - halfHeight < 0) {\n          ycenter = halfHeight;\n        }\n        if (ycenter + halfHeight > totalHeight) {\n          ycenter = totalHeight - halfHeight;\n        }\n        var color = zone.color;\n        var colorId = this._color2Id[color];\n        if (!colorId) {\n          colorId = ++this._lastAssignedId;\n          this._color2Id[color] = colorId;\n          this._id2Color[colorId] = color;\n        }\n        var colorZone = new ColorZone(ycenter - halfHeight, ycenter + halfHeight, colorId);\n        zone.setColorZone(colorZone);\n        allColorZones.push(colorZone);\n      }\n      this._colorZonesInvalid = false;\n      allColorZones.sort(ColorZone.compare);\n      return allColorZones;\n    }\n  }]);\n}();","map":{"version":3,"names":["ColorZone","from","to","colorId","_classCallCheck","_colorZoneBrand","undefined","_createClass","key","value","compare","a","b","OverviewRulerZone","startLineNumber","endLineNumber","heightInLines","color","_overviewRulerZoneBrand","_colorZone","setColorZone","colorZone","getColorZones","OverviewZoneManager","getVerticalOffsetForLine","_getVerticalOffsetForLine","_zones","_colorZonesInvalid","_lineHeight","_domWidth","_domHeight","_outerHeight","_pixelRatio","_lastAssignedId","_color2Id","Object","create","_id2Color","getId2Color","setZones","newZones","sort","setLineHeight","lineHeight","setPixelRatio","pixelRatio","getDOMWidth","getCanvasWidth","setDOMWidth","width","getDOMHeight","getCanvasHeight","setDOMHeight","height","getOuterHeight","setOuterHeight","outerHeight","resolveColorZones","colorZonesInvalid","Math","floor","totalHeight","heightRatio","halfMinimumHeight","allColorZones","i","len","length","zone","push","offset1","offset2","y1","y2","ycenter","halfHeight"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/viewModel/overviewZoneManager.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ColorZone {\n    constructor(from, to, colorId) {\n        this._colorZoneBrand = undefined;\n        this.from = from | 0;\n        this.to = to | 0;\n        this.colorId = colorId | 0;\n    }\n    static compare(a, b) {\n        if (a.colorId === b.colorId) {\n            if (a.from === b.from) {\n                return a.to - b.to;\n            }\n            return a.from - b.from;\n        }\n        return a.colorId - b.colorId;\n    }\n}\n/**\n * A zone in the overview ruler\n */\nexport class OverviewRulerZone {\n    constructor(startLineNumber, endLineNumber, heightInLines, color) {\n        this._overviewRulerZoneBrand = undefined;\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n        this.heightInLines = heightInLines;\n        this.color = color;\n        this._colorZone = null;\n    }\n    static compare(a, b) {\n        if (a.color === b.color) {\n            if (a.startLineNumber === b.startLineNumber) {\n                if (a.heightInLines === b.heightInLines) {\n                    return a.endLineNumber - b.endLineNumber;\n                }\n                return a.heightInLines - b.heightInLines;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        }\n        return a.color < b.color ? -1 : 1;\n    }\n    setColorZone(colorZone) {\n        this._colorZone = colorZone;\n    }\n    getColorZones() {\n        return this._colorZone;\n    }\n}\nexport class OverviewZoneManager {\n    constructor(getVerticalOffsetForLine) {\n        this._getVerticalOffsetForLine = getVerticalOffsetForLine;\n        this._zones = [];\n        this._colorZonesInvalid = false;\n        this._lineHeight = 0;\n        this._domWidth = 0;\n        this._domHeight = 0;\n        this._outerHeight = 0;\n        this._pixelRatio = 1;\n        this._lastAssignedId = 0;\n        this._color2Id = Object.create(null);\n        this._id2Color = [];\n    }\n    getId2Color() {\n        return this._id2Color;\n    }\n    setZones(newZones) {\n        this._zones = newZones;\n        this._zones.sort(OverviewRulerZone.compare);\n    }\n    setLineHeight(lineHeight) {\n        if (this._lineHeight === lineHeight) {\n            return false;\n        }\n        this._lineHeight = lineHeight;\n        this._colorZonesInvalid = true;\n        return true;\n    }\n    setPixelRatio(pixelRatio) {\n        this._pixelRatio = pixelRatio;\n        this._colorZonesInvalid = true;\n    }\n    getDOMWidth() {\n        return this._domWidth;\n    }\n    getCanvasWidth() {\n        return this._domWidth * this._pixelRatio;\n    }\n    setDOMWidth(width) {\n        if (this._domWidth === width) {\n            return false;\n        }\n        this._domWidth = width;\n        this._colorZonesInvalid = true;\n        return true;\n    }\n    getDOMHeight() {\n        return this._domHeight;\n    }\n    getCanvasHeight() {\n        return this._domHeight * this._pixelRatio;\n    }\n    setDOMHeight(height) {\n        if (this._domHeight === height) {\n            return false;\n        }\n        this._domHeight = height;\n        this._colorZonesInvalid = true;\n        return true;\n    }\n    getOuterHeight() {\n        return this._outerHeight;\n    }\n    setOuterHeight(outerHeight) {\n        if (this._outerHeight === outerHeight) {\n            return false;\n        }\n        this._outerHeight = outerHeight;\n        this._colorZonesInvalid = true;\n        return true;\n    }\n    resolveColorZones() {\n        const colorZonesInvalid = this._colorZonesInvalid;\n        const lineHeight = Math.floor(this._lineHeight);\n        const totalHeight = Math.floor(this.getCanvasHeight());\n        const outerHeight = Math.floor(this._outerHeight);\n        const heightRatio = totalHeight / outerHeight;\n        const halfMinimumHeight = Math.floor(4 /* Constants.MINIMUM_HEIGHT */ * this._pixelRatio / 2);\n        const allColorZones = [];\n        for (let i = 0, len = this._zones.length; i < len; i++) {\n            const zone = this._zones[i];\n            if (!colorZonesInvalid) {\n                const colorZone = zone.getColorZones();\n                if (colorZone) {\n                    allColorZones.push(colorZone);\n                    continue;\n                }\n            }\n            const offset1 = this._getVerticalOffsetForLine(zone.startLineNumber);\n            const offset2 = (zone.heightInLines === 0\n                ? this._getVerticalOffsetForLine(zone.endLineNumber) + lineHeight\n                : offset1 + zone.heightInLines * lineHeight);\n            const y1 = Math.floor(heightRatio * offset1);\n            const y2 = Math.floor(heightRatio * offset2);\n            let ycenter = Math.floor((y1 + y2) / 2);\n            let halfHeight = (y2 - ycenter);\n            if (halfHeight < halfMinimumHeight) {\n                halfHeight = halfMinimumHeight;\n            }\n            if (ycenter - halfHeight < 0) {\n                ycenter = halfHeight;\n            }\n            if (ycenter + halfHeight > totalHeight) {\n                ycenter = totalHeight - halfHeight;\n            }\n            const color = zone.color;\n            let colorId = this._color2Id[color];\n            if (!colorId) {\n                colorId = (++this._lastAssignedId);\n                this._color2Id[color] = colorId;\n                this._id2Color[colorId] = color;\n            }\n            const colorZone = new ColorZone(ycenter - halfHeight, ycenter + halfHeight, colorId);\n            zone.setColorZone(colorZone);\n            allColorZones.push(colorZone);\n        }\n        this._colorZonesInvalid = false;\n        allColorZones.sort(ColorZone.compare);\n        return allColorZones;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}