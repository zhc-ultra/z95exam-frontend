{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport var ViewContentWidgets = /*#__PURE__*/function (_ViewPart) {\n  function ViewContentWidgets(context, viewDomNode) {\n    var _this;\n    _classCallCheck(this, ViewContentWidgets);\n    _this = _callSuper(this, ViewContentWidgets, [context]);\n    _this._viewDomNode = viewDomNode;\n    _this._widgets = {};\n    _this.domNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this.domNode, 1 /* PartFingerprint.ContentWidgets */);\n    _this.domNode.setClassName('contentWidgets');\n    _this.domNode.setPosition('absolute');\n    _this.domNode.setTop(0);\n    _this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(_this.overflowingContentWidgetsDomNode, 2 /* PartFingerprint.OverflowingContentWidgets */);\n    _this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n    return _this;\n  }\n  _inherits(ViewContentWidgets, _ViewPart);\n  return _createClass(ViewContentWidgets, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ViewContentWidgets.prototype), \"dispose\", this).call(this);\n      this._widgets = {};\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var keys = Object.keys(this._widgets);\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n        var widgetId = _keys[_i];\n        this._widgets[widgetId].onConfigurationChanged(e);\n      }\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      // true for inline decorations that can end up relayouting text\n      return true;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLineMappingChanged\",\n    value: function onLineMappingChanged(e) {\n      this._updateAnchorsViewPositions();\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      this._updateAnchorsViewPositions();\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      this._updateAnchorsViewPositions();\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      this._updateAnchorsViewPositions();\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n    // ---- end view event handlers\n  }, {\n    key: \"_updateAnchorsViewPositions\",\n    value: function _updateAnchorsViewPositions() {\n      var keys = Object.keys(this._widgets);\n      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n        var widgetId = _keys2[_i2];\n        this._widgets[widgetId].updateAnchorViewPosition();\n      }\n    }\n  }, {\n    key: \"addWidget\",\n    value: function addWidget(_widget) {\n      var myWidget = new Widget(this._context, this._viewDomNode, _widget);\n      this._widgets[myWidget.id] = myWidget;\n      if (myWidget.allowEditorOverflow) {\n        this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n      } else {\n        this.domNode.appendChild(myWidget.domNode);\n      }\n      this.setShouldRender();\n    }\n  }, {\n    key: \"setWidgetPosition\",\n    value: function setWidgetPosition(widget, primaryAnchor, secondaryAnchor, preference, affinity) {\n      var myWidget = this._widgets[widget.getId()];\n      myWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n      this.setShouldRender();\n    }\n  }, {\n    key: \"removeWidget\",\n    value: function removeWidget(widget) {\n      var widgetId = widget.getId();\n      if (this._widgets.hasOwnProperty(widgetId)) {\n        var myWidget = this._widgets[widgetId];\n        delete this._widgets[widgetId];\n        var domNode = myWidget.domNode.domNode;\n        domNode.parentNode.removeChild(domNode);\n        domNode.removeAttribute('monaco-visible-content-widget');\n        this.setShouldRender();\n      }\n    }\n  }, {\n    key: \"shouldSuppressMouseDownOnWidget\",\n    value: function shouldSuppressMouseDownOnWidget(widgetId) {\n      if (this._widgets.hasOwnProperty(widgetId)) {\n        return this._widgets[widgetId].suppressMouseDown;\n      }\n      return false;\n    }\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender(viewportData) {\n      var keys = Object.keys(this._widgets);\n      for (var _i3 = 0, _keys3 = keys; _i3 < _keys3.length; _i3++) {\n        var widgetId = _keys3[_i3];\n        this._widgets[widgetId].onBeforeRender(viewportData);\n      }\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      var keys = Object.keys(this._widgets);\n      for (var _i4 = 0, _keys4 = keys; _i4 < _keys4.length; _i4++) {\n        var widgetId = _keys4[_i4];\n        this._widgets[widgetId].prepareRender(ctx);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      var keys = Object.keys(this._widgets);\n      for (var _i5 = 0, _keys5 = keys; _i5 < _keys5.length; _i5++) {\n        var widgetId = _keys5[_i5];\n        this._widgets[widgetId].render(ctx);\n      }\n    }\n  }]);\n}(ViewPart);\nvar Widget = /*#__PURE__*/function () {\n  function Widget(context, viewDomNode, actual) {\n    _classCallCheck(this, Widget);\n    this._primaryAnchor = new PositionPair(null, null);\n    this._secondaryAnchor = new PositionPair(null, null);\n    this._context = context;\n    this._viewDomNode = viewDomNode;\n    this._actual = actual;\n    this.domNode = createFastDomNode(this._actual.getDomNode());\n    this.id = this._actual.getId();\n    this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n    this.suppressMouseDown = this._actual.suppressMouseDown || false;\n    var options = this._context.configuration.options;\n    var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n    this._fixedOverflowWidgets = options.get(42 /* EditorOption.fixedOverflowWidgets */);\n    this._contentWidth = layoutInfo.contentWidth;\n    this._contentLeft = layoutInfo.contentLeft;\n    this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n    this._affinity = null;\n    this._preference = [];\n    this._cachedDomNodeOffsetWidth = -1;\n    this._cachedDomNodeOffsetHeight = -1;\n    this._maxWidth = this._getMaxWidth();\n    this._isVisible = false;\n    this._renderData = null;\n    this.domNode.setPosition(this._fixedOverflowWidgets && this.allowEditorOverflow ? 'fixed' : 'absolute');\n    this.domNode.setDisplay('none');\n    this.domNode.setVisibility('hidden');\n    this.domNode.setAttribute('widgetId', this.id);\n    this.domNode.setMaxWidth(this._maxWidth);\n  }\n  return _createClass(Widget, [{\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n      if (e.hasChanged(145 /* EditorOption.layoutInfo */)) {\n        var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._maxWidth = this._getMaxWidth();\n      }\n    }\n  }, {\n    key: \"updateAnchorViewPosition\",\n    value: function updateAnchorViewPosition() {\n      this._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n    }\n  }, {\n    key: \"_setPosition\",\n    value: function _setPosition(affinity, primaryAnchor, secondaryAnchor) {\n      this._affinity = affinity;\n      this._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n      this._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n      function getValidPositionPair(position, viewModel, affinity) {\n        if (!position) {\n          return new PositionPair(null, null);\n        }\n        // Do not trust that widgets give a valid position\n        var validModelPosition = viewModel.model.validatePosition(position);\n        if (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n          var viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity !== null && affinity !== void 0 ? affinity : undefined);\n          return new PositionPair(position, viewPosition);\n        }\n        return new PositionPair(position, null);\n      }\n    }\n  }, {\n    key: \"_getMaxWidth\",\n    value: function _getMaxWidth() {\n      var elDocument = this.domNode.domNode.ownerDocument;\n      var elWindow = elDocument.defaultView;\n      return this.allowEditorOverflow ? (elWindow === null || elWindow === void 0 ? void 0 : elWindow.innerWidth) || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth : this._contentWidth;\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(primaryAnchor, secondaryAnchor, preference, affinity) {\n      this._setPosition(affinity, primaryAnchor, secondaryAnchor);\n      this._preference = preference;\n      if (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n        // this content widget would like to be visible if possible\n        // we change it from `display:none` to `display:block` even if it\n        // might be outside the viewport such that we can measure its size\n        // in `prepareRender`\n        this.domNode.setDisplay('block');\n      } else {\n        this.domNode.setDisplay('none');\n      }\n      this._cachedDomNodeOffsetWidth = -1;\n      this._cachedDomNodeOffsetHeight = -1;\n    }\n  }, {\n    key: \"_layoutBoxInViewport\",\n    value: function _layoutBoxInViewport(anchor, width, height, ctx) {\n      // Our visible box is split horizontally by the current line => 2 boxes\n      // a) the box above the line\n      var aboveLineTop = anchor.top;\n      var heightAvailableAboveLine = aboveLineTop;\n      // b) the box under the line\n      var underLineTop = anchor.top + anchor.height;\n      var heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n      var aboveTop = aboveLineTop - height;\n      var fitsAbove = heightAvailableAboveLine >= height;\n      var belowTop = underLineTop;\n      var fitsBelow = heightAvailableUnderLine >= height;\n      // And its left\n      var left = anchor.left;\n      if (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n        left = ctx.scrollLeft + ctx.viewportWidth - width;\n      }\n      if (left < ctx.scrollLeft) {\n        left = ctx.scrollLeft;\n      }\n      return {\n        fitsAbove: fitsAbove,\n        aboveTop: aboveTop,\n        fitsBelow: fitsBelow,\n        belowTop: belowTop,\n        left: left\n      };\n    }\n  }, {\n    key: \"_layoutHorizontalSegmentInPage\",\n    value: function _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n      var _a;\n      // Leave some clearance to the left/right\n      var LEFT_PADDING = 15;\n      var RIGHT_PADDING = 15;\n      // Initially, the limits are defined as the dom node limits\n      var MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n      var MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n      var elDocument = this._viewDomNode.domNode.ownerDocument;\n      var elWindow = elDocument.defaultView;\n      var absoluteLeft = domNodePosition.left + left - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollX) !== null && _a !== void 0 ? _a : 0);\n      if (absoluteLeft + width > MAX_LIMIT) {\n        var delta = absoluteLeft - (MAX_LIMIT - width);\n        absoluteLeft -= delta;\n        left -= delta;\n      }\n      if (absoluteLeft < MIN_LIMIT) {\n        var _delta = absoluteLeft - MIN_LIMIT;\n        absoluteLeft -= _delta;\n        left -= _delta;\n      }\n      return [left, absoluteLeft];\n    }\n  }, {\n    key: \"_layoutBoxInPage\",\n    value: function _layoutBoxInPage(anchor, width, height, ctx) {\n      var _a, _b;\n      var aboveTop = anchor.top - height;\n      var belowTop = anchor.top + anchor.height;\n      var domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n      var elDocument = this._viewDomNode.domNode.ownerDocument;\n      var elWindow = elDocument.defaultView;\n      var absoluteAboveTop = domNodePosition.top + aboveTop - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _a !== void 0 ? _a : 0);\n      var absoluteBelowTop = domNodePosition.top + belowTop - ((_b = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _b !== void 0 ? _b : 0);\n      var windowSize = dom.getClientArea(elDocument.body);\n      var _this$_layoutHorizont = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width),\n        _this$_layoutHorizont2 = _slicedToArray(_this$_layoutHorizont, 2),\n        left = _this$_layoutHorizont2[0],\n        absoluteAboveLeft = _this$_layoutHorizont2[1];\n      // Leave some clearance to the top/bottom\n      var TOP_PADDING = 22;\n      var BOTTOM_PADDING = 22;\n      var fitsAbove = absoluteAboveTop >= TOP_PADDING;\n      var fitsBelow = absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING;\n      if (this._fixedOverflowWidgets) {\n        return {\n          fitsAbove: fitsAbove,\n          aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n          fitsBelow: fitsBelow,\n          belowTop: absoluteBelowTop,\n          left: absoluteAboveLeft\n        };\n      }\n      return {\n        fitsAbove: fitsAbove,\n        aboveTop: aboveTop,\n        fitsBelow: fitsBelow,\n        belowTop: belowTop,\n        left: left\n      };\n    }\n  }, {\n    key: \"_prepareRenderWidgetAtExactPositionOverflowing\",\n    value: function _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n      return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\n     * Compute the coordinates above and below the primary and secondary anchors.\n     * The content widget *must* touch the primary anchor.\n     * The content widget should touch if possible the secondary anchor.\n     */\n  }, {\n    key: \"_getAnchorsCoordinates\",\n    value: function _getAnchorsCoordinates(ctx) {\n      var _a, _b;\n      var primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity, this._lineHeight);\n      var secondaryViewPosition = ((_a = this._secondaryAnchor.viewPosition) === null || _a === void 0 ? void 0 : _a.lineNumber) === ((_b = this._primaryAnchor.viewPosition) === null || _b === void 0 ? void 0 : _b.lineNumber) ? this._secondaryAnchor.viewPosition : null;\n      var secondary = getCoordinates(secondaryViewPosition, this._affinity, this._lineHeight);\n      return {\n        primary: primary,\n        secondary: secondary\n      };\n      function getCoordinates(position, affinity, lineHeight) {\n        if (!position) {\n          return null;\n        }\n        var horizontalPosition = ctx.visibleRangeForPosition(position);\n        if (!horizontalPosition) {\n          return null;\n        }\n        // Left-align widgets that should appear :before content\n        var left = position.column === 1 && affinity === 3 /* PositionAffinity.LeftOfInjectedText */ ? 0 : horizontalPosition.left;\n        var top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n        return new AnchorCoordinate(top, left, lineHeight);\n      }\n    }\n  }, {\n    key: \"_reduceAnchorCoordinates\",\n    value: function _reduceAnchorCoordinates(primary, secondary, width) {\n      if (!secondary) {\n        return primary;\n      }\n      var fontInfo = this._context.configuration.options.get(50 /* EditorOption.fontInfo */);\n      var left = secondary.left;\n      if (left < primary.left) {\n        left = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n      } else {\n        left = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n      }\n      return new AnchorCoordinate(primary.top, left, primary.height);\n    }\n  }, {\n    key: \"_prepareRenderWidget\",\n    value: function _prepareRenderWidget(ctx) {\n      if (!this._preference || this._preference.length === 0) {\n        return null;\n      }\n      var _this$_getAnchorsCoor = this._getAnchorsCoordinates(ctx),\n        primary = _this$_getAnchorsCoor.primary,\n        secondary = _this$_getAnchorsCoor.secondary;\n      if (!primary) {\n        return null;\n      }\n      if (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n        var preferredDimensions = null;\n        if (typeof this._actual.beforeRender === 'function') {\n          preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n        }\n        if (preferredDimensions) {\n          this._cachedDomNodeOffsetWidth = preferredDimensions.width;\n          this._cachedDomNodeOffsetHeight = preferredDimensions.height;\n        } else {\n          var domNode = this.domNode.domNode;\n          var clientRect = domNode.getBoundingClientRect();\n          this._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n          this._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n        }\n      }\n      var anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n      var placement;\n      if (this.allowEditorOverflow) {\n        placement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n      } else {\n        placement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n      }\n      // Do two passes, first for perfect fit, second picks first option\n      for (var pass = 1; pass <= 2; pass++) {\n        var _iterator = _createForOfIteratorHelper(this._preference),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var pref = _step.value;\n            // placement\n            if (pref === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n              if (!placement) {\n                // Widget outside of viewport\n                return null;\n              }\n              if (pass === 2 || placement.fitsAbove) {\n                return {\n                  coordinate: new Coordinate(placement.aboveTop, placement.left),\n                  position: 1 /* ContentWidgetPositionPreference.ABOVE */\n                };\n              }\n            } else if (pref === 2 /* ContentWidgetPositionPreference.BELOW */) {\n              if (!placement) {\n                // Widget outside of viewport\n                return null;\n              }\n              if (pass === 2 || placement.fitsBelow) {\n                return {\n                  coordinate: new Coordinate(placement.belowTop, placement.left),\n                  position: 2 /* ContentWidgetPositionPreference.BELOW */\n                };\n              }\n            } else {\n              if (this.allowEditorOverflow) {\n                return {\n                  coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)),\n                  position: 0 /* ContentWidgetPositionPreference.EXACT */\n                };\n              } else {\n                return {\n                  coordinate: new Coordinate(anchor.top, anchor.left),\n                  position: 0 /* ContentWidgetPositionPreference.EXACT */\n                };\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return null;\n    }\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender(viewportData) {\n      if (!this._primaryAnchor.viewPosition || !this._preference) {\n        return;\n      }\n      if (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n        // Outside of viewport\n        return;\n      }\n      this.domNode.setMaxWidth(this._maxWidth);\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      this._renderData = this._prepareRenderWidget(ctx);\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      if (!this._renderData) {\n        // This widget should be invisible\n        if (this._isVisible) {\n          this.domNode.removeAttribute('monaco-visible-content-widget');\n          this._isVisible = false;\n          this.domNode.setVisibility('hidden');\n        }\n        if (typeof this._actual.afterRender === 'function') {\n          safeInvoke(this._actual.afterRender, this._actual, null);\n        }\n        return;\n      }\n      // This widget should be visible\n      if (this.allowEditorOverflow) {\n        this.domNode.setTop(this._renderData.coordinate.top);\n        this.domNode.setLeft(this._renderData.coordinate.left);\n      } else {\n        this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n        this.domNode.setLeft(this._renderData.coordinate.left);\n      }\n      if (!this._isVisible) {\n        this.domNode.setVisibility('inherit');\n        this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n        this._isVisible = true;\n      }\n      if (typeof this._actual.afterRender === 'function') {\n        safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n      }\n    }\n  }]);\n}();\nvar PositionPair = /*#__PURE__*/_createClass(function PositionPair(modelPosition, viewPosition) {\n  _classCallCheck(this, PositionPair);\n  this.modelPosition = modelPosition;\n  this.viewPosition = viewPosition;\n});\nvar Coordinate = /*#__PURE__*/_createClass(function Coordinate(top, left) {\n  _classCallCheck(this, Coordinate);\n  this.top = top;\n  this.left = left;\n  this._coordinateBrand = undefined;\n});\nvar AnchorCoordinate = /*#__PURE__*/_createClass(function AnchorCoordinate(top, left, height) {\n  _classCallCheck(this, AnchorCoordinate);\n  this.top = top;\n  this.left = left;\n  this.height = height;\n  this._anchorCoordinateBrand = undefined;\n});\nfunction safeInvoke(fn, thisArg) {\n  try {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return fn.call.apply(fn, [thisArg].concat(args));\n  } catch (_a) {\n    // ignore\n    return null;\n  }\n}","map":{"version":3,"names":["dom","createFastDomNode","PartFingerprints","ViewPart","ViewContentWidgets","_ViewPart","context","viewDomNode","_this","_classCallCheck","_callSuper","_viewDomNode","_widgets","domNode","document","createElement","write","setClassName","setPosition","setTop","overflowingContentWidgetsDomNode","_inherits","_createClass","key","value","dispose","_get","_getPrototypeOf","prototype","call","onConfigurationChanged","e","keys","Object","_i","_keys","length","widgetId","onDecorationsChanged","onFlushed","onLineMappingChanged","_updateAnchorsViewPositions","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","onZonesChanged","_i2","_keys2","updateAnchorViewPosition","addWidget","_widget","myWidget","Widget","_context","id","allowEditorOverflow","appendChild","setShouldRender","setWidgetPosition","widget","primaryAnchor","secondaryAnchor","preference","affinity","getId","removeWidget","hasOwnProperty","parentNode","removeChild","removeAttribute","shouldSuppressMouseDownOnWidget","suppressMouseDown","onBeforeRender","viewportData","_i3","_keys3","prepareRender","ctx","_i4","_keys4","render","_i5","_keys5","actual","_primaryAnchor","PositionPair","_secondaryAnchor","_actual","getDomNode","options","configuration","layoutInfo","get","_fixedOverflowWidgets","_contentWidth","contentWidth","_contentLeft","contentLeft","_lineHeight","_affinity","_preference","_cachedDomNodeOffsetWidth","_cachedDomNodeOffsetHeight","_maxWidth","_getMaxWidth","_isVisible","_renderData","setDisplay","setVisibility","setAttribute","setMaxWidth","hasChanged","_setPosition","modelPosition","getValidPositionPair","viewModel","position","validModelPosition","model","validatePosition","coordinatesConverter","modelPositionIsVisible","viewPosition","convertModelPositionToViewPosition","undefined","elDocument","ownerDocument","elWindow","defaultView","innerWidth","documentElement","offsetWidth","body","_layoutBoxInViewport","anchor","width","height","aboveLineTop","top","heightAvailableAboveLine","underLineTop","heightAvailableUnderLine","viewportHeight","aboveTop","fitsAbove","belowTop","fitsBelow","left","scrollLeft","viewportWidth","_layoutHorizontalSegmentInPage","windowSize","domNodePosition","_a","LEFT_PADDING","RIGHT_PADDING","MIN_LIMIT","Math","max","MAX_LIMIT","min","absoluteLeft","scrollX","delta","_layoutBoxInPage","_b","getDomNodePagePosition","absoluteAboveTop","scrollY","absoluteBelowTop","getClientArea","_this$_layoutHorizont","_this$_layoutHorizont2","_slicedToArray","absoluteAboveLeft","TOP_PADDING","BOTTOM_PADDING","_prepareRenderWidgetAtExactPositionOverflowing","topLeft","Coordinate","_getAnchorsCoordinates","primary","getCoordinates","secondaryViewPosition","lineNumber","secondary","lineHeight","horizontalPosition","visibleRangeForPosition","column","getVerticalOffsetForLineNumber","scrollTop","AnchorCoordinate","_reduceAnchorCoordinates","fontInfo","typicalFullwidthCharacterWidth","_prepareRenderWidget","_this$_getAnchorsCoor","preferredDimensions","beforeRender","safeInvoke","clientRect","getBoundingClientRect","round","placement","pass","_iterator","_createForOfIteratorHelper","_step","s","n","done","pref","coordinate","err","f","startLineNumber","endLineNumber","afterRender","setLeft","bigNumbersDelta","_coordinateBrand","_anchorCoordinateBrand","fn","thisArg","_len","arguments","args","Array","_key","apply","concat"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewContentWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        this._widgets = {};\n        this.domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.domNode, 1 /* PartFingerprint.ContentWidgets */);\n        this.domNode.setClassName('contentWidgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingContentWidgetsDomNode, 2 /* PartFingerprint.OverflowingContentWidgets */);\n        this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLineMappingChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesDeleted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesInserted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _updateAnchorsViewPositions() {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].updateAnchorViewPosition();\n        }\n    }\n    addWidget(_widget) {\n        const myWidget = new Widget(this._context, this._viewDomNode, _widget);\n        this._widgets[myWidget.id] = myWidget;\n        if (myWidget.allowEditorOverflow) {\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n        }\n        else {\n            this.domNode.appendChild(myWidget.domNode);\n        }\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, primaryAnchor, secondaryAnchor, preference, affinity) {\n        const myWidget = this._widgets[widget.getId()];\n        myWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n        this.setShouldRender();\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const myWidget = this._widgets[widgetId];\n            delete this._widgets[widgetId];\n            const domNode = myWidget.domNode.domNode;\n            domNode.parentNode.removeChild(domNode);\n            domNode.removeAttribute('monaco-visible-content-widget');\n            this.setShouldRender();\n        }\n    }\n    shouldSuppressMouseDownOnWidget(widgetId) {\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            return this._widgets[widgetId].suppressMouseDown;\n        }\n        return false;\n    }\n    onBeforeRender(viewportData) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onBeforeRender(viewportData);\n        }\n    }\n    prepareRender(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].render(ctx);\n        }\n    }\n}\nclass Widget {\n    constructor(context, viewDomNode, actual) {\n        this._primaryAnchor = new PositionPair(null, null);\n        this._secondaryAnchor = new PositionPair(null, null);\n        this._context = context;\n        this._viewDomNode = viewDomNode;\n        this._actual = actual;\n        this.domNode = createFastDomNode(this._actual.getDomNode());\n        this.id = this._actual.getId();\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._fixedOverflowWidgets = options.get(42 /* EditorOption.fixedOverflowWidgets */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this._affinity = null;\n        this._preference = [];\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n        this._maxWidth = this._getMaxWidth();\n        this._isVisible = false;\n        this._renderData = null;\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n        this.domNode.setDisplay('none');\n        this.domNode.setVisibility('hidden');\n        this.domNode.setAttribute('widgetId', this.id);\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        if (e.hasChanged(145 /* EditorOption.layoutInfo */)) {\n            const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n            this._contentLeft = layoutInfo.contentLeft;\n            this._contentWidth = layoutInfo.contentWidth;\n            this._maxWidth = this._getMaxWidth();\n        }\n    }\n    updateAnchorViewPosition() {\n        this._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n    }\n    _setPosition(affinity, primaryAnchor, secondaryAnchor) {\n        this._affinity = affinity;\n        this._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n        this._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n        function getValidPositionPair(position, viewModel, affinity) {\n            if (!position) {\n                return new PositionPair(null, null);\n            }\n            // Do not trust that widgets give a valid position\n            const validModelPosition = viewModel.model.validatePosition(position);\n            if (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity !== null && affinity !== void 0 ? affinity : undefined);\n                return new PositionPair(position, viewPosition);\n            }\n            return new PositionPair(position, null);\n        }\n    }\n    _getMaxWidth() {\n        const elDocument = this.domNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        return (this.allowEditorOverflow\n            ? (elWindow === null || elWindow === void 0 ? void 0 : elWindow.innerWidth) || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth\n            : this._contentWidth);\n    }\n    setPosition(primaryAnchor, secondaryAnchor, preference, affinity) {\n        this._setPosition(affinity, primaryAnchor, secondaryAnchor);\n        this._preference = preference;\n        if (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n            // this content widget would like to be visible if possible\n            // we change it from `display:none` to `display:block` even if it\n            // might be outside the viewport such that we can measure its size\n            // in `prepareRender`\n            this.domNode.setDisplay('block');\n        }\n        else {\n            this.domNode.setDisplay('none');\n        }\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n    }\n    _layoutBoxInViewport(anchor, width, height, ctx) {\n        // Our visible box is split horizontally by the current line => 2 boxes\n        // a) the box above the line\n        const aboveLineTop = anchor.top;\n        const heightAvailableAboveLine = aboveLineTop;\n        // b) the box under the line\n        const underLineTop = anchor.top + anchor.height;\n        const heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n        const aboveTop = aboveLineTop - height;\n        const fitsAbove = (heightAvailableAboveLine >= height);\n        const belowTop = underLineTop;\n        const fitsBelow = (heightAvailableUnderLine >= height);\n        // And its left\n        let left = anchor.left;\n        if (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n            left = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (left < ctx.scrollLeft) {\n            left = ctx.scrollLeft;\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n        var _a;\n        // Leave some clearance to the left/right\n        const LEFT_PADDING = 15;\n        const RIGHT_PADDING = 15;\n        // Initially, the limits are defined as the dom node limits\n        const MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n        const MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        let absoluteLeft = domNodePosition.left + left - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollX) !== null && _a !== void 0 ? _a : 0);\n        if (absoluteLeft + width > MAX_LIMIT) {\n            const delta = absoluteLeft - (MAX_LIMIT - width);\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        if (absoluteLeft < MIN_LIMIT) {\n            const delta = absoluteLeft - MIN_LIMIT;\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        return [left, absoluteLeft];\n    }\n    _layoutBoxInPage(anchor, width, height, ctx) {\n        var _a, _b;\n        const aboveTop = anchor.top - height;\n        const belowTop = anchor.top + anchor.height;\n        const domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        const absoluteAboveTop = domNodePosition.top + aboveTop - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _a !== void 0 ? _a : 0);\n        const absoluteBelowTop = domNodePosition.top + belowTop - ((_b = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _b !== void 0 ? _b : 0);\n        const windowSize = dom.getClientArea(elDocument.body);\n        const [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n        // Leave some clearance to the top/bottom\n        const TOP_PADDING = 22;\n        const BOTTOM_PADDING = 22;\n        const fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n        const fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n        if (this._fixedOverflowWidgets) {\n            return {\n                fitsAbove,\n                aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n                fitsBelow,\n                belowTop: absoluteBelowTop,\n                left: absoluteAboveLeft\n            };\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\n     * Compute the coordinates above and below the primary and secondary anchors.\n     * The content widget *must* touch the primary anchor.\n     * The content widget should touch if possible the secondary anchor.\n     */\n    _getAnchorsCoordinates(ctx) {\n        var _a, _b;\n        const primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity, this._lineHeight);\n        const secondaryViewPosition = (((_a = this._secondaryAnchor.viewPosition) === null || _a === void 0 ? void 0 : _a.lineNumber) === ((_b = this._primaryAnchor.viewPosition) === null || _b === void 0 ? void 0 : _b.lineNumber) ? this._secondaryAnchor.viewPosition : null);\n        const secondary = getCoordinates(secondaryViewPosition, this._affinity, this._lineHeight);\n        return { primary, secondary };\n        function getCoordinates(position, affinity, lineHeight) {\n            if (!position) {\n                return null;\n            }\n            const horizontalPosition = ctx.visibleRangeForPosition(position);\n            if (!horizontalPosition) {\n                return null;\n            }\n            // Left-align widgets that should appear :before content\n            const left = (position.column === 1 && affinity === 3 /* PositionAffinity.LeftOfInjectedText */ ? 0 : horizontalPosition.left);\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n            return new AnchorCoordinate(top, left, lineHeight);\n        }\n    }\n    _reduceAnchorCoordinates(primary, secondary, width) {\n        if (!secondary) {\n            return primary;\n        }\n        const fontInfo = this._context.configuration.options.get(50 /* EditorOption.fontInfo */);\n        let left = secondary.left;\n        if (left < primary.left) {\n            left = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n        }\n        else {\n            left = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n        }\n        return new AnchorCoordinate(primary.top, left, primary.height);\n    }\n    _prepareRenderWidget(ctx) {\n        if (!this._preference || this._preference.length === 0) {\n            return null;\n        }\n        const { primary, secondary } = this._getAnchorsCoordinates(ctx);\n        if (!primary) {\n            return null;\n        }\n        if (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n            let preferredDimensions = null;\n            if (typeof this._actual.beforeRender === 'function') {\n                preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n            }\n            if (preferredDimensions) {\n                this._cachedDomNodeOffsetWidth = preferredDimensions.width;\n                this._cachedDomNodeOffsetHeight = preferredDimensions.height;\n            }\n            else {\n                const domNode = this.domNode.domNode;\n                const clientRect = domNode.getBoundingClientRect();\n                this._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n                this._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n            }\n        }\n        const anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n        let placement;\n        if (this.allowEditorOverflow) {\n            placement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        else {\n            placement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        // Do two passes, first for perfect fit, second picks first option\n        for (let pass = 1; pass <= 2; pass++) {\n            for (const pref of this._preference) {\n                // placement\n                if (pref === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsAbove) {\n                        return { coordinate: new Coordinate(placement.aboveTop, placement.left), position: 1 /* ContentWidgetPositionPreference.ABOVE */ };\n                    }\n                }\n                else if (pref === 2 /* ContentWidgetPositionPreference.BELOW */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsBelow) {\n                        return { coordinate: new Coordinate(placement.belowTop, placement.left), position: 2 /* ContentWidgetPositionPreference.BELOW */ };\n                    }\n                }\n                else {\n                    if (this.allowEditorOverflow) {\n                        return { coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                    else {\n                        return { coordinate: new Coordinate(anchor.top, anchor.left), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n    onBeforeRender(viewportData) {\n        if (!this._primaryAnchor.viewPosition || !this._preference) {\n            return;\n        }\n        if (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n            // Outside of viewport\n            return;\n        }\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRenderWidget(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            // This widget should be invisible\n            if (this._isVisible) {\n                this.domNode.removeAttribute('monaco-visible-content-widget');\n                this._isVisible = false;\n                this.domNode.setVisibility('hidden');\n            }\n            if (typeof this._actual.afterRender === 'function') {\n                safeInvoke(this._actual.afterRender, this._actual, null);\n            }\n            return;\n        }\n        // This widget should be visible\n        if (this.allowEditorOverflow) {\n            this.domNode.setTop(this._renderData.coordinate.top);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        else {\n            this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        if (!this._isVisible) {\n            this.domNode.setVisibility('inherit');\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n            this._isVisible = true;\n        }\n        if (typeof this._actual.afterRender === 'function') {\n            safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n        }\n    }\n}\nclass PositionPair {\n    constructor(modelPosition, viewPosition) {\n        this.modelPosition = modelPosition;\n        this.viewPosition = viewPosition;\n    }\n}\nclass Coordinate {\n    constructor(top, left) {\n        this.top = top;\n        this.left = left;\n        this._coordinateBrand = undefined;\n    }\n}\nclass AnchorCoordinate {\n    constructor(top, left, height) {\n        this.top = top;\n        this.left = left;\n        this.height = height;\n        this._anchorCoordinateBrand = undefined;\n    }\n}\nfunction safeInvoke(fn, thisArg, ...args) {\n    try {\n        return fn.call(thisArg, ...args);\n    }\n    catch (_a) {\n        // ignore\n        return null;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}