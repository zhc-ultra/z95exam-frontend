{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.flat-map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.unscopables.flat-map.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.includes.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { ShowLightbulbIconMode } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { getCodeActions } from './codeAction.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nexport var SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\nexport var APPLY_FIX_ALL_COMMAND_ID = '_typescript.applyFixAllCodeAction';\nvar CodeActionOracle = /*#__PURE__*/function (_Disposable) {\n  function CodeActionOracle(_editor, _markerService, _signalChange) {\n    var _this;\n    var _delay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 250;\n    _classCallCheck(this, CodeActionOracle);\n    _this = _callSuper(this, CodeActionOracle);\n    _this._editor = _editor;\n    _this._markerService = _markerService;\n    _this._signalChange = _signalChange;\n    _this._delay = _delay;\n    _this._autoTriggerTimer = _this._register(new TimeoutTimer());\n    _this._register(_this._markerService.onMarkerChanged(function (e) {\n      return _this._onMarkerChanges(e);\n    }));\n    _this._register(_this._editor.onDidChangeCursorPosition(function () {\n      return _this._tryAutoTrigger();\n    }));\n    return _this;\n  }\n  _inherits(CodeActionOracle, _Disposable);\n  return _createClass(CodeActionOracle, [{\n    key: \"trigger\",\n    value: function trigger(_trigger) {\n      var selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(_trigger);\n      this._signalChange(selection ? {\n        trigger: _trigger,\n        selection: selection\n      } : undefined);\n    }\n  }, {\n    key: \"_onMarkerChanges\",\n    value: function _onMarkerChanges(resources) {\n      var model = this._editor.getModel();\n      if (model && resources.some(function (resource) {\n        return isEqual(resource, model.uri);\n      })) {\n        this._tryAutoTrigger();\n      }\n    }\n  }, {\n    key: \"_tryAutoTrigger\",\n    value: function _tryAutoTrigger() {\n      var _this2 = this;\n      this._autoTriggerTimer.cancelAndSet(function () {\n        _this2.trigger({\n          type: 2 /* CodeActionTriggerType.Auto */,\n          triggerAction: CodeActionTriggerSource.Default\n        });\n      }, this._delay);\n    }\n  }, {\n    key: \"_getRangeOfSelectionUnlessWhitespaceEnclosed\",\n    value: function _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\n      if (!this._editor.hasModel()) {\n        return undefined;\n      }\n      var selection = this._editor.getSelection();\n      if (trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n        return selection;\n      }\n      var enabled = this._editor.getOption(65 /* EditorOption.lightbulb */).enabled;\n      if (enabled === ShowLightbulbIconMode.Off) {\n        return undefined;\n      } else if (enabled === ShowLightbulbIconMode.On) {\n        return selection;\n      } else if (enabled === ShowLightbulbIconMode.OnCode) {\n        var isSelectionEmpty = selection.isEmpty();\n        if (!isSelectionEmpty) {\n          return selection;\n        }\n        var model = this._editor.getModel();\n        var _selection$getPositio = selection.getPosition(),\n          lineNumber = _selection$getPositio.lineNumber,\n          column = _selection$getPositio.column;\n        var line = model.getLineContent(lineNumber);\n        if (line.length === 0) {\n          // empty line\n          return undefined;\n        } else if (column === 1) {\n          // look only right\n          if (/\\s/.test(line[0])) {\n            return undefined;\n          }\n        } else if (column === model.getLineMaxColumn(lineNumber)) {\n          // look only left\n          if (/\\s/.test(line[line.length - 1])) {\n            return undefined;\n          }\n        } else {\n          // look left and right\n          if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n            return undefined;\n          }\n        }\n      }\n      return selection;\n    }\n  }]);\n}(Disposable);\nexport var CodeActionsState;\n(function (CodeActionsState) {\n  CodeActionsState.Empty = {\n    type: 0 /* Type.Empty */\n  };\n  var Triggered = /*#__PURE__*/function () {\n    function Triggered(trigger, position, _cancellablePromise) {\n      _classCallCheck(this, Triggered);\n      this.trigger = trigger;\n      this.position = position;\n      this._cancellablePromise = _cancellablePromise;\n      this.type = 1 /* Type.Triggered */;\n      this.actions = _cancellablePromise[\"catch\"](function (e) {\n        if (isCancellationError(e)) {\n          return emptyCodeActionSet;\n        }\n        throw e;\n      });\n    }\n    return _createClass(Triggered, [{\n      key: \"cancel\",\n      value: function cancel() {\n        this._cancellablePromise.cancel();\n      }\n    }]);\n  }();\n  CodeActionsState.Triggered = Triggered;\n})(CodeActionsState || (CodeActionsState = {}));\nvar emptyCodeActionSet = Object.freeze({\n  allActions: [],\n  validActions: [],\n  dispose: function dispose() {},\n  documentation: [],\n  hasAutoFix: false,\n  hasAIFix: false,\n  allAIFixes: false\n});\nexport var CodeActionModel = /*#__PURE__*/function (_Disposable2) {\n  function CodeActionModel(_editor, _registry, _markerService, contextKeyService, _progressService, _configurationService) {\n    var _this3;\n    _classCallCheck(this, CodeActionModel);\n    _this3 = _callSuper(this, CodeActionModel);\n    _this3._editor = _editor;\n    _this3._registry = _registry;\n    _this3._markerService = _markerService;\n    _this3._progressService = _progressService;\n    _this3._configurationService = _configurationService;\n    _this3._codeActionOracle = _this3._register(new MutableDisposable());\n    _this3._state = CodeActionsState.Empty;\n    _this3._onDidChangeState = _this3._register(new Emitter());\n    _this3.onDidChangeState = _this3._onDidChangeState.event;\n    _this3._disposed = false;\n    _this3._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n    _this3._register(_this3._editor.onDidChangeModel(function () {\n      return _this3._update();\n    }));\n    _this3._register(_this3._editor.onDidChangeModelLanguage(function () {\n      return _this3._update();\n    }));\n    _this3._register(_this3._registry.onDidChange(function () {\n      return _this3._update();\n    }));\n    _this3._register(_this3._editor.onDidChangeConfiguration(function (e) {\n      if (e.hasChanged(65 /* EditorOption.lightbulb */)) {\n        _this3._update();\n      }\n    }));\n    _this3._update();\n    return _this3;\n  }\n  _inherits(CodeActionModel, _Disposable2);\n  return _createClass(CodeActionModel, [{\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._disposed) {\n        return;\n      }\n      this._disposed = true;\n      _get(_getPrototypeOf(CodeActionModel.prototype), \"dispose\", this).call(this);\n      this.setState(CodeActionsState.Empty, true);\n    }\n  }, {\n    key: \"_settingEnabledNearbyQuickfixes\",\n    value: function _settingEnabledNearbyQuickfixes() {\n      var _a;\n      var model = (_a = this._editor) === null || _a === void 0 ? void 0 : _a.getModel();\n      return this._configurationService ? this._configurationService.getValue('editor.codeActionWidget.includeNearbyQuickFixes', {\n        resource: model === null || model === void 0 ? void 0 : model.uri\n      }) : false;\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this4 = this;\n      if (this._disposed) {\n        return;\n      }\n      this._codeActionOracle.value = undefined;\n      this.setState(CodeActionsState.Empty);\n      var model = this._editor.getModel();\n      if (model && this._registry.has(model) && !this._editor.getOption(91 /* EditorOption.readOnly */)) {\n        var supportedActions = this._registry.all(model).flatMap(function (provider) {\n          var _a;\n          return (_a = provider.providedCodeActionKinds) !== null && _a !== void 0 ? _a : [];\n        });\n        this._supportedCodeActions.set(supportedActions.join(' '));\n        this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, function (trigger) {\n          var _a;\n          if (!trigger) {\n            _this4.setState(CodeActionsState.Empty);\n            return;\n          }\n          var startPosition = trigger.selection.getStartPosition();\n          var actions = createCancelablePromise( /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(token) {\n              var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, codeActionSet, allCodeActions, foundQuickfix, allMarkers, _iterator, _step, action, currPosition, trackedPosition, distance, currentActions, _iterator2, _step2, marker, col, row, startRow, newCodeActionTrigger, selectionAsPosition, actionsAtMarker, _iterator3, _step3, _action, filteredActions;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!(_this4._settingEnabledNearbyQuickfixes() && trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */ && (trigger.trigger.triggerAction === CodeActionTriggerSource.QuickFix || ((_b = (_a = trigger.trigger.filter) === null || _a === void 0 ? void 0 : _a.include) === null || _b === void 0 ? void 0 : _b.contains(CodeActionKind.QuickFix))))) {\n                      _context.next = 51;\n                      break;\n                    }\n                    _context.next = 3;\n                    return getCodeActions(_this4._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n                  case 3:\n                    codeActionSet = _context.sent;\n                    allCodeActions = _toConsumableArray(codeActionSet.allActions);\n                    if (!token.isCancellationRequested) {\n                      _context.next = 7;\n                      break;\n                    }\n                    return _context.abrupt(\"return\", emptyCodeActionSet);\n                  case 7:\n                    // Search for quickfixes in the curret code action set.\n                    foundQuickfix = (_c = codeActionSet.validActions) === null || _c === void 0 ? void 0 : _c.some(function (action) {\n                      return action.action.kind ? CodeActionKind.QuickFix.contains(new HierarchicalKind(action.action.kind)) : false;\n                    });\n                    allMarkers = _this4._markerService.read({\n                      resource: model.uri\n                    });\n                    if (!foundQuickfix) {\n                      _context.next = 15;\n                      break;\n                    }\n                    _iterator = _createForOfIteratorHelper(codeActionSet.validActions);\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        action = _step.value;\n                        if ((_e = (_d = action.action.command) === null || _d === void 0 ? void 0 : _d.arguments) === null || _e === void 0 ? void 0 : _e.some(function (arg) {\n                          return typeof arg === 'string' && arg.includes(APPLY_FIX_ALL_COMMAND_ID);\n                        })) {\n                          action.action.diagnostics = _toConsumableArray(allMarkers.filter(function (marker) {\n                            return marker.relatedInformation;\n                          }));\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                    return _context.abrupt(\"return\", {\n                      validActions: codeActionSet.validActions,\n                      allActions: allCodeActions,\n                      documentation: codeActionSet.documentation,\n                      hasAutoFix: codeActionSet.hasAutoFix,\n                      hasAIFix: codeActionSet.hasAIFix,\n                      allAIFixes: codeActionSet.allAIFixes,\n                      dispose: function dispose() {\n                        codeActionSet.dispose();\n                      }\n                    });\n                  case 15:\n                    if (foundQuickfix) {\n                      _context.next = 51;\n                      break;\n                    }\n                    if (!(allMarkers.length > 0)) {\n                      _context.next = 51;\n                      break;\n                    }\n                    currPosition = trigger.selection.getPosition();\n                    trackedPosition = currPosition;\n                    distance = Number.MAX_VALUE;\n                    currentActions = _toConsumableArray(codeActionSet.validActions);\n                    _iterator2 = _createForOfIteratorHelper(allMarkers);\n                    _context.prev = 22;\n                    _iterator2.s();\n                  case 24:\n                    if ((_step2 = _iterator2.n()).done) {\n                      _context.next = 40;\n                      break;\n                    }\n                    marker = _step2.value;\n                    col = marker.endColumn;\n                    row = marker.endLineNumber;\n                    startRow = marker.startLineNumber; // Found quickfix on the same line and check relative distance to other markers\n                    if (!(row === currPosition.lineNumber || startRow === currPosition.lineNumber)) {\n                      _context.next = 38;\n                      break;\n                    }\n                    trackedPosition = new Position(row, col);\n                    newCodeActionTrigger = {\n                      type: trigger.trigger.type,\n                      triggerAction: trigger.trigger.triggerAction,\n                      filter: {\n                        include: ((_f = trigger.trigger.filter) === null || _f === void 0 ? void 0 : _f.include) ? (_g = trigger.trigger.filter) === null || _g === void 0 ? void 0 : _g.include : CodeActionKind.QuickFix\n                      },\n                      autoApply: trigger.trigger.autoApply,\n                      context: {\n                        notAvailableMessage: ((_h = trigger.trigger.context) === null || _h === void 0 ? void 0 : _h.notAvailableMessage) || '',\n                        position: trackedPosition\n                      }\n                    };\n                    selectionAsPosition = new Selection(trackedPosition.lineNumber, trackedPosition.column, trackedPosition.lineNumber, trackedPosition.column);\n                    _context.next = 35;\n                    return getCodeActions(_this4._registry, model, selectionAsPosition, newCodeActionTrigger, Progress.None, token);\n                  case 35:\n                    actionsAtMarker = _context.sent;\n                    if (actionsAtMarker.validActions.length !== 0) {\n                      _iterator3 = _createForOfIteratorHelper(actionsAtMarker.validActions);\n                      try {\n                        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                          _action = _step3.value;\n                          if ((_k = (_j = _action.action.command) === null || _j === void 0 ? void 0 : _j.arguments) === null || _k === void 0 ? void 0 : _k.some(function (arg) {\n                            return typeof arg === 'string' && arg.includes(APPLY_FIX_ALL_COMMAND_ID);\n                          })) {\n                            _action.action.diagnostics = _toConsumableArray(allMarkers.filter(function (marker) {\n                              return marker.relatedInformation;\n                            }));\n                          }\n                        }\n                      } catch (err) {\n                        _iterator3.e(err);\n                      } finally {\n                        _iterator3.f();\n                      }\n                      if (codeActionSet.allActions.length === 0) {\n                        allCodeActions.push.apply(allCodeActions, _toConsumableArray(actionsAtMarker.allActions));\n                      }\n                      // Already filtered through to only get quickfixes, so no need to filter again.\n                      if (Math.abs(currPosition.column - col) < distance) {\n                        currentActions.unshift.apply(currentActions, _toConsumableArray(actionsAtMarker.validActions));\n                      } else {\n                        currentActions.push.apply(currentActions, _toConsumableArray(actionsAtMarker.validActions));\n                      }\n                    }\n                    distance = Math.abs(currPosition.column - col);\n                  case 38:\n                    _context.next = 24;\n                    break;\n                  case 40:\n                    _context.next = 45;\n                    break;\n                  case 42:\n                    _context.prev = 42;\n                    _context.t0 = _context[\"catch\"](22);\n                    _iterator2.e(_context.t0);\n                  case 45:\n                    _context.prev = 45;\n                    _iterator2.f();\n                    return _context.finish(45);\n                  case 48:\n                    filteredActions = currentActions.filter(function (action, index, self) {\n                      return self.findIndex(function (a) {\n                        return a.action.title === action.action.title;\n                      }) === index;\n                    });\n                    filteredActions.sort(function (a, b) {\n                      if (a.action.isPreferred && !b.action.isPreferred) {\n                        return -1;\n                      } else if (!a.action.isPreferred && b.action.isPreferred) {\n                        return 1;\n                      } else if (a.action.isAI && !b.action.isAI) {\n                        return 1;\n                      } else if (!a.action.isAI && b.action.isAI) {\n                        return -1;\n                      } else {\n                        return 0;\n                      }\n                    });\n                    // Only retriggers if actually found quickfix on the same line as cursor\n                    return _context.abrupt(\"return\", {\n                      validActions: filteredActions,\n                      allActions: allCodeActions,\n                      documentation: codeActionSet.documentation,\n                      hasAutoFix: codeActionSet.hasAutoFix,\n                      hasAIFix: codeActionSet.hasAIFix,\n                      allAIFixes: codeActionSet.allAIFixes,\n                      dispose: function dispose() {\n                        codeActionSet.dispose();\n                      }\n                    });\n                  case 51:\n                    return _context.abrupt(\"return\", getCodeActions(_this4._registry, model, trigger.selection, trigger.trigger, Progress.None, token));\n                  case 52:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee, null, [[22, 42, 45, 48]]);\n            }));\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n          if (trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n            (_a = _this4._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\n          }\n          var newState = new CodeActionsState.Triggered(trigger.trigger, startPosition, actions);\n          var isManualToAutoTransition = false;\n          if (_this4._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n            // Check if the current state is manual and the new state is automatic\n            isManualToAutoTransition = _this4._state.trigger.type === 1 /* CodeActionTriggerType.Invoke */ && newState.type === 1 /* CodeActionsState.Type.Triggered */ && newState.trigger.type === 2 /* CodeActionTriggerType.Auto */ && _this4._state.position !== newState.position;\n          }\n          // Do not trigger state if current state is manual and incoming state is automatic\n          if (!isManualToAutoTransition) {\n            _this4.setState(newState);\n          }\n        }, undefined);\n        this._codeActionOracle.value.trigger({\n          type: 2 /* CodeActionTriggerType.Auto */,\n          triggerAction: CodeActionTriggerSource.Default\n        });\n      } else {\n        this._supportedCodeActions.reset();\n      }\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(_trigger2) {\n      var _a;\n      (_a = this._codeActionOracle.value) === null || _a === void 0 ? void 0 : _a.trigger(_trigger2);\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(newState, skipNotify) {\n      if (newState === this._state) {\n        return;\n      }\n      // Cancel old request\n      if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n        this._state.cancel();\n      }\n      this._state = newState;\n      if (!skipNotify && !this._disposed) {\n        this._onDidChangeState.fire(newState);\n      }\n    }\n  }]);\n}(Disposable);","map":{"version":3,"names":["createCancelablePromise","TimeoutTimer","isCancellationError","Emitter","Disposable","MutableDisposable","isEqual","ShowLightbulbIconMode","Position","Selection","RawContextKey","Progress","CodeActionKind","CodeActionTriggerSource","getCodeActions","HierarchicalKind","SUPPORTED_CODE_ACTIONS","APPLY_FIX_ALL_COMMAND_ID","CodeActionOracle","_Disposable","_editor","_markerService","_signalChange","_this","_delay","arguments","length","undefined","_classCallCheck","_callSuper","_autoTriggerTimer","_register","onMarkerChanged","e","_onMarkerChanges","onDidChangeCursorPosition","_tryAutoTrigger","_inherits","_createClass","key","value","trigger","selection","_getRangeOfSelectionUnlessWhitespaceEnclosed","resources","model","getModel","some","resource","uri","_this2","cancelAndSet","type","triggerAction","Default","hasModel","getSelection","enabled","getOption","Off","On","OnCode","isSelectionEmpty","isEmpty","_selection$getPositio","getPosition","lineNumber","column","line","getLineContent","test","getLineMaxColumn","CodeActionsState","Empty","Triggered","position","_cancellablePromise","actions","emptyCodeActionSet","cancel","Object","freeze","allActions","validActions","dispose","documentation","hasAutoFix","hasAIFix","allAIFixes","CodeActionModel","_Disposable2","_registry","contextKeyService","_progressService","_configurationService","_this3","_codeActionOracle","_state","_onDidChangeState","onDidChangeState","event","_disposed","_supportedCodeActions","bindTo","onDidChangeModel","_update","onDidChangeModelLanguage","onDidChange","onDidChangeConfiguration","hasChanged","_get","_getPrototypeOf","prototype","call","setState","_settingEnabledNearbyQuickfixes","_a","getValue","_this4","has","supportedActions","all","flatMap","provider","providedCodeActionKinds","set","join","startPosition","getStartPosition","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","_b","_c","_d","_e","_f","_g","_h","_j","_k","codeActionSet","allCodeActions","foundQuickfix","allMarkers","_iterator","_step","action","currPosition","trackedPosition","distance","currentActions","_iterator2","_step2","marker","col","row","startRow","newCodeActionTrigger","selectionAsPosition","actionsAtMarker","_iterator3","_step3","_action","filteredActions","wrap","_callee$","_context","prev","next","QuickFix","filter","include","contains","None","sent","_toConsumableArray","isCancellationRequested","abrupt","kind","read","_createForOfIteratorHelper","s","n","done","command","arg","includes","diagnostics","relatedInformation","err","f","Number","MAX_VALUE","endColumn","endLineNumber","startLineNumber","autoApply","context","notAvailableMessage","push","apply","Math","abs","unshift","t0","finish","index","self","findIndex","a","title","sort","b","isPreferred","isAI","stop","_x","showWhile","newState","isManualToAutoTransition","reset","skipNotify","fire"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { ShowLightbulbIconMode } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { getCodeActions } from './codeAction.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\nexport const APPLY_FIX_ALL_COMMAND_ID = '_typescript.applyFixAllCodeAction';\nclass CodeActionOracle extends Disposable {\n    constructor(_editor, _markerService, _signalChange, _delay = 250) {\n        super();\n        this._editor = _editor;\n        this._markerService = _markerService;\n        this._signalChange = _signalChange;\n        this._delay = _delay;\n        this._autoTriggerTimer = this._register(new TimeoutTimer());\n        this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\n        this._register(this._editor.onDidChangeCursorPosition(() => this._tryAutoTrigger()));\n    }\n    trigger(trigger) {\n        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n        this._signalChange(selection ? { trigger, selection } : undefined);\n    }\n    _onMarkerChanges(resources) {\n        const model = this._editor.getModel();\n        if (model && resources.some(resource => isEqual(resource, model.uri))) {\n            this._tryAutoTrigger();\n        }\n    }\n    _tryAutoTrigger() {\n        this._autoTriggerTimer.cancelAndSet(() => {\n            this.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }, this._delay);\n    }\n    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\n        if (!this._editor.hasModel()) {\n            return undefined;\n        }\n        const selection = this._editor.getSelection();\n        if (trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n            return selection;\n        }\n        const enabled = this._editor.getOption(65 /* EditorOption.lightbulb */).enabled;\n        if (enabled === ShowLightbulbIconMode.Off) {\n            return undefined;\n        }\n        else if (enabled === ShowLightbulbIconMode.On) {\n            return selection;\n        }\n        else if (enabled === ShowLightbulbIconMode.OnCode) {\n            const isSelectionEmpty = selection.isEmpty();\n            if (!isSelectionEmpty) {\n                return selection;\n            }\n            const model = this._editor.getModel();\n            const { lineNumber, column } = selection.getPosition();\n            const line = model.getLineContent(lineNumber);\n            if (line.length === 0) {\n                // empty line\n                return undefined;\n            }\n            else if (column === 1) {\n                // look only right\n                if (/\\s/.test(line[0])) {\n                    return undefined;\n                }\n            }\n            else if (column === model.getLineMaxColumn(lineNumber)) {\n                // look only left\n                if (/\\s/.test(line[line.length - 1])) {\n                    return undefined;\n                }\n            }\n            else {\n                // look left and right\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n                    return undefined;\n                }\n            }\n        }\n        return selection;\n    }\n}\nexport var CodeActionsState;\n(function (CodeActionsState) {\n    CodeActionsState.Empty = { type: 0 /* Type.Empty */ };\n    class Triggered {\n        constructor(trigger, position, _cancellablePromise) {\n            this.trigger = trigger;\n            this.position = position;\n            this._cancellablePromise = _cancellablePromise;\n            this.type = 1 /* Type.Triggered */;\n            this.actions = _cancellablePromise.catch((e) => {\n                if (isCancellationError(e)) {\n                    return emptyCodeActionSet;\n                }\n                throw e;\n            });\n        }\n        cancel() {\n            this._cancellablePromise.cancel();\n        }\n    }\n    CodeActionsState.Triggered = Triggered;\n})(CodeActionsState || (CodeActionsState = {}));\nconst emptyCodeActionSet = Object.freeze({\n    allActions: [],\n    validActions: [],\n    dispose: () => { },\n    documentation: [],\n    hasAutoFix: false,\n    hasAIFix: false,\n    allAIFixes: false,\n});\nexport class CodeActionModel extends Disposable {\n    constructor(_editor, _registry, _markerService, contextKeyService, _progressService, _configurationService) {\n        super();\n        this._editor = _editor;\n        this._registry = _registry;\n        this._markerService = _markerService;\n        this._progressService = _progressService;\n        this._configurationService = _configurationService;\n        this._codeActionOracle = this._register(new MutableDisposable());\n        this._state = CodeActionsState.Empty;\n        this._onDidChangeState = this._register(new Emitter());\n        this.onDidChangeState = this._onDidChangeState.event;\n        this._disposed = false;\n        this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeModel(() => this._update()));\n        this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\n        this._register(this._registry.onDidChange(() => this._update()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(65 /* EditorOption.lightbulb */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        super.dispose();\n        this.setState(CodeActionsState.Empty, true);\n    }\n    _settingEnabledNearbyQuickfixes() {\n        var _a;\n        const model = (_a = this._editor) === null || _a === void 0 ? void 0 : _a.getModel();\n        return this._configurationService ? this._configurationService.getValue('editor.codeActionWidget.includeNearbyQuickFixes', { resource: model === null || model === void 0 ? void 0 : model.uri }) : false;\n    }\n    _update() {\n        if (this._disposed) {\n            return;\n        }\n        this._codeActionOracle.value = undefined;\n        this.setState(CodeActionsState.Empty);\n        const model = this._editor.getModel();\n        if (model\n            && this._registry.has(model)\n            && !this._editor.getOption(91 /* EditorOption.readOnly */)) {\n            const supportedActions = this._registry.all(model).flatMap(provider => { var _a; return (_a = provider.providedCodeActionKinds) !== null && _a !== void 0 ? _a : []; });\n            this._supportedCodeActions.set(supportedActions.join(' '));\n            this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\n                var _a;\n                if (!trigger) {\n                    this.setState(CodeActionsState.Empty);\n                    return;\n                }\n                const startPosition = trigger.selection.getStartPosition();\n                const actions = createCancelablePromise(async (token) => {\n                    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n                    if (this._settingEnabledNearbyQuickfixes() && trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */ && (trigger.trigger.triggerAction === CodeActionTriggerSource.QuickFix || ((_b = (_a = trigger.trigger.filter) === null || _a === void 0 ? void 0 : _a.include) === null || _b === void 0 ? void 0 : _b.contains(CodeActionKind.QuickFix)))) {\n                        const codeActionSet = await getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n                        const allCodeActions = [...codeActionSet.allActions];\n                        if (token.isCancellationRequested) {\n                            return emptyCodeActionSet;\n                        }\n                        // Search for quickfixes in the curret code action set.\n                        const foundQuickfix = (_c = codeActionSet.validActions) === null || _c === void 0 ? void 0 : _c.some(action => action.action.kind ? CodeActionKind.QuickFix.contains(new HierarchicalKind(action.action.kind)) : false);\n                        const allMarkers = this._markerService.read({ resource: model.uri });\n                        if (foundQuickfix) {\n                            for (const action of codeActionSet.validActions) {\n                                if ((_e = (_d = action.action.command) === null || _d === void 0 ? void 0 : _d.arguments) === null || _e === void 0 ? void 0 : _e.some(arg => typeof arg === 'string' && arg.includes(APPLY_FIX_ALL_COMMAND_ID))) {\n                                    action.action.diagnostics = [...allMarkers.filter(marker => marker.relatedInformation)];\n                                }\n                            }\n                            return { validActions: codeActionSet.validActions, allActions: allCodeActions, documentation: codeActionSet.documentation, hasAutoFix: codeActionSet.hasAutoFix, hasAIFix: codeActionSet.hasAIFix, allAIFixes: codeActionSet.allAIFixes, dispose: () => { codeActionSet.dispose(); } };\n                        }\n                        else if (!foundQuickfix) {\n                            // If markers exists, and there are no quickfixes found or length is zero, check for quickfixes on that line.\n                            if (allMarkers.length > 0) {\n                                const currPosition = trigger.selection.getPosition();\n                                let trackedPosition = currPosition;\n                                let distance = Number.MAX_VALUE;\n                                const currentActions = [...codeActionSet.validActions];\n                                for (const marker of allMarkers) {\n                                    const col = marker.endColumn;\n                                    const row = marker.endLineNumber;\n                                    const startRow = marker.startLineNumber;\n                                    // Found quickfix on the same line and check relative distance to other markers\n                                    if ((row === currPosition.lineNumber || startRow === currPosition.lineNumber)) {\n                                        trackedPosition = new Position(row, col);\n                                        const newCodeActionTrigger = {\n                                            type: trigger.trigger.type,\n                                            triggerAction: trigger.trigger.triggerAction,\n                                            filter: { include: ((_f = trigger.trigger.filter) === null || _f === void 0 ? void 0 : _f.include) ? (_g = trigger.trigger.filter) === null || _g === void 0 ? void 0 : _g.include : CodeActionKind.QuickFix },\n                                            autoApply: trigger.trigger.autoApply,\n                                            context: { notAvailableMessage: ((_h = trigger.trigger.context) === null || _h === void 0 ? void 0 : _h.notAvailableMessage) || '', position: trackedPosition }\n                                        };\n                                        const selectionAsPosition = new Selection(trackedPosition.lineNumber, trackedPosition.column, trackedPosition.lineNumber, trackedPosition.column);\n                                        const actionsAtMarker = await getCodeActions(this._registry, model, selectionAsPosition, newCodeActionTrigger, Progress.None, token);\n                                        if (actionsAtMarker.validActions.length !== 0) {\n                                            for (const action of actionsAtMarker.validActions) {\n                                                if ((_k = (_j = action.action.command) === null || _j === void 0 ? void 0 : _j.arguments) === null || _k === void 0 ? void 0 : _k.some(arg => typeof arg === 'string' && arg.includes(APPLY_FIX_ALL_COMMAND_ID))) {\n                                                    action.action.diagnostics = [...allMarkers.filter(marker => marker.relatedInformation)];\n                                                }\n                                            }\n                                            if (codeActionSet.allActions.length === 0) {\n                                                allCodeActions.push(...actionsAtMarker.allActions);\n                                            }\n                                            // Already filtered through to only get quickfixes, so no need to filter again.\n                                            if (Math.abs(currPosition.column - col) < distance) {\n                                                currentActions.unshift(...actionsAtMarker.validActions);\n                                            }\n                                            else {\n                                                currentActions.push(...actionsAtMarker.validActions);\n                                            }\n                                        }\n                                        distance = Math.abs(currPosition.column - col);\n                                    }\n                                }\n                                const filteredActions = currentActions.filter((action, index, self) => self.findIndex((a) => a.action.title === action.action.title) === index);\n                                filteredActions.sort((a, b) => {\n                                    if (a.action.isPreferred && !b.action.isPreferred) {\n                                        return -1;\n                                    }\n                                    else if (!a.action.isPreferred && b.action.isPreferred) {\n                                        return 1;\n                                    }\n                                    else if (a.action.isAI && !b.action.isAI) {\n                                        return 1;\n                                    }\n                                    else if (!a.action.isAI && b.action.isAI) {\n                                        return -1;\n                                    }\n                                    else {\n                                        return 0;\n                                    }\n                                });\n                                // Only retriggers if actually found quickfix on the same line as cursor\n                                return { validActions: filteredActions, allActions: allCodeActions, documentation: codeActionSet.documentation, hasAutoFix: codeActionSet.hasAutoFix, hasAIFix: codeActionSet.hasAIFix, allAIFixes: codeActionSet.allAIFixes, dispose: () => { codeActionSet.dispose(); } };\n                            }\n                        }\n                    }\n                    // temporarilly hiding here as this is enabled/disabled behind a setting.\n                    return getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n                });\n                if (trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n                    (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\n                }\n                const newState = new CodeActionsState.Triggered(trigger.trigger, startPosition, actions);\n                let isManualToAutoTransition = false;\n                if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n                    // Check if the current state is manual and the new state is automatic\n                    isManualToAutoTransition = this._state.trigger.type === 1 /* CodeActionTriggerType.Invoke */ &&\n                        newState.type === 1 /* CodeActionsState.Type.Triggered */ &&\n                        newState.trigger.type === 2 /* CodeActionTriggerType.Auto */ &&\n                        this._state.position !== newState.position;\n                }\n                // Do not trigger state if current state is manual and incoming state is automatic\n                if (!isManualToAutoTransition) {\n                    this.setState(newState);\n                }\n            }, undefined);\n            this._codeActionOracle.value.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }\n        else {\n            this._supportedCodeActions.reset();\n        }\n    }\n    trigger(trigger) {\n        var _a;\n        (_a = this._codeActionOracle.value) === null || _a === void 0 ? void 0 : _a.trigger(trigger);\n    }\n    setState(newState, skipNotify) {\n        if (newState === this._state) {\n            return;\n        }\n        // Cancel old request\n        if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n            this._state.cancel();\n        }\n        this._state = newState;\n        if (!skipNotify && !this._disposed) {\n            this._onDidChangeState.fire(newState);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}