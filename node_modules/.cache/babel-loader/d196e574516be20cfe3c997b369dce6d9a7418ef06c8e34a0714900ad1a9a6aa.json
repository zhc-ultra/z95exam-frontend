{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && _typeof(from) === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __reExport = function __reExport(target, mod, secondTarget) {\n  return __copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\");\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/html/html.ts\nvar EMPTY_ELEMENTS = [\"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"menuitem\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"];\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<!--\", \"-->\"], [\"<\", \">\"], [\"{\", \"}\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"<(?!(?:\".concat(EMPTY_ELEMENTS.join(\"|\"), \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\"), \"i\"),\n    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(\"<(?!(?:\".concat(EMPTY_ELEMENTS.join(\"|\"), \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\"), \"i\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".html\",\n  ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/<!DOCTYPE/, \"metatag\", \"@doctype\"], [/<!--/, \"comment\", \"@comment\"], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter\", \"tag\", \"\", \"delimiter\"]], [/(<)(script)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@script\"\n    }]], [/(<)(style)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@style\"\n    }]], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@otherTag\"\n    }]], [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", {\n      token: \"tag\",\n      next: \"@otherTag\"\n    }]], [/</, \"delimiter\"], [/[^<]+/]\n    // text\n    ],\n    doctype: [[/[^>]+/, \"metatag.content\"], [/>/, \"metatag\", \"@pop\"]],\n    comment: [[/-->/, \"comment\", \"@pop\"], [/[^-]+/, \"comment.content\"], [/./, \"comment.content\"]],\n    otherTag: [[/\\/?>/, \"delimiter\", \"@pop\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/]\n    // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/type/, \"attribute.name\", \"@scriptAfterType\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/(<\\/)(script\\s*)(>)/, [\"delimiter\", \"tag\", {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/=/, \"delimiter\", \"@scriptAfterTypeEquals\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }],\n    // cover invalid e.g. <script type>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/\"module\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.text/javascript\"\n    }], [/'module'/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.text/javascript\"\n    }], [/\"([^\"]*)\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded\",\n      nextEmbedded: \"text/javascript\"\n    }],\n    // cover invalid e.g. <script type=>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/>/, {\n      token: \"delimiter\",\n      next: \"@scriptEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptEmbedded: [[/<\\/script/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/type/, \"attribute.name\", \"@styleAfterType\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/(<\\/)(style\\s*)(>)/, [\"delimiter\", \"tag\", {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/=/, \"delimiter\", \"@styleAfterTypeEquals\"], [/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }],\n    // cover invalid e.g. <style type>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded\",\n      nextEmbedded: \"text/css\"\n    }],\n    // cover invalid e.g. <style type=>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/>/, {\n      token: \"delimiter\",\n      next: \"@styleEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleEmbedded: [[/<\\/style/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^<]+/, \"\"]]\n    // -- END <style> tags handling\n  }\n};\nexport { conf, language };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","_typeof","_iterator","_createForOfIteratorHelper","_step","_loop","key","value","call","get","enumerable","s","n","done","err","e","f","__reExport","target","mod","secondTarget","monaco_editor_core_exports","monaco_editor_core_star","EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","concat","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","folding","markers","start","end","language","defaultToken","tokenPostfix","ignoreCase","tokenizer","root","token","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/basic-languages/html/html.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/html/html.ts\nvar EMPTY_ELEMENTS = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"menuitem\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [\n    [\"<!--\", \"-->\"],\n    [\"<\", \">\"],\n    [\"{\", \"}\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".html\",\n  ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      [/<!DOCTYPE/, \"metatag\", \"@doctype\"],\n      [/<!--/, \"comment\", \"@comment\"],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter\", \"tag\", \"\", \"delimiter\"]],\n      [/(<)(script)/, [\"delimiter\", { token: \"tag\", next: \"@script\" }]],\n      [/(<)(style)/, [\"delimiter\", { token: \"tag\", next: \"@style\" }]],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", { token: \"tag\", next: \"@otherTag\" }]],\n      [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", { token: \"tag\", next: \"@otherTag\" }]],\n      [/</, \"delimiter\"],\n      [/[^<]+/]\n      // text\n    ],\n    doctype: [\n      [/[^>]+/, \"metatag.content\"],\n      [/>/, \"metatag\", \"@pop\"]\n    ],\n    comment: [\n      [/-->/, \"comment\", \"@pop\"],\n      [/[^-]+/, \"comment.content\"],\n      [/./, \"comment.content\"]\n    ],\n    otherTag: [\n      [/\\/?>/, \"delimiter\", \"@pop\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/]\n      // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [\n      [/type/, \"attribute.name\", \"@scriptAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/(<\\/)(script\\s*)(>)/, [\"delimiter\", \"tag\", { token: \"delimiter\", next: \"@pop\" }]]\n    ],\n    // After <script ... type\n    scriptAfterType: [\n      [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type =\n    scriptAfterTypeEquals: [\n      [\n        /\"module\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.text/javascript\"\n        }\n      ],\n      [\n        /'module'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.text/javascript\"\n        }\n      ],\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type = $S2\n    scriptWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    scriptEmbedded: [\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [\n      [/type/, \"attribute.name\", \"@styleAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/(<\\/)(style\\s*)(>)/, [\"delimiter\", \"tag\", { token: \"delimiter\", next: \"@pop\" }]]\n    ],\n    // After <style ... type\n    styleAfterType: [\n      [/=/, \"delimiter\", \"@styleAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type =\n    styleAfterTypeEquals: [\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type = $S2\n    styleWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    styleEmbedded: [\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ]\n    // -- END <style> tags handling\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}