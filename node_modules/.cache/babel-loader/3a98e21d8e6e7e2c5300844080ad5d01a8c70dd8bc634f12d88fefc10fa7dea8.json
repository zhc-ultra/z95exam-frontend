{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getAllMethodNames } from '../../../base/common/objects.js';\nimport { EditorWorkerClient } from './editorWorkerService.js';\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(modelService, languageConfigurationService, opts) {\n  return new MonacoWebWorkerImpl(modelService, languageConfigurationService, opts);\n}\nvar MonacoWebWorkerImpl = /*#__PURE__*/function (_EditorWorkerClient) {\n  function MonacoWebWorkerImpl(modelService, languageConfigurationService, opts) {\n    var _this;\n    _classCallCheck(this, MonacoWebWorkerImpl);\n    _this = _callSuper(this, MonacoWebWorkerImpl, [modelService, opts.keepIdleModels || false, opts.label, languageConfigurationService]);\n    _this._foreignModuleId = opts.moduleId;\n    _this._foreignModuleCreateData = opts.createData || null;\n    _this._foreignModuleHost = opts.host || null;\n    _this._foreignProxy = null;\n    return _this;\n  }\n  // foreign host request\n  _inherits(MonacoWebWorkerImpl, _EditorWorkerClient);\n  return _createClass(MonacoWebWorkerImpl, [{\n    key: \"fhr\",\n    value: function fhr(method, args) {\n      if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n        return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n      }\n      try {\n        return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }, {\n    key: \"_getForeignProxy\",\n    value: function _getForeignProxy() {\n      var _this2 = this;\n      if (!this._foreignProxy) {\n        this._foreignProxy = this._getProxy().then(function (proxy) {\n          var foreignHostMethods = _this2._foreignModuleHost ? getAllMethodNames(_this2._foreignModuleHost) : [];\n          return proxy.loadForeignModule(_this2._foreignModuleId, _this2._foreignModuleCreateData, foreignHostMethods).then(function (foreignMethods) {\n            _this2._foreignModuleCreateData = null;\n            var proxyMethodRequest = function proxyMethodRequest(method, args) {\n              return proxy.fmr(method, args);\n            };\n            var createProxyMethod = function createProxyMethod(method, proxyMethodRequest) {\n              return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n              };\n            };\n            var foreignProxy = {};\n            var _iterator = _createForOfIteratorHelper(foreignMethods),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var foreignMethod = _step.value;\n                foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            return foreignProxy;\n          });\n        });\n      }\n      return this._foreignProxy;\n    }\n  }, {\n    key: \"getProxy\",\n    value: function getProxy() {\n      return this._getForeignProxy();\n    }\n  }, {\n    key: \"withSyncedResources\",\n    value: function withSyncedResources(resources) {\n      var _this3 = this;\n      return this._withSyncedResources(resources).then(function (_) {\n        return _this3.getProxy();\n      });\n    }\n  }]);\n}(EditorWorkerClient);","map":{"version":3,"names":["getAllMethodNames","EditorWorkerClient","createWebWorker","modelService","languageConfigurationService","opts","MonacoWebWorkerImpl","_EditorWorkerClient","_this","_classCallCheck","_callSuper","keepIdleModels","label","_foreignModuleId","moduleId","_foreignModuleCreateData","createData","_foreignModuleHost","host","_foreignProxy","_inherits","_createClass","key","value","fhr","method","args","Promise","reject","Error","resolve","apply","e","_getForeignProxy","_this2","_getProxy","then","proxy","foreignHostMethods","loadForeignModule","foreignMethods","proxyMethodRequest","fmr","createProxyMethod","Array","prototype","slice","call","arguments","foreignProxy","_iterator","_createForOfIteratorHelper","_step","s","n","done","foreignMethod","err","f","getProxy","withSyncedResources","resources","_this3","_withSyncedResources","_"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/services/webWorker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getAllMethodNames } from '../../../base/common/objects.js';\nimport { EditorWorkerClient } from './editorWorkerService.js';\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(modelService, languageConfigurationService, opts) {\n    return new MonacoWebWorkerImpl(modelService, languageConfigurationService, opts);\n}\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\n    constructor(modelService, languageConfigurationService, opts) {\n        super(modelService, opts.keepIdleModels || false, opts.label, languageConfigurationService);\n        this._foreignModuleId = opts.moduleId;\n        this._foreignModuleCreateData = opts.createData || null;\n        this._foreignModuleHost = opts.host || null;\n        this._foreignProxy = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n        }\n        try {\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _getForeignProxy() {\n        if (!this._foreignProxy) {\n            this._foreignProxy = this._getProxy().then((proxy) => {\n                const foreignHostMethods = this._foreignModuleHost ? getAllMethodNames(this._foreignModuleHost) : [];\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\n                    this._foreignModuleCreateData = null;\n                    const proxyMethodRequest = (method, args) => {\n                        return proxy.fmr(method, args);\n                    };\n                    const createProxyMethod = (method, proxyMethodRequest) => {\n                        return function () {\n                            const args = Array.prototype.slice.call(arguments, 0);\n                            return proxyMethodRequest(method, args);\n                        };\n                    };\n                    const foreignProxy = {};\n                    for (const foreignMethod of foreignMethods) {\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n                    }\n                    return foreignProxy;\n                });\n            });\n        }\n        return this._foreignProxy;\n    }\n    getProxy() {\n        return this._getForeignProxy();\n    }\n    withSyncedResources(resources) {\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}