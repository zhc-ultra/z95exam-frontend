{"ast":null,"code":"import _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n  return typeof str === 'string';\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return _typeof(obj) === 'object' && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n  var TypedArray = Object.getPrototypeOf(Uint8Array);\n  return _typeof(obj) === 'object' && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n  return typeof obj === 'number' && !isNaN(obj);\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n  return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n  return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nexport function assertType(condition, type) {\n  if (!condition) {\n    throw new Error(type ? \"Unexpected type, expected '\".concat(type, \"'\") : 'Unexpected type');\n  }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n  if (isUndefinedOrNull(arg)) {\n    throw new Error('Assertion Failed: argument is undefined or null');\n  }\n  return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\nexport function validateConstraints(args, constraints) {\n  var len = Math.min(args.length, constraints.length);\n  for (var i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (_typeof(arg) !== constraint) {\n      throw new Error(\"argument does not match constraint: typeof \".concat(constraint));\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {\n      // ignore\n    }\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n    throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n  }\n}","map":{"version":3,"names":["isString","str","isObject","obj","_typeof","Array","isArray","RegExp","Date","isTypedArray","TypedArray","Object","getPrototypeOf","Uint8Array","isNumber","isNaN","isIterable","Symbol","iterator","isBoolean","isUndefined","isDefined","arg","isUndefinedOrNull","assertType","condition","type","Error","concat","assertIsDefined","isFunction","validateConstraints","args","constraints","len","Math","min","length","i","validateConstraint","constraint","_a","constructor","call","undefined"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/base/common/types.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}