{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { CancellationError, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { historyNavigationVisible } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nexport var Context = {\n  Visible: historyNavigationVisible,\n  HasFocusedSuggestion: new RawContextKey('suggestWidgetHasFocusedSuggestion', false, localize('suggestWidgetHasSelection', \"Whether any suggestion is focused\")),\n  DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n  MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n  MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n  AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n  HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n  InsertMode: new RawContextKey('suggestionInsertMode', undefined, {\n    type: 'string',\n    description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\")\n  }),\n  CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\"))\n};\nexport var suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\nexport var CompletionItem = /*#__PURE__*/function () {\n  function CompletionItem(position, completion, container, provider) {\n    _classCallCheck(this, CompletionItem);\n    var _a;\n    this.position = position;\n    this.completion = completion;\n    this.container = container;\n    this.provider = provider;\n    // validation\n    this.isInvalid = false;\n    // sorting, filtering\n    this.score = FuzzyScore.Default;\n    this.distance = 0;\n    this.textLabel = typeof completion.label === 'string' ? completion.label : (_a = completion.label) === null || _a === void 0 ? void 0 : _a.label;\n    // ensure lower-variants (perf)\n    this.labelLow = this.textLabel.toLowerCase();\n    // validate label\n    this.isInvalid = !this.textLabel;\n    this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n    this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\n    this.extensionId = completion.extensionId;\n    // normalize ranges\n    if (Range.isIRange(completion.range)) {\n      this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n      this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n      this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n      // validate range\n      this.isInvalid = this.isInvalid || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n    } else {\n      this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n      this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n      this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\n      // validate ranges\n      this.isInvalid = this.isInvalid || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace) || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber || completion.range.insert.startColumn !== completion.range.replace.startColumn;\n    }\n    // create the suggestion resolver\n    if (typeof provider.resolveCompletionItem !== 'function') {\n      this._resolveCache = Promise.resolve();\n      this._resolveDuration = 0;\n    }\n  }\n  // ---- resolving\n  return _createClass(CompletionItem, [{\n    key: \"isResolved\",\n    get: function get() {\n      return this._resolveDuration !== undefined;\n    }\n  }, {\n    key: \"resolveDuration\",\n    get: function get() {\n      return this._resolveDuration !== undefined ? this._resolveDuration : -1;\n    }\n  }, {\n    key: \"resolve\",\n    value: function () {\n      var _resolve = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(token) {\n        var _this = this;\n        var sub, sw;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this._resolveCache) {\n                sub = token.onCancellationRequested(function () {\n                  _this._resolveCache = undefined;\n                  _this._resolveDuration = undefined;\n                });\n                sw = new StopWatch(true);\n                this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(function (value) {\n                  Object.assign(_this.completion, value);\n                  _this._resolveDuration = sw.elapsed();\n                }, function (err) {\n                  if (isCancellationError(err)) {\n                    // the IPC queue will reject the request with the\n                    // cancellation error -> reset cached\n                    _this._resolveCache = undefined;\n                    _this._resolveDuration = undefined;\n                  }\n                })[\"finally\"](function () {\n                  sub.dispose();\n                });\n              }\n              return _context.abrupt(\"return\", this._resolveCache);\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function resolve(_x) {\n        return _resolve.apply(this, arguments);\n      }\n      return resolve;\n    }()\n  }]);\n}();\nexport var CompletionOptions = /*#__PURE__*/_createClass(function CompletionOptions() {\n  var snippetSortOrder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n  var kindFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n  var providerFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n  var providerItemsToReuse = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Map();\n  var showDeprecated = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  _classCallCheck(this, CompletionOptions);\n  this.snippetSortOrder = snippetSortOrder;\n  this.kindFilter = kindFilter;\n  this.providerFilter = providerFilter;\n  this.providerItemsToReuse = providerItemsToReuse;\n  this.showDeprecated = showDeprecated;\n});\nCompletionOptions[\"default\"] = new CompletionOptions();\nvar _snippetSuggestSupport;\nexport function getSnippetSuggestSupport() {\n  return _snippetSuggestSupport;\n}\nexport var CompletionItemModel = /*#__PURE__*/_createClass(function CompletionItemModel(items, needsClipboard, durations, disposable) {\n  _classCallCheck(this, CompletionItemModel);\n  this.items = items;\n  this.needsClipboard = needsClipboard;\n  this.durations = durations;\n  this.disposable = disposable;\n});\nexport function provideSuggestionItems(_x2, _x3, _x4) {\n  return _provideSuggestionItems.apply(this, arguments);\n}\nfunction _provideSuggestionItems() {\n  _provideSuggestionItems = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(registry, model, position) {\n    var options,\n      context,\n      token,\n      sw,\n      word,\n      defaultReplaceRange,\n      defaultRange,\n      result,\n      disposables,\n      durations,\n      needsClipboard,\n      onCompletionList,\n      snippetCompletions,\n      _iterator3,\n      _step3,\n      _loop,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee5$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          options = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : CompletionOptions[\"default\"];\n          context = _args6.length > 4 && _args6[4] !== undefined ? _args6[4] : {\n            triggerKind: 0 /* languages.CompletionTriggerKind.Invoke */\n          };\n          token = _args6.length > 5 && _args6[5] !== undefined ? _args6[5] : CancellationToken.None;\n          sw = new StopWatch();\n          position = position.clone();\n          word = model.getWordAtPosition(position);\n          defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n          defaultRange = {\n            replace: defaultReplaceRange,\n            insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column)\n          };\n          result = [];\n          disposables = new DisposableStore();\n          durations = [];\n          needsClipboard = false;\n          onCompletionList = function onCompletionList(provider, container, sw) {\n            var _a, _b, _c;\n            var didAddResult = false;\n            if (!container) {\n              return didAddResult;\n            }\n            var _iterator2 = _createForOfIteratorHelper(container.suggestions),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var suggestion = _step2.value;\n                if (!options.kindFilter.has(suggestion.kind)) {\n                  // skip if not showing deprecated suggestions\n                  if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* languages.CompletionItemTag.Deprecated */))) {\n                    continue;\n                  }\n                  // fill in default range when missing\n                  if (!suggestion.range) {\n                    suggestion.range = defaultRange;\n                  }\n                  // fill in default sortText when missing\n                  if (!suggestion.sortText) {\n                    suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\n                  }\n                  if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* languages.CompletionItemInsertTextRule.InsertAsSnippet */) {\n                    needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n                  }\n                  result.push(new CompletionItem(position, suggestion, container, provider));\n                  didAddResult = true;\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            if (isDisposable(container)) {\n              disposables.add(container);\n            }\n            durations.push({\n              providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unknown_provider',\n              elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1,\n              elapsedOverall: sw.elapsed()\n            });\n            return didAddResult;\n          }; // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n          // do so - no snippet filter, no special-providers-only request\n          snippetCompletions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            var reuseItems, sw, list;\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!(!_snippetSuggestSupport || options.kindFilter.has(27 /* languages.CompletionItemKind.Snippet */))) {\n                    _context3.next = 2;\n                    break;\n                  }\n                  return _context3.abrupt(\"return\");\n                case 2:\n                  // we have items from a previous session that we can reuse\n                  reuseItems = options.providerItemsToReuse.get(_snippetSuggestSupport);\n                  if (!reuseItems) {\n                    _context3.next = 6;\n                    break;\n                  }\n                  reuseItems.forEach(function (item) {\n                    return result.push(item);\n                  });\n                  return _context3.abrupt(\"return\");\n                case 6:\n                  if (!(options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport))) {\n                    _context3.next = 8;\n                    break;\n                  }\n                  return _context3.abrupt(\"return\");\n                case 8:\n                  sw = new StopWatch();\n                  _context3.next = 11;\n                  return _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n                case 11:\n                  list = _context3.sent;\n                  onCompletionList(_snippetSuggestSupport, list, sw);\n                case 13:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }))(); // add suggestions from contributed providers - providers are ordered in groups of\n          // equal score and once a group produces a result the process stops\n          // get provider groups, always add snippet suggestion provider\n          _iterator3 = _createForOfIteratorHelper(registry.orderedGroups(model));\n          _context6.prev = 15;\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n            var providerGroup, didAddResult;\n            return _regeneratorRuntime().wrap(function _loop$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  providerGroup = _step3.value;\n                  // for each support in the group ask for suggestions\n                  didAddResult = false;\n                  _context5.next = 4;\n                  return Promise.all(providerGroup.map( /*#__PURE__*/function () {\n                    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(provider) {\n                      var items, _sw, list;\n                      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                        while (1) switch (_context4.prev = _context4.next) {\n                          case 0:\n                            if (!options.providerItemsToReuse.has(provider)) {\n                              _context4.next = 5;\n                              break;\n                            }\n                            items = options.providerItemsToReuse.get(provider);\n                            items.forEach(function (item) {\n                              return result.push(item);\n                            });\n                            didAddResult = didAddResult || items.length > 0;\n                            return _context4.abrupt(\"return\");\n                          case 5:\n                            if (!(options.providerFilter.size > 0 && !options.providerFilter.has(provider))) {\n                              _context4.next = 7;\n                              break;\n                            }\n                            return _context4.abrupt(\"return\");\n                          case 7:\n                            _context4.prev = 7;\n                            _sw = new StopWatch();\n                            _context4.next = 11;\n                            return provider.provideCompletionItems(model, position, context, token);\n                          case 11:\n                            list = _context4.sent;\n                            didAddResult = onCompletionList(provider, list, _sw) || didAddResult;\n                            _context4.next = 18;\n                            break;\n                          case 15:\n                            _context4.prev = 15;\n                            _context4.t0 = _context4[\"catch\"](7);\n                            onUnexpectedExternalError(_context4.t0);\n                          case 18:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }, _callee4, null, [[7, 15]]);\n                    }));\n                    return function (_x6) {\n                      return _ref3.apply(this, arguments);\n                    };\n                  }()));\n                case 4:\n                  if (!(didAddResult || token.isCancellationRequested)) {\n                    _context5.next = 6;\n                    break;\n                  }\n                  return _context5.abrupt(\"return\", 1);\n                case 6:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _loop);\n          });\n          _iterator3.s();\n        case 18:\n          if ((_step3 = _iterator3.n()).done) {\n            _context6.next = 24;\n            break;\n          }\n          return _context6.delegateYield(_loop(), \"t0\", 20);\n        case 20:\n          if (!_context6.t0) {\n            _context6.next = 22;\n            break;\n          }\n          return _context6.abrupt(\"break\", 24);\n        case 22:\n          _context6.next = 18;\n          break;\n        case 24:\n          _context6.next = 29;\n          break;\n        case 26:\n          _context6.prev = 26;\n          _context6.t1 = _context6[\"catch\"](15);\n          _iterator3.e(_context6.t1);\n        case 29:\n          _context6.prev = 29;\n          _iterator3.f();\n          return _context6.finish(29);\n        case 32:\n          _context6.next = 34;\n          return snippetCompletions;\n        case 34:\n          if (!token.isCancellationRequested) {\n            _context6.next = 37;\n            break;\n          }\n          disposables.dispose();\n          return _context6.abrupt(\"return\", Promise.reject(new CancellationError()));\n        case 37:\n          return _context6.abrupt(\"return\", new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, {\n            entries: durations,\n            elapsed: sw.elapsed()\n          }, disposables));\n        case 38:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee5, null, [[15, 26, 29, 32]]);\n  }));\n  return _provideSuggestionItems.apply(this, arguments);\n}\nfunction defaultComparator(a, b) {\n  // check with 'sortText'\n  if (a.sortTextLow && b.sortTextLow) {\n    if (a.sortTextLow < b.sortTextLow) {\n      return -1;\n    } else if (a.sortTextLow > b.sortTextLow) {\n      return 1;\n    }\n  }\n  // check with 'label'\n  if (a.textLabel < b.textLabel) {\n    return -1;\n  } else if (a.textLabel > b.textLabel) {\n    return 1;\n  }\n  // check with 'type'\n  return a.completion.kind - b.completion.kind;\n}\nfunction snippetUpComparator(a, b) {\n  if (a.completion.kind !== b.completion.kind) {\n    if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n      return -1;\n    } else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n      return 1;\n    }\n  }\n  return defaultComparator(a, b);\n}\nfunction snippetDownComparator(a, b) {\n  if (a.completion.kind !== b.completion.kind) {\n    if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n      return 1;\n    } else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n      return -1;\n    }\n  }\n  return defaultComparator(a, b);\n}\nvar _snippetComparators = new Map();\n_snippetComparators.set(0 /* SnippetSortOrder.Top */, snippetUpComparator);\n_snippetComparators.set(2 /* SnippetSortOrder.Bottom */, snippetDownComparator);\n_snippetComparators.set(1 /* SnippetSortOrder.Inline */, defaultComparator);\nexport function getSuggestionComparator(snippetConfig) {\n  return _snippetComparators.get(snippetConfig);\n}\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accessor) {\n    var _len,\n      args,\n      _key,\n      uri,\n      position,\n      triggerCharacter,\n      maxItemsToResolve,\n      _accessor$get,\n      completionProvider,\n      ref,\n      result,\n      resolving,\n      actualPosition,\n      completions,\n      _iterator,\n      _step,\n      item,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          for (_len = _args2.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = _args2[_key];\n          }\n          uri = args[0], position = args[1], triggerCharacter = args[2], maxItemsToResolve = args[3];\n          assertType(URI.isUri(uri));\n          assertType(Position.isIPosition(position));\n          assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n          assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n          _accessor$get = accessor.get(ILanguageFeaturesService), completionProvider = _accessor$get.completionProvider;\n          _context2.next = 9;\n          return accessor.get(ITextModelService).createModelReference(uri);\n        case 9:\n          ref = _context2.sent;\n          _context2.prev = 10;\n          result = {\n            incomplete: false,\n            suggestions: []\n          };\n          resolving = [];\n          actualPosition = ref.object.textEditorModel.validatePosition(position);\n          _context2.next = 16;\n          return provideSuggestionItems(completionProvider, ref.object.textEditorModel, actualPosition, undefined, {\n            triggerCharacter: triggerCharacter !== null && triggerCharacter !== void 0 ? triggerCharacter : undefined,\n            triggerKind: triggerCharacter ? 1 /* languages.CompletionTriggerKind.TriggerCharacter */ : 0 /* languages.CompletionTriggerKind.Invoke */\n          });\n        case 16:\n          completions = _context2.sent;\n          _iterator = _createForOfIteratorHelper(completions.items);\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              item = _step.value;\n              if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\n                resolving.push(item.resolve(CancellationToken.None));\n              }\n              result.incomplete = result.incomplete || item.container.incomplete;\n              result.suggestions.push(item.completion);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          _context2.prev = 19;\n          _context2.next = 22;\n          return Promise.all(resolving);\n        case 22:\n          return _context2.abrupt(\"return\", result);\n        case 23:\n          _context2.prev = 23;\n          setTimeout(function () {\n            return completions.disposable.dispose();\n          }, 100);\n          return _context2.finish(23);\n        case 26:\n          _context2.prev = 26;\n          ref.dispose();\n          return _context2.finish(26);\n        case 29:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[10,, 26, 29], [19,, 23, 26]]);\n  }));\n  return function (_x5) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport function showSimpleSuggestions(editor, provider) {\n  var _a;\n  (_a = editor.getContribution('editor.contrib.suggestController')) === null || _a === void 0 ? void 0 : _a.triggerSuggest(new Set().add(provider), undefined, true);\n}\nexport var QuickSuggestionsOptions = /*#__PURE__*/function () {\n  function QuickSuggestionsOptions() {\n    _classCallCheck(this, QuickSuggestionsOptions);\n  }\n  return _createClass(QuickSuggestionsOptions, null, [{\n    key: \"isAllOff\",\n    value: function isAllOff(config) {\n      return config.other === 'off' && config.comments === 'off' && config.strings === 'off';\n    }\n  }, {\n    key: \"isAllOn\",\n    value: function isAllOn(config) {\n      return config.other === 'on' && config.comments === 'on' && config.strings === 'on';\n    }\n  }, {\n    key: \"valueFor\",\n    value: function valueFor(config, tokenType) {\n      switch (tokenType) {\n        case 1 /* StandardTokenType.Comment */:\n          return config.comments;\n        case 2 /* StandardTokenType.String */:\n          return config.strings;\n        default:\n          return config.other;\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["CancellationToken","CancellationError","isCancellationError","onUnexpectedExternalError","FuzzyScore","DisposableStore","isDisposable","StopWatch","assertType","URI","Position","Range","ITextModelService","SnippetParser","localize","MenuId","CommandsRegistry","RawContextKey","ILanguageFeaturesService","historyNavigationVisible","Context","Visible","HasFocusedSuggestion","DetailsVisible","MultipleSuggestions","MakesTextEdit","AcceptSuggestionsOnEnter","HasInsertAndReplaceRange","InsertMode","undefined","type","description","CanResolve","suggestWidgetStatusbarMenu","CompletionItem","position","completion","container","provider","_classCallCheck","_a","isInvalid","score","Default","distance","textLabel","label","labelLow","toLowerCase","sortTextLow","sortText","filterTextLow","filterText","extensionId","isIRange","range","editStart","startLineNumber","startColumn","editInsertEnd","endLineNumber","endColumn","editReplaceEnd","spansMultipleLines","lineNumber","insert","replace","resolveCompletionItem","_resolveCache","Promise","resolve","_resolveDuration","_createClass","key","get","value","_resolve","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","_this","sub","sw","wrap","_callee$","_context","prev","next","onCancellationRequested","then","Object","assign","elapsed","err","dispose","abrupt","stop","_x","apply","arguments","CompletionOptions","snippetSortOrder","length","kindFilter","Set","providerFilter","providerItemsToReuse","Map","showDeprecated","_snippetSuggestSupport","getSnippetSuggestSupport","CompletionItemModel","items","needsClipboard","durations","disposable","provideSuggestionItems","_x2","_x3","_x4","_provideSuggestionItems","_callee5","registry","model","options","context","word","defaultReplaceRange","defaultRange","result","disposables","onCompletionList","snippetCompletions","_iterator3","_step3","_loop","_args6","_callee5$","_context6","triggerKind","None","clone","getWordAtPosition","fromPositions","setEndPosition","column","_b","_c","didAddResult","_iterator2","_createForOfIteratorHelper","suggestions","_step2","s","n","done","suggestion","has","kind","tags","includes","insertTextRules","guessNeedsClipboard","insertText","push","e","f","add","providerName","_debugDisplayName","elapsedProvider","duration","elapsedOverall","_callee3","reuseItems","list","_callee3$","_context3","forEach","item","size","provideCompletionItems","sent","orderedGroups","providerGroup","_loop$","_context5","all","map","_ref3","_callee4","_sw","_callee4$","_context4","t0","_x6","isCancellationRequested","delegateYield","t1","finish","reject","sort","getSuggestionComparator","entries","defaultComparator","a","b","snippetUpComparator","snippetDownComparator","_snippetComparators","set","snippetConfig","registerCommand","_ref","_callee2","accessor","_len","args","_key","uri","triggerCharacter","maxItemsToResolve","_accessor$get","completionProvider","ref","resolving","actualPosition","completions","_iterator","_step","_args2","_callee2$","_context2","Array","isUri","isIPosition","createModelReference","incomplete","object","textEditorModel","validatePosition","setTimeout","_x5","showSimpleSuggestions","editor","getContribution","triggerSuggest","QuickSuggestionsOptions","isAllOff","config","other","comments","strings","isAllOn","valueFor","tokenType"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggest.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { CancellationError, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { historyNavigationVisible } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nexport const Context = {\n    Visible: historyNavigationVisible,\n    HasFocusedSuggestion: new RawContextKey('suggestWidgetHasFocusedSuggestion', false, localize('suggestWidgetHasSelection', \"Whether any suggestion is focused\")),\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\n};\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\nexport class CompletionItem {\n    constructor(position, completion, container, provider) {\n        var _a;\n        this.position = position;\n        this.completion = completion;\n        this.container = container;\n        this.provider = provider;\n        // validation\n        this.isInvalid = false;\n        // sorting, filtering\n        this.score = FuzzyScore.Default;\n        this.distance = 0;\n        this.textLabel = typeof completion.label === 'string'\n            ? completion.label\n            : (_a = completion.label) === null || _a === void 0 ? void 0 : _a.label;\n        // ensure lower-variants (perf)\n        this.labelLow = this.textLabel.toLowerCase();\n        // validate label\n        this.isInvalid = !this.textLabel;\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\n        this.extensionId = completion.extensionId;\n        // normalize ranges\n        if (Range.isIRange(completion.range)) {\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n            // validate range\n            this.isInvalid = this.isInvalid\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n        }\n        else {\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\n            // validate ranges\n            this.isInvalid = this.isInvalid\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\n        }\n        // create the suggestion resolver\n        if (typeof provider.resolveCompletionItem !== 'function') {\n            this._resolveCache = Promise.resolve();\n            this._resolveDuration = 0;\n        }\n    }\n    // ---- resolving\n    get isResolved() {\n        return this._resolveDuration !== undefined;\n    }\n    get resolveDuration() {\n        return this._resolveDuration !== undefined ? this._resolveDuration : -1;\n    }\n    async resolve(token) {\n        if (!this._resolveCache) {\n            const sub = token.onCancellationRequested(() => {\n                this._resolveCache = undefined;\n                this._resolveDuration = undefined;\n            });\n            const sw = new StopWatch(true);\n            this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\n                Object.assign(this.completion, value);\n                this._resolveDuration = sw.elapsed();\n            }, err => {\n                if (isCancellationError(err)) {\n                    // the IPC queue will reject the request with the\n                    // cancellation error -> reset cached\n                    this._resolveCache = undefined;\n                    this._resolveDuration = undefined;\n                }\n            }).finally(() => {\n                sub.dispose();\n            });\n        }\n        return this._resolveCache;\n    }\n}\nexport class CompletionOptions {\n    constructor(snippetSortOrder = 2 /* SnippetSortOrder.Bottom */, kindFilter = new Set(), providerFilter = new Set(), providerItemsToReuse = new Map(), showDeprecated = true) {\n        this.snippetSortOrder = snippetSortOrder;\n        this.kindFilter = kindFilter;\n        this.providerFilter = providerFilter;\n        this.providerItemsToReuse = providerItemsToReuse;\n        this.showDeprecated = showDeprecated;\n    }\n}\nCompletionOptions.default = new CompletionOptions();\nlet _snippetSuggestSupport;\nexport function getSnippetSuggestSupport() {\n    return _snippetSuggestSupport;\n}\nexport class CompletionItemModel {\n    constructor(items, needsClipboard, durations, disposable) {\n        this.items = items;\n        this.needsClipboard = needsClipboard;\n        this.durations = durations;\n        this.disposable = disposable;\n    }\n}\nexport async function provideSuggestionItems(registry, model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* languages.CompletionTriggerKind.Invoke */ }, token = CancellationToken.None) {\n    const sw = new StopWatch();\n    position = position.clone();\n    const word = model.getWordAtPosition(position);\n    const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n    const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\n    const result = [];\n    const disposables = new DisposableStore();\n    const durations = [];\n    let needsClipboard = false;\n    const onCompletionList = (provider, container, sw) => {\n        var _a, _b, _c;\n        let didAddResult = false;\n        if (!container) {\n            return didAddResult;\n        }\n        for (const suggestion of container.suggestions) {\n            if (!options.kindFilter.has(suggestion.kind)) {\n                // skip if not showing deprecated suggestions\n                if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* languages.CompletionItemTag.Deprecated */))) {\n                    continue;\n                }\n                // fill in default range when missing\n                if (!suggestion.range) {\n                    suggestion.range = defaultRange;\n                }\n                // fill in default sortText when missing\n                if (!suggestion.sortText) {\n                    suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\n                }\n                if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* languages.CompletionItemInsertTextRule.InsertAsSnippet */) {\n                    needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n                }\n                result.push(new CompletionItem(position, suggestion, container, provider));\n                didAddResult = true;\n            }\n        }\n        if (isDisposable(container)) {\n            disposables.add(container);\n        }\n        durations.push({\n            providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unknown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\n        });\n        return didAddResult;\n    };\n    // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n    // do so - no snippet filter, no special-providers-only request\n    const snippetCompletions = (async () => {\n        if (!_snippetSuggestSupport || options.kindFilter.has(27 /* languages.CompletionItemKind.Snippet */)) {\n            return;\n        }\n        // we have items from a previous session that we can reuse\n        const reuseItems = options.providerItemsToReuse.get(_snippetSuggestSupport);\n        if (reuseItems) {\n            reuseItems.forEach(item => result.push(item));\n            return;\n        }\n        if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\n            return;\n        }\n        const sw = new StopWatch();\n        const list = await _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n        onCompletionList(_snippetSuggestSupport, list, sw);\n    })();\n    // add suggestions from contributed providers - providers are ordered in groups of\n    // equal score and once a group produces a result the process stops\n    // get provider groups, always add snippet suggestion provider\n    for (const providerGroup of registry.orderedGroups(model)) {\n        // for each support in the group ask for suggestions\n        let didAddResult = false;\n        await Promise.all(providerGroup.map(async (provider) => {\n            // we have items from a previous session that we can reuse\n            if (options.providerItemsToReuse.has(provider)) {\n                const items = options.providerItemsToReuse.get(provider);\n                items.forEach(item => result.push(item));\n                didAddResult = didAddResult || items.length > 0;\n                return;\n            }\n            // check if this provider is filtered out\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\n                return;\n            }\n            try {\n                const sw = new StopWatch();\n                const list = await provider.provideCompletionItems(model, position, context, token);\n                didAddResult = onCompletionList(provider, list, sw) || didAddResult;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n            }\n        }));\n        if (didAddResult || token.isCancellationRequested) {\n            break;\n        }\n    }\n    await snippetCompletions;\n    if (token.isCancellationRequested) {\n        disposables.dispose();\n        return Promise.reject(new CancellationError());\n    }\n    return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\n}\nfunction defaultComparator(a, b) {\n    // check with 'sortText'\n    if (a.sortTextLow && b.sortTextLow) {\n        if (a.sortTextLow < b.sortTextLow) {\n            return -1;\n        }\n        else if (a.sortTextLow > b.sortTextLow) {\n            return 1;\n        }\n    }\n    // check with 'label'\n    if (a.textLabel < b.textLabel) {\n        return -1;\n    }\n    else if (a.textLabel > b.textLabel) {\n        return 1;\n    }\n    // check with 'type'\n    return a.completion.kind - b.completion.kind;\n}\nfunction snippetUpComparator(a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n        if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return -1;\n        }\n        else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return 1;\n        }\n    }\n    return defaultComparator(a, b);\n}\nfunction snippetDownComparator(a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n        if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return 1;\n        }\n        else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return -1;\n        }\n    }\n    return defaultComparator(a, b);\n}\nconst _snippetComparators = new Map();\n_snippetComparators.set(0 /* SnippetSortOrder.Top */, snippetUpComparator);\n_snippetComparators.set(2 /* SnippetSortOrder.Bottom */, snippetDownComparator);\n_snippetComparators.set(1 /* SnippetSortOrder.Inline */, defaultComparator);\nexport function getSuggestionComparator(snippetConfig) {\n    return _snippetComparators.get(snippetConfig);\n}\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', async (accessor, ...args) => {\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\n    assertType(URI.isUri(uri));\n    assertType(Position.isIPosition(position));\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n    const { completionProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = await accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const result = {\n            incomplete: false,\n            suggestions: []\n        };\n        const resolving = [];\n        const actualPosition = ref.object.textEditorModel.validatePosition(position);\n        const completions = await provideSuggestionItems(completionProvider, ref.object.textEditorModel, actualPosition, undefined, { triggerCharacter: triggerCharacter !== null && triggerCharacter !== void 0 ? triggerCharacter : undefined, triggerKind: triggerCharacter ? 1 /* languages.CompletionTriggerKind.TriggerCharacter */ : 0 /* languages.CompletionTriggerKind.Invoke */ });\n        for (const item of completions.items) {\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\n                resolving.push(item.resolve(CancellationToken.None));\n            }\n            result.incomplete = result.incomplete || item.container.incomplete;\n            result.suggestions.push(item.completion);\n        }\n        try {\n            await Promise.all(resolving);\n            return result;\n        }\n        finally {\n            setTimeout(() => completions.disposable.dispose(), 100);\n        }\n    }\n    finally {\n        ref.dispose();\n    }\n});\nexport function showSimpleSuggestions(editor, provider) {\n    var _a;\n    (_a = editor.getContribution('editor.contrib.suggestController')) === null || _a === void 0 ? void 0 : _a.triggerSuggest(new Set().add(provider), undefined, true);\n}\nexport class QuickSuggestionsOptions {\n    static isAllOff(config) {\n        return config.other === 'off' && config.comments === 'off' && config.strings === 'off';\n    }\n    static isAllOn(config) {\n        return config.other === 'on' && config.comments === 'on' && config.strings === 'on';\n    }\n    static valueFor(config, tokenType) {\n        switch (tokenType) {\n            case 1 /* StandardTokenType.Comment */: return config.comments;\n            case 2 /* StandardTokenType.String */: return config.strings;\n            default: return config.other;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}