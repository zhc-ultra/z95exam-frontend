{"ast":null,"code":"import _asyncToGenerator from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.match-all.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../core/wordHelper.js';\nimport { computeLinks as _computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { computeDefaultDocumentColors as _computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders as _findSectionHeaders } from './findSectionHeaders.js';\n/**\n * @internal\n */\nvar MirrorModel = /*#__PURE__*/function (_BaseMirrorModel) {\n  function MirrorModel() {\n    _classCallCheck(this, MirrorModel);\n    return _callSuper(this, MirrorModel, arguments);\n  }\n  _inherits(MirrorModel, _BaseMirrorModel);\n  return _createClass(MirrorModel, [{\n    key: \"uri\",\n    get: function get() {\n      return this._uri;\n    }\n  }, {\n    key: \"eol\",\n    get: function get() {\n      return this._eol;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.getText();\n    }\n  }, {\n    key: \"findMatches\",\n    value: function findMatches(regex) {\n      var matches = [];\n      for (var i = 0; i < this._lines.length; i++) {\n        var line = this._lines[i];\n        var offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n        var iteratorOverMatches = line.matchAll(regex);\n        var _iterator = _createForOfIteratorHelper(iteratorOverMatches),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var match = _step.value;\n            if (match.index || match.index === 0) {\n              match.index = match.index + offsetToAdd;\n            }\n            matches.push(match);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return matches;\n    }\n  }, {\n    key: \"getLinesContent\",\n    value: function getLinesContent() {\n      return this._lines.slice(0);\n    }\n  }, {\n    key: \"getLineCount\",\n    value: function getLineCount() {\n      return this._lines.length;\n    }\n  }, {\n    key: \"getLineContent\",\n    value: function getLineContent(lineNumber) {\n      return this._lines[lineNumber - 1];\n    }\n  }, {\n    key: \"getWordAtPosition\",\n    value: function getWordAtPosition(position, wordDefinition) {\n      var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n      if (wordAtText) {\n        return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n      }\n      return null;\n    }\n  }, {\n    key: \"words\",\n    value: function words(wordDefinition) {\n      var lines = this._lines;\n      var wordenize = this._wordenize.bind(this);\n      var lineNumber = 0;\n      var lineText = '';\n      var wordRangesIdx = 0;\n      var wordRanges = [];\n      return _defineProperty({}, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var value;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!true) {\n                _context.next = 18;\n                break;\n              }\n              if (!(wordRangesIdx < wordRanges.length)) {\n                _context.next = 8;\n                break;\n              }\n              value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n              wordRangesIdx += 1;\n              _context.next = 6;\n              return value;\n            case 6:\n              _context.next = 16;\n              break;\n            case 8:\n              if (!(lineNumber < lines.length)) {\n                _context.next = 15;\n                break;\n              }\n              lineText = lines[lineNumber];\n              wordRanges = wordenize(lineText, wordDefinition);\n              wordRangesIdx = 0;\n              lineNumber += 1;\n              _context.next = 16;\n              break;\n            case 15:\n              return _context.abrupt(\"break\", 18);\n            case 16:\n              _context.next = 0;\n              break;\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"getLineWords\",\n    value: function getLineWords(lineNumber, wordDefinition) {\n      var content = this._lines[lineNumber - 1];\n      var ranges = this._wordenize(content, wordDefinition);\n      var words = [];\n      var _iterator2 = _createForOfIteratorHelper(ranges),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var range = _step2.value;\n          words.push({\n            word: content.substring(range.start, range.end),\n            startColumn: range.start + 1,\n            endColumn: range.end + 1\n          });\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return words;\n    }\n  }, {\n    key: \"_wordenize\",\n    value: function _wordenize(content, wordDefinition) {\n      var result = [];\n      var match;\n      wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n      while (match = wordDefinition.exec(content)) {\n        if (match[0].length === 0) {\n          // it did match the empty string\n          break;\n        }\n        result.push({\n          start: match.index,\n          end: match.index + match[0].length\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"getValueInRange\",\n    value: function getValueInRange(range) {\n      range = this._validateRange(range);\n      if (range.startLineNumber === range.endLineNumber) {\n        return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n      }\n      var lineEnding = this._eol;\n      var startLineIndex = range.startLineNumber - 1;\n      var endLineIndex = range.endLineNumber - 1;\n      var resultLines = [];\n      resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n      for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n        resultLines.push(this._lines[i]);\n      }\n      resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n      return resultLines.join(lineEnding);\n    }\n  }, {\n    key: \"offsetAt\",\n    value: function offsetAt(position) {\n      position = this._validatePosition(position);\n      this._ensureLineStarts();\n      return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n  }, {\n    key: \"positionAt\",\n    value: function positionAt(offset) {\n      offset = Math.floor(offset);\n      offset = Math.max(0, offset);\n      this._ensureLineStarts();\n      var out = this._lineStarts.getIndexOf(offset);\n      var lineLength = this._lines[out.index].length;\n      // Ensure we return a valid position\n      return {\n        lineNumber: 1 + out.index,\n        column: 1 + Math.min(out.remainder, lineLength)\n      };\n    }\n  }, {\n    key: \"_validateRange\",\n    value: function _validateRange(range) {\n      var start = this._validatePosition({\n        lineNumber: range.startLineNumber,\n        column: range.startColumn\n      });\n      var end = this._validatePosition({\n        lineNumber: range.endLineNumber,\n        column: range.endColumn\n      });\n      if (start.lineNumber !== range.startLineNumber || start.column !== range.startColumn || end.lineNumber !== range.endLineNumber || end.column !== range.endColumn) {\n        return {\n          startLineNumber: start.lineNumber,\n          startColumn: start.column,\n          endLineNumber: end.lineNumber,\n          endColumn: end.column\n        };\n      }\n      return range;\n    }\n  }, {\n    key: \"_validatePosition\",\n    value: function _validatePosition(position) {\n      if (!Position.isIPosition(position)) {\n        throw new Error('bad position');\n      }\n      var lineNumber = position.lineNumber,\n        column = position.column;\n      var hasChanged = false;\n      if (lineNumber < 1) {\n        lineNumber = 1;\n        column = 1;\n        hasChanged = true;\n      } else if (lineNumber > this._lines.length) {\n        lineNumber = this._lines.length;\n        column = this._lines[lineNumber - 1].length + 1;\n        hasChanged = true;\n      } else {\n        var maxCharacter = this._lines[lineNumber - 1].length + 1;\n        if (column < 1) {\n          column = 1;\n          hasChanged = true;\n        } else if (column > maxCharacter) {\n          column = maxCharacter;\n          hasChanged = true;\n        }\n      }\n      if (!hasChanged) {\n        return position;\n      } else {\n        return {\n          lineNumber: lineNumber,\n          column: column\n        };\n      }\n    }\n  }]);\n}(BaseMirrorModel);\n/**\n * @internal\n */\nexport var EditorSimpleWorker = /*#__PURE__*/function () {\n  function EditorSimpleWorker(host, foreignModuleFactory) {\n    _classCallCheck(this, EditorSimpleWorker);\n    this._host = host;\n    this._models = Object.create(null);\n    this._foreignModuleFactory = foreignModuleFactory;\n    this._foreignModule = null;\n  }\n  return _createClass(EditorSimpleWorker, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._models = Object.create(null);\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(uri) {\n      return this._models[uri];\n    }\n  }, {\n    key: \"_getModels\",\n    value: function _getModels() {\n      var _this = this;\n      var all = [];\n      Object.keys(this._models).forEach(function (key) {\n        return all.push(_this._models[key]);\n      });\n      return all;\n    }\n  }, {\n    key: \"acceptNewModel\",\n    value: function acceptNewModel(data) {\n      this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n  }, {\n    key: \"acceptModelChanged\",\n    value: function acceptModelChanged(strURL, e) {\n      if (!this._models[strURL]) {\n        return;\n      }\n      var model = this._models[strURL];\n      model.onEvents(e);\n    }\n  }, {\n    key: \"acceptRemovedModel\",\n    value: function acceptRemovedModel(strURL) {\n      if (!this._models[strURL]) {\n        return;\n      }\n      delete this._models[strURL];\n    }\n  }, {\n    key: \"computeUnicodeHighlights\",\n    value: function () {\n      var _computeUnicodeHighlights = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url, options, range) {\n        var model;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              model = this._getModel(url);\n              if (model) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                ranges: [],\n                hasMore: false,\n                ambiguousCharacterCount: 0,\n                invisibleCharacterCount: 0,\n                nonBasicAsciiCharacterCount: 0\n              });\n            case 3:\n              return _context2.abrupt(\"return\", UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range));\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function computeUnicodeHighlights(_x, _x2, _x3) {\n        return _computeUnicodeHighlights.apply(this, arguments);\n      }\n      return computeUnicodeHighlights;\n    }()\n  }, {\n    key: \"findSectionHeaders\",\n    value: function () {\n      var _findSectionHeaders2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(url, options) {\n        var model;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              model = this._getModel(url);\n              if (model) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\", []);\n            case 3:\n              return _context3.abrupt(\"return\", _findSectionHeaders(model, options));\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function findSectionHeaders(_x4, _x5) {\n        return _findSectionHeaders2.apply(this, arguments);\n      }\n      return findSectionHeaders;\n    }() // ---- BEGIN diff --------------------------------------------------------------------------\n  }, {\n    key: \"computeDiff\",\n    value: function () {\n      var _computeDiff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(originalUrl, modifiedUrl, options, algorithm) {\n        var original, modified, result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              original = this._getModel(originalUrl);\n              modified = this._getModel(modifiedUrl);\n              if (!(!original || !modified)) {\n                _context4.next = 4;\n                break;\n              }\n              return _context4.abrupt(\"return\", null);\n            case 4:\n              result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n              return _context4.abrupt(\"return\", result);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function computeDiff(_x6, _x7, _x8, _x9) {\n        return _computeDiff.apply(this, arguments);\n      }\n      return computeDiff;\n    }()\n  }, {\n    key: \"computeMoreMinimalEdits\",\n    value: function () {\n      var _computeMoreMinimalEdits = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(modelUrl, edits, pretty) {\n        var model, result, lastEol, writeIndex, readIndex, _iterator3, _step3, _step3$value, range, text, eol, original, changes, editOffset, _iterator4, _step4, change, start, end, newEdit;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              model = this._getModel(modelUrl);\n              if (model) {\n                _context5.next = 3;\n                break;\n              }\n              return _context5.abrupt(\"return\", edits);\n            case 3:\n              result = [];\n              lastEol = undefined;\n              edits = edits.slice(0).sort(function (a, b) {\n                if (a.range && b.range) {\n                  return Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                var aRng = a.range ? 0 : 1;\n                var bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n              });\n              // merge adjacent edits\n              writeIndex = 0;\n              for (readIndex = 1; readIndex < edits.length; readIndex++) {\n                if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                  edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                  edits[writeIndex].text += edits[readIndex].text;\n                } else {\n                  writeIndex++;\n                  edits[writeIndex] = edits[readIndex];\n                }\n              }\n              edits.length = writeIndex + 1;\n              _iterator3 = _createForOfIteratorHelper(edits);\n              _context5.prev = 10;\n              _iterator3.s();\n            case 12:\n              if ((_step3 = _iterator3.n()).done) {\n                _context5.next = 30;\n                break;\n              }\n              _step3$value = _step3.value, range = _step3$value.range, text = _step3$value.text, eol = _step3$value.eol;\n              if (typeof eol === 'number') {\n                lastEol = eol;\n              }\n              if (!(Range.isEmpty(range) && !text)) {\n                _context5.next = 17;\n                break;\n              }\n              return _context5.abrupt(\"continue\", 28);\n            case 17:\n              original = model.getValueInRange(range);\n              text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n              if (!(original === text)) {\n                _context5.next = 21;\n                break;\n              }\n              return _context5.abrupt(\"continue\", 28);\n            case 21:\n              if (!(Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit)) {\n                _context5.next = 24;\n                break;\n              }\n              result.push({\n                range: range,\n                text: text\n              });\n              return _context5.abrupt(\"continue\", 28);\n            case 24:\n              // compute diff between original and edit.text\n              changes = stringDiff(original, text, pretty);\n              editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n              _iterator4 = _createForOfIteratorHelper(changes);\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  change = _step4.value;\n                  start = model.positionAt(editOffset + change.originalStart);\n                  end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                  newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: {\n                      startLineNumber: start.lineNumber,\n                      startColumn: start.column,\n                      endLineNumber: end.lineNumber,\n                      endColumn: end.column\n                    }\n                  };\n                  if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            case 28:\n              _context5.next = 12;\n              break;\n            case 30:\n              _context5.next = 35;\n              break;\n            case 32:\n              _context5.prev = 32;\n              _context5.t0 = _context5[\"catch\"](10);\n              _iterator3.e(_context5.t0);\n            case 35:\n              _context5.prev = 35;\n              _iterator3.f();\n              return _context5.finish(35);\n            case 38:\n              if (typeof lastEol === 'number') {\n                result.push({\n                  eol: lastEol,\n                  text: '',\n                  range: {\n                    startLineNumber: 0,\n                    startColumn: 0,\n                    endLineNumber: 0,\n                    endColumn: 0\n                  }\n                });\n              }\n              return _context5.abrupt(\"return\", result);\n            case 40:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[10, 32, 35, 38]]);\n      }));\n      function computeMoreMinimalEdits(_x10, _x11, _x12) {\n        return _computeMoreMinimalEdits.apply(this, arguments);\n      }\n      return computeMoreMinimalEdits;\n    }() // ---- END minimal edits ---------------------------------------------------------------\n  }, {\n    key: \"computeLinks\",\n    value: function () {\n      var _computeLinks2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(modelUrl) {\n        var model;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              model = this._getModel(modelUrl);\n              if (model) {\n                _context6.next = 3;\n                break;\n              }\n              return _context6.abrupt(\"return\", null);\n            case 3:\n              return _context6.abrupt(\"return\", _computeLinks(model));\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function computeLinks(_x13) {\n        return _computeLinks2.apply(this, arguments);\n      }\n      return computeLinks;\n    }() // --- BEGIN default document colors -----------------------------------------------------------\n  }, {\n    key: \"computeDefaultDocumentColors\",\n    value: function () {\n      var _computeDefaultDocumentColors2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(modelUrl) {\n        var model;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              model = this._getModel(modelUrl);\n              if (model) {\n                _context7.next = 3;\n                break;\n              }\n              return _context7.abrupt(\"return\", null);\n            case 3:\n              return _context7.abrupt(\"return\", _computeDefaultDocumentColors(model));\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function computeDefaultDocumentColors(_x14) {\n        return _computeDefaultDocumentColors2.apply(this, arguments);\n      }\n      return computeDefaultDocumentColors;\n    }()\n  }, {\n    key: \"textualSuggest\",\n    value: function () {\n      var _textualSuggest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        var sw, wordDefRegExp, seen, _iterator5, _step5, url, model, _iterator6, _step6, word;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              sw = new StopWatch();\n              wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n              seen = new Set();\n              _iterator5 = _createForOfIteratorHelper(modelUrls);\n              _context8.prev = 4;\n              _iterator5.s();\n            case 6:\n              if ((_step5 = _iterator5.n()).done) {\n                _context8.next = 33;\n                break;\n              }\n              url = _step5.value;\n              model = this._getModel(url);\n              if (model) {\n                _context8.next = 11;\n                break;\n              }\n              return _context8.abrupt(\"continue\", 31);\n            case 11:\n              _iterator6 = _createForOfIteratorHelper(model.words(wordDefRegExp));\n              _context8.prev = 12;\n              _iterator6.s();\n            case 14:\n              if ((_step6 = _iterator6.n()).done) {\n                _context8.next = 23;\n                break;\n              }\n              word = _step6.value;\n              if (!(word === leadingWord || !isNaN(Number(word)))) {\n                _context8.next = 18;\n                break;\n              }\n              return _context8.abrupt(\"continue\", 21);\n            case 18:\n              seen.add(word);\n              if (!(seen.size > EditorSimpleWorker._suggestionsLimit)) {\n                _context8.next = 21;\n                break;\n              }\n              return _context8.abrupt(\"break\", 33);\n            case 21:\n              _context8.next = 14;\n              break;\n            case 23:\n              _context8.next = 28;\n              break;\n            case 25:\n              _context8.prev = 25;\n              _context8.t0 = _context8[\"catch\"](12);\n              _iterator6.e(_context8.t0);\n            case 28:\n              _context8.prev = 28;\n              _iterator6.f();\n              return _context8.finish(28);\n            case 31:\n              _context8.next = 6;\n              break;\n            case 33:\n              _context8.next = 38;\n              break;\n            case 35:\n              _context8.prev = 35;\n              _context8.t1 = _context8[\"catch\"](4);\n              _iterator5.e(_context8.t1);\n            case 38:\n              _context8.prev = 38;\n              _iterator5.f();\n              return _context8.finish(38);\n            case 41:\n              return _context8.abrupt(\"return\", {\n                words: Array.from(seen),\n                duration: sw.elapsed()\n              });\n            case 42:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[4, 35, 38, 41], [12, 25, 28, 31]]);\n      }));\n      function textualSuggest(_x15, _x16, _x17, _x18) {\n        return _textualSuggest.apply(this, arguments);\n      }\n      return textualSuggest;\n    }() // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n  }, {\n    key: \"computeWordRanges\",\n    value: function () {\n      var _computeWordRanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(modelUrl, range, wordDef, wordDefFlags) {\n        var model, wordDefRegExp, result, line, words, _iterator7, _step7, word, array;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              model = this._getModel(modelUrl);\n              if (model) {\n                _context9.next = 3;\n                break;\n              }\n              return _context9.abrupt(\"return\", Object.create(null));\n            case 3:\n              wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n              result = Object.create(null);\n              line = range.startLineNumber;\n            case 6:\n              if (!(line < range.endLineNumber)) {\n                _context9.next = 31;\n                break;\n              }\n              words = model.getLineWords(line, wordDefRegExp);\n              _iterator7 = _createForOfIteratorHelper(words);\n              _context9.prev = 9;\n              _iterator7.s();\n            case 11:\n              if ((_step7 = _iterator7.n()).done) {\n                _context9.next = 20;\n                break;\n              }\n              word = _step7.value;\n              if (isNaN(Number(word.word))) {\n                _context9.next = 15;\n                break;\n              }\n              return _context9.abrupt(\"continue\", 18);\n            case 15:\n              array = result[word.word];\n              if (!array) {\n                array = [];\n                result[word.word] = array;\n              }\n              array.push({\n                startLineNumber: line,\n                startColumn: word.startColumn,\n                endLineNumber: line,\n                endColumn: word.endColumn\n              });\n            case 18:\n              _context9.next = 11;\n              break;\n            case 20:\n              _context9.next = 25;\n              break;\n            case 22:\n              _context9.prev = 22;\n              _context9.t0 = _context9[\"catch\"](9);\n              _iterator7.e(_context9.t0);\n            case 25:\n              _context9.prev = 25;\n              _iterator7.f();\n              return _context9.finish(25);\n            case 28:\n              line++;\n              _context9.next = 6;\n              break;\n            case 31:\n              return _context9.abrupt(\"return\", result);\n            case 32:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[9, 22, 25, 28]]);\n      }));\n      function computeWordRanges(_x19, _x20, _x21, _x22) {\n        return _computeWordRanges.apply(this, arguments);\n      }\n      return computeWordRanges;\n    }() //#endregion\n  }, {\n    key: \"navigateValueSet\",\n    value: function () {\n      var _navigateValueSet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(modelUrl, range, up, wordDef, wordDefFlags) {\n        var model, wordDefRegExp, selectionText, wordRange, word, result;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              model = this._getModel(modelUrl);\n              if (model) {\n                _context10.next = 3;\n                break;\n              }\n              return _context10.abrupt(\"return\", null);\n            case 3:\n              wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n              if (range.startColumn === range.endColumn) {\n                range = {\n                  startLineNumber: range.startLineNumber,\n                  startColumn: range.startColumn,\n                  endLineNumber: range.endLineNumber,\n                  endColumn: range.endColumn + 1\n                };\n              }\n              selectionText = model.getValueInRange(range);\n              wordRange = model.getWordAtPosition({\n                lineNumber: range.startLineNumber,\n                column: range.startColumn\n              }, wordDefRegExp);\n              if (wordRange) {\n                _context10.next = 9;\n                break;\n              }\n              return _context10.abrupt(\"return\", null);\n            case 9:\n              word = model.getValueInRange(wordRange);\n              result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n              return _context10.abrupt(\"return\", result);\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function navigateValueSet(_x23, _x24, _x25, _x26, _x27) {\n        return _navigateValueSet.apply(this, arguments);\n      }\n      return navigateValueSet;\n    }() // ---- BEGIN foreign module support --------------------------------------------------------------------------\n  }, {\n    key: \"loadForeignModule\",\n    value: function loadForeignModule(moduleId, createData, foreignHostMethods) {\n      var _this2 = this;\n      var proxyMethodRequest = function proxyMethodRequest(method, args) {\n        return _this2._host.fhr(method, args);\n      };\n      var foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n      var ctx = {\n        host: foreignHost,\n        getMirrorModels: function getMirrorModels() {\n          return _this2._getModels();\n        }\n      };\n      if (this._foreignModuleFactory) {\n        this._foreignModule = this._foreignModuleFactory(ctx, createData);\n        // static foreing module\n        return Promise.resolve(getAllMethodNames(this._foreignModule));\n      }\n      // ESM-comment-begin\n      // \t\treturn new Promise<any>((resolve, reject) => {\n      // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n      // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n      // \n      // \t\t\t\tresolve(getAllMethodNames(this._foreignModule));\n      // \n      // \t\t\t}, reject);\n      // \t\t});\n      // ESM-comment-end\n      // ESM-uncomment-begin\n      return Promise.reject(new Error(\"Unexpected usage\"));\n      // ESM-uncomment-end\n    }\n    // foreign method request\n  }, {\n    key: \"fmr\",\n    value: function fmr(method, args) {\n      if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n        return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n      }\n      try {\n        return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }], [{\n    key: \"computeDiff\",\n    value: function computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n      var diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n      var originalLines = originalTextModel.getLinesContent();\n      var modifiedLines = modifiedTextModel.getLinesContent();\n      var result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n      var identical = result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel);\n      function getLineChanges(changes) {\n        return changes.map(function (m) {\n          var _a;\n          return [m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, (_a = m.innerChanges) === null || _a === void 0 ? void 0 : _a.map(function (m) {\n            return [m.originalRange.startLineNumber, m.originalRange.startColumn, m.originalRange.endLineNumber, m.originalRange.endColumn, m.modifiedRange.startLineNumber, m.modifiedRange.startColumn, m.modifiedRange.endLineNumber, m.modifiedRange.endColumn];\n          })];\n        });\n      }\n      return {\n        identical: identical,\n        quitEarly: result.hitTimeout,\n        changes: getLineChanges(result.changes),\n        moves: result.moves.map(function (m) {\n          return [m.lineRangeMapping.original.startLineNumber, m.lineRangeMapping.original.endLineNumberExclusive, m.lineRangeMapping.modified.startLineNumber, m.lineRangeMapping.modified.endLineNumberExclusive, getLineChanges(m.changes)];\n        })\n      };\n    }\n  }, {\n    key: \"_modelsAreIdentical\",\n    value: function _modelsAreIdentical(original, modified) {\n      var originalLineCount = original.getLineCount();\n      var modifiedLineCount = modified.getLineCount();\n      if (originalLineCount !== modifiedLineCount) {\n        return false;\n      }\n      for (var line = 1; line <= originalLineCount; line++) {\n        var originalLine = original.getLineContent(line);\n        var modifiedLine = modified.getLineContent(line);\n        if (originalLine !== modifiedLine) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }]);\n}();\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n  return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n  // Running in a web worker\n  globalThis.monaco = createMonacoBaseAPI();\n}","map":{"version":3,"names":["stringDiff","URI","Position","Range","MirrorTextModel","BaseMirrorModel","ensureValidWordDefinition","getWordAtText","computeLinks","BasicInplaceReplace","createMonacoBaseAPI","StopWatch","UnicodeTextModelHighlighter","linesDiffComputers","createProxyObject","getAllMethodNames","computeDefaultDocumentColors","findSectionHeaders","MirrorModel","_BaseMirrorModel","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","_uri","_eol","value","getValue","getText","findMatches","regex","matches","i","_lines","length","line","offsetToAdd","offsetAt","iteratorOverMatches","matchAll","_iterator","_createForOfIteratorHelper","_step","s","n","done","match","index","push","err","e","f","getLinesContent","slice","getLineCount","getLineContent","lineNumber","getWordAtPosition","position","wordDefinition","wordAtText","column","startColumn","endColumn","words","lines","wordenize","_wordenize","bind","lineText","wordRangesIdx","wordRanges","_defineProperty","Symbol","iterator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","substring","start","end","abrupt","stop","getLineWords","content","ranges","_iterator2","_step2","range","word","result","lastIndex","exec","getValueInRange","_validateRange","startLineNumber","endLineNumber","lineEnding","startLineIndex","endLineIndex","resultLines","join","_validatePosition","_ensureLineStarts","_lineStarts","getPrefixSum","positionAt","offset","Math","floor","max","out","getIndexOf","lineLength","min","remainder","isIPosition","Error","hasChanged","maxCharacter","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","Object","create","_foreignModuleFactory","_foreignModule","dispose","_getModel","uri","_getModels","_this","all","keys","forEach","acceptNewModel","data","url","parse","EOL","versionId","acceptModelChanged","strURL","model","onEvents","acceptRemovedModel","_computeUnicodeHighlights","_asyncToGenerator","_callee2","options","_callee2$","_context2","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","computeUnicodeHighlights","_x","_x2","_x3","apply","_findSectionHeaders2","_callee3","_callee3$","_context3","_x4","_x5","_computeDiff","_callee4","originalUrl","modifiedUrl","algorithm","original","modified","_callee4$","_context4","computeDiff","_x6","_x7","_x8","_x9","_computeMoreMinimalEdits","_callee5","modelUrl","edits","pretty","lastEol","writeIndex","readIndex","_iterator3","_step3","_step3$value","text","eol","changes","editOffset","_iterator4","_step4","change","newEdit","_callee5$","_context5","undefined","sort","a","b","compareRangesUsingStarts","aRng","bRng","getEndPosition","equals","getStartPosition","fromPositions","isEmpty","replace","_diffLimit","lift","originalStart","originalLength","substr","modifiedStart","modifiedLength","t0","finish","computeMoreMinimalEdits","_x10","_x11","_x12","_computeLinks2","_callee6","_callee6$","_context6","_x13","_computeDefaultDocumentColors2","_callee7","_callee7$","_context7","_x14","_textualSuggest","_callee8","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","_iterator5","_step5","_iterator6","_step6","_callee8$","_context8","RegExp","Set","isNaN","Number","add","size","_suggestionsLimit","t1","Array","from","duration","elapsed","textualSuggest","_x15","_x16","_x17","_x18","_computeWordRanges","_callee9","_iterator7","_step7","array","_callee9$","_context9","computeWordRanges","_x19","_x20","_x21","_x22","_navigateValueSet","_callee10","up","selectionText","wordRange","_callee10$","_context10","INSTANCE","navigateValueSet","_x23","_x24","_x25","_x26","_x27","loadForeignModule","moduleId","createData","foreignHostMethods","_this2","proxyMethodRequest","method","args","fhr","foreignHost","ctx","getMirrorModels","Promise","resolve","reject","fmr","originalTextModel","modifiedTextModel","diffAlgorithm","getDefault","getLegacy","originalLines","modifiedLines","identical","_modelsAreIdentical","getLineChanges","map","m","_a","endLineNumberExclusive","innerChanges","originalRange","modifiedRange","quitEarly","hitTimeout","moves","lineRangeMapping","originalLineCount","modifiedLineCount","originalLine","modifiedLine","importScripts","globalThis","monaco"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../core/wordHelper.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders } from './findSectionHeaders.js';\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        const all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        const model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    async computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async findSectionHeaders(url, options) {\n        const model = this._getModel(url);\n        if (!model) {\n            return [];\n        }\n        return findSectionHeaders(model, options);\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    async computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return changes.map(m => {\n                var _a;\n                return ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, (_a = m.innerChanges) === null || _a === void 0 ? void 0 : _a.map(m => [\n                        m.originalRange.startLineNumber,\n                        m.originalRange.startColumn,\n                        m.originalRange.endLineNumber,\n                        m.originalRange.endColumn,\n                        m.modifiedRange.startLineNumber,\n                        m.modifiedRange.startColumn,\n                        m.modifiedRange.endLineNumber,\n                        m.modifiedRange.endColumn,\n                    ])]);\n            });\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ])),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        // merge adjacent edits\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    async computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    // --- BEGIN default document colors -----------------------------------------------------------\n    async computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    async textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = new StopWatch();\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const seen = new Set();\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    async computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    //#endregion\n    async navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globalThis.monaco = createMonacoBaseAPI();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}