{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport var ViewOverlays = /*#__PURE__*/function (_ViewPart) {\n  function ViewOverlays(context) {\n    var _this;\n    _classCallCheck(this, ViewOverlays);\n    _this = _callSuper(this, ViewOverlays, [context]);\n    _this._visibleLines = new VisibleLinesCollection(_this);\n    _this.domNode = _this._visibleLines.domNode;\n    var options = _this._context.configuration.options;\n    var fontInfo = options.get(50 /* EditorOption.fontInfo */);\n    applyFontInfo(_this.domNode, fontInfo);\n    _this._dynamicOverlays = [];\n    _this._isFocused = false;\n    _this.domNode.setClassName('view-overlays');\n    return _this;\n  }\n  _inherits(ViewOverlays, _ViewPart);\n  return _createClass(ViewOverlays, [{\n    key: \"shouldRender\",\n    value: function shouldRender() {\n      if (_get(_getPrototypeOf(ViewOverlays.prototype), \"shouldRender\", this).call(this)) {\n        return true;\n      }\n      for (var i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n        var dynamicOverlay = this._dynamicOverlays[i];\n        if (dynamicOverlay.shouldRender()) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ViewOverlays.prototype), \"dispose\", this).call(this);\n      for (var i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n        var dynamicOverlay = this._dynamicOverlays[i];\n        dynamicOverlay.dispose();\n      }\n      this._dynamicOverlays = [];\n    }\n  }, {\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n  }, {\n    key: \"createVisibleLine\",\n    value: function createVisibleLine() {\n      return new ViewOverlayLine(this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n  }, {\n    key: \"addDynamicOverlay\",\n    value: function addDynamicOverlay(overlay) {\n      this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      this._visibleLines.onConfigurationChanged(e);\n      var options = this._context.configuration.options;\n      var fontInfo = options.get(50 /* EditorOption.fontInfo */);\n      applyFontInfo(this.domNode, fontInfo);\n      return true;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return this._visibleLines.onFlushed(e);\n    }\n  }, {\n    key: \"onFocusChanged\",\n    value: function onFocusChanged(e) {\n      this._isFocused = e.isFocused;\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return this._visibleLines.onLinesChanged(e);\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return this._visibleLines.onLinesDeleted(e);\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return this._visibleLines.onLinesInserted(e);\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return this._visibleLines.onScrollChanged(e) || true;\n    }\n  }, {\n    key: \"onTokensChanged\",\n    value: function onTokensChanged(e) {\n      return this._visibleLines.onTokensChanged(e);\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      var toRender = this._dynamicOverlays.filter(function (overlay) {\n        return overlay.shouldRender();\n      });\n      for (var i = 0, len = toRender.length; i < len; i++) {\n        var dynamicOverlay = toRender[i];\n        dynamicOverlay.prepareRender(ctx);\n        dynamicOverlay.onDidRender();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(ctx) {\n      // Overwriting to bypass `shouldRender` flag\n      this._viewOverlaysRender(ctx);\n      this.domNode.toggleClassName('focused', this._isFocused);\n    }\n  }, {\n    key: \"_viewOverlaysRender\",\n    value: function _viewOverlaysRender(ctx) {\n      this._visibleLines.renderLines(ctx.viewportData);\n    }\n  }]);\n}(ViewPart);\nexport var ViewOverlayLine = /*#__PURE__*/function () {\n  function ViewOverlayLine(dynamicOverlays) {\n    _classCallCheck(this, ViewOverlayLine);\n    this._dynamicOverlays = dynamicOverlays;\n    this._domNode = null;\n    this._renderedContent = null;\n  }\n  return _createClass(ViewOverlayLine, [{\n    key: \"getDomNode\",\n    value: function getDomNode() {\n      if (!this._domNode) {\n        return null;\n      }\n      return this._domNode.domNode;\n    }\n  }, {\n    key: \"setDomNode\",\n    value: function setDomNode(domNode) {\n      this._domNode = createFastDomNode(domNode);\n    }\n  }, {\n    key: \"onContentChanged\",\n    value: function onContentChanged() {\n      // Nothing\n    }\n  }, {\n    key: \"onTokensChanged\",\n    value: function onTokensChanged() {\n      // Nothing\n    }\n  }, {\n    key: \"renderLine\",\n    value: function renderLine(lineNumber, deltaTop, lineHeight, viewportData, sb) {\n      var result = '';\n      for (var i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n        var dynamicOverlay = this._dynamicOverlays[i];\n        result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n      }\n      if (this._renderedContent === result) {\n        // No rendering needed\n        return false;\n      }\n      this._renderedContent = result;\n      sb.appendString('<div style=\"top:');\n      sb.appendString(String(deltaTop));\n      sb.appendString('px;height:');\n      sb.appendString(String(lineHeight));\n      sb.appendString('px;\">');\n      sb.appendString(result);\n      sb.appendString('</div>');\n      return true;\n    }\n  }, {\n    key: \"layoutLine\",\n    value: function layoutLine(lineNumber, deltaTop, lineHeight) {\n      if (this._domNode) {\n        this._domNode.setTop(deltaTop);\n        this._domNode.setHeight(lineHeight);\n      }\n    }\n  }]);\n}();\nexport var ContentViewOverlays = /*#__PURE__*/function (_ViewOverlays) {\n  function ContentViewOverlays(context) {\n    var _this2;\n    _classCallCheck(this, ContentViewOverlays);\n    _this2 = _callSuper(this, ContentViewOverlays, [context]);\n    var options = _this2._context.configuration.options;\n    var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n    _this2._contentWidth = layoutInfo.contentWidth;\n    _this2.domNode.setHeight(0);\n    return _this2;\n  }\n  // --- begin event handlers\n  _inherits(ContentViewOverlays, _ViewOverlays);\n  return _createClass(ContentViewOverlays, [{\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n      this._contentWidth = layoutInfo.contentWidth;\n      return _get(_getPrototypeOf(ContentViewOverlays.prototype), \"onConfigurationChanged\", this).call(this, e) || true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return _get(_getPrototypeOf(ContentViewOverlays.prototype), \"onScrollChanged\", this).call(this, e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n  }, {\n    key: \"_viewOverlaysRender\",\n    value: function _viewOverlaysRender(ctx) {\n      _get(_getPrototypeOf(ContentViewOverlays.prototype), \"_viewOverlaysRender\", this).call(this, ctx);\n      this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n  }]);\n}(ViewOverlays);\nexport var MarginViewOverlays = /*#__PURE__*/function (_ViewOverlays2) {\n  function MarginViewOverlays(context) {\n    var _this3;\n    _classCallCheck(this, MarginViewOverlays);\n    _this3 = _callSuper(this, MarginViewOverlays, [context]);\n    var options = _this3._context.configuration.options;\n    var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n    _this3._contentLeft = layoutInfo.contentLeft;\n    _this3.domNode.setClassName('margin-view-overlays');\n    _this3.domNode.setWidth(1);\n    applyFontInfo(_this3.domNode, options.get(50 /* EditorOption.fontInfo */));\n    return _this3;\n  }\n  _inherits(MarginViewOverlays, _ViewOverlays2);\n  return _createClass(MarginViewOverlays, [{\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      applyFontInfo(this.domNode, options.get(50 /* EditorOption.fontInfo */));\n      var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n      this._contentLeft = layoutInfo.contentLeft;\n      return _get(_getPrototypeOf(MarginViewOverlays.prototype), \"onConfigurationChanged\", this).call(this, e) || true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return _get(_getPrototypeOf(MarginViewOverlays.prototype), \"onScrollChanged\", this).call(this, e) || e.scrollHeightChanged;\n    }\n  }, {\n    key: \"_viewOverlaysRender\",\n    value: function _viewOverlaysRender(ctx) {\n      _get(_getPrototypeOf(MarginViewOverlays.prototype), \"_viewOverlaysRender\", this).call(this, ctx);\n      var height = Math.min(ctx.scrollHeight, 1000000);\n      this.domNode.setHeight(height);\n      this.domNode.setWidth(this._contentLeft);\n    }\n  }]);\n}(ViewOverlays);","map":{"version":3,"names":["createFastDomNode","applyFontInfo","VisibleLinesCollection","ViewPart","ViewOverlays","_ViewPart","context","_this","_classCallCheck","_callSuper","_visibleLines","domNode","options","_context","configuration","fontInfo","get","_dynamicOverlays","_isFocused","setClassName","_inherits","_createClass","key","value","shouldRender","_get","_getPrototypeOf","prototype","call","i","len","length","dynamicOverlay","dispose","getDomNode","createVisibleLine","ViewOverlayLine","addDynamicOverlay","overlay","push","onConfigurationChanged","e","onFlushed","onFocusChanged","isFocused","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","onTokensChanged","onZonesChanged","prepareRender","ctx","toRender","filter","onDidRender","render","_viewOverlaysRender","toggleClassName","renderLines","viewportData","dynamicOverlays","_domNode","_renderedContent","setDomNode","onContentChanged","renderLine","lineNumber","deltaTop","lineHeight","sb","result","startLineNumber","appendString","String","layoutLine","setTop","setHeight","ContentViewOverlays","_ViewOverlays","_this2","layoutInfo","_contentWidth","contentWidth","scrollWidthChanged","setWidth","Math","max","scrollWidth","MarginViewOverlays","_ViewOverlays2","_this3","_contentLeft","contentLeft","scrollHeightChanged","height","min","scrollHeight"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewOverlayLine(this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(dynamicOverlays) {\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    renderLine(lineNumber, deltaTop, lineHeight, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(lineHeight));\n        sb.appendString('px;\">');\n        sb.appendString(result);\n        sb.appendString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop, lineHeight) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(50 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(50 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}