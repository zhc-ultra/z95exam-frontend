{"ast":null,"code":"import _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n  // @ts-expect-error looks like a node.\n  thing && _typeof(thing) === 'object' && thing.type === 'text' ?\n  // @ts-expect-error looks like a text.\n  thing.value || '' : thing;\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === '';\n}","map":{"version":3,"names":["whitespace","thing","value","_typeof","type","replace"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/hast-util-whitespace/index.js"],"sourcesContent":["/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,KAAK,EAAE;EAChC;EACA,IAAMC,KAAK;EACT;EACAD,KAAK,IAAIE,OAAA,CAAOF,KAAK,MAAK,QAAQ,IAAIA,KAAK,CAACG,IAAI,KAAK,MAAM;EACvD;EACAH,KAAK,CAACC,KAAK,IAAI,EAAE,GACjBD,KAAK;;EAEX;EACA;EACA,OAAO,OAAOC,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACG,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,KAAK,EAAE;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}