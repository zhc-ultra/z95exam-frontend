{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { TabFocus } from '../../../browser/config/tabFocus.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nexport var ToggleTabFocusModeAction = /*#__PURE__*/function (_Action) {\n  function ToggleTabFocusModeAction() {\n    _classCallCheck(this, ToggleTabFocusModeAction);\n    return _callSuper(this, ToggleTabFocusModeAction, [{\n      id: ToggleTabFocusModeAction.ID,\n      title: nls.localize2({\n        key: 'toggle.tabMovesFocus',\n        comment: ['Turn on/off use of tab key for moving focus around VS Code']\n      }, 'Toggle Tab Key Moves Focus'),\n      precondition: undefined,\n      keybinding: {\n        primary: 2048 /* KeyMod.CtrlCmd */ | 43 /* KeyCode.KeyM */,\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 43 /* KeyCode.KeyM */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      f1: true\n    }]);\n  }\n  _inherits(ToggleTabFocusModeAction, _Action);\n  return _createClass(ToggleTabFocusModeAction, [{\n    key: \"run\",\n    value: function run() {\n      var oldValue = TabFocus.getTabFocusMode();\n      var newValue = !oldValue;\n      TabFocus.setTabFocusMode(newValue);\n      if (newValue) {\n        alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n      } else {\n        alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n      }\n    }\n  }]);\n}(Action2);\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\nregisterAction2(ToggleTabFocusModeAction);","map":{"version":3,"names":["alert","TabFocus","nls","Action2","registerAction2","ToggleTabFocusModeAction","_Action","_classCallCheck","_callSuper","id","ID","title","localize2","key","comment","precondition","undefined","keybinding","primary","mac","weight","f1","_inherits","_createClass","value","run","oldValue","getTabFocusMode","newValue","setTabFocusMode","localize"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/browser/toggleTabFocusMode.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { TabFocus } from '../../../browser/config/tabFocus.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, registerAction2 } from '../../../../platform/actions/common/actions.js';\nexport class ToggleTabFocusModeAction extends Action2 {\n    constructor() {\n        super({\n            id: ToggleTabFocusModeAction.ID,\n            title: nls.localize2({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, 'Toggle Tab Key Moves Focus'),\n            precondition: undefined,\n            keybinding: {\n                primary: 2048 /* KeyMod.CtrlCmd */ | 43 /* KeyCode.KeyM */,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 43 /* KeyCode.KeyM */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            f1: true\n        });\n    }\n    run() {\n        const oldValue = TabFocus.getTabFocusMode();\n        const newValue = !oldValue;\n        TabFocus.setTabFocusMode(newValue);\n        if (newValue) {\n            alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\n        }\n        else {\n            alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\n        }\n    }\n}\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\nregisterAction2(ToggleTabFocusModeAction);\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,SAASA,KAAK,QAAQ,0CAA0C;AAChE,SAASC,QAAQ,QAAQ,qCAAqC;AAC9D,OAAO,KAAKC,GAAG,MAAM,oBAAoB;AACzC,SAASC,OAAO,EAAEC,eAAe,QAAQ,gDAAgD;AACzF,WAAaC,wBAAwB,0BAAAC,OAAA;EACjC,SAAAD,yBAAA,EAAc;IAAAE,eAAA,OAAAF,wBAAA;IAAA,OAAAG,UAAA,OAAAH,wBAAA,GACJ;MACFI,EAAE,EAAEJ,wBAAwB,CAACK,EAAE;MAC/BC,KAAK,EAAET,GAAG,CAACU,SAAS,CAAC;QAAEC,GAAG,EAAE,sBAAsB;QAAEC,OAAO,EAAE,CAAC,4DAA4D;MAAE,CAAC,EAAE,4BAA4B,CAAC;MAC5JC,YAAY,EAAEC,SAAS;MACvBC,UAAU,EAAE;QACRC,OAAO,EAAE,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACxCC,GAAG,EAAE;UAAED,OAAO,EAAE,GAAG,CAAC,uBAAuB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAAmB,CAAC;QAC5FE,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDC,EAAE,EAAE;IACR,CAAC;EACL;EAACC,SAAA,CAAAjB,wBAAA,EAAAC,OAAA;EAAA,OAAAiB,YAAA,CAAAlB,wBAAA;IAAAQ,GAAA;IAAAW,KAAA,EACD,SAAAC,IAAA,EAAM;MACF,IAAMC,QAAQ,GAAGzB,QAAQ,CAAC0B,eAAe,CAAC,CAAC;MAC3C,IAAMC,QAAQ,GAAG,CAACF,QAAQ;MAC1BzB,QAAQ,CAAC4B,eAAe,CAACD,QAAQ,CAAC;MAClC,IAAIA,QAAQ,EAAE;QACV5B,KAAK,CAACE,GAAG,CAAC4B,QAAQ,CAAC,yBAAyB,EAAE,gEAAgE,CAAC,CAAC;MACpH,CAAC,MACI;QACD9B,KAAK,CAACE,GAAG,CAAC4B,QAAQ,CAAC,0BAA0B,EAAE,gDAAgD,CAAC,CAAC;MACrG;IACJ;EAAC;AAAA,EAxByC3B,OAAO;AA0BrDE,wBAAwB,CAACK,EAAE,GAAG,kCAAkC;AAChEN,eAAe,CAACC,wBAAwB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}