{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-clamped-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport var MinimapCharRenderer = /*#__PURE__*/function () {\n  function MinimapCharRenderer(charData, scale) {\n    _classCallCheck(this, MinimapCharRenderer);\n    this.scale = scale;\n    this._minimapCharRendererBrand = undefined;\n    this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n    this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n  }\n  return _createClass(MinimapCharRenderer, [{\n    key: \"renderChar\",\n    value: function renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n      var charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n      var charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n      var renderHeight = force1pxHeight ? 1 : charHeight;\n      if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n        console.warn('bad render request outside image data');\n        return;\n      }\n      var charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n      var charIndex = getCharIndex(chCode, fontScale);\n      var destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n      var backgroundR = backgroundColor.r;\n      var backgroundG = backgroundColor.g;\n      var backgroundB = backgroundColor.b;\n      var deltaR = color.r - backgroundR;\n      var deltaG = color.g - backgroundG;\n      var deltaB = color.b - backgroundB;\n      var destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n      var dest = target.data;\n      var sourceOffset = charIndex * charWidth * charHeight;\n      var row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n      for (var y = 0; y < renderHeight; y++) {\n        var column = row;\n        for (var x = 0; x < charWidth; x++) {\n          var c = charData[sourceOffset++] / 255 * (foregroundAlpha / 255);\n          dest[column++] = backgroundR + deltaR * c;\n          dest[column++] = backgroundG + deltaG * c;\n          dest[column++] = backgroundB + deltaB * c;\n          dest[column++] = destAlpha;\n        }\n        row += destWidth;\n      }\n    }\n  }, {\n    key: \"blockRenderChar\",\n    value: function blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n      var charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n      var charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n      var renderHeight = force1pxHeight ? 1 : charHeight;\n      if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n        console.warn('bad render request outside image data');\n        return;\n      }\n      var destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n      var c = 0.5 * (foregroundAlpha / 255);\n      var backgroundR = backgroundColor.r;\n      var backgroundG = backgroundColor.g;\n      var backgroundB = backgroundColor.b;\n      var deltaR = color.r - backgroundR;\n      var deltaG = color.g - backgroundG;\n      var deltaB = color.b - backgroundB;\n      var colorR = backgroundR + deltaR * c;\n      var colorG = backgroundG + deltaG * c;\n      var colorB = backgroundB + deltaB * c;\n      var destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n      var dest = target.data;\n      var row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n      for (var y = 0; y < renderHeight; y++) {\n        var column = row;\n        for (var x = 0; x < charWidth; x++) {\n          dest[column++] = colorR;\n          dest[column++] = colorG;\n          dest[column++] = colorB;\n          dest[column++] = destAlpha;\n        }\n        row += destWidth;\n      }\n    }\n  }], [{\n    key: \"soften\",\n    value: function soften(input, ratio) {\n      var result = new Uint8ClampedArray(input.length);\n      for (var i = 0, len = input.length; i < len; i++) {\n        result[i] = toUint8(input[i] * ratio);\n      }\n      return result;\n    }\n  }]);\n}();","map":{"version":3,"names":["getCharIndex","toUint8","MinimapCharRenderer","charData","scale","_classCallCheck","_minimapCharRendererBrand","undefined","charDataNormal","soften","charDataLight","_createClass","key","value","renderChar","target","dx","dy","chCode","color","foregroundAlpha","backgroundColor","backgroundAlpha","fontScale","useLighterFont","force1pxHeight","charWidth","charHeight","renderHeight","width","height","console","warn","charIndex","destWidth","backgroundR","r","backgroundG","g","backgroundB","b","deltaR","deltaG","deltaB","destAlpha","Math","max","dest","data","sourceOffset","row","y","column","x","c","blockRenderChar","colorR","colorG","colorB","input","ratio","result","Uint8ClampedArray","length","i","len"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport class MinimapCharRenderer {\n    constructor(charData, scale) {\n        this.scale = scale;\n        this._minimapCharRendererBrand = undefined;\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n    }\n    static soften(input, ratio) {\n        const result = new Uint8ClampedArray(input.length);\n        for (let i = 0, len = input.length; i < len; i++) {\n            result[i] = toUint8(input[i] * ratio);\n        }\n        return result;\n    }\n    renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n        const charIndex = getCharIndex(chCode, fontScale);\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let sourceOffset = charIndex * charWidth * charHeight;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                const c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n                dest[column++] = backgroundR + deltaR * c;\n                dest[column++] = backgroundG + deltaG * c;\n                dest[column++] = backgroundB + deltaB * c;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n    blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const c = 0.5 * (foregroundAlpha / 255);\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const colorR = backgroundR + deltaR * c;\n        const colorG = backgroundG + deltaG * c;\n        const colorB = backgroundB + deltaB * c;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                dest[column++] = colorR;\n                dest[column++] = colorG;\n                dest[column++] = colorB;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,SAASC,OAAO,QAAQ,iCAAiC;AACzD,WAAaC,mBAAmB;EAC5B,SAAAA,oBAAYC,QAAQ,EAAEC,KAAK,EAAE;IAAAC,eAAA,OAAAH,mBAAA;IACzB,IAAI,CAACE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,yBAAyB,GAAGC,SAAS;IAC1C,IAAI,CAACC,cAAc,GAAGN,mBAAmB,CAACO,MAAM,CAACN,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAC;IACnE,IAAI,CAACO,aAAa,GAAGR,mBAAmB,CAACO,MAAM,CAACN,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAC;EACtE;EAAC,OAAAQ,YAAA,CAAAT,mBAAA;IAAAU,GAAA;IAAAC,KAAA,EAQD,SAAAC,WAAWC,MAAM,EAAEC,EAAE,EAAEC,EAAE,EAAEC,MAAM,EAAEC,KAAK,EAAEC,eAAe,EAAEC,eAAe,EAAEC,eAAe,EAAEC,SAAS,EAAEC,cAAc,EAAEC,cAAc,EAAE;MACpI,IAAMC,SAAS,GAAG,CAAC,CAAC,kCAAkC,IAAI,CAACtB,KAAK;MAChE,IAAMuB,UAAU,GAAG,CAAC,CAAC,mCAAmC,IAAI,CAACvB,KAAK;MAClE,IAAMwB,YAAY,GAAIH,cAAc,GAAG,CAAC,GAAGE,UAAW;MACtD,IAAIX,EAAE,GAAGU,SAAS,GAAGX,MAAM,CAACc,KAAK,IAAIZ,EAAE,GAAGW,YAAY,GAAGb,MAAM,CAACe,MAAM,EAAE;QACpEC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;QACrD;MACJ;MACA,IAAM7B,QAAQ,GAAGqB,cAAc,GAAG,IAAI,CAACd,aAAa,GAAG,IAAI,CAACF,cAAc;MAC1E,IAAMyB,SAAS,GAAGjC,YAAY,CAACkB,MAAM,EAAEK,SAAS,CAAC;MACjD,IAAMW,SAAS,GAAGnB,MAAM,CAACc,KAAK,GAAG,CAAC,CAAC;MACnC,IAAMM,WAAW,GAAGd,eAAe,CAACe,CAAC;MACrC,IAAMC,WAAW,GAAGhB,eAAe,CAACiB,CAAC;MACrC,IAAMC,WAAW,GAAGlB,eAAe,CAACmB,CAAC;MACrC,IAAMC,MAAM,GAAGtB,KAAK,CAACiB,CAAC,GAAGD,WAAW;MACpC,IAAMO,MAAM,GAAGvB,KAAK,CAACmB,CAAC,GAAGD,WAAW;MACpC,IAAMM,MAAM,GAAGxB,KAAK,CAACqB,CAAC,GAAGD,WAAW;MACpC,IAAMK,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC1B,eAAe,EAAEE,eAAe,CAAC;MAC5D,IAAMyB,IAAI,GAAGhC,MAAM,CAACiC,IAAI;MACxB,IAAIC,YAAY,GAAGhB,SAAS,GAAGP,SAAS,GAAGC,UAAU;MACrD,IAAIuB,GAAG,GAAGjC,EAAE,GAAGiB,SAAS,GAAGlB,EAAE,GAAG,CAAC,CAAC;MAClC,KAAK,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,YAAY,EAAEuB,CAAC,EAAE,EAAE;QACnC,IAAIC,MAAM,GAAGF,GAAG;QAChB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3B,SAAS,EAAE2B,CAAC,EAAE,EAAE;UAChC,IAAMC,CAAC,GAAInD,QAAQ,CAAC8C,YAAY,EAAE,CAAC,GAAG,GAAG,IAAK7B,eAAe,GAAG,GAAG,CAAC;UACpE2B,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGjB,WAAW,GAAGM,MAAM,GAAGa,CAAC;UACzCP,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGf,WAAW,GAAGK,MAAM,GAAGY,CAAC;UACzCP,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGb,WAAW,GAAGI,MAAM,GAAGW,CAAC;UACzCP,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGR,SAAS;QAC9B;QACAM,GAAG,IAAIhB,SAAS;MACpB;IACJ;EAAC;IAAAtB,GAAA;IAAAC,KAAA,EACD,SAAA0C,gBAAgBxC,MAAM,EAAEC,EAAE,EAAEC,EAAE,EAAEE,KAAK,EAAEC,eAAe,EAAEC,eAAe,EAAEC,eAAe,EAAEG,cAAc,EAAE;MACtG,IAAMC,SAAS,GAAG,CAAC,CAAC,kCAAkC,IAAI,CAACtB,KAAK;MAChE,IAAMuB,UAAU,GAAG,CAAC,CAAC,mCAAmC,IAAI,CAACvB,KAAK;MAClE,IAAMwB,YAAY,GAAIH,cAAc,GAAG,CAAC,GAAGE,UAAW;MACtD,IAAIX,EAAE,GAAGU,SAAS,GAAGX,MAAM,CAACc,KAAK,IAAIZ,EAAE,GAAGW,YAAY,GAAGb,MAAM,CAACe,MAAM,EAAE;QACpEC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;QACrD;MACJ;MACA,IAAME,SAAS,GAAGnB,MAAM,CAACc,KAAK,GAAG,CAAC,CAAC;MACnC,IAAMyB,CAAC,GAAG,GAAG,IAAIlC,eAAe,GAAG,GAAG,CAAC;MACvC,IAAMe,WAAW,GAAGd,eAAe,CAACe,CAAC;MACrC,IAAMC,WAAW,GAAGhB,eAAe,CAACiB,CAAC;MACrC,IAAMC,WAAW,GAAGlB,eAAe,CAACmB,CAAC;MACrC,IAAMC,MAAM,GAAGtB,KAAK,CAACiB,CAAC,GAAGD,WAAW;MACpC,IAAMO,MAAM,GAAGvB,KAAK,CAACmB,CAAC,GAAGD,WAAW;MACpC,IAAMM,MAAM,GAAGxB,KAAK,CAACqB,CAAC,GAAGD,WAAW;MACpC,IAAMiB,MAAM,GAAGrB,WAAW,GAAGM,MAAM,GAAGa,CAAC;MACvC,IAAMG,MAAM,GAAGpB,WAAW,GAAGK,MAAM,GAAGY,CAAC;MACvC,IAAMI,MAAM,GAAGnB,WAAW,GAAGI,MAAM,GAAGW,CAAC;MACvC,IAAMV,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC1B,eAAe,EAAEE,eAAe,CAAC;MAC5D,IAAMyB,IAAI,GAAGhC,MAAM,CAACiC,IAAI;MACxB,IAAIE,GAAG,GAAGjC,EAAE,GAAGiB,SAAS,GAAGlB,EAAE,GAAG,CAAC,CAAC;MAClC,KAAK,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,YAAY,EAAEuB,CAAC,EAAE,EAAE;QACnC,IAAIC,MAAM,GAAGF,GAAG;QAChB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3B,SAAS,EAAE2B,CAAC,EAAE,EAAE;UAChCN,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGI,MAAM;UACvBT,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGK,MAAM;UACvBV,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGM,MAAM;UACvBX,IAAI,CAACK,MAAM,EAAE,CAAC,GAAGR,SAAS;QAC9B;QACAM,GAAG,IAAIhB,SAAS;MACpB;IACJ;EAAC;IAAAtB,GAAA;IAAAC,KAAA,EAxED,SAAAJ,OAAckD,KAAK,EAAEC,KAAK,EAAE;MACxB,IAAMC,MAAM,GAAG,IAAIC,iBAAiB,CAACH,KAAK,CAACI,MAAM,CAAC;MAClD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,KAAK,CAACI,MAAM,EAAEC,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QAC9CH,MAAM,CAACG,CAAC,CAAC,GAAG/D,OAAO,CAAC0D,KAAK,CAACK,CAAC,CAAC,GAAGJ,KAAK,CAAC;MACzC;MACA,OAAOC,MAAM;IACjB;EAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}