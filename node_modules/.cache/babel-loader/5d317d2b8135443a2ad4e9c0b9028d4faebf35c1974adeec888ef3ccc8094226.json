{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport var SortLinesCommand = /*#__PURE__*/function () {\n  function SortLinesCommand(selection, descending) {\n    _classCallCheck(this, SortLinesCommand);\n    this.selection = selection;\n    this.descending = descending;\n    this.selectionId = null;\n  }\n  return _createClass(SortLinesCommand, [{\n    key: \"getEditOperations\",\n    value: function getEditOperations(model, builder) {\n      var op = sortLines(model, this.selection, this.descending);\n      if (op) {\n        builder.addEditOperation(op.range, op.text);\n      }\n      this.selectionId = builder.trackSelection(this.selection);\n    }\n  }, {\n    key: \"computeCursorState\",\n    value: function computeCursorState(model, helper) {\n      return helper.getTrackedSelection(this.selectionId);\n    }\n  }], [{\n    key: \"getCollator\",\n    value: function getCollator() {\n      if (!SortLinesCommand._COLLATOR) {\n        SortLinesCommand._COLLATOR = new Intl.Collator();\n      }\n      return SortLinesCommand._COLLATOR;\n    }\n  }, {\n    key: \"canRun\",\n    value: function canRun(model, selection, descending) {\n      if (model === null) {\n        return false;\n      }\n      var data = getSortData(model, selection, descending);\n      if (!data) {\n        return false;\n      }\n      for (var i = 0, len = data.before.length; i < len; i++) {\n        if (data.before[i] !== data.after[i]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }]);\n}();\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n  var startLineNumber = selection.startLineNumber;\n  var endLineNumber = selection.endLineNumber;\n  if (selection.endColumn === 1) {\n    endLineNumber--;\n  }\n  // Nothing to sort if user didn't select anything.\n  if (startLineNumber >= endLineNumber) {\n    return null;\n  }\n  var linesToSort = [];\n  // Get the contents of the selection to be sorted.\n  for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n    linesToSort.push(model.getLineContent(lineNumber));\n  }\n  var sorted = linesToSort.slice(0);\n  sorted.sort(SortLinesCommand.getCollator().compare);\n  // If descending, reverse the order.\n  if (descending === true) {\n    sorted = sorted.reverse();\n  }\n  return {\n    startLineNumber: startLineNumber,\n    endLineNumber: endLineNumber,\n    before: linesToSort,\n    after: sorted\n  };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n  var data = getSortData(model, selection, descending);\n  if (!data) {\n    return null;\n  }\n  return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}","map":{"version":3,"names":["EditOperation","Range","SortLinesCommand","selection","descending","_classCallCheck","selectionId","_createClass","key","value","getEditOperations","model","builder","op","sortLines","addEditOperation","range","text","trackSelection","computeCursorState","helper","getTrackedSelection","getCollator","_COLLATOR","Intl","Collator","canRun","data","getSortData","i","len","before","length","after","startLineNumber","endLineNumber","endColumn","linesToSort","lineNumber","push","getLineContent","sorted","slice","sort","compare","reverse","replace","getLineMaxColumn","join"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,uCAAuC;AACrE,SAASC,KAAK,QAAQ,+BAA+B;AACrD,WAAaC,gBAAgB;EAOzB,SAAAA,iBAAYC,SAAS,EAAEC,UAAU,EAAE;IAAAC,eAAA,OAAAH,gBAAA;IAC/B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACE,WAAW,GAAG,IAAI;EAC3B;EAAC,OAAAC,YAAA,CAAAL,gBAAA;IAAAM,GAAA;IAAAC,KAAA,EACD,SAAAC,kBAAkBC,KAAK,EAAEC,OAAO,EAAE;MAC9B,IAAMC,EAAE,GAAGC,SAAS,CAACH,KAAK,EAAE,IAAI,CAACR,SAAS,EAAE,IAAI,CAACC,UAAU,CAAC;MAC5D,IAAIS,EAAE,EAAE;QACJD,OAAO,CAACG,gBAAgB,CAACF,EAAE,CAACG,KAAK,EAAEH,EAAE,CAACI,IAAI,CAAC;MAC/C;MACA,IAAI,CAACX,WAAW,GAAGM,OAAO,CAACM,cAAc,CAAC,IAAI,CAACf,SAAS,CAAC;IAC7D;EAAC;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAU,mBAAmBR,KAAK,EAAES,MAAM,EAAE;MAC9B,OAAOA,MAAM,CAACC,mBAAmB,CAAC,IAAI,CAACf,WAAW,CAAC;IACvD;EAAC;IAAAE,GAAA;IAAAC,KAAA,EApBD,SAAAa,YAAA,EAAqB;MACjB,IAAI,CAACpB,gBAAgB,CAACqB,SAAS,EAAE;QAC7BrB,gBAAgB,CAACqB,SAAS,GAAG,IAAIC,IAAI,CAACC,QAAQ,CAAC,CAAC;MACpD;MACA,OAAOvB,gBAAgB,CAACqB,SAAS;IACrC;EAAC;IAAAf,GAAA;IAAAC,KAAA,EAgBD,SAAAiB,OAAcf,KAAK,EAAER,SAAS,EAAEC,UAAU,EAAE;MACxC,IAAIO,KAAK,KAAK,IAAI,EAAE;QAChB,OAAO,KAAK;MAChB;MACA,IAAMgB,IAAI,GAAGC,WAAW,CAACjB,KAAK,EAAER,SAAS,EAAEC,UAAU,CAAC;MACtD,IAAI,CAACuB,IAAI,EAAE;QACP,OAAO,KAAK;MAChB;MACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGH,IAAI,CAACI,MAAM,CAACC,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QACpD,IAAIF,IAAI,CAACI,MAAM,CAACF,CAAC,CAAC,KAAKF,IAAI,CAACM,KAAK,CAACJ,CAAC,CAAC,EAAE;UAClC,OAAO,IAAI;QACf;MACJ;MACA,OAAO,KAAK;IAChB;EAAC;AAAA;AAEL3B,gBAAgB,CAACqB,SAAS,GAAG,IAAI;AACjC,SAASK,WAAWA,CAACjB,KAAK,EAAER,SAAS,EAAEC,UAAU,EAAE;EAC/C,IAAM8B,eAAe,GAAG/B,SAAS,CAAC+B,eAAe;EACjD,IAAIC,aAAa,GAAGhC,SAAS,CAACgC,aAAa;EAC3C,IAAIhC,SAAS,CAACiC,SAAS,KAAK,CAAC,EAAE;IAC3BD,aAAa,EAAE;EACnB;EACA;EACA,IAAID,eAAe,IAAIC,aAAa,EAAE;IAClC,OAAO,IAAI;EACf;EACA,IAAME,WAAW,GAAG,EAAE;EACtB;EACA,KAAK,IAAIC,UAAU,GAAGJ,eAAe,EAAEI,UAAU,IAAIH,aAAa,EAAEG,UAAU,EAAE,EAAE;IAC9ED,WAAW,CAACE,IAAI,CAAC5B,KAAK,CAAC6B,cAAc,CAACF,UAAU,CAAC,CAAC;EACtD;EACA,IAAIG,MAAM,GAAGJ,WAAW,CAACK,KAAK,CAAC,CAAC,CAAC;EACjCD,MAAM,CAACE,IAAI,CAACzC,gBAAgB,CAACoB,WAAW,CAAC,CAAC,CAACsB,OAAO,CAAC;EACnD;EACA,IAAIxC,UAAU,KAAK,IAAI,EAAE;IACrBqC,MAAM,GAAGA,MAAM,CAACI,OAAO,CAAC,CAAC;EAC7B;EACA,OAAO;IACHX,eAAe,EAAEA,eAAe;IAChCC,aAAa,EAAEA,aAAa;IAC5BJ,MAAM,EAAEM,WAAW;IACnBJ,KAAK,EAAEQ;EACX,CAAC;AACL;AACA;AACA;AACA;AACA,SAAS3B,SAASA,CAACH,KAAK,EAAER,SAAS,EAAEC,UAAU,EAAE;EAC7C,IAAMuB,IAAI,GAAGC,WAAW,CAACjB,KAAK,EAAER,SAAS,EAAEC,UAAU,CAAC;EACtD,IAAI,CAACuB,IAAI,EAAE;IACP,OAAO,IAAI;EACf;EACA,OAAO3B,aAAa,CAAC8C,OAAO,CAAC,IAAI7C,KAAK,CAAC0B,IAAI,CAACO,eAAe,EAAE,CAAC,EAAEP,IAAI,CAACQ,aAAa,EAAExB,KAAK,CAACoC,gBAAgB,CAACpB,IAAI,CAACQ,aAAa,CAAC,CAAC,EAAER,IAAI,CAACM,KAAK,CAACe,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3J","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}