{"ast":null,"code":"import _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SelectionHighlighter_1;\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CommonFindController } from '../../find/browser/findController.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { getSelectionHighlightDecorationOptions } from '../../wordHighlighter/browser/highlightDecorations.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nfunction announceCursorChange(previousCursorState, cursorState) {\n  var cursorDiff = cursorState.filter(function (cs) {\n    return !previousCursorState.find(function (pcs) {\n      return pcs.equals(cs);\n    });\n  });\n  if (cursorDiff.length >= 1) {\n    var cursorPositions = cursorDiff.map(function (cs) {\n      return \"line \".concat(cs.viewState.position.lineNumber, \" column \").concat(cs.viewState.position.column);\n    }).join(', ');\n    var msg = cursorDiff.length === 1 ? nls.localize('cursorAdded', \"Cursor added: {0}\", cursorPositions) : nls.localize('cursorsAdded', \"Cursors added: {0}\", cursorPositions);\n    status(msg);\n  }\n}\nexport var InsertCursorAbove = /*#__PURE__*/function (_EditorAction) {\n  function InsertCursorAbove() {\n    _classCallCheck(this, InsertCursorAbove);\n    return _callSuper(this, InsertCursorAbove, [{\n      id: 'editor.action.insertCursorAbove',\n      label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\n      alias: 'Add Cursor Above',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n        linux: {\n          primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n          secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miInsertCursorAbove',\n          comment: ['&& denotes a mnemonic']\n        }, \"&&Add Cursor Above\"),\n        order: 2\n      }\n    }]);\n  }\n  _inherits(InsertCursorAbove, _EditorAction);\n  return _createClass(InsertCursorAbove, [{\n    key: \"run\",\n    value: function run(accessor, editor, args) {\n      if (!editor.hasModel()) {\n        return;\n      }\n      var useLogicalLine = true;\n      if (args && args.logicalLine === false) {\n        useLogicalLine = false;\n      }\n      var viewModel = editor._getViewModel();\n      if (viewModel.cursorConfig.readOnly) {\n        return;\n      }\n      viewModel.model.pushStackElement();\n      var previousCursorState = viewModel.getCursorStates();\n      viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine));\n      viewModel.revealTopMostCursor(args.source);\n      announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n  }]);\n}(EditorAction);\nexport var InsertCursorBelow = /*#__PURE__*/function (_EditorAction2) {\n  function InsertCursorBelow() {\n    _classCallCheck(this, InsertCursorBelow);\n    return _callSuper(this, InsertCursorBelow, [{\n      id: 'editor.action.insertCursorBelow',\n      label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\n      alias: 'Add Cursor Below',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n        linux: {\n          primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n          secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miInsertCursorBelow',\n          comment: ['&& denotes a mnemonic']\n        }, \"A&&dd Cursor Below\"),\n        order: 3\n      }\n    }]);\n  }\n  _inherits(InsertCursorBelow, _EditorAction2);\n  return _createClass(InsertCursorBelow, [{\n    key: \"run\",\n    value: function run(accessor, editor, args) {\n      if (!editor.hasModel()) {\n        return;\n      }\n      var useLogicalLine = true;\n      if (args && args.logicalLine === false) {\n        useLogicalLine = false;\n      }\n      var viewModel = editor._getViewModel();\n      if (viewModel.cursorConfig.readOnly) {\n        return;\n      }\n      viewModel.model.pushStackElement();\n      var previousCursorState = viewModel.getCursorStates();\n      viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine));\n      viewModel.revealBottomMostCursor(args.source);\n      announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n  }]);\n}(EditorAction);\nvar InsertCursorAtEndOfEachLineSelected = /*#__PURE__*/function (_EditorAction3) {\n  function InsertCursorAtEndOfEachLineSelected() {\n    _classCallCheck(this, InsertCursorAtEndOfEachLineSelected);\n    return _callSuper(this, InsertCursorAtEndOfEachLineSelected, [{\n      id: 'editor.action.insertCursorAtEndOfEachLineSelected',\n      label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\n      alias: 'Add Cursors to Line Ends',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 39 /* KeyCode.KeyI */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miInsertCursorAtEndOfEachLineSelected',\n          comment: ['&& denotes a mnemonic']\n        }, \"Add C&&ursors to Line Ends\"),\n        order: 4\n      }\n    }]);\n  }\n  _inherits(InsertCursorAtEndOfEachLineSelected, _EditorAction3);\n  return _createClass(InsertCursorAtEndOfEachLineSelected, [{\n    key: \"getCursorsForSelection\",\n    value: function getCursorsForSelection(selection, model, result) {\n      if (selection.isEmpty()) {\n        return;\n      }\n      for (var i = selection.startLineNumber; i < selection.endLineNumber; i++) {\n        var currentLineMaxColumn = model.getLineMaxColumn(i);\n        result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\n      }\n      if (selection.endColumn > 1) {\n        result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run(accessor, editor) {\n      var _this = this;\n      if (!editor.hasModel()) {\n        return;\n      }\n      var model = editor.getModel();\n      var selections = editor.getSelections();\n      var viewModel = editor._getViewModel();\n      var previousCursorState = viewModel.getCursorStates();\n      var newSelections = [];\n      selections.forEach(function (sel) {\n        return _this.getCursorsForSelection(sel, model, newSelections);\n      });\n      if (newSelections.length > 0) {\n        editor.setSelections(newSelections);\n      }\n      announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n  }]);\n}(EditorAction);\nvar InsertCursorAtEndOfLineSelected = /*#__PURE__*/function (_EditorAction4) {\n  function InsertCursorAtEndOfLineSelected() {\n    _classCallCheck(this, InsertCursorAtEndOfLineSelected);\n    return _callSuper(this, InsertCursorAtEndOfLineSelected, [{\n      id: 'editor.action.addCursorsToBottom',\n      label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\n      alias: 'Add Cursors To Bottom',\n      precondition: undefined\n    }]);\n  }\n  _inherits(InsertCursorAtEndOfLineSelected, _EditorAction4);\n  return _createClass(InsertCursorAtEndOfLineSelected, [{\n    key: \"run\",\n    value: function run(accessor, editor) {\n      if (!editor.hasModel()) {\n        return;\n      }\n      var selections = editor.getSelections();\n      var lineCount = editor.getModel().getLineCount();\n      var newSelections = [];\n      for (var i = selections[0].startLineNumber; i <= lineCount; i++) {\n        newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n      }\n      var viewModel = editor._getViewModel();\n      var previousCursorState = viewModel.getCursorStates();\n      if (newSelections.length > 0) {\n        editor.setSelections(newSelections);\n      }\n      announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n  }]);\n}(EditorAction);\nvar InsertCursorAtTopOfLineSelected = /*#__PURE__*/function (_EditorAction5) {\n  function InsertCursorAtTopOfLineSelected() {\n    _classCallCheck(this, InsertCursorAtTopOfLineSelected);\n    return _callSuper(this, InsertCursorAtTopOfLineSelected, [{\n      id: 'editor.action.addCursorsToTop',\n      label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\n      alias: 'Add Cursors To Top',\n      precondition: undefined\n    }]);\n  }\n  _inherits(InsertCursorAtTopOfLineSelected, _EditorAction5);\n  return _createClass(InsertCursorAtTopOfLineSelected, [{\n    key: \"run\",\n    value: function run(accessor, editor) {\n      if (!editor.hasModel()) {\n        return;\n      }\n      var selections = editor.getSelections();\n      var newSelections = [];\n      for (var i = selections[0].startLineNumber; i >= 1; i--) {\n        newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n      }\n      var viewModel = editor._getViewModel();\n      var previousCursorState = viewModel.getCursorStates();\n      if (newSelections.length > 0) {\n        editor.setSelections(newSelections);\n      }\n      announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n  }]);\n}(EditorAction);\nexport var MultiCursorSessionResult = /*#__PURE__*/_createClass(function MultiCursorSessionResult(selections, revealRange, revealScrollType) {\n  _classCallCheck(this, MultiCursorSessionResult);\n  this.selections = selections;\n  this.revealRange = revealRange;\n  this.revealScrollType = revealScrollType;\n});\nexport var MultiCursorSession = /*#__PURE__*/function () {\n  function MultiCursorSession(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\n    _classCallCheck(this, MultiCursorSession);\n    this._editor = _editor;\n    this.findController = findController;\n    this.isDisconnectedFromFindController = isDisconnectedFromFindController;\n    this.searchText = searchText;\n    this.wholeWord = wholeWord;\n    this.matchCase = matchCase;\n    this.currentMatch = currentMatch;\n  }\n  return _createClass(MultiCursorSession, [{\n    key: \"addSelectionToNextFindMatch\",\n    value: function addSelectionToNextFindMatch() {\n      if (!this._editor.hasModel()) {\n        return null;\n      }\n      var nextMatch = this._getNextMatch();\n      if (!nextMatch) {\n        return null;\n      }\n      var allSelections = this._editor.getSelections();\n      return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0 /* ScrollType.Smooth */);\n    }\n  }, {\n    key: \"moveSelectionToNextFindMatch\",\n    value: function moveSelectionToNextFindMatch() {\n      if (!this._editor.hasModel()) {\n        return null;\n      }\n      var nextMatch = this._getNextMatch();\n      if (!nextMatch) {\n        return null;\n      }\n      var allSelections = this._editor.getSelections();\n      return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* ScrollType.Smooth */);\n    }\n  }, {\n    key: \"_getNextMatch\",\n    value: function _getNextMatch() {\n      if (!this._editor.hasModel()) {\n        return null;\n      }\n      if (this.currentMatch) {\n        var result = this.currentMatch;\n        this.currentMatch = null;\n        return result;\n      }\n      this.findController.highlightFindOptions();\n      var allSelections = this._editor.getSelections();\n      var lastAddedSelection = allSelections[allSelections.length - 1];\n      var nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n      if (!nextMatch) {\n        return null;\n      }\n      return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\n    }\n  }, {\n    key: \"addSelectionToPreviousFindMatch\",\n    value: function addSelectionToPreviousFindMatch() {\n      if (!this._editor.hasModel()) {\n        return null;\n      }\n      var previousMatch = this._getPreviousMatch();\n      if (!previousMatch) {\n        return null;\n      }\n      var allSelections = this._editor.getSelections();\n      return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0 /* ScrollType.Smooth */);\n    }\n  }, {\n    key: \"moveSelectionToPreviousFindMatch\",\n    value: function moveSelectionToPreviousFindMatch() {\n      if (!this._editor.hasModel()) {\n        return null;\n      }\n      var previousMatch = this._getPreviousMatch();\n      if (!previousMatch) {\n        return null;\n      }\n      var allSelections = this._editor.getSelections();\n      return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* ScrollType.Smooth */);\n    }\n  }, {\n    key: \"_getPreviousMatch\",\n    value: function _getPreviousMatch() {\n      if (!this._editor.hasModel()) {\n        return null;\n      }\n      if (this.currentMatch) {\n        var result = this.currentMatch;\n        this.currentMatch = null;\n        return result;\n      }\n      this.findController.highlightFindOptions();\n      var allSelections = this._editor.getSelections();\n      var lastAddedSelection = allSelections[allSelections.length - 1];\n      var previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n      if (!previousMatch) {\n        return null;\n      }\n      return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\n    }\n  }, {\n    key: \"selectAll\",\n    value: function selectAll(searchScope) {\n      if (!this._editor.hasModel()) {\n        return [];\n      }\n      this.findController.highlightFindOptions();\n      var editorModel = this._editor.getModel();\n      if (searchScope) {\n        return editorModel.findMatches(this.searchText, searchScope, false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n      }\n      return editorModel.findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(editor, findController) {\n      if (!editor.hasModel()) {\n        return null;\n      }\n      var findState = findController.getState();\n      // Find widget owns entirely what we search for if:\n      //  - focus is not in the editor (i.e. it is in the find widget)\n      //  - and the search widget is visible\n      //  - and the search string is non-empty\n      if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\n        // Find widget owns what is searched for\n        return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\n      }\n      // Otherwise, the selection gives the search text, and the find widget gives the search settings\n      // The exception is the find state disassociation case: when beginning with a single, collapsed selection\n      var isDisconnectedFromFindController = false;\n      var wholeWord;\n      var matchCase;\n      var selections = editor.getSelections();\n      if (selections.length === 1 && selections[0].isEmpty()) {\n        isDisconnectedFromFindController = true;\n        wholeWord = true;\n        matchCase = true;\n      } else {\n        wholeWord = findState.wholeWord;\n        matchCase = findState.matchCase;\n      }\n      // Selection owns what is searched for\n      var s = editor.getSelection();\n      var searchText;\n      var currentMatch = null;\n      if (s.isEmpty()) {\n        // selection is empty => expand to current word\n        var word = editor.getConfiguredWordAtPosition(s.getStartPosition());\n        if (!word) {\n          return null;\n        }\n        searchText = word.word;\n        currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\n      } else {\n        searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\n      }\n      return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\n    }\n  }]);\n}();\nexport var MultiCursorSelectionController = /*#__PURE__*/function (_Disposable) {\n  function MultiCursorSelectionController(editor) {\n    var _this2;\n    _classCallCheck(this, MultiCursorSelectionController);\n    _this2 = _callSuper(this, MultiCursorSelectionController);\n    _this2._sessionDispose = _this2._register(new DisposableStore());\n    _this2._editor = editor;\n    _this2._ignoreSelectionChange = false;\n    _this2._session = null;\n    return _this2;\n  }\n  _inherits(MultiCursorSelectionController, _Disposable);\n  return _createClass(MultiCursorSelectionController, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._endSession();\n      _get(_getPrototypeOf(MultiCursorSelectionController.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"_beginSessionIfNeeded\",\n    value: function _beginSessionIfNeeded(findController) {\n      var _this3 = this;\n      if (!this._session) {\n        // Create a new session\n        var session = MultiCursorSession.create(this._editor, findController);\n        if (!session) {\n          return;\n        }\n        this._session = session;\n        var newState = {\n          searchString: this._session.searchText\n        };\n        if (this._session.isDisconnectedFromFindController) {\n          newState.wholeWordOverride = 1 /* FindOptionOverride.True */;\n          newState.matchCaseOverride = 1 /* FindOptionOverride.True */;\n          newState.isRegexOverride = 2 /* FindOptionOverride.False */;\n        }\n        findController.getState().change(newState, false);\n        this._sessionDispose.add(this._editor.onDidChangeCursorSelection(function (e) {\n          if (_this3._ignoreSelectionChange) {\n            return;\n          }\n          _this3._endSession();\n        }));\n        this._sessionDispose.add(this._editor.onDidBlurEditorText(function () {\n          _this3._endSession();\n        }));\n        this._sessionDispose.add(findController.getState().onFindReplaceStateChange(function (e) {\n          if (e.matchCase || e.wholeWord) {\n            _this3._endSession();\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_endSession\",\n    value: function _endSession() {\n      this._sessionDispose.clear();\n      if (this._session && this._session.isDisconnectedFromFindController) {\n        var newState = {\n          wholeWordOverride: 0 /* FindOptionOverride.NotSet */,\n          matchCaseOverride: 0 /* FindOptionOverride.NotSet */,\n          isRegexOverride: 0 /* FindOptionOverride.NotSet */\n        };\n        this._session.findController.getState().change(newState, false);\n      }\n      this._session = null;\n    }\n  }, {\n    key: \"_setSelections\",\n    value: function _setSelections(selections) {\n      this._ignoreSelectionChange = true;\n      this._editor.setSelections(selections);\n      this._ignoreSelectionChange = false;\n    }\n  }, {\n    key: \"_expandEmptyToWord\",\n    value: function _expandEmptyToWord(model, selection) {\n      if (!selection.isEmpty()) {\n        return selection;\n      }\n      var word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());\n      if (!word) {\n        return selection;\n      }\n      return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n    }\n  }, {\n    key: \"_applySessionResult\",\n    value: function _applySessionResult(result) {\n      if (!result) {\n        return;\n      }\n      this._setSelections(result.selections);\n      if (result.revealRange) {\n        this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\n      }\n    }\n  }, {\n    key: \"getSession\",\n    value: function getSession(findController) {\n      return this._session;\n    }\n  }, {\n    key: \"addSelectionToNextFindMatch\",\n    value: function addSelectionToNextFindMatch(findController) {\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      if (!this._session) {\n        // If there are multiple cursors, handle the case where they do not all select the same text.\n        var allSelections = this._editor.getSelections();\n        if (allSelections.length > 1) {\n          var findState = findController.getState();\n          var matchCase = findState.matchCase;\n          var selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\n          if (!selectionsContainSameText) {\n            var model = this._editor.getModel();\n            var resultingSelections = [];\n            for (var i = 0, len = allSelections.length; i < len; i++) {\n              resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\n            }\n            this._editor.setSelections(resultingSelections);\n            return;\n          }\n        }\n      }\n      this._beginSessionIfNeeded(findController);\n      if (this._session) {\n        this._applySessionResult(this._session.addSelectionToNextFindMatch());\n      }\n    }\n  }, {\n    key: \"addSelectionToPreviousFindMatch\",\n    value: function addSelectionToPreviousFindMatch(findController) {\n      this._beginSessionIfNeeded(findController);\n      if (this._session) {\n        this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\n      }\n    }\n  }, {\n    key: \"moveSelectionToNextFindMatch\",\n    value: function moveSelectionToNextFindMatch(findController) {\n      this._beginSessionIfNeeded(findController);\n      if (this._session) {\n        this._applySessionResult(this._session.moveSelectionToNextFindMatch());\n      }\n    }\n  }, {\n    key: \"moveSelectionToPreviousFindMatch\",\n    value: function moveSelectionToPreviousFindMatch(findController) {\n      this._beginSessionIfNeeded(findController);\n      if (this._session) {\n        this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\n      }\n    }\n  }, {\n    key: \"selectAll\",\n    value: function selectAll(findController) {\n      if (!this._editor.hasModel()) {\n        return;\n      }\n      var matches = null;\n      var findState = findController.getState();\n      // Special case: find widget owns entirely what we search for if:\n      // - focus is not in the editor (i.e. it is in the find widget)\n      // - and the search widget is visible\n      // - and the search string is non-empty\n      // - and we're searching for a regex\n      if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\n        var editorModel = this._editor.getModel();\n        if (findState.searchScope) {\n          matches = editorModel.findMatches(findState.searchString, findState.searchScope, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        } else {\n          matches = editorModel.findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        }\n      } else {\n        this._beginSessionIfNeeded(findController);\n        if (!this._session) {\n          return;\n        }\n        matches = this._session.selectAll(findState.searchScope);\n      }\n      if (matches.length > 0) {\n        var editorSelection = this._editor.getSelection();\n        // Have the primary cursor remain the one where the action was invoked\n        for (var i = 0, len = matches.length; i < len; i++) {\n          var match = matches[i];\n          var intersection = match.range.intersectRanges(editorSelection);\n          if (intersection) {\n            // bingo!\n            matches[i] = matches[0];\n            matches[0] = match;\n            break;\n          }\n        }\n        this._setSelections(matches.map(function (m) {\n          return new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn);\n        }));\n      }\n    }\n  }], [{\n    key: \"get\",\n    value: function get(editor) {\n      return editor.getContribution(MultiCursorSelectionController.ID);\n    }\n  }]);\n}(Disposable);\nMultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\nexport var MultiCursorSelectionControllerAction = /*#__PURE__*/function (_EditorAction6) {\n  function MultiCursorSelectionControllerAction() {\n    _classCallCheck(this, MultiCursorSelectionControllerAction);\n    return _callSuper(this, MultiCursorSelectionControllerAction, arguments);\n  }\n  _inherits(MultiCursorSelectionControllerAction, _EditorAction6);\n  return _createClass(MultiCursorSelectionControllerAction, [{\n    key: \"run\",\n    value: function run(accessor, editor) {\n      var multiCursorController = MultiCursorSelectionController.get(editor);\n      if (!multiCursorController) {\n        return;\n      }\n      var viewModel = editor._getViewModel();\n      if (viewModel) {\n        var previousCursorState = viewModel.getCursorStates();\n        var findController = CommonFindController.get(editor);\n        if (findController) {\n          this._run(multiCursorController, findController);\n        } else {\n          var newFindController = accessor.get(IInstantiationService).createInstance(CommonFindController, editor);\n          this._run(multiCursorController, newFindController);\n          newFindController.dispose();\n        }\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n      }\n    }\n  }]);\n}(EditorAction);\nexport var AddSelectionToNextFindMatchAction = /*#__PURE__*/function (_MultiCursorSelection) {\n  function AddSelectionToNextFindMatchAction() {\n    _classCallCheck(this, AddSelectionToNextFindMatchAction);\n    return _callSuper(this, AddSelectionToNextFindMatchAction, [{\n      id: 'editor.action.addSelectionToNextFindMatch',\n      label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\n      alias: 'Add Selection To Next Find Match',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 34 /* KeyCode.KeyD */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miAddSelectionToNextFindMatch',\n          comment: ['&& denotes a mnemonic']\n        }, \"Add &&Next Occurrence\"),\n        order: 5\n      }\n    }]);\n  }\n  _inherits(AddSelectionToNextFindMatchAction, _MultiCursorSelection);\n  return _createClass(AddSelectionToNextFindMatchAction, [{\n    key: \"_run\",\n    value: function _run(multiCursorController, findController) {\n      multiCursorController.addSelectionToNextFindMatch(findController);\n    }\n  }]);\n}(MultiCursorSelectionControllerAction);\nexport var AddSelectionToPreviousFindMatchAction = /*#__PURE__*/function (_MultiCursorSelection2) {\n  function AddSelectionToPreviousFindMatchAction() {\n    _classCallCheck(this, AddSelectionToPreviousFindMatchAction);\n    return _callSuper(this, AddSelectionToPreviousFindMatchAction, [{\n      id: 'editor.action.addSelectionToPreviousFindMatch',\n      label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\n      alias: 'Add Selection To Previous Find Match',\n      precondition: undefined,\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miAddSelectionToPreviousFindMatch',\n          comment: ['&& denotes a mnemonic']\n        }, \"Add P&&revious Occurrence\"),\n        order: 6\n      }\n    }]);\n  }\n  _inherits(AddSelectionToPreviousFindMatchAction, _MultiCursorSelection2);\n  return _createClass(AddSelectionToPreviousFindMatchAction, [{\n    key: \"_run\",\n    value: function _run(multiCursorController, findController) {\n      multiCursorController.addSelectionToPreviousFindMatch(findController);\n    }\n  }]);\n}(MultiCursorSelectionControllerAction);\nexport var MoveSelectionToNextFindMatchAction = /*#__PURE__*/function (_MultiCursorSelection3) {\n  function MoveSelectionToNextFindMatchAction() {\n    _classCallCheck(this, MoveSelectionToNextFindMatchAction);\n    return _callSuper(this, MoveSelectionToNextFindMatchAction, [{\n      id: 'editor.action.moveSelectionToNextFindMatch',\n      label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\n      alias: 'Move Last Selection To Next Find Match',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 34 /* KeyCode.KeyD */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    }]);\n  }\n  _inherits(MoveSelectionToNextFindMatchAction, _MultiCursorSelection3);\n  return _createClass(MoveSelectionToNextFindMatchAction, [{\n    key: \"_run\",\n    value: function _run(multiCursorController, findController) {\n      multiCursorController.moveSelectionToNextFindMatch(findController);\n    }\n  }]);\n}(MultiCursorSelectionControllerAction);\nexport var MoveSelectionToPreviousFindMatchAction = /*#__PURE__*/function (_MultiCursorSelection4) {\n  function MoveSelectionToPreviousFindMatchAction() {\n    _classCallCheck(this, MoveSelectionToPreviousFindMatchAction);\n    return _callSuper(this, MoveSelectionToPreviousFindMatchAction, [{\n      id: 'editor.action.moveSelectionToPreviousFindMatch',\n      label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\n      alias: 'Move Last Selection To Previous Find Match',\n      precondition: undefined\n    }]);\n  }\n  _inherits(MoveSelectionToPreviousFindMatchAction, _MultiCursorSelection4);\n  return _createClass(MoveSelectionToPreviousFindMatchAction, [{\n    key: \"_run\",\n    value: function _run(multiCursorController, findController) {\n      multiCursorController.moveSelectionToPreviousFindMatch(findController);\n    }\n  }]);\n}(MultiCursorSelectionControllerAction);\nexport var SelectHighlightsAction = /*#__PURE__*/function (_MultiCursorSelection5) {\n  function SelectHighlightsAction() {\n    _classCallCheck(this, SelectHighlightsAction);\n    return _callSuper(this, SelectHighlightsAction, [{\n      id: 'editor.action.selectHighlights',\n      label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\n      alias: 'Select All Occurrences of Find Match',\n      precondition: undefined,\n      kbOpts: {\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 42 /* KeyCode.KeyL */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menuOpts: {\n        menuId: MenuId.MenubarSelectionMenu,\n        group: '3_multi',\n        title: nls.localize({\n          key: 'miSelectHighlights',\n          comment: ['&& denotes a mnemonic']\n        }, \"Select All &&Occurrences\"),\n        order: 7\n      }\n    }]);\n  }\n  _inherits(SelectHighlightsAction, _MultiCursorSelection5);\n  return _createClass(SelectHighlightsAction, [{\n    key: \"_run\",\n    value: function _run(multiCursorController, findController) {\n      multiCursorController.selectAll(findController);\n    }\n  }]);\n}(MultiCursorSelectionControllerAction);\nexport var CompatChangeAll = /*#__PURE__*/function (_MultiCursorSelection6) {\n  function CompatChangeAll() {\n    _classCallCheck(this, CompatChangeAll);\n    return _callSuper(this, CompatChangeAll, [{\n      id: 'editor.action.changeAll',\n      label: nls.localize('changeAll.label', \"Change All Occurrences\"),\n      alias: 'Change All Occurrences',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\n      kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 60 /* KeyCode.F2 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      contextMenuOpts: {\n        group: '1_modification',\n        order: 1.2\n      }\n    }]);\n  }\n  _inherits(CompatChangeAll, _MultiCursorSelection6);\n  return _createClass(CompatChangeAll, [{\n    key: \"_run\",\n    value: function _run(multiCursorController, findController) {\n      multiCursorController.selectAll(findController);\n    }\n  }]);\n}(MultiCursorSelectionControllerAction);\nvar SelectionHighlighterState = /*#__PURE__*/function () {\n  function SelectionHighlighterState(_model, _searchText, _matchCase, _wordSeparators, prevState) {\n    _classCallCheck(this, SelectionHighlighterState);\n    this._model = _model;\n    this._searchText = _searchText;\n    this._matchCase = _matchCase;\n    this._wordSeparators = _wordSeparators;\n    this._modelVersionId = this._model.getVersionId();\n    this._cachedFindMatches = null;\n    if (prevState && this._model === prevState._model && this._searchText === prevState._searchText && this._matchCase === prevState._matchCase && this._wordSeparators === prevState._wordSeparators && this._modelVersionId === prevState._modelVersionId) {\n      this._cachedFindMatches = prevState._cachedFindMatches;\n    }\n  }\n  return _createClass(SelectionHighlighterState, [{\n    key: \"findMatches\",\n    value: function findMatches() {\n      if (this._cachedFindMatches === null) {\n        this._cachedFindMatches = this._model.findMatches(this._searchText, true, false, this._matchCase, this._wordSeparators, false).map(function (m) {\n          return m.range;\n        });\n        this._cachedFindMatches.sort(Range.compareRangesUsingStarts);\n      }\n      return this._cachedFindMatches;\n    }\n  }]);\n}();\nvar SelectionHighlighter = SelectionHighlighter_1 = /*#__PURE__*/function (_Disposable2) {\n  function SelectionHighlighter(editor, _languageFeaturesService) {\n    var _this4;\n    _classCallCheck(this, SelectionHighlighter);\n    _this4 = _callSuper(this, SelectionHighlighter);\n    _this4._languageFeaturesService = _languageFeaturesService;\n    _this4.editor = editor;\n    _this4._isEnabled = editor.getOption(108 /* EditorOption.selectionHighlight */);\n    _this4._decorations = editor.createDecorationsCollection();\n    _this4.updateSoon = _this4._register(new RunOnceScheduler(function () {\n      return _this4._update();\n    }, 300));\n    _this4.state = null;\n    _this4._register(editor.onDidChangeConfiguration(function (e) {\n      _this4._isEnabled = editor.getOption(108 /* EditorOption.selectionHighlight */);\n    }));\n    _this4._register(editor.onDidChangeCursorSelection(function (e) {\n      if (!_this4._isEnabled) {\n        // Early exit if nothing needs to be done!\n        // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n        return;\n      }\n      if (e.selection.isEmpty()) {\n        if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n          if (_this4.state) {\n            // no longer valid\n            _this4._setState(null);\n          }\n          _this4.updateSoon.schedule();\n        } else {\n          _this4._setState(null);\n        }\n      } else {\n        _this4._update();\n      }\n    }));\n    _this4._register(editor.onDidChangeModel(function (e) {\n      _this4._setState(null);\n    }));\n    _this4._register(editor.onDidChangeModelContent(function (e) {\n      if (_this4._isEnabled) {\n        _this4.updateSoon.schedule();\n      }\n    }));\n    var findController = CommonFindController.get(editor);\n    if (findController) {\n      _this4._register(findController.getState().onFindReplaceStateChange(function (e) {\n        _this4._update();\n      }));\n    }\n    _this4.updateSoon.schedule();\n    return _this4;\n  }\n  _inherits(SelectionHighlighter, _Disposable2);\n  return _createClass(SelectionHighlighter, [{\n    key: \"_update\",\n    value: function _update() {\n      this._setState(SelectionHighlighter_1._createState(this.state, this._isEnabled, this.editor));\n    }\n  }, {\n    key: \"_setState\",\n    value: function _setState(newState) {\n      this.state = newState;\n      if (!this.state) {\n        this._decorations.clear();\n        return;\n      }\n      if (!this.editor.hasModel()) {\n        return;\n      }\n      var model = this.editor.getModel();\n      if (model.isTooLargeForTokenization()) {\n        // the file is too large, so searching word under cursor in the whole document would be blocking the UI.\n        return;\n      }\n      var allMatches = this.state.findMatches();\n      var selections = this.editor.getSelections();\n      selections.sort(Range.compareRangesUsingStarts);\n      // do not overlap with selection (issue #64 and #512)\n      var matches = [];\n      for (var i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\n        var match = allMatches[i];\n        if (j >= lenJ) {\n          // finished all editor selections\n          matches.push(match);\n          i++;\n        } else {\n          var cmp = Range.compareRangesUsingStarts(match, selections[j]);\n          if (cmp < 0) {\n            // match is before sel\n            if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\n              matches.push(match);\n            }\n            i++;\n          } else if (cmp > 0) {\n            // sel is before match\n            j++;\n          } else {\n            // sel is equal to match\n            i++;\n            j++;\n          }\n        }\n      }\n      var occurrenceHighlighting = this.editor.getOption(81 /* EditorOption.occurrencesHighlight */) !== 'off';\n      var hasSemanticHighlights = this._languageFeaturesService.documentHighlightProvider.has(model) && occurrenceHighlighting;\n      var decorations = matches.map(function (r) {\n        return {\n          range: r,\n          options: getSelectionHighlightDecorationOptions(hasSemanticHighlights)\n        };\n      });\n      this._decorations.set(decorations);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._setState(null);\n      _get(_getPrototypeOf(SelectionHighlighter.prototype), \"dispose\", this).call(this);\n    }\n  }], [{\n    key: \"_createState\",\n    value: function _createState(oldState, isEnabled, editor) {\n      if (!isEnabled) {\n        return null;\n      }\n      if (!editor.hasModel()) {\n        return null;\n      }\n      var s = editor.getSelection();\n      if (s.startLineNumber !== s.endLineNumber) {\n        // multiline forbidden for perf reasons\n        return null;\n      }\n      var multiCursorController = MultiCursorSelectionController.get(editor);\n      if (!multiCursorController) {\n        return null;\n      }\n      var findController = CommonFindController.get(editor);\n      if (!findController) {\n        return null;\n      }\n      var r = multiCursorController.getSession(findController);\n      if (!r) {\n        var allSelections = editor.getSelections();\n        if (allSelections.length > 1) {\n          var _findState = findController.getState();\n          var matchCase = _findState.matchCase;\n          var selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\n          if (!selectionsContainSameText) {\n            return null;\n          }\n        }\n        r = MultiCursorSession.create(editor, findController);\n      }\n      if (!r) {\n        return null;\n      }\n      if (r.currentMatch) {\n        // This is an empty selection\n        // Do not interfere with semantic word highlighting in the no selection case\n        return null;\n      }\n      if (/^[ \\t]+$/.test(r.searchText)) {\n        // whitespace only selection\n        return null;\n      }\n      if (r.searchText.length > 200) {\n        // very long selection\n        return null;\n      }\n      // TODO: better handling of this case\n      var findState = findController.getState();\n      var caseSensitive = findState.matchCase;\n      // Return early if the find widget shows the exact same matches\n      if (findState.isRevealed) {\n        var findStateSearchString = findState.searchString;\n        if (!caseSensitive) {\n          findStateSearchString = findStateSearchString.toLowerCase();\n        }\n        var mySearchString = r.searchText;\n        if (!caseSensitive) {\n          mySearchString = mySearchString.toLowerCase();\n        }\n        if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\n          return null;\n        }\n      }\n      return new SelectionHighlighterState(editor.getModel(), r.searchText, r.matchCase, r.wholeWord ? editor.getOption(131 /* EditorOption.wordSeparators */) : null, oldState);\n    }\n  }]);\n}(Disposable);\nSelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\nSelectionHighlighter = SelectionHighlighter_1 = __decorate([__param(1, ILanguageFeaturesService)], SelectionHighlighter);\nexport { SelectionHighlighter };\nfunction modelRangesContainSameText(model, ranges, matchCase) {\n  var selectedText = getValueInRange(model, ranges[0], !matchCase);\n  for (var i = 1, len = ranges.length; i < len; i++) {\n    var range = ranges[i];\n    if (range.isEmpty()) {\n      return false;\n    }\n    var thisSelectedText = getValueInRange(model, range, !matchCase);\n    if (selectedText !== thisSelectedText) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getValueInRange(model, range, toLowerCase) {\n  var text = model.getValueInRange(range);\n  return toLowerCase ? text.toLowerCase() : text;\n}\nexport var FocusNextCursor = /*#__PURE__*/function (_EditorAction7) {\n  function FocusNextCursor() {\n    _classCallCheck(this, FocusNextCursor);\n    return _callSuper(this, FocusNextCursor, [{\n      id: 'editor.action.focusNextCursor',\n      label: nls.localize('mutlicursor.focusNextCursor', \"Focus Next Cursor\"),\n      metadata: {\n        description: nls.localize('mutlicursor.focusNextCursor.description', \"Focuses the next cursor\"),\n        args: []\n      },\n      alias: 'Focus Next Cursor',\n      precondition: undefined\n    }]);\n  }\n  _inherits(FocusNextCursor, _EditorAction7);\n  return _createClass(FocusNextCursor, [{\n    key: \"run\",\n    value: function run(accessor, editor, args) {\n      if (!editor.hasModel()) {\n        return;\n      }\n      var viewModel = editor._getViewModel();\n      if (viewModel.cursorConfig.readOnly) {\n        return;\n      }\n      viewModel.model.pushStackElement();\n      var previousCursorState = Array.from(viewModel.getCursorStates());\n      var firstCursor = previousCursorState.shift();\n      if (!firstCursor) {\n        return;\n      }\n      previousCursorState.push(firstCursor);\n      viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, previousCursorState);\n      viewModel.revealPrimaryCursor(args.source, true);\n      announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n  }]);\n}(EditorAction);\nexport var FocusPreviousCursor = /*#__PURE__*/function (_EditorAction8) {\n  function FocusPreviousCursor() {\n    _classCallCheck(this, FocusPreviousCursor);\n    return _callSuper(this, FocusPreviousCursor, [{\n      id: 'editor.action.focusPreviousCursor',\n      label: nls.localize('mutlicursor.focusPreviousCursor', \"Focus Previous Cursor\"),\n      metadata: {\n        description: nls.localize('mutlicursor.focusPreviousCursor.description', \"Focuses the previous cursor\"),\n        args: []\n      },\n      alias: 'Focus Previous Cursor',\n      precondition: undefined\n    }]);\n  }\n  _inherits(FocusPreviousCursor, _EditorAction8);\n  return _createClass(FocusPreviousCursor, [{\n    key: \"run\",\n    value: function run(accessor, editor, args) {\n      if (!editor.hasModel()) {\n        return;\n      }\n      var viewModel = editor._getViewModel();\n      if (viewModel.cursorConfig.readOnly) {\n        return;\n      }\n      viewModel.model.pushStackElement();\n      var previousCursorState = Array.from(viewModel.getCursorStates());\n      var firstCursor = previousCursorState.pop();\n      if (!firstCursor) {\n        return;\n      }\n      previousCursorState.unshift(firstCursor);\n      viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, previousCursorState);\n      viewModel.revealPrimaryCursor(args.source, true);\n      announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n  }]);\n}(EditorAction);\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(InsertCursorAbove);\nregisterEditorAction(InsertCursorBelow);\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\nregisterEditorAction(AddSelectionToNextFindMatchAction);\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\nregisterEditorAction(SelectHighlightsAction);\nregisterEditorAction(CompatChangeAll);\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\nregisterEditorAction(FocusNextCursor);\nregisterEditorAction(FocusPreviousCursor);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","SelectionHighlighter_1","status","RunOnceScheduler","KeyChord","Disposable","DisposableStore","EditorAction","registerEditorAction","registerEditorContribution","CursorMoveCommands","Range","Selection","EditorContextKeys","CommonFindController","nls","MenuId","ContextKeyExpr","ILanguageFeaturesService","getSelectionHighlightDecorationOptions","IInstantiationService","announceCursorChange","previousCursorState","cursorState","cursorDiff","filter","cs","find","pcs","equals","cursorPositions","map","concat","viewState","position","lineNumber","column","join","msg","localize","InsertCursorAbove","_EditorAction","_classCallCheck","_callSuper","id","label","alias","precondition","undefined","kbOpts","kbExpr","editorTextFocus","primary","linux","secondary","weight","menuOpts","menuId","MenubarSelectionMenu","group","title","comment","order","_inherits","_createClass","value","run","accessor","editor","args","hasModel","useLogicalLine","logicalLine","viewModel","_getViewModel","cursorConfig","readOnly","model","pushStackElement","getCursorStates","setCursorStates","source","addCursorUp","revealTopMostCursor","InsertCursorBelow","_EditorAction2","addCursorDown","revealBottomMostCursor","InsertCursorAtEndOfEachLineSelected","_EditorAction3","getCursorsForSelection","selection","result","isEmpty","startLineNumber","endLineNumber","currentLineMaxColumn","getLineMaxColumn","push","endColumn","_this","getModel","selections","getSelections","newSelections","forEach","sel","setSelections","InsertCursorAtEndOfLineSelected","_EditorAction4","lineCount","getLineCount","startColumn","InsertCursorAtTopOfLineSelected","_EditorAction5","MultiCursorSessionResult","revealRange","revealScrollType","MultiCursorSession","_editor","findController","isDisconnectedFromFindController","searchText","wholeWord","matchCase","currentMatch","addSelectionToNextFindMatch","nextMatch","_getNextMatch","allSelections","moveSelectionToNextFindMatch","slice","highlightFindOptions","lastAddedSelection","findNextMatch","getEndPosition","getOption","range","addSelectionToPreviousFindMatch","previousMatch","_getPreviousMatch","moveSelectionToPreviousFindMatch","findPreviousMatch","getStartPosition","selectAll","searchScope","editorModel","findMatches","create","findState","getState","hasTextFocus","isRevealed","searchString","s","getSelection","word","getConfiguredWordAtPosition","getValueInRange","replace","MultiCursorSelectionController","_Disposable","_this2","_sessionDispose","_register","_ignoreSelectionChange","_session","dispose","_endSession","_get","_getPrototypeOf","prototype","call","_beginSessionIfNeeded","_this3","session","newState","wholeWordOverride","matchCaseOverride","isRegexOverride","change","add","onDidChangeCursorSelection","e","onDidBlurEditorText","onFindReplaceStateChange","clear","_setSelections","_expandEmptyToWord","_applySessionResult","revealRangeInCenterIfOutsideViewport","getSession","selectionsContainSameText","modelRangesContainSameText","resultingSelections","len","matches","isRegex","editorSelection","match","intersection","intersectRanges","m","get","getContribution","ID","MultiCursorSelectionControllerAction","_EditorAction6","multiCursorController","_run","newFindController","createInstance","AddSelectionToNextFindMatchAction","_MultiCursorSelection","focus","AddSelectionToPreviousFindMatchAction","_MultiCursorSelection2","MoveSelectionToNextFindMatchAction","_MultiCursorSelection3","MoveSelectionToPreviousFindMatchAction","_MultiCursorSelection4","SelectHighlightsAction","_MultiCursorSelection5","CompatChangeAll","_MultiCursorSelection6","and","writable","contextMenuOpts","SelectionHighlighterState","_model","_searchText","_matchCase","_wordSeparators","prevState","_modelVersionId","getVersionId","_cachedFindMatches","sort","compareRangesUsingStarts","SelectionHighlighter","_Disposable2","_languageFeaturesService","_this4","_isEnabled","_decorations","createDecorationsCollection","updateSoon","_update","state","onDidChangeConfiguration","reason","_setState","schedule","onDidChangeModel","onDidChangeModelContent","_createState","isTooLargeForTokenization","allMatches","j","lenJ","cmp","areIntersecting","occurrenceHighlighting","hasSemanticHighlights","documentHighlightProvider","has","decorations","options","set","oldState","isEnabled","test","caseSensitive","findStateSearchString","toLowerCase","mySearchString","ranges","selectedText","thisSelectedText","text","FocusNextCursor","_EditorAction7","metadata","description","Array","from","firstCursor","shift","revealPrimaryCursor","FocusPreviousCursor","_EditorAction8","pop","unshift"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/multicursor/browser/multicursor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SelectionHighlighter_1;\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CommonFindController } from '../../find/browser/findController.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { getSelectionHighlightDecorationOptions } from '../../wordHighlighter/browser/highlightDecorations.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nfunction announceCursorChange(previousCursorState, cursorState) {\n    const cursorDiff = cursorState.filter(cs => !previousCursorState.find(pcs => pcs.equals(cs)));\n    if (cursorDiff.length >= 1) {\n        const cursorPositions = cursorDiff.map(cs => `line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`).join(', ');\n        const msg = cursorDiff.length === 1 ? nls.localize('cursorAdded', \"Cursor added: {0}\", cursorPositions) : nls.localize('cursorsAdded', \"Cursors added: {0}\", cursorPositions);\n        status(msg);\n    }\n}\nexport class InsertCursorAbove extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertCursorAbove',\n            label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\n            alias: 'Add Cursor Above',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: {\n                    primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                    secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */]\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miInsertCursorAbove', comment: ['&& denotes a mnemonic'] }, \"&&Add Cursor Above\"),\n                order: 2\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let useLogicalLine = true;\n        if (args && args.logicalLine === false) {\n            useLogicalLine = false;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = viewModel.getCursorStates();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine));\n        viewModel.revealTopMostCursor(args.source);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nexport class InsertCursorBelow extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertCursorBelow',\n            label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\n            alias: 'Add Cursor Below',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: {\n                    primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                    secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */]\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miInsertCursorBelow', comment: ['&& denotes a mnemonic'] }, \"A&&dd Cursor Below\"),\n                order: 3\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let useLogicalLine = true;\n        if (args && args.logicalLine === false) {\n            useLogicalLine = false;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = viewModel.getCursorStates();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine));\n        viewModel.revealBottomMostCursor(args.source);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertCursorAtEndOfEachLineSelected',\n            label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\n            alias: 'Add Cursors to Line Ends',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 39 /* KeyCode.KeyI */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miInsertCursorAtEndOfEachLineSelected', comment: ['&& denotes a mnemonic'] }, \"Add C&&ursors to Line Ends\"),\n                order: 4\n            }\n        });\n    }\n    getCursorsForSelection(selection, model, result) {\n        if (selection.isEmpty()) {\n            return;\n        }\n        for (let i = selection.startLineNumber; i < selection.endLineNumber; i++) {\n            const currentLineMaxColumn = model.getLineMaxColumn(i);\n            result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\n        }\n        if (selection.endColumn > 1) {\n            result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\n        }\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        const selections = editor.getSelections();\n        const viewModel = editor._getViewModel();\n        const previousCursorState = viewModel.getCursorStates();\n        const newSelections = [];\n        selections.forEach((sel) => this.getCursorsForSelection(sel, model, newSelections));\n        if (newSelections.length > 0) {\n            editor.setSelections(newSelections);\n        }\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nclass InsertCursorAtEndOfLineSelected extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.addCursorsToBottom',\n            label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\n            alias: 'Add Cursors To Bottom',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        const lineCount = editor.getModel().getLineCount();\n        const newSelections = [];\n        for (let i = selections[0].startLineNumber; i <= lineCount; i++) {\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n        }\n        const viewModel = editor._getViewModel();\n        const previousCursorState = viewModel.getCursorStates();\n        if (newSelections.length > 0) {\n            editor.setSelections(newSelections);\n        }\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nclass InsertCursorAtTopOfLineSelected extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.addCursorsToTop',\n            label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\n            alias: 'Add Cursors To Top',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        const newSelections = [];\n        for (let i = selections[0].startLineNumber; i >= 1; i--) {\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\n        }\n        const viewModel = editor._getViewModel();\n        const previousCursorState = viewModel.getCursorStates();\n        if (newSelections.length > 0) {\n            editor.setSelections(newSelections);\n        }\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nexport class MultiCursorSessionResult {\n    constructor(selections, revealRange, revealScrollType) {\n        this.selections = selections;\n        this.revealRange = revealRange;\n        this.revealScrollType = revealScrollType;\n    }\n}\nexport class MultiCursorSession {\n    static create(editor, findController) {\n        if (!editor.hasModel()) {\n            return null;\n        }\n        const findState = findController.getState();\n        // Find widget owns entirely what we search for if:\n        //  - focus is not in the editor (i.e. it is in the find widget)\n        //  - and the search widget is visible\n        //  - and the search string is non-empty\n        if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\n            // Find widget owns what is searched for\n            return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\n        }\n        // Otherwise, the selection gives the search text, and the find widget gives the search settings\n        // The exception is the find state disassociation case: when beginning with a single, collapsed selection\n        let isDisconnectedFromFindController = false;\n        let wholeWord;\n        let matchCase;\n        const selections = editor.getSelections();\n        if (selections.length === 1 && selections[0].isEmpty()) {\n            isDisconnectedFromFindController = true;\n            wholeWord = true;\n            matchCase = true;\n        }\n        else {\n            wholeWord = findState.wholeWord;\n            matchCase = findState.matchCase;\n        }\n        // Selection owns what is searched for\n        const s = editor.getSelection();\n        let searchText;\n        let currentMatch = null;\n        if (s.isEmpty()) {\n            // selection is empty => expand to current word\n            const word = editor.getConfiguredWordAtPosition(s.getStartPosition());\n            if (!word) {\n                return null;\n            }\n            searchText = word.word;\n            currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\n        }\n        else {\n            searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\n        }\n        return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\n    }\n    constructor(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\n        this._editor = _editor;\n        this.findController = findController;\n        this.isDisconnectedFromFindController = isDisconnectedFromFindController;\n        this.searchText = searchText;\n        this.wholeWord = wholeWord;\n        this.matchCase = matchCase;\n        this.currentMatch = currentMatch;\n    }\n    addSelectionToNextFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const nextMatch = this._getNextMatch();\n        if (!nextMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0 /* ScrollType.Smooth */);\n    }\n    moveSelectionToNextFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const nextMatch = this._getNextMatch();\n        if (!nextMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* ScrollType.Smooth */);\n    }\n    _getNextMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (this.currentMatch) {\n            const result = this.currentMatch;\n            this.currentMatch = null;\n            return result;\n        }\n        this.findController.highlightFindOptions();\n        const allSelections = this._editor.getSelections();\n        const lastAddedSelection = allSelections[allSelections.length - 1];\n        const nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n        if (!nextMatch) {\n            return null;\n        }\n        return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\n    }\n    addSelectionToPreviousFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const previousMatch = this._getPreviousMatch();\n        if (!previousMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0 /* ScrollType.Smooth */);\n    }\n    moveSelectionToPreviousFindMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const previousMatch = this._getPreviousMatch();\n        if (!previousMatch) {\n            return null;\n        }\n        const allSelections = this._editor.getSelections();\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* ScrollType.Smooth */);\n    }\n    _getPreviousMatch() {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (this.currentMatch) {\n            const result = this.currentMatch;\n            this.currentMatch = null;\n            return result;\n        }\n        this.findController.highlightFindOptions();\n        const allSelections = this._editor.getSelections();\n        const lastAddedSelection = allSelections[allSelections.length - 1];\n        const previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n        if (!previousMatch) {\n            return null;\n        }\n        return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\n    }\n    selectAll(searchScope) {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        this.findController.highlightFindOptions();\n        const editorModel = this._editor.getModel();\n        if (searchScope) {\n            return editorModel.findMatches(this.searchText, searchScope, false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        }\n        return editorModel.findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n    }\n}\nexport class MultiCursorSelectionController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(MultiCursorSelectionController.ID);\n    }\n    constructor(editor) {\n        super();\n        this._sessionDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._ignoreSelectionChange = false;\n        this._session = null;\n    }\n    dispose() {\n        this._endSession();\n        super.dispose();\n    }\n    _beginSessionIfNeeded(findController) {\n        if (!this._session) {\n            // Create a new session\n            const session = MultiCursorSession.create(this._editor, findController);\n            if (!session) {\n                return;\n            }\n            this._session = session;\n            const newState = { searchString: this._session.searchText };\n            if (this._session.isDisconnectedFromFindController) {\n                newState.wholeWordOverride = 1 /* FindOptionOverride.True */;\n                newState.matchCaseOverride = 1 /* FindOptionOverride.True */;\n                newState.isRegexOverride = 2 /* FindOptionOverride.False */;\n            }\n            findController.getState().change(newState, false);\n            this._sessionDispose.add(this._editor.onDidChangeCursorSelection((e) => {\n                if (this._ignoreSelectionChange) {\n                    return;\n                }\n                this._endSession();\n            }));\n            this._sessionDispose.add(this._editor.onDidBlurEditorText(() => {\n                this._endSession();\n            }));\n            this._sessionDispose.add(findController.getState().onFindReplaceStateChange((e) => {\n                if (e.matchCase || e.wholeWord) {\n                    this._endSession();\n                }\n            }));\n        }\n    }\n    _endSession() {\n        this._sessionDispose.clear();\n        if (this._session && this._session.isDisconnectedFromFindController) {\n            const newState = {\n                wholeWordOverride: 0 /* FindOptionOverride.NotSet */,\n                matchCaseOverride: 0 /* FindOptionOverride.NotSet */,\n                isRegexOverride: 0 /* FindOptionOverride.NotSet */,\n            };\n            this._session.findController.getState().change(newState, false);\n        }\n        this._session = null;\n    }\n    _setSelections(selections) {\n        this._ignoreSelectionChange = true;\n        this._editor.setSelections(selections);\n        this._ignoreSelectionChange = false;\n    }\n    _expandEmptyToWord(model, selection) {\n        if (!selection.isEmpty()) {\n            return selection;\n        }\n        const word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());\n        if (!word) {\n            return selection;\n        }\n        return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\n    }\n    _applySessionResult(result) {\n        if (!result) {\n            return;\n        }\n        this._setSelections(result.selections);\n        if (result.revealRange) {\n            this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\n        }\n    }\n    getSession(findController) {\n        return this._session;\n    }\n    addSelectionToNextFindMatch(findController) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (!this._session) {\n            // If there are multiple cursors, handle the case where they do not all select the same text.\n            const allSelections = this._editor.getSelections();\n            if (allSelections.length > 1) {\n                const findState = findController.getState();\n                const matchCase = findState.matchCase;\n                const selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\n                if (!selectionsContainSameText) {\n                    const model = this._editor.getModel();\n                    const resultingSelections = [];\n                    for (let i = 0, len = allSelections.length; i < len; i++) {\n                        resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\n                    }\n                    this._editor.setSelections(resultingSelections);\n                    return;\n                }\n            }\n        }\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.addSelectionToNextFindMatch());\n        }\n    }\n    addSelectionToPreviousFindMatch(findController) {\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\n        }\n    }\n    moveSelectionToNextFindMatch(findController) {\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.moveSelectionToNextFindMatch());\n        }\n    }\n    moveSelectionToPreviousFindMatch(findController) {\n        this._beginSessionIfNeeded(findController);\n        if (this._session) {\n            this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\n        }\n    }\n    selectAll(findController) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        let matches = null;\n        const findState = findController.getState();\n        // Special case: find widget owns entirely what we search for if:\n        // - focus is not in the editor (i.e. it is in the find widget)\n        // - and the search widget is visible\n        // - and the search string is non-empty\n        // - and we're searching for a regex\n        if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\n            const editorModel = this._editor.getModel();\n            if (findState.searchScope) {\n                matches = editorModel.findMatches(findState.searchString, findState.searchScope, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            }\n            else {\n                matches = editorModel.findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            }\n        }\n        else {\n            this._beginSessionIfNeeded(findController);\n            if (!this._session) {\n                return;\n            }\n            matches = this._session.selectAll(findState.searchScope);\n        }\n        if (matches.length > 0) {\n            const editorSelection = this._editor.getSelection();\n            // Have the primary cursor remain the one where the action was invoked\n            for (let i = 0, len = matches.length; i < len; i++) {\n                const match = matches[i];\n                const intersection = match.range.intersectRanges(editorSelection);\n                if (intersection) {\n                    // bingo!\n                    matches[i] = matches[0];\n                    matches[0] = match;\n                    break;\n                }\n            }\n            this._setSelections(matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)));\n        }\n    }\n}\nMultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\nexport class MultiCursorSelectionControllerAction extends EditorAction {\n    run(accessor, editor) {\n        const multiCursorController = MultiCursorSelectionController.get(editor);\n        if (!multiCursorController) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel) {\n            const previousCursorState = viewModel.getCursorStates();\n            const findController = CommonFindController.get(editor);\n            if (findController) {\n                this._run(multiCursorController, findController);\n            }\n            else {\n                const newFindController = accessor.get(IInstantiationService).createInstance(CommonFindController, editor);\n                this._run(multiCursorController, newFindController);\n                newFindController.dispose();\n            }\n            announceCursorChange(previousCursorState, viewModel.getCursorStates());\n        }\n    }\n}\nexport class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.addSelectionToNextFindMatch',\n            label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\n            alias: 'Add Selection To Next Find Match',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 34 /* KeyCode.KeyD */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miAddSelectionToNextFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add &&Next Occurrence\"),\n                order: 5\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.addSelectionToNextFindMatch(findController);\n    }\n}\nexport class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.addSelectionToPreviousFindMatch',\n            label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\n            alias: 'Add Selection To Previous Find Match',\n            precondition: undefined,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miAddSelectionToPreviousFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add P&&revious Occurrence\"),\n                order: 6\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.addSelectionToPreviousFindMatch(findController);\n    }\n}\nexport class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.moveSelectionToNextFindMatch',\n            label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\n            alias: 'Move Last Selection To Next Find Match',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 34 /* KeyCode.KeyD */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.moveSelectionToNextFindMatch(findController);\n    }\n}\nexport class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.moveSelectionToPreviousFindMatch',\n            label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\n            alias: 'Move Last Selection To Previous Find Match',\n            precondition: undefined\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.moveSelectionToPreviousFindMatch(findController);\n    }\n}\nexport class SelectHighlightsAction extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectHighlights',\n            label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\n            alias: 'Select All Occurrences of Find Match',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 42 /* KeyCode.KeyL */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '3_multi',\n                title: nls.localize({ key: 'miSelectHighlights', comment: ['&& denotes a mnemonic'] }, \"Select All &&Occurrences\"),\n                order: 7\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.selectAll(findController);\n    }\n}\nexport class CompatChangeAll extends MultiCursorSelectionControllerAction {\n    constructor() {\n        super({\n            id: 'editor.action.changeAll',\n            label: nls.localize('changeAll.label', \"Change All Occurrences\"),\n            alias: 'Change All Occurrences',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 1.2\n            }\n        });\n    }\n    _run(multiCursorController, findController) {\n        multiCursorController.selectAll(findController);\n    }\n}\nclass SelectionHighlighterState {\n    constructor(_model, _searchText, _matchCase, _wordSeparators, prevState) {\n        this._model = _model;\n        this._searchText = _searchText;\n        this._matchCase = _matchCase;\n        this._wordSeparators = _wordSeparators;\n        this._modelVersionId = this._model.getVersionId();\n        this._cachedFindMatches = null;\n        if (prevState\n            && this._model === prevState._model\n            && this._searchText === prevState._searchText\n            && this._matchCase === prevState._matchCase\n            && this._wordSeparators === prevState._wordSeparators\n            && this._modelVersionId === prevState._modelVersionId) {\n            this._cachedFindMatches = prevState._cachedFindMatches;\n        }\n    }\n    findMatches() {\n        if (this._cachedFindMatches === null) {\n            this._cachedFindMatches = this._model.findMatches(this._searchText, true, false, this._matchCase, this._wordSeparators, false).map(m => m.range);\n            this._cachedFindMatches.sort(Range.compareRangesUsingStarts);\n        }\n        return this._cachedFindMatches;\n    }\n}\nlet SelectionHighlighter = SelectionHighlighter_1 = class SelectionHighlighter extends Disposable {\n    constructor(editor, _languageFeaturesService) {\n        super();\n        this._languageFeaturesService = _languageFeaturesService;\n        this.editor = editor;\n        this._isEnabled = editor.getOption(108 /* EditorOption.selectionHighlight */);\n        this._decorations = editor.createDecorationsCollection();\n        this.updateSoon = this._register(new RunOnceScheduler(() => this._update(), 300));\n        this.state = null;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            this._isEnabled = editor.getOption(108 /* EditorOption.selectionHighlight */);\n        }));\n        this._register(editor.onDidChangeCursorSelection((e) => {\n            if (!this._isEnabled) {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            if (e.selection.isEmpty()) {\n                if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                    if (this.state) {\n                        // no longer valid\n                        this._setState(null);\n                    }\n                    this.updateSoon.schedule();\n                }\n                else {\n                    this._setState(null);\n                }\n            }\n            else {\n                this._update();\n            }\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this._setState(null);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (this._isEnabled) {\n                this.updateSoon.schedule();\n            }\n        }));\n        const findController = CommonFindController.get(editor);\n        if (findController) {\n            this._register(findController.getState().onFindReplaceStateChange((e) => {\n                this._update();\n            }));\n        }\n        this.updateSoon.schedule();\n    }\n    _update() {\n        this._setState(SelectionHighlighter_1._createState(this.state, this._isEnabled, this.editor));\n    }\n    static _createState(oldState, isEnabled, editor) {\n        if (!isEnabled) {\n            return null;\n        }\n        if (!editor.hasModel()) {\n            return null;\n        }\n        const s = editor.getSelection();\n        if (s.startLineNumber !== s.endLineNumber) {\n            // multiline forbidden for perf reasons\n            return null;\n        }\n        const multiCursorController = MultiCursorSelectionController.get(editor);\n        if (!multiCursorController) {\n            return null;\n        }\n        const findController = CommonFindController.get(editor);\n        if (!findController) {\n            return null;\n        }\n        let r = multiCursorController.getSession(findController);\n        if (!r) {\n            const allSelections = editor.getSelections();\n            if (allSelections.length > 1) {\n                const findState = findController.getState();\n                const matchCase = findState.matchCase;\n                const selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\n                if (!selectionsContainSameText) {\n                    return null;\n                }\n            }\n            r = MultiCursorSession.create(editor, findController);\n        }\n        if (!r) {\n            return null;\n        }\n        if (r.currentMatch) {\n            // This is an empty selection\n            // Do not interfere with semantic word highlighting in the no selection case\n            return null;\n        }\n        if (/^[ \\t]+$/.test(r.searchText)) {\n            // whitespace only selection\n            return null;\n        }\n        if (r.searchText.length > 200) {\n            // very long selection\n            return null;\n        }\n        // TODO: better handling of this case\n        const findState = findController.getState();\n        const caseSensitive = findState.matchCase;\n        // Return early if the find widget shows the exact same matches\n        if (findState.isRevealed) {\n            let findStateSearchString = findState.searchString;\n            if (!caseSensitive) {\n                findStateSearchString = findStateSearchString.toLowerCase();\n            }\n            let mySearchString = r.searchText;\n            if (!caseSensitive) {\n                mySearchString = mySearchString.toLowerCase();\n            }\n            if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\n                return null;\n            }\n        }\n        return new SelectionHighlighterState(editor.getModel(), r.searchText, r.matchCase, r.wholeWord ? editor.getOption(131 /* EditorOption.wordSeparators */) : null, oldState);\n    }\n    _setState(newState) {\n        this.state = newState;\n        if (!this.state) {\n            this._decorations.clear();\n            return;\n        }\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (model.isTooLargeForTokenization()) {\n            // the file is too large, so searching word under cursor in the whole document would be blocking the UI.\n            return;\n        }\n        const allMatches = this.state.findMatches();\n        const selections = this.editor.getSelections();\n        selections.sort(Range.compareRangesUsingStarts);\n        // do not overlap with selection (issue #64 and #512)\n        const matches = [];\n        for (let i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\n            const match = allMatches[i];\n            if (j >= lenJ) {\n                // finished all editor selections\n                matches.push(match);\n                i++;\n            }\n            else {\n                const cmp = Range.compareRangesUsingStarts(match, selections[j]);\n                if (cmp < 0) {\n                    // match is before sel\n                    if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\n                        matches.push(match);\n                    }\n                    i++;\n                }\n                else if (cmp > 0) {\n                    // sel is before match\n                    j++;\n                }\n                else {\n                    // sel is equal to match\n                    i++;\n                    j++;\n                }\n            }\n        }\n        const occurrenceHighlighting = this.editor.getOption(81 /* EditorOption.occurrencesHighlight */) !== 'off';\n        const hasSemanticHighlights = this._languageFeaturesService.documentHighlightProvider.has(model) && occurrenceHighlighting;\n        const decorations = matches.map(r => {\n            return {\n                range: r,\n                options: getSelectionHighlightDecorationOptions(hasSemanticHighlights)\n            };\n        });\n        this._decorations.set(decorations);\n    }\n    dispose() {\n        this._setState(null);\n        super.dispose();\n    }\n};\nSelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\nSelectionHighlighter = SelectionHighlighter_1 = __decorate([\n    __param(1, ILanguageFeaturesService)\n], SelectionHighlighter);\nexport { SelectionHighlighter };\nfunction modelRangesContainSameText(model, ranges, matchCase) {\n    const selectedText = getValueInRange(model, ranges[0], !matchCase);\n    for (let i = 1, len = ranges.length; i < len; i++) {\n        const range = ranges[i];\n        if (range.isEmpty()) {\n            return false;\n        }\n        const thisSelectedText = getValueInRange(model, range, !matchCase);\n        if (selectedText !== thisSelectedText) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getValueInRange(model, range, toLowerCase) {\n    const text = model.getValueInRange(range);\n    return (toLowerCase ? text.toLowerCase() : text);\n}\nexport class FocusNextCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.focusNextCursor',\n            label: nls.localize('mutlicursor.focusNextCursor', \"Focus Next Cursor\"),\n            metadata: {\n                description: nls.localize('mutlicursor.focusNextCursor.description', \"Focuses the next cursor\"),\n                args: [],\n            },\n            alias: 'Focus Next Cursor',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = Array.from(viewModel.getCursorStates());\n        const firstCursor = previousCursorState.shift();\n        if (!firstCursor) {\n            return;\n        }\n        previousCursorState.push(firstCursor);\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, previousCursorState);\n        viewModel.revealPrimaryCursor(args.source, true);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nexport class FocusPreviousCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.focusPreviousCursor',\n            label: nls.localize('mutlicursor.focusPreviousCursor', \"Focus Previous Cursor\"),\n            metadata: {\n                description: nls.localize('mutlicursor.focusPreviousCursor.description', \"Focuses the previous cursor\"),\n                args: [],\n            },\n            alias: 'Focus Previous Cursor',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        if (viewModel.cursorConfig.readOnly) {\n            return;\n        }\n        viewModel.model.pushStackElement();\n        const previousCursorState = Array.from(viewModel.getCursorStates());\n        const firstCursor = previousCursorState.pop();\n        if (!firstCursor) {\n            return;\n        }\n        previousCursorState.unshift(firstCursor);\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, previousCursorState);\n        viewModel.revealPrimaryCursor(args.source, true);\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\n    }\n}\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(InsertCursorAbove);\nregisterEditorAction(InsertCursorBelow);\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\nregisterEditorAction(AddSelectionToNextFindMatchAction);\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\nregisterEditorAction(SelectHighlightsAction);\nregisterEditorAction(CompatChangeAll);\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\nregisterEditorAction(FocusNextCursor);\nregisterEditorAction(FocusPreviousCursor);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}