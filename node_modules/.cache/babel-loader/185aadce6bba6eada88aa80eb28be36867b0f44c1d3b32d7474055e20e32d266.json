{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Selection } from '../core/selection.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextChange, compressConsecutiveTextChanges } from '../core/textChange.js';\nimport * as buffer from '../../../base/common/buffer.js';\nimport { basename } from '../../../base/common/resources.js';\nfunction uriGetComparisonKey(resource) {\n  return resource.toString();\n}\nexport var SingleModelEditStackData = /*#__PURE__*/function () {\n  function SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes) {\n    _classCallCheck(this, SingleModelEditStackData);\n    this.beforeVersionId = beforeVersionId;\n    this.afterVersionId = afterVersionId;\n    this.beforeEOL = beforeEOL;\n    this.afterEOL = afterEOL;\n    this.beforeCursorState = beforeCursorState;\n    this.afterCursorState = afterCursorState;\n    this.changes = changes;\n  }\n  return _createClass(SingleModelEditStackData, [{\n    key: \"append\",\n    value: function append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n      if (textChanges.length > 0) {\n        this.changes = compressConsecutiveTextChanges(this.changes, textChanges);\n      }\n      this.afterEOL = afterEOL;\n      this.afterVersionId = afterVersionId;\n      this.afterCursorState = afterCursorState;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      var necessarySize = +4 // beforeVersionId\n      + 4 // afterVersionId\n      + 1 // beforeEOL\n      + 1 // afterEOL\n      + SingleModelEditStackData._writeSelectionsSize(this.beforeCursorState) + SingleModelEditStackData._writeSelectionsSize(this.afterCursorState) + 4 // change count\n      ;\n      var _iterator = _createForOfIteratorHelper(this.changes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var change = _step.value;\n          necessarySize += change.writeSize();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var b = new Uint8Array(necessarySize);\n      var offset = 0;\n      buffer.writeUInt32BE(b, this.beforeVersionId, offset);\n      offset += 4;\n      buffer.writeUInt32BE(b, this.afterVersionId, offset);\n      offset += 4;\n      buffer.writeUInt8(b, this.beforeEOL, offset);\n      offset += 1;\n      buffer.writeUInt8(b, this.afterEOL, offset);\n      offset += 1;\n      offset = SingleModelEditStackData._writeSelections(b, this.beforeCursorState, offset);\n      offset = SingleModelEditStackData._writeSelections(b, this.afterCursorState, offset);\n      buffer.writeUInt32BE(b, this.changes.length, offset);\n      offset += 4;\n      var _iterator2 = _createForOfIteratorHelper(this.changes),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _change = _step2.value;\n          offset = _change.write(b, offset);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return b.buffer;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(model, beforeCursorState) {\n      var alternativeVersionId = model.getAlternativeVersionId();\n      var eol = getModelEOL(model);\n      return new SingleModelEditStackData(alternativeVersionId, alternativeVersionId, eol, eol, beforeCursorState, beforeCursorState, []);\n    }\n  }, {\n    key: \"_writeSelectionsSize\",\n    value: function _writeSelectionsSize(selections) {\n      return 4 + 4 * 4 * (selections ? selections.length : 0);\n    }\n  }, {\n    key: \"_writeSelections\",\n    value: function _writeSelections(b, selections, offset) {\n      buffer.writeUInt32BE(b, selections ? selections.length : 0, offset);\n      offset += 4;\n      if (selections) {\n        var _iterator3 = _createForOfIteratorHelper(selections),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var selection = _step3.value;\n            buffer.writeUInt32BE(b, selection.selectionStartLineNumber, offset);\n            offset += 4;\n            buffer.writeUInt32BE(b, selection.selectionStartColumn, offset);\n            offset += 4;\n            buffer.writeUInt32BE(b, selection.positionLineNumber, offset);\n            offset += 4;\n            buffer.writeUInt32BE(b, selection.positionColumn, offset);\n            offset += 4;\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n      return offset;\n    }\n  }, {\n    key: \"_readSelections\",\n    value: function _readSelections(b, offset, dest) {\n      var count = buffer.readUInt32BE(b, offset);\n      offset += 4;\n      for (var i = 0; i < count; i++) {\n        var selectionStartLineNumber = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        var selectionStartColumn = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        var positionLineNumber = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        var positionColumn = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        dest.push(new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn));\n      }\n      return offset;\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(source) {\n      var b = new Uint8Array(source);\n      var offset = 0;\n      var beforeVersionId = buffer.readUInt32BE(b, offset);\n      offset += 4;\n      var afterVersionId = buffer.readUInt32BE(b, offset);\n      offset += 4;\n      var beforeEOL = buffer.readUInt8(b, offset);\n      offset += 1;\n      var afterEOL = buffer.readUInt8(b, offset);\n      offset += 1;\n      var beforeCursorState = [];\n      offset = SingleModelEditStackData._readSelections(b, offset, beforeCursorState);\n      var afterCursorState = [];\n      offset = SingleModelEditStackData._readSelections(b, offset, afterCursorState);\n      var changeCount = buffer.readUInt32BE(b, offset);\n      offset += 4;\n      var changes = [];\n      for (var i = 0; i < changeCount; i++) {\n        offset = TextChange.read(b, offset, changes);\n      }\n      return new SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes);\n    }\n  }]);\n}();\nexport var SingleModelEditStackElement = /*#__PURE__*/function () {\n  function SingleModelEditStackElement(label, code, model, beforeCursorState) {\n    _classCallCheck(this, SingleModelEditStackElement);\n    this.label = label;\n    this.code = code;\n    this.model = model;\n    this._data = SingleModelEditStackData.create(model, beforeCursorState);\n  }\n  return _createClass(SingleModelEditStackElement, [{\n    key: \"type\",\n    get: function get() {\n      return 0 /* UndoRedoElementType.Resource */;\n    }\n  }, {\n    key: \"resource\",\n    get: function get() {\n      if (URI.isUri(this.model)) {\n        return this.model;\n      }\n      return this.model.uri;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var data = this._data instanceof SingleModelEditStackData ? this._data : SingleModelEditStackData.deserialize(this._data);\n      return data.changes.map(function (change) {\n        return change.toString();\n      }).join(', ');\n    }\n  }, {\n    key: \"matchesResource\",\n    value: function matchesResource(resource) {\n      var uri = URI.isUri(this.model) ? this.model : this.model.uri;\n      return uri.toString() === resource.toString();\n    }\n  }, {\n    key: \"setModel\",\n    value: function setModel(model) {\n      this.model = model;\n    }\n  }, {\n    key: \"canAppend\",\n    value: function canAppend(model) {\n      return this.model === model && this._data instanceof SingleModelEditStackData;\n    }\n  }, {\n    key: \"append\",\n    value: function append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!(this._data instanceof SingleModelEditStackData)) {\n        this._data = SingleModelEditStackData.deserialize(this._data);\n      }\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      if (URI.isUri(this.model)) {\n        // don't have a model\n        throw new Error(\"Invalid SingleModelEditStackElement\");\n      }\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n      var data = SingleModelEditStackData.deserialize(this._data);\n      this.model._applyUndo(data.changes, data.beforeEOL, data.beforeVersionId, data.beforeCursorState);\n    }\n  }, {\n    key: \"redo\",\n    value: function redo() {\n      if (URI.isUri(this.model)) {\n        // don't have a model\n        throw new Error(\"Invalid SingleModelEditStackElement\");\n      }\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n      var data = SingleModelEditStackData.deserialize(this._data);\n      this.model._applyRedo(data.changes, data.afterEOL, data.afterVersionId, data.afterCursorState);\n    }\n  }, {\n    key: \"heapSize\",\n    value: function heapSize() {\n      if (this._data instanceof SingleModelEditStackData) {\n        this._data = this._data.serialize();\n      }\n      return this._data.byteLength + 168 /*heap overhead*/;\n    }\n  }]);\n}();\nexport var MultiModelEditStackElement = /*#__PURE__*/function () {\n  function MultiModelEditStackElement(label, code, editStackElements) {\n    _classCallCheck(this, MultiModelEditStackElement);\n    this.label = label;\n    this.code = code;\n    this.type = 1 /* UndoRedoElementType.Workspace */;\n    this._isOpen = true;\n    this._editStackElementsArr = editStackElements.slice(0);\n    this._editStackElementsMap = new Map();\n    var _iterator4 = _createForOfIteratorHelper(this._editStackElementsArr),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var editStackElement = _step4.value;\n        var key = uriGetComparisonKey(editStackElement.resource);\n        this._editStackElementsMap.set(key, editStackElement);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    this._delegate = null;\n  }\n  return _createClass(MultiModelEditStackElement, [{\n    key: \"resources\",\n    get: function get() {\n      return this._editStackElementsArr.map(function (editStackElement) {\n        return editStackElement.resource;\n      });\n    }\n  }, {\n    key: \"prepareUndoRedo\",\n    value: function prepareUndoRedo() {\n      if (this._delegate) {\n        return this._delegate.prepareUndoRedo(this);\n      }\n    }\n  }, {\n    key: \"matchesResource\",\n    value: function matchesResource(resource) {\n      var key = uriGetComparisonKey(resource);\n      return this._editStackElementsMap.has(key);\n    }\n  }, {\n    key: \"setModel\",\n    value: function setModel(model) {\n      var key = uriGetComparisonKey(URI.isUri(model) ? model : model.uri);\n      if (this._editStackElementsMap.has(key)) {\n        this._editStackElementsMap.get(key).setModel(model);\n      }\n    }\n  }, {\n    key: \"canAppend\",\n    value: function canAppend(model) {\n      if (!this._isOpen) {\n        return false;\n      }\n      var key = uriGetComparisonKey(model.uri);\n      if (this._editStackElementsMap.has(key)) {\n        var editStackElement = this._editStackElementsMap.get(key);\n        return editStackElement.canAppend(model);\n      }\n      return false;\n    }\n  }, {\n    key: \"append\",\n    value: function append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n      var key = uriGetComparisonKey(model.uri);\n      var editStackElement = this._editStackElementsMap.get(key);\n      editStackElement.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._isOpen = false;\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      // cannot reopen\n    }\n  }, {\n    key: \"undo\",\n    value: function undo() {\n      this._isOpen = false;\n      var _iterator5 = _createForOfIteratorHelper(this._editStackElementsArr),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var editStackElement = _step5.value;\n          editStackElement.undo();\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"redo\",\n    value: function redo() {\n      var _iterator6 = _createForOfIteratorHelper(this._editStackElementsArr),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var editStackElement = _step6.value;\n          editStackElement.redo();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"heapSize\",\n    value: function heapSize(resource) {\n      var key = uriGetComparisonKey(resource);\n      if (this._editStackElementsMap.has(key)) {\n        var editStackElement = this._editStackElementsMap.get(key);\n        return editStackElement.heapSize();\n      }\n      return 0;\n    }\n  }, {\n    key: \"split\",\n    value: function split() {\n      return this._editStackElementsArr;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var result = [];\n      var _iterator7 = _createForOfIteratorHelper(this._editStackElementsArr),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var editStackElement = _step7.value;\n          result.push(\"\".concat(basename(editStackElement.resource), \": \").concat(editStackElement));\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return \"{\".concat(result.join(', '), \"}\");\n    }\n  }]);\n}();\nfunction getModelEOL(model) {\n  var eol = model.getEOL();\n  if (eol === '\\n') {\n    return 0 /* EndOfLineSequence.LF */;\n  } else {\n    return 1 /* EndOfLineSequence.CRLF */;\n  }\n}\nexport function isEditStackElement(element) {\n  if (!element) {\n    return false;\n  }\n  return element instanceof SingleModelEditStackElement || element instanceof MultiModelEditStackElement;\n}\nexport var EditStack = /*#__PURE__*/function () {\n  function EditStack(model, undoRedoService) {\n    _classCallCheck(this, EditStack);\n    this._model = model;\n    this._undoRedoService = undoRedoService;\n  }\n  return _createClass(EditStack, [{\n    key: \"pushStackElement\",\n    value: function pushStackElement() {\n      var lastElement = this._undoRedoService.getLastElement(this._model.uri);\n      if (isEditStackElement(lastElement)) {\n        lastElement.close();\n      }\n    }\n  }, {\n    key: \"popStackElement\",\n    value: function popStackElement() {\n      var lastElement = this._undoRedoService.getLastElement(this._model.uri);\n      if (isEditStackElement(lastElement)) {\n        lastElement.open();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._undoRedoService.removeElements(this._model.uri);\n    }\n  }, {\n    key: \"_getOrCreateEditStackElement\",\n    value: function _getOrCreateEditStackElement(beforeCursorState, group) {\n      var lastElement = this._undoRedoService.getLastElement(this._model.uri);\n      if (isEditStackElement(lastElement) && lastElement.canAppend(this._model)) {\n        return lastElement;\n      }\n      var newElement = new SingleModelEditStackElement(nls.localize('edit', \"Typing\"), 'undoredo.textBufferEdit', this._model, beforeCursorState);\n      this._undoRedoService.pushElement(newElement, group);\n      return newElement;\n    }\n  }, {\n    key: \"pushEOL\",\n    value: function pushEOL(eol) {\n      var editStackElement = this._getOrCreateEditStackElement(null, undefined);\n      this._model.setEOL(eol);\n      editStackElement.append(this._model, [], getModelEOL(this._model), this._model.getAlternativeVersionId(), null);\n    }\n  }, {\n    key: \"pushEditOperation\",\n    value: function pushEditOperation(beforeCursorState, editOperations, cursorStateComputer, group) {\n      var editStackElement = this._getOrCreateEditStackElement(beforeCursorState, group);\n      var inverseEditOperations = this._model.applyEdits(editOperations, true);\n      var afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperations);\n      var textChanges = inverseEditOperations.map(function (op, index) {\n        return {\n          index: index,\n          textChange: op.textChange\n        };\n      });\n      textChanges.sort(function (a, b) {\n        if (a.textChange.oldPosition === b.textChange.oldPosition) {\n          return a.index - b.index;\n        }\n        return a.textChange.oldPosition - b.textChange.oldPosition;\n      });\n      editStackElement.append(this._model, textChanges.map(function (op) {\n        return op.textChange;\n      }), getModelEOL(this._model), this._model.getAlternativeVersionId(), afterCursorState);\n      return afterCursorState;\n    }\n  }], [{\n    key: \"_computeCursorState\",\n    value: function _computeCursorState(cursorStateComputer, inverseEditOperations) {\n      try {\n        return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n      } catch (e) {\n        onUnexpectedError(e);\n        return null;\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["nls","onUnexpectedError","Selection","URI","TextChange","compressConsecutiveTextChanges","buffer","basename","uriGetComparisonKey","resource","toString","SingleModelEditStackData","beforeVersionId","afterVersionId","beforeEOL","afterEOL","beforeCursorState","afterCursorState","changes","_classCallCheck","_createClass","key","value","append","model","textChanges","length","serialize","necessarySize","_writeSelectionsSize","_iterator","_createForOfIteratorHelper","_step","s","n","done","change","writeSize","err","e","f","b","Uint8Array","offset","writeUInt32BE","writeUInt8","_writeSelections","_iterator2","_step2","write","create","alternativeVersionId","getAlternativeVersionId","eol","getModelEOL","selections","_iterator3","_step3","selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","_readSelections","dest","count","readUInt32BE","i","push","deserialize","source","readUInt8","changeCount","read","SingleModelEditStackElement","label","code","_data","get","isUri","uri","data","map","join","matchesResource","setModel","canAppend","close","open","undo","Error","_applyUndo","redo","_applyRedo","heapSize","byteLength","MultiModelEditStackElement","editStackElements","type","_isOpen","_editStackElementsArr","slice","_editStackElementsMap","Map","_iterator4","_step4","editStackElement","set","_delegate","prepareUndoRedo","has","_iterator5","_step5","_iterator6","_step6","split","result","_iterator7","_step7","concat","getEOL","isEditStackElement","element","EditStack","undoRedoService","_model","_undoRedoService","pushStackElement","lastElement","getLastElement","popStackElement","clear","removeElements","_getOrCreateEditStackElement","group","newElement","localize","pushElement","pushEOL","undefined","setEOL","pushEditOperation","editOperations","cursorStateComputer","inverseEditOperations","applyEdits","_computeCursorState","op","index","textChange","sort","a","oldPosition"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/model/editStack.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Selection } from '../core/selection.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextChange, compressConsecutiveTextChanges } from '../core/textChange.js';\nimport * as buffer from '../../../base/common/buffer.js';\nimport { basename } from '../../../base/common/resources.js';\nfunction uriGetComparisonKey(resource) {\n    return resource.toString();\n}\nexport class SingleModelEditStackData {\n    static create(model, beforeCursorState) {\n        const alternativeVersionId = model.getAlternativeVersionId();\n        const eol = getModelEOL(model);\n        return new SingleModelEditStackData(alternativeVersionId, alternativeVersionId, eol, eol, beforeCursorState, beforeCursorState, []);\n    }\n    constructor(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes) {\n        this.beforeVersionId = beforeVersionId;\n        this.afterVersionId = afterVersionId;\n        this.beforeEOL = beforeEOL;\n        this.afterEOL = afterEOL;\n        this.beforeCursorState = beforeCursorState;\n        this.afterCursorState = afterCursorState;\n        this.changes = changes;\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (textChanges.length > 0) {\n            this.changes = compressConsecutiveTextChanges(this.changes, textChanges);\n        }\n        this.afterEOL = afterEOL;\n        this.afterVersionId = afterVersionId;\n        this.afterCursorState = afterCursorState;\n    }\n    static _writeSelectionsSize(selections) {\n        return 4 + 4 * 4 * (selections ? selections.length : 0);\n    }\n    static _writeSelections(b, selections, offset) {\n        buffer.writeUInt32BE(b, (selections ? selections.length : 0), offset);\n        offset += 4;\n        if (selections) {\n            for (const selection of selections) {\n                buffer.writeUInt32BE(b, selection.selectionStartLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.selectionStartColumn, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionColumn, offset);\n                offset += 4;\n            }\n        }\n        return offset;\n    }\n    static _readSelections(b, offset, dest) {\n        const count = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        for (let i = 0; i < count; i++) {\n            const selectionStartLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const selectionStartColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            dest.push(new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn));\n        }\n        return offset;\n    }\n    serialize() {\n        let necessarySize = (+4 // beforeVersionId\n            + 4 // afterVersionId\n            + 1 // beforeEOL\n            + 1 // afterEOL\n            + SingleModelEditStackData._writeSelectionsSize(this.beforeCursorState)\n            + SingleModelEditStackData._writeSelectionsSize(this.afterCursorState)\n            + 4 // change count\n        );\n        for (const change of this.changes) {\n            necessarySize += change.writeSize();\n        }\n        const b = new Uint8Array(necessarySize);\n        let offset = 0;\n        buffer.writeUInt32BE(b, this.beforeVersionId, offset);\n        offset += 4;\n        buffer.writeUInt32BE(b, this.afterVersionId, offset);\n        offset += 4;\n        buffer.writeUInt8(b, this.beforeEOL, offset);\n        offset += 1;\n        buffer.writeUInt8(b, this.afterEOL, offset);\n        offset += 1;\n        offset = SingleModelEditStackData._writeSelections(b, this.beforeCursorState, offset);\n        offset = SingleModelEditStackData._writeSelections(b, this.afterCursorState, offset);\n        buffer.writeUInt32BE(b, this.changes.length, offset);\n        offset += 4;\n        for (const change of this.changes) {\n            offset = change.write(b, offset);\n        }\n        return b.buffer;\n    }\n    static deserialize(source) {\n        const b = new Uint8Array(source);\n        let offset = 0;\n        const beforeVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const afterVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const beforeEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const afterEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const beforeCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, beforeCursorState);\n        const afterCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, afterCursorState);\n        const changeCount = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const changes = [];\n        for (let i = 0; i < changeCount; i++) {\n            offset = TextChange.read(b, offset, changes);\n        }\n        return new SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes);\n    }\n}\nexport class SingleModelEditStackElement {\n    get type() {\n        return 0 /* UndoRedoElementType.Resource */;\n    }\n    get resource() {\n        if (URI.isUri(this.model)) {\n            return this.model;\n        }\n        return this.model.uri;\n    }\n    constructor(label, code, model, beforeCursorState) {\n        this.label = label;\n        this.code = code;\n        this.model = model;\n        this._data = SingleModelEditStackData.create(model, beforeCursorState);\n    }\n    toString() {\n        const data = (this._data instanceof SingleModelEditStackData ? this._data : SingleModelEditStackData.deserialize(this._data));\n        return data.changes.map(change => change.toString()).join(', ');\n    }\n    matchesResource(resource) {\n        const uri = (URI.isUri(this.model) ? this.model : this.model.uri);\n        return (uri.toString() === resource.toString());\n    }\n    setModel(model) {\n        this.model = model;\n    }\n    canAppend(model) {\n        return (this.model === model && this._data instanceof SingleModelEditStackData);\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n        }\n    }\n    close() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n    }\n    open() {\n        if (!(this._data instanceof SingleModelEditStackData)) {\n            this._data = SingleModelEditStackData.deserialize(this._data);\n        }\n    }\n    undo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyUndo(data.changes, data.beforeEOL, data.beforeVersionId, data.beforeCursorState);\n    }\n    redo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyRedo(data.changes, data.afterEOL, data.afterVersionId, data.afterCursorState);\n    }\n    heapSize() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        return this._data.byteLength + 168 /*heap overhead*/;\n    }\n}\nexport class MultiModelEditStackElement {\n    get resources() {\n        return this._editStackElementsArr.map(editStackElement => editStackElement.resource);\n    }\n    constructor(label, code, editStackElements) {\n        this.label = label;\n        this.code = code;\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this._isOpen = true;\n        this._editStackElementsArr = editStackElements.slice(0);\n        this._editStackElementsMap = new Map();\n        for (const editStackElement of this._editStackElementsArr) {\n            const key = uriGetComparisonKey(editStackElement.resource);\n            this._editStackElementsMap.set(key, editStackElement);\n        }\n        this._delegate = null;\n    }\n    prepareUndoRedo() {\n        if (this._delegate) {\n            return this._delegate.prepareUndoRedo(this);\n        }\n    }\n    matchesResource(resource) {\n        const key = uriGetComparisonKey(resource);\n        return (this._editStackElementsMap.has(key));\n    }\n    setModel(model) {\n        const key = uriGetComparisonKey(URI.isUri(model) ? model : model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            this._editStackElementsMap.get(key).setModel(model);\n        }\n    }\n    canAppend(model) {\n        if (!this._isOpen) {\n            return false;\n        }\n        const key = uriGetComparisonKey(model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.canAppend(model);\n        }\n        return false;\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        const key = uriGetComparisonKey(model.uri);\n        const editStackElement = this._editStackElementsMap.get(key);\n        editStackElement.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n    }\n    close() {\n        this._isOpen = false;\n    }\n    open() {\n        // cannot reopen\n    }\n    undo() {\n        this._isOpen = false;\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.undo();\n        }\n    }\n    redo() {\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.redo();\n        }\n    }\n    heapSize(resource) {\n        const key = uriGetComparisonKey(resource);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.heapSize();\n        }\n        return 0;\n    }\n    split() {\n        return this._editStackElementsArr;\n    }\n    toString() {\n        const result = [];\n        for (const editStackElement of this._editStackElementsArr) {\n            result.push(`${basename(editStackElement.resource)}: ${editStackElement}`);\n        }\n        return `{${result.join(', ')}}`;\n    }\n}\nfunction getModelEOL(model) {\n    const eol = model.getEOL();\n    if (eol === '\\n') {\n        return 0 /* EndOfLineSequence.LF */;\n    }\n    else {\n        return 1 /* EndOfLineSequence.CRLF */;\n    }\n}\nexport function isEditStackElement(element) {\n    if (!element) {\n        return false;\n    }\n    return ((element instanceof SingleModelEditStackElement) || (element instanceof MultiModelEditStackElement));\n}\nexport class EditStack {\n    constructor(model, undoRedoService) {\n        this._model = model;\n        this._undoRedoService = undoRedoService;\n    }\n    pushStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.close();\n        }\n    }\n    popStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.open();\n        }\n    }\n    clear() {\n        this._undoRedoService.removeElements(this._model.uri);\n    }\n    _getOrCreateEditStackElement(beforeCursorState, group) {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement) && lastElement.canAppend(this._model)) {\n            return lastElement;\n        }\n        const newElement = new SingleModelEditStackElement(nls.localize('edit', \"Typing\"), 'undoredo.textBufferEdit', this._model, beforeCursorState);\n        this._undoRedoService.pushElement(newElement, group);\n        return newElement;\n    }\n    pushEOL(eol) {\n        const editStackElement = this._getOrCreateEditStackElement(null, undefined);\n        this._model.setEOL(eol);\n        editStackElement.append(this._model, [], getModelEOL(this._model), this._model.getAlternativeVersionId(), null);\n    }\n    pushEditOperation(beforeCursorState, editOperations, cursorStateComputer, group) {\n        const editStackElement = this._getOrCreateEditStackElement(beforeCursorState, group);\n        const inverseEditOperations = this._model.applyEdits(editOperations, true);\n        const afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperations);\n        const textChanges = inverseEditOperations.map((op, index) => ({ index: index, textChange: op.textChange }));\n        textChanges.sort((a, b) => {\n            if (a.textChange.oldPosition === b.textChange.oldPosition) {\n                return a.index - b.index;\n            }\n            return a.textChange.oldPosition - b.textChange.oldPosition;\n        });\n        editStackElement.append(this._model, textChanges.map(op => op.textChange), getModelEOL(this._model), this._model.getAlternativeVersionId(), afterCursorState);\n        return afterCursorState;\n    }\n    static _computeCursorState(cursorStateComputer, inverseEditOperations) {\n        try {\n            return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n        }\n        catch (e) {\n            onUnexpectedError(e);\n            return null;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}