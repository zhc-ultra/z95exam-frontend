{"ast":null,"code":"import _defineProperty from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nvar _properties;\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { createStyleSheet, isActiveElement, isKeyboardEvent } from '../../../base/browser/dom.js';\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\nimport { DefaultStyleController, isSelectionRangeChangeEvent as _isSelectionRangeChangeEvent, isSelectionSingleChangeEvent as _isSelectionSingleChangeEvent, List, TypeNavigationMode } from '../../../base/browser/ui/list/listWidget.js';\nimport { Table } from '../../../base/browser/ui/table/tableWidget.js';\nimport { TreeFindMode, TreeFindMatchType } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\nimport { CompressibleObjectTree, ObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { combinedDisposable, Disposable, DisposableStore, dispose as _dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { defaultFindWidgetStyles, defaultListStyles, getListStyles } from '../../theme/browser/defaultStyles.js';\nexport var IListService = createDecorator('listService');\nexport var ListService = /*#__PURE__*/function () {\n  function ListService() {\n    _classCallCheck(this, ListService);\n    this.disposables = new DisposableStore();\n    this.lists = [];\n    this._lastFocusedWidget = undefined;\n    this._hasCreatedStyleController = false;\n  }\n  return _createClass(ListService, [{\n    key: \"lastFocusedList\",\n    get: function get() {\n      return this._lastFocusedWidget;\n    }\n  }, {\n    key: \"setLastFocusedList\",\n    value: function setLastFocusedList(widget) {\n      var _a, _b;\n      if (widget === this._lastFocusedWidget) {\n        return;\n      }\n      (_a = this._lastFocusedWidget) === null || _a === void 0 ? void 0 : _a.getHTMLElement().classList.remove('last-focused');\n      this._lastFocusedWidget = widget;\n      (_b = this._lastFocusedWidget) === null || _b === void 0 ? void 0 : _b.getHTMLElement().classList.add('last-focused');\n    }\n  }, {\n    key: \"register\",\n    value: function register(widget, extraContextKeys) {\n      var _this = this;\n      if (!this._hasCreatedStyleController) {\n        this._hasCreatedStyleController = true;\n        // create a shared default tree style sheet for performance reasons\n        var styleController = new DefaultStyleController(createStyleSheet(), '');\n        styleController.style(defaultListStyles);\n      }\n      if (this.lists.some(function (l) {\n        return l.widget === widget;\n      })) {\n        throw new Error('Cannot register the same widget multiple times');\n      }\n      // Keep in our lists list\n      var registeredList = {\n        widget: widget,\n        extraContextKeys: extraContextKeys\n      };\n      this.lists.push(registeredList);\n      // Check for currently being focused\n      if (isActiveElement(widget.getHTMLElement())) {\n        this.setLastFocusedList(widget);\n      }\n      return combinedDisposable(widget.onDidFocus(function () {\n        return _this.setLastFocusedList(widget);\n      }), toDisposable(function () {\n        return _this.lists.splice(_this.lists.indexOf(registeredList), 1);\n      }), widget.onDidDispose(function () {\n        _this.lists = _this.lists.filter(function (l) {\n          return l !== registeredList;\n        });\n        if (_this._lastFocusedWidget === widget) {\n          _this.setLastFocusedList(undefined);\n        }\n      }));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables.dispose();\n    }\n  }]);\n}();\nexport var RawWorkbenchListScrollAtBoundaryContextKey = new RawContextKey('listScrollAtBoundary', 'none');\nexport var WorkbenchListScrollAtTopContextKey = ContextKeyExpr.or(RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('top'), RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('both'));\nexport var WorkbenchListScrollAtBottomContextKey = ContextKeyExpr.or(RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('bottom'), RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('both'));\nexport var RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\nexport var WorkbenchTreeStickyScrollFocused = new RawContextKey('treestickyScrollFocused', false);\nexport var WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\nexport var WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey), WorkbenchTreeStickyScrollFocused.negate());\nexport var WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\nexport var WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\nexport var WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\nexport var WorkbenchListSelectionNavigation = new RawContextKey('listSelectionNavigation', false);\nexport var WorkbenchListSupportsFind = new RawContextKey('listSupportsFind', true);\nexport var WorkbenchTreeElementCanCollapse = new RawContextKey('treeElementCanCollapse', false);\nexport var WorkbenchTreeElementHasParent = new RawContextKey('treeElementHasParent', false);\nexport var WorkbenchTreeElementCanExpand = new RawContextKey('treeElementCanExpand', false);\nexport var WorkbenchTreeElementHasChild = new RawContextKey('treeElementHasChild', false);\nexport var WorkbenchTreeFindOpen = new RawContextKey('treeFindOpen', false);\nvar WorkbenchListTypeNavigationModeKey = 'listTypeNavigationMode';\n/**\n * @deprecated in favor of WorkbenchListTypeNavigationModeKey\n */\nvar WorkbenchListAutomaticKeyboardNavigationLegacyKey = 'listAutomaticKeyboardNavigation';\nfunction createScopedContextKeyService(contextKeyService, widget) {\n  var result = contextKeyService.createScoped(widget.getHTMLElement());\n  RawWorkbenchListFocusContextKey.bindTo(result);\n  return result;\n}\nfunction createScrollObserver(contextKeyService, widget) {\n  var listScrollAt = RawWorkbenchListScrollAtBoundaryContextKey.bindTo(contextKeyService);\n  var update = function update() {\n    var atTop = widget.scrollTop === 0;\n    // We need a threshold `1` since scrollHeight is rounded.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#determine_if_an_element_has_been_totally_scrolled\n    var atBottom = widget.scrollHeight - widget.renderHeight - widget.scrollTop < 1;\n    if (atTop && atBottom) {\n      listScrollAt.set('both');\n    } else if (atTop) {\n      listScrollAt.set('top');\n    } else if (atBottom) {\n      listScrollAt.set('bottom');\n    } else {\n      listScrollAt.set('none');\n    }\n  };\n  update();\n  return widget.onDidScroll(update);\n}\nvar multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\nvar openModeSettingKey = 'workbench.list.openMode';\nvar horizontalScrollingKey = 'workbench.list.horizontalScrolling';\nvar defaultFindModeSettingKey = 'workbench.list.defaultFindMode';\nvar typeNavigationModeSettingKey = 'workbench.list.typeNavigationMode';\n/** @deprecated in favor of `workbench.list.defaultFindMode` and `workbench.list.typeNavigationMode` */\nvar keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\nvar scrollByPageKey = 'workbench.list.scrollByPage';\nvar defaultFindMatchTypeSettingKey = 'workbench.list.defaultFindMatchType';\nvar treeIndentKey = 'workbench.tree.indent';\nvar treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\nvar listSmoothScrolling = 'workbench.list.smoothScrolling';\nvar mouseWheelScrollSensitivityKey = 'workbench.list.mouseWheelScrollSensitivity';\nvar fastScrollSensitivityKey = 'workbench.list.fastScrollSensitivity';\nvar treeExpandMode = 'workbench.tree.expandMode';\nvar treeStickyScroll = 'workbench.tree.enableStickyScroll';\nvar treeStickyScrollMaxElements = 'workbench.tree.stickyScrollMaxItemCount';\nfunction useAltAsMultipleSelectionModifier(configurationService) {\n  return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\n}\nvar MultipleSelectionController = /*#__PURE__*/function (_Disposable) {\n  function MultipleSelectionController(configurationService) {\n    var _this2;\n    _classCallCheck(this, MultipleSelectionController);\n    _this2 = _callSuper(this, MultipleSelectionController);\n    _this2.configurationService = configurationService;\n    _this2.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n    _this2.registerListeners();\n    return _this2;\n  }\n  _inherits(MultipleSelectionController, _Disposable);\n  return _createClass(MultipleSelectionController, [{\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n      this._register(this.configurationService.onDidChangeConfiguration(function (e) {\n        if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n          _this3.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(_this3.configurationService);\n        }\n      }));\n    }\n  }, {\n    key: \"isSelectionSingleChangeEvent\",\n    value: function isSelectionSingleChangeEvent(event) {\n      if (this.useAltAsMultipleSelectionModifier) {\n        return event.browserEvent.altKey;\n      }\n      return _isSelectionSingleChangeEvent(event);\n    }\n  }, {\n    key: \"isSelectionRangeChangeEvent\",\n    value: function isSelectionRangeChangeEvent(event) {\n      return _isSelectionRangeChangeEvent(event);\n    }\n  }]);\n}(Disposable);\nfunction toWorkbenchListOptions(accessor, options) {\n  var _a;\n  var configurationService = accessor.get(IConfigurationService);\n  var keybindingService = accessor.get(IKeybindingService);\n  var disposables = new DisposableStore();\n  var result = _objectSpread(_objectSpread({}, options), {}, {\n    keyboardNavigationDelegate: {\n      mightProducePrintableCharacter: function mightProducePrintableCharacter(e) {\n        return keybindingService.mightProducePrintableCharacter(e);\n      }\n    },\n    smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)),\n    mouseWheelScrollSensitivity: configurationService.getValue(mouseWheelScrollSensitivityKey),\n    fastScrollSensitivity: configurationService.getValue(fastScrollSensitivityKey),\n    multipleSelectionController: (_a = options.multipleSelectionController) !== null && _a !== void 0 ? _a : disposables.add(new MultipleSelectionController(configurationService)),\n    keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(keybindingService),\n    scrollByPage: Boolean(configurationService.getValue(scrollByPageKey))\n  });\n  return [result, disposables];\n}\nvar WorkbenchList = /*#__PURE__*/function (_List) {\n  function WorkbenchList(user, container, delegate, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n    var _this4;\n    _classCallCheck(this, WorkbenchList);\n    var horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n    var _instantiationService = instantiationService.invokeFunction(toWorkbenchListOptions, options),\n      _instantiationService2 = _slicedToArray(_instantiationService, 2),\n      workbenchListOptions = _instantiationService2[0],\n      workbenchListOptionsDisposable = _instantiationService2[1];\n    _this4 = _callSuper(this, WorkbenchList, [user, container, delegate, renderers, _objectSpread(_objectSpread({\n      keyboardSupport: false\n    }, workbenchListOptions), {}, {\n      horizontalScrolling: horizontalScrolling\n    })]);\n    _this4.disposables.add(workbenchListOptionsDisposable);\n    _this4.contextKeyService = createScopedContextKeyService(contextKeyService, _this4);\n    _this4.disposables.add(createScrollObserver(_this4.contextKeyService, _this4));\n    _this4.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(_this4.contextKeyService);\n    _this4.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n    var listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(_this4.contextKeyService);\n    listSelectionNavigation.set(Boolean(options.selectionNavigation));\n    _this4.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(_this4.contextKeyService);\n    _this4.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(_this4.contextKeyService);\n    _this4.listMultiSelection = WorkbenchListMultiSelection.bindTo(_this4.contextKeyService);\n    _this4.horizontalScrolling = options.horizontalScrolling;\n    _this4._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n    _this4.disposables.add(_this4.contextKeyService);\n    _this4.disposables.add(listService.register(_this4));\n    _this4.updateStyles(options.overrideStyles);\n    _this4.disposables.add(_this4.onDidChangeSelection(function () {\n      var selection = _this4.getSelection();\n      var focus = _this4.getFocus();\n      _this4.contextKeyService.bufferChangeEvents(function () {\n        _this4.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        _this4.listMultiSelection.set(selection.length > 1);\n        _this4.listDoubleSelection.set(selection.length === 2);\n      });\n    }));\n    _this4.disposables.add(_this4.onDidChangeFocus(function () {\n      var selection = _this4.getSelection();\n      var focus = _this4.getFocus();\n      _this4.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n    }));\n    _this4.disposables.add(configurationService.onDidChangeConfiguration(function (e) {\n      if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n        _this4._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n      }\n      var options = {};\n      if (e.affectsConfiguration(horizontalScrollingKey) && _this4.horizontalScrolling === undefined) {\n        var _horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          horizontalScrolling: _horizontalScrolling\n        });\n      }\n      if (e.affectsConfiguration(scrollByPageKey)) {\n        var scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          scrollByPage: scrollByPage\n        });\n      }\n      if (e.affectsConfiguration(listSmoothScrolling)) {\n        var smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          smoothScrolling: smoothScrolling\n        });\n      }\n      if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n        var mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          mouseWheelScrollSensitivity: mouseWheelScrollSensitivity\n        });\n      }\n      if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n        var fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          fastScrollSensitivity: fastScrollSensitivity\n        });\n      }\n      if (Object.keys(options).length > 0) {\n        _this4.updateOptions(options);\n      }\n    }));\n    _this4.navigator = new ListResourceNavigator(_this4, _objectSpread({\n      configurationService: configurationService\n    }, options));\n    _this4.disposables.add(_this4.navigator);\n    return _this4;\n  }\n  _inherits(WorkbenchList, _List);\n  return _createClass(WorkbenchList, [{\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      _get(_getPrototypeOf(WorkbenchList.prototype), \"updateOptions\", this).call(this, options);\n      if (options.overrideStyles !== undefined) {\n        this.updateStyles(options.overrideStyles);\n      }\n      if (options.multipleSelectionSupport !== undefined) {\n        this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n      }\n    }\n  }, {\n    key: \"updateStyles\",\n    value: function updateStyles(styles) {\n      this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n  }]);\n}(List);\nWorkbenchList = __decorate([__param(5, IContextKeyService), __param(6, IListService), __param(7, IConfigurationService), __param(8, IInstantiationService)], WorkbenchList);\nexport { WorkbenchList };\nvar WorkbenchPagedList = /*#__PURE__*/function (_PagedList) {\n  function WorkbenchPagedList(user, container, delegate, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n    var _this5;\n    _classCallCheck(this, WorkbenchPagedList);\n    var horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n    var _instantiationService3 = instantiationService.invokeFunction(toWorkbenchListOptions, options),\n      _instantiationService4 = _slicedToArray(_instantiationService3, 2),\n      workbenchListOptions = _instantiationService4[0],\n      workbenchListOptionsDisposable = _instantiationService4[1];\n    _this5 = _callSuper(this, WorkbenchPagedList, [user, container, delegate, renderers, _objectSpread(_objectSpread({\n      keyboardSupport: false\n    }, workbenchListOptions), {}, {\n      horizontalScrolling: horizontalScrolling\n    })]);\n    _this5.disposables = new DisposableStore();\n    _this5.disposables.add(workbenchListOptionsDisposable);\n    _this5.contextKeyService = createScopedContextKeyService(contextKeyService, _this5);\n    _this5.disposables.add(createScrollObserver(_this5.contextKeyService, _this5.widget));\n    _this5.horizontalScrolling = options.horizontalScrolling;\n    _this5.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(_this5.contextKeyService);\n    _this5.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n    var listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(_this5.contextKeyService);\n    listSelectionNavigation.set(Boolean(options.selectionNavigation));\n    _this5._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n    _this5.disposables.add(_this5.contextKeyService);\n    _this5.disposables.add(listService.register(_this5));\n    _this5.updateStyles(options.overrideStyles);\n    _this5.disposables.add(configurationService.onDidChangeConfiguration(function (e) {\n      if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n        _this5._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n      }\n      var options = {};\n      if (e.affectsConfiguration(horizontalScrollingKey) && _this5.horizontalScrolling === undefined) {\n        var _horizontalScrolling2 = Boolean(configurationService.getValue(horizontalScrollingKey));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          horizontalScrolling: _horizontalScrolling2\n        });\n      }\n      if (e.affectsConfiguration(scrollByPageKey)) {\n        var scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          scrollByPage: scrollByPage\n        });\n      }\n      if (e.affectsConfiguration(listSmoothScrolling)) {\n        var smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          smoothScrolling: smoothScrolling\n        });\n      }\n      if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n        var mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          mouseWheelScrollSensitivity: mouseWheelScrollSensitivity\n        });\n      }\n      if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n        var fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          fastScrollSensitivity: fastScrollSensitivity\n        });\n      }\n      if (Object.keys(options).length > 0) {\n        _this5.updateOptions(options);\n      }\n    }));\n    _this5.navigator = new ListResourceNavigator(_this5, _objectSpread({\n      configurationService: configurationService\n    }, options));\n    _this5.disposables.add(_this5.navigator);\n    return _this5;\n  }\n  _inherits(WorkbenchPagedList, _PagedList);\n  return _createClass(WorkbenchPagedList, [{\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      _get(_getPrototypeOf(WorkbenchPagedList.prototype), \"updateOptions\", this).call(this, options);\n      if (options.overrideStyles !== undefined) {\n        this.updateStyles(options.overrideStyles);\n      }\n      if (options.multipleSelectionSupport !== undefined) {\n        this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n      }\n    }\n  }, {\n    key: \"updateStyles\",\n    value: function updateStyles(styles) {\n      this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables.dispose();\n      _get(_getPrototypeOf(WorkbenchPagedList.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n}(PagedList);\nWorkbenchPagedList = __decorate([__param(5, IContextKeyService), __param(6, IListService), __param(7, IConfigurationService), __param(8, IInstantiationService)], WorkbenchPagedList);\nexport { WorkbenchPagedList };\nvar WorkbenchTable = /*#__PURE__*/function (_Table) {\n  function WorkbenchTable(user, container, delegate, columns, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n    var _this6;\n    _classCallCheck(this, WorkbenchTable);\n    var horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n    var _instantiationService5 = instantiationService.invokeFunction(toWorkbenchListOptions, options),\n      _instantiationService6 = _slicedToArray(_instantiationService5, 2),\n      workbenchListOptions = _instantiationService6[0],\n      workbenchListOptionsDisposable = _instantiationService6[1];\n    _this6 = _callSuper(this, WorkbenchTable, [user, container, delegate, columns, renderers, _objectSpread(_objectSpread({\n      keyboardSupport: false\n    }, workbenchListOptions), {}, {\n      horizontalScrolling: horizontalScrolling\n    })]);\n    _this6.disposables.add(workbenchListOptionsDisposable);\n    _this6.contextKeyService = createScopedContextKeyService(contextKeyService, _this6);\n    _this6.disposables.add(createScrollObserver(_this6.contextKeyService, _this6));\n    _this6.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(_this6.contextKeyService);\n    _this6.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n    var listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(_this6.contextKeyService);\n    listSelectionNavigation.set(Boolean(options.selectionNavigation));\n    _this6.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(_this6.contextKeyService);\n    _this6.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(_this6.contextKeyService);\n    _this6.listMultiSelection = WorkbenchListMultiSelection.bindTo(_this6.contextKeyService);\n    _this6.horizontalScrolling = options.horizontalScrolling;\n    _this6._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n    _this6.disposables.add(_this6.contextKeyService);\n    _this6.disposables.add(listService.register(_this6));\n    _this6.updateStyles(options.overrideStyles);\n    _this6.disposables.add(_this6.onDidChangeSelection(function () {\n      var selection = _this6.getSelection();\n      var focus = _this6.getFocus();\n      _this6.contextKeyService.bufferChangeEvents(function () {\n        _this6.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        _this6.listMultiSelection.set(selection.length > 1);\n        _this6.listDoubleSelection.set(selection.length === 2);\n      });\n    }));\n    _this6.disposables.add(_this6.onDidChangeFocus(function () {\n      var selection = _this6.getSelection();\n      var focus = _this6.getFocus();\n      _this6.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n    }));\n    _this6.disposables.add(configurationService.onDidChangeConfiguration(function (e) {\n      if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n        _this6._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n      }\n      var options = {};\n      if (e.affectsConfiguration(horizontalScrollingKey) && _this6.horizontalScrolling === undefined) {\n        var _horizontalScrolling3 = Boolean(configurationService.getValue(horizontalScrollingKey));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          horizontalScrolling: _horizontalScrolling3\n        });\n      }\n      if (e.affectsConfiguration(scrollByPageKey)) {\n        var scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          scrollByPage: scrollByPage\n        });\n      }\n      if (e.affectsConfiguration(listSmoothScrolling)) {\n        var smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          smoothScrolling: smoothScrolling\n        });\n      }\n      if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n        var mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          mouseWheelScrollSensitivity: mouseWheelScrollSensitivity\n        });\n      }\n      if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n        var fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n        options = _objectSpread(_objectSpread({}, options), {}, {\n          fastScrollSensitivity: fastScrollSensitivity\n        });\n      }\n      if (Object.keys(options).length > 0) {\n        _this6.updateOptions(options);\n      }\n    }));\n    _this6.navigator = new TableResourceNavigator(_this6, _objectSpread({\n      configurationService: configurationService\n    }, options));\n    _this6.disposables.add(_this6.navigator);\n    return _this6;\n  }\n  _inherits(WorkbenchTable, _Table);\n  return _createClass(WorkbenchTable, [{\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      _get(_getPrototypeOf(WorkbenchTable.prototype), \"updateOptions\", this).call(this, options);\n      if (options.overrideStyles !== undefined) {\n        this.updateStyles(options.overrideStyles);\n      }\n      if (options.multipleSelectionSupport !== undefined) {\n        this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n      }\n    }\n  }, {\n    key: \"updateStyles\",\n    value: function updateStyles(styles) {\n      this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables.dispose();\n      _get(_getPrototypeOf(WorkbenchTable.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n}(Table);\nWorkbenchTable = __decorate([__param(6, IContextKeyService), __param(7, IListService), __param(8, IConfigurationService), __param(9, IInstantiationService)], WorkbenchTable);\nexport { WorkbenchTable };\nvar ResourceNavigator = /*#__PURE__*/function (_Disposable2) {\n  function ResourceNavigator(widget, options) {\n    var _this7;\n    _classCallCheck(this, ResourceNavigator);\n    var _a;\n    _this7 = _callSuper(this, ResourceNavigator);\n    _this7.widget = widget;\n    _this7._onDidOpen = _this7._register(new Emitter());\n    _this7.onDidOpen = _this7._onDidOpen.event;\n    _this7._register(Event.filter(_this7.widget.onDidChangeSelection, function (e) {\n      return isKeyboardEvent(e.browserEvent);\n    })(function (e) {\n      return _this7.onSelectionFromKeyboard(e);\n    }));\n    _this7._register(_this7.widget.onPointer(function (e) {\n      return _this7.onPointer(e.element, e.browserEvent);\n    }));\n    _this7._register(_this7.widget.onMouseDblClick(function (e) {\n      return _this7.onMouseDblClick(e.element, e.browserEvent);\n    }));\n    if (typeof (options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== 'boolean' && (options === null || options === void 0 ? void 0 : options.configurationService)) {\n      _this7.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n      _this7._register(options === null || options === void 0 ? void 0 : options.configurationService.onDidChangeConfiguration(function (e) {\n        if (e.affectsConfiguration(openModeSettingKey)) {\n          _this7.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n        }\n      }));\n    } else {\n      _this7.openOnSingleClick = (_a = options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== null && _a !== void 0 ? _a : true;\n    }\n    return _this7;\n  }\n  _inherits(ResourceNavigator, _Disposable2);\n  return _createClass(ResourceNavigator, [{\n    key: \"onSelectionFromKeyboard\",\n    value: function onSelectionFromKeyboard(event) {\n      if (event.elements.length !== 1) {\n        return;\n      }\n      var selectionKeyboardEvent = event.browserEvent;\n      var preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\n      var pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\n      var sideBySide = false;\n      this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\n    }\n  }, {\n    key: \"onPointer\",\n    value: function onPointer(element, browserEvent) {\n      if (!this.openOnSingleClick) {\n        return;\n      }\n      var isDoubleClick = browserEvent.detail === 2;\n      if (isDoubleClick) {\n        return;\n      }\n      var isMiddleClick = browserEvent.button === 1;\n      var preserveFocus = true;\n      var pinned = isMiddleClick;\n      var sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n      this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n  }, {\n    key: \"onMouseDblClick\",\n    value: function onMouseDblClick(element, browserEvent) {\n      if (!browserEvent) {\n        return;\n      }\n      // copied from AbstractTree\n      var target = browserEvent.target;\n      var onTwistie = target.classList.contains('monaco-tl-twistie') || target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && browserEvent.offsetX < 16;\n      if (onTwistie) {\n        return;\n      }\n      var preserveFocus = false;\n      var pinned = true;\n      var sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n      this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n  }, {\n    key: \"_open\",\n    value: function _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\n      if (!element) {\n        return;\n      }\n      this._onDidOpen.fire({\n        editorOptions: {\n          preserveFocus: preserveFocus,\n          pinned: pinned,\n          revealIfVisible: true\n        },\n        sideBySide: sideBySide,\n        element: element,\n        browserEvent: browserEvent\n      });\n    }\n  }]);\n}(Disposable);\nvar ListResourceNavigator = /*#__PURE__*/function (_ResourceNavigator) {\n  function ListResourceNavigator(widget, options) {\n    var _this8;\n    _classCallCheck(this, ListResourceNavigator);\n    _this8 = _callSuper(this, ListResourceNavigator, [widget, options]);\n    _this8.widget = widget;\n    return _this8;\n  }\n  _inherits(ListResourceNavigator, _ResourceNavigator);\n  return _createClass(ListResourceNavigator, [{\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this.widget.getSelectedElements()[0];\n    }\n  }]);\n}(ResourceNavigator);\nvar TableResourceNavigator = /*#__PURE__*/function (_ResourceNavigator2) {\n  function TableResourceNavigator(widget, options) {\n    _classCallCheck(this, TableResourceNavigator);\n    return _callSuper(this, TableResourceNavigator, [widget, options]);\n  }\n  _inherits(TableResourceNavigator, _ResourceNavigator2);\n  return _createClass(TableResourceNavigator, [{\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this.widget.getSelectedElements()[0];\n    }\n  }]);\n}(ResourceNavigator);\nvar TreeResourceNavigator = /*#__PURE__*/function (_ResourceNavigator3) {\n  function TreeResourceNavigator(widget, options) {\n    _classCallCheck(this, TreeResourceNavigator);\n    return _callSuper(this, TreeResourceNavigator, [widget, options]);\n  }\n  _inherits(TreeResourceNavigator, _ResourceNavigator3);\n  return _createClass(TreeResourceNavigator, [{\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      var _a;\n      return (_a = this.widget.getSelection()[0]) !== null && _a !== void 0 ? _a : undefined;\n    }\n  }]);\n}(ResourceNavigator);\nfunction createKeyboardNavigationEventFilter(keybindingService) {\n  var inMultiChord = false;\n  return function (event) {\n    if (event.toKeyCodeChord().isModifierKey()) {\n      return false;\n    }\n    if (inMultiChord) {\n      inMultiChord = false;\n      return false;\n    }\n    var result = keybindingService.softDispatch(event, event.target);\n    if (result.kind === 1 /* ResultKind.MoreChordsNeeded */) {\n      inMultiChord = true;\n      return false;\n    }\n    inMultiChord = false;\n    return result.kind === 0 /* ResultKind.NoMatchingKb */;\n  };\n}\nvar WorkbenchObjectTree = /*#__PURE__*/function (_ObjectTree) {\n  function WorkbenchObjectTree(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, configurationService) {\n    var _this9;\n    _classCallCheck(this, WorkbenchObjectTree);\n    var _instantiationService7 = instantiationService.invokeFunction(workbenchTreeDataPreamble, options),\n      treeOptions = _instantiationService7.options,\n      getTypeNavigationMode = _instantiationService7.getTypeNavigationMode,\n      disposable = _instantiationService7.disposable;\n    _this9 = _callSuper(this, WorkbenchObjectTree, [user, container, delegate, renderers, treeOptions]);\n    _this9.disposables.add(disposable);\n    _this9.internals = new WorkbenchTreeInternals(_this9, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n    _this9.disposables.add(_this9.internals);\n    return _this9;\n  }\n  _inherits(WorkbenchObjectTree, _ObjectTree);\n  return _createClass(WorkbenchObjectTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      _get(_getPrototypeOf(WorkbenchObjectTree.prototype), \"updateOptions\", this).call(this, options);\n      this.internals.updateOptions(options);\n    }\n  }]);\n}(ObjectTree);\nWorkbenchObjectTree = __decorate([__param(5, IInstantiationService), __param(6, IContextKeyService), __param(7, IListService), __param(8, IConfigurationService)], WorkbenchObjectTree);\nexport { WorkbenchObjectTree };\nvar WorkbenchCompressibleObjectTree = /*#__PURE__*/function (_CompressibleObjectTr) {\n  function WorkbenchCompressibleObjectTree(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, configurationService) {\n    var _this10;\n    _classCallCheck(this, WorkbenchCompressibleObjectTree);\n    var _instantiationService8 = instantiationService.invokeFunction(workbenchTreeDataPreamble, options),\n      treeOptions = _instantiationService8.options,\n      getTypeNavigationMode = _instantiationService8.getTypeNavigationMode,\n      disposable = _instantiationService8.disposable;\n    _this10 = _callSuper(this, WorkbenchCompressibleObjectTree, [user, container, delegate, renderers, treeOptions]);\n    _this10.disposables.add(disposable);\n    _this10.internals = new WorkbenchTreeInternals(_this10, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n    _this10.disposables.add(_this10.internals);\n    return _this10;\n  }\n  _inherits(WorkbenchCompressibleObjectTree, _CompressibleObjectTr);\n  return _createClass(WorkbenchCompressibleObjectTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _get(_getPrototypeOf(WorkbenchCompressibleObjectTree.prototype), \"updateOptions\", this).call(this, options);\n      if (options.overrideStyles) {\n        this.internals.updateStyleOverrides(options.overrideStyles);\n      }\n      this.internals.updateOptions(options);\n    }\n  }]);\n}(CompressibleObjectTree);\nWorkbenchCompressibleObjectTree = __decorate([__param(5, IInstantiationService), __param(6, IContextKeyService), __param(7, IListService), __param(8, IConfigurationService)], WorkbenchCompressibleObjectTree);\nexport { WorkbenchCompressibleObjectTree };\nvar WorkbenchDataTree = /*#__PURE__*/function (_DataTree) {\n  function WorkbenchDataTree(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n    var _this11;\n    _classCallCheck(this, WorkbenchDataTree);\n    var _instantiationService9 = instantiationService.invokeFunction(workbenchTreeDataPreamble, options),\n      treeOptions = _instantiationService9.options,\n      getTypeNavigationMode = _instantiationService9.getTypeNavigationMode,\n      disposable = _instantiationService9.disposable;\n    _this11 = _callSuper(this, WorkbenchDataTree, [user, container, delegate, renderers, dataSource, treeOptions]);\n    _this11.disposables.add(disposable);\n    _this11.internals = new WorkbenchTreeInternals(_this11, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n    _this11.disposables.add(_this11.internals);\n    return _this11;\n  }\n  _inherits(WorkbenchDataTree, _DataTree);\n  return _createClass(WorkbenchDataTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _get(_getPrototypeOf(WorkbenchDataTree.prototype), \"updateOptions\", this).call(this, options);\n      if (options.overrideStyles !== undefined) {\n        this.internals.updateStyleOverrides(options.overrideStyles);\n      }\n      this.internals.updateOptions(options);\n    }\n  }]);\n}(DataTree);\nWorkbenchDataTree = __decorate([__param(6, IInstantiationService), __param(7, IContextKeyService), __param(8, IListService), __param(9, IConfigurationService)], WorkbenchDataTree);\nexport { WorkbenchDataTree };\nvar WorkbenchAsyncDataTree = /*#__PURE__*/function (_AsyncDataTree) {\n  function WorkbenchAsyncDataTree(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n    var _this12;\n    _classCallCheck(this, WorkbenchAsyncDataTree);\n    var _instantiationService10 = instantiationService.invokeFunction(workbenchTreeDataPreamble, options),\n      treeOptions = _instantiationService10.options,\n      getTypeNavigationMode = _instantiationService10.getTypeNavigationMode,\n      disposable = _instantiationService10.disposable;\n    _this12 = _callSuper(this, WorkbenchAsyncDataTree, [user, container, delegate, renderers, dataSource, treeOptions]);\n    _this12.disposables.add(disposable);\n    _this12.internals = new WorkbenchTreeInternals(_this12, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n    _this12.disposables.add(_this12.internals);\n    return _this12;\n  }\n  _inherits(WorkbenchAsyncDataTree, _AsyncDataTree);\n  return _createClass(WorkbenchAsyncDataTree, [{\n    key: \"onDidOpen\",\n    get: function get() {\n      return this.internals.onDidOpen;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _get(_getPrototypeOf(WorkbenchAsyncDataTree.prototype), \"updateOptions\", this).call(this, options);\n      if (options.overrideStyles) {\n        this.internals.updateStyleOverrides(options.overrideStyles);\n      }\n      this.internals.updateOptions(options);\n    }\n  }]);\n}(AsyncDataTree);\nWorkbenchAsyncDataTree = __decorate([__param(6, IInstantiationService), __param(7, IContextKeyService), __param(8, IListService), __param(9, IConfigurationService)], WorkbenchAsyncDataTree);\nexport { WorkbenchAsyncDataTree };\nvar WorkbenchCompressibleAsyncDataTree = /*#__PURE__*/function (_CompressibleAsyncDat) {\n  function WorkbenchCompressibleAsyncDataTree(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n    var _this13;\n    _classCallCheck(this, WorkbenchCompressibleAsyncDataTree);\n    var _instantiationService11 = instantiationService.invokeFunction(workbenchTreeDataPreamble, options),\n      treeOptions = _instantiationService11.options,\n      getTypeNavigationMode = _instantiationService11.getTypeNavigationMode,\n      disposable = _instantiationService11.disposable;\n    _this13 = _callSuper(this, WorkbenchCompressibleAsyncDataTree, [user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions]);\n    _this13.disposables.add(disposable);\n    _this13.internals = new WorkbenchTreeInternals(_this13, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n    _this13.disposables.add(_this13.internals);\n    return _this13;\n  }\n  _inherits(WorkbenchCompressibleAsyncDataTree, _CompressibleAsyncDat);\n  return _createClass(WorkbenchCompressibleAsyncDataTree, [{\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      _get(_getPrototypeOf(WorkbenchCompressibleAsyncDataTree.prototype), \"updateOptions\", this).call(this, options);\n      this.internals.updateOptions(options);\n    }\n  }]);\n}(CompressibleAsyncDataTree);\nWorkbenchCompressibleAsyncDataTree = __decorate([__param(7, IInstantiationService), __param(8, IContextKeyService), __param(9, IListService), __param(10, IConfigurationService)], WorkbenchCompressibleAsyncDataTree);\nexport { WorkbenchCompressibleAsyncDataTree };\nfunction getDefaultTreeFindMode(configurationService) {\n  var value = configurationService.getValue(defaultFindModeSettingKey);\n  if (value === 'highlight') {\n    return TreeFindMode.Highlight;\n  } else if (value === 'filter') {\n    return TreeFindMode.Filter;\n  }\n  var deprecatedValue = configurationService.getValue(keyboardNavigationSettingKey);\n  if (deprecatedValue === 'simple' || deprecatedValue === 'highlight') {\n    return TreeFindMode.Highlight;\n  } else if (deprecatedValue === 'filter') {\n    return TreeFindMode.Filter;\n  }\n  return undefined;\n}\nfunction getDefaultTreeFindMatchType(configurationService) {\n  var value = configurationService.getValue(defaultFindMatchTypeSettingKey);\n  if (value === 'fuzzy') {\n    return TreeFindMatchType.Fuzzy;\n  } else if (value === 'contiguous') {\n    return TreeFindMatchType.Contiguous;\n  }\n  return undefined;\n}\nfunction workbenchTreeDataPreamble(accessor, options) {\n  var _a;\n  var configurationService = accessor.get(IConfigurationService);\n  var contextViewService = accessor.get(IContextViewService);\n  var contextKeyService = accessor.get(IContextKeyService);\n  var instantiationService = accessor.get(IInstantiationService);\n  var getTypeNavigationMode = function getTypeNavigationMode() {\n    // give priority to the context key value to specify a value\n    var modeString = contextKeyService.getContextKeyValue(WorkbenchListTypeNavigationModeKey);\n    if (modeString === 'automatic') {\n      return TypeNavigationMode.Automatic;\n    } else if (modeString === 'trigger') {\n      return TypeNavigationMode.Trigger;\n    }\n    // also check the deprecated context key to set the mode to 'trigger'\n    var modeBoolean = contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n    if (modeBoolean === false) {\n      return TypeNavigationMode.Trigger;\n    }\n    // finally, check the setting\n    var configString = configurationService.getValue(typeNavigationModeSettingKey);\n    if (configString === 'automatic') {\n      return TypeNavigationMode.Automatic;\n    } else if (configString === 'trigger') {\n      return TypeNavigationMode.Trigger;\n    }\n    return undefined;\n  };\n  var horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n  var _instantiationService12 = instantiationService.invokeFunction(toWorkbenchListOptions, options),\n    _instantiationService13 = _slicedToArray(_instantiationService12, 2),\n    workbenchListOptions = _instantiationService13[0],\n    disposable = _instantiationService13[1];\n  var paddingBottom = options.paddingBottom;\n  var renderIndentGuides = options.renderIndentGuides !== undefined ? options.renderIndentGuides : configurationService.getValue(treeRenderIndentGuidesKey);\n  return {\n    getTypeNavigationMode: getTypeNavigationMode,\n    disposable: disposable,\n    options: _objectSpread(_objectSpread({\n      // ...options, // TODO@Joao why is this not splatted here?\n      keyboardSupport: false\n    }, workbenchListOptions), {}, {\n      indent: typeof configurationService.getValue(treeIndentKey) === 'number' ? configurationService.getValue(treeIndentKey) : undefined,\n      renderIndentGuides: renderIndentGuides,\n      smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)),\n      defaultFindMode: getDefaultTreeFindMode(configurationService),\n      defaultFindMatchType: getDefaultTreeFindMatchType(configurationService),\n      horizontalScrolling: horizontalScrolling,\n      scrollByPage: Boolean(configurationService.getValue(scrollByPageKey)),\n      paddingBottom: paddingBottom,\n      hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements,\n      expandOnlyOnTwistieClick: (_a = options.expandOnlyOnTwistieClick) !== null && _a !== void 0 ? _a : configurationService.getValue(treeExpandMode) === 'doubleClick',\n      contextViewProvider: contextViewService,\n      findWidgetStyles: defaultFindWidgetStyles,\n      enableStickyScroll: Boolean(configurationService.getValue(treeStickyScroll)),\n      stickyScrollMaxItemCount: Number(configurationService.getValue(treeStickyScrollMaxElements))\n    })\n  };\n}\nvar WorkbenchTreeInternals = /*#__PURE__*/function () {\n  function WorkbenchTreeInternals(tree, options, getTypeNavigationMode, overrideStyles, contextKeyService, listService, configurationService) {\n    var _this14 = this;\n    _classCallCheck(this, WorkbenchTreeInternals);\n    var _a;\n    this.tree = tree;\n    this.disposables = [];\n    this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\n    this.disposables.push(createScrollObserver(this.contextKeyService, tree));\n    this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n    this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n    var listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n    listSelectionNavigation.set(Boolean(options.selectionNavigation));\n    this.listSupportFindWidget = WorkbenchListSupportsFind.bindTo(this.contextKeyService);\n    this.listSupportFindWidget.set((_a = options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true);\n    this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n    this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n    this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n    this.treeElementCanCollapse = WorkbenchTreeElementCanCollapse.bindTo(this.contextKeyService);\n    this.treeElementHasParent = WorkbenchTreeElementHasParent.bindTo(this.contextKeyService);\n    this.treeElementCanExpand = WorkbenchTreeElementCanExpand.bindTo(this.contextKeyService);\n    this.treeElementHasChild = WorkbenchTreeElementHasChild.bindTo(this.contextKeyService);\n    this.treeFindOpen = WorkbenchTreeFindOpen.bindTo(this.contextKeyService);\n    this.treeStickyScrollFocused = WorkbenchTreeStickyScrollFocused.bindTo(this.contextKeyService);\n    this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n    this.updateStyleOverrides(overrideStyles);\n    var updateCollapseContextKeys = function updateCollapseContextKeys() {\n      var focus = tree.getFocus()[0];\n      if (!focus) {\n        return;\n      }\n      var node = tree.getNode(focus);\n      _this14.treeElementCanCollapse.set(node.collapsible && !node.collapsed);\n      _this14.treeElementHasParent.set(!!tree.getParentElement(focus));\n      _this14.treeElementCanExpand.set(node.collapsible && node.collapsed);\n      _this14.treeElementHasChild.set(!!tree.getFirstElementChild(focus));\n    };\n    var interestingContextKeys = new Set();\n    interestingContextKeys.add(WorkbenchListTypeNavigationModeKey);\n    interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n    this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(function () {\n      var selection = tree.getSelection();\n      var focus = tree.getFocus();\n      _this14.contextKeyService.bufferChangeEvents(function () {\n        _this14.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        _this14.hasMultiSelection.set(selection.length > 1);\n        _this14.hasDoubleSelection.set(selection.length === 2);\n      });\n    }), tree.onDidChangeFocus(function () {\n      var selection = tree.getSelection();\n      var focus = tree.getFocus();\n      _this14.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n      updateCollapseContextKeys();\n    }), tree.onDidChangeCollapseState(updateCollapseContextKeys), tree.onDidChangeModel(updateCollapseContextKeys), tree.onDidChangeFindOpenState(function (enabled) {\n      return _this14.treeFindOpen.set(enabled);\n    }), tree.onDidChangeStickyScrollFocused(function (focused) {\n      return _this14.treeStickyScrollFocused.set(focused);\n    }), configurationService.onDidChangeConfiguration(function (e) {\n      var newOptions = {};\n      if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n        _this14._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n      }\n      if (e.affectsConfiguration(treeIndentKey)) {\n        var indent = configurationService.getValue(treeIndentKey);\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          indent: indent\n        });\n      }\n      if (e.affectsConfiguration(treeRenderIndentGuidesKey) && options.renderIndentGuides === undefined) {\n        var renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          renderIndentGuides: renderIndentGuides\n        });\n      }\n      if (e.affectsConfiguration(listSmoothScrolling)) {\n        var smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          smoothScrolling: smoothScrolling\n        });\n      }\n      if (e.affectsConfiguration(defaultFindModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n        var defaultFindMode = getDefaultTreeFindMode(configurationService);\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          defaultFindMode: defaultFindMode\n        });\n      }\n      if (e.affectsConfiguration(typeNavigationModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n        var typeNavigationMode = getTypeNavigationMode();\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          typeNavigationMode: typeNavigationMode\n        });\n      }\n      if (e.affectsConfiguration(defaultFindMatchTypeSettingKey)) {\n        var defaultFindMatchType = getDefaultTreeFindMatchType(configurationService);\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          defaultFindMatchType: defaultFindMatchType\n        });\n      }\n      if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\n        var horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          horizontalScrolling: horizontalScrolling\n        });\n      }\n      if (e.affectsConfiguration(scrollByPageKey)) {\n        var scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          scrollByPage: scrollByPage\n        });\n      }\n      if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick'\n        });\n      }\n      if (e.affectsConfiguration(treeStickyScroll)) {\n        var enableStickyScroll = configurationService.getValue(treeStickyScroll);\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          enableStickyScroll: enableStickyScroll\n        });\n      }\n      if (e.affectsConfiguration(treeStickyScrollMaxElements)) {\n        var stickyScrollMaxItemCount = Math.max(1, configurationService.getValue(treeStickyScrollMaxElements));\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          stickyScrollMaxItemCount: stickyScrollMaxItemCount\n        });\n      }\n      if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n        var mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          mouseWheelScrollSensitivity: mouseWheelScrollSensitivity\n        });\n      }\n      if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n        var fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n        newOptions = _objectSpread(_objectSpread({}, newOptions), {}, {\n          fastScrollSensitivity: fastScrollSensitivity\n        });\n      }\n      if (Object.keys(newOptions).length > 0) {\n        tree.updateOptions(newOptions);\n      }\n    }), this.contextKeyService.onDidChangeContext(function (e) {\n      if (e.affectsSome(interestingContextKeys)) {\n        tree.updateOptions({\n          typeNavigationMode: getTypeNavigationMode()\n        });\n      }\n    }));\n    this.navigator = new TreeResourceNavigator(tree, _objectSpread({\n      configurationService: configurationService\n    }, options));\n    this.disposables.push(this.navigator);\n  }\n  return _createClass(WorkbenchTreeInternals, [{\n    key: \"onDidOpen\",\n    get: function get() {\n      return this.navigator.onDidOpen;\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      if (options.multipleSelectionSupport !== undefined) {\n        this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n      }\n    }\n  }, {\n    key: \"updateStyleOverrides\",\n    value: function updateStyleOverrides(overrideStyles) {\n      this.tree.style(overrideStyles ? getListStyles(overrideStyles) : defaultListStyles);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposables = _dispose(this.disposables);\n    }\n  }]);\n}();\nWorkbenchTreeInternals = __decorate([__param(4, IContextKeyService), __param(5, IListService), __param(6, IConfigurationService)], WorkbenchTreeInternals);\nvar configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n  id: 'workbench',\n  order: 7,\n  title: localize('workbenchConfigurationTitle', \"Workbench\"),\n  type: 'object',\n  properties: (_properties = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_properties, multiSelectModifierSettingKey, {\n    type: 'string',\n    \"enum\": ['ctrlCmd', 'alt'],\n    markdownEnumDescriptions: [localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"), localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")],\n    \"default\": 'ctrlCmd',\n    description: localize({\n      key: 'multiSelectModifier',\n      comment: ['- `ctrlCmd` refers to a value the setting can take and should not be localized.', '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.']\n    }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\n  }), openModeSettingKey, {\n    type: 'string',\n    \"enum\": ['singleClick', 'doubleClick'],\n    \"default\": 'singleClick',\n    description: localize({\n      key: 'openModeModifier',\n      comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\n    }, \"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.\")\n  }), horizontalScrollingKey, {\n    type: 'boolean',\n    \"default\": false,\n    description: localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\n  }), scrollByPageKey, {\n    type: 'boolean',\n    \"default\": false,\n    description: localize('list.scrollByPage', \"Controls whether clicks in the scrollbar scroll page by page.\")\n  }), treeIndentKey, {\n    type: 'number',\n    \"default\": 8,\n    minimum: 4,\n    maximum: 40,\n    description: localize('tree indent setting', \"Controls tree indentation in pixels.\")\n  }), treeRenderIndentGuidesKey, {\n    type: 'string',\n    \"enum\": ['none', 'onHover', 'always'],\n    \"default\": 'onHover',\n    description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\n  }), listSmoothScrolling, {\n    type: 'boolean',\n    \"default\": false,\n    description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\")\n  }), mouseWheelScrollSensitivityKey, {\n    type: 'number',\n    \"default\": 1,\n    markdownDescription: localize('Mouse Wheel Scroll Sensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\")\n  }), fastScrollSensitivityKey, {\n    type: 'number',\n    \"default\": 5,\n    markdownDescription: localize('Fast Scroll Sensitivity', \"Scrolling speed multiplier when pressing `Alt`.\")\n  }), defaultFindModeSettingKey, {\n    type: 'string',\n    \"enum\": ['highlight', 'filter'],\n    enumDescriptions: [localize('defaultFindModeSettingKey.highlight', \"Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.\"), localize('defaultFindModeSettingKey.filter', \"Filter elements when searching.\")],\n    \"default\": 'highlight',\n    description: localize('defaultFindModeSettingKey', \"Controls the default find mode for lists and trees in the workbench.\")\n  }), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_properties, keyboardNavigationSettingKey, {\n    type: 'string',\n    \"enum\": ['simple', 'highlight', 'filter'],\n    enumDescriptions: [localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"), localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"), localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")],\n    \"default\": 'highlight',\n    description: localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\"),\n    deprecated: true,\n    deprecationMessage: localize('keyboardNavigationSettingKeyDeprecated', \"Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.\")\n  }), defaultFindMatchTypeSettingKey, {\n    type: 'string',\n    \"enum\": ['fuzzy', 'contiguous'],\n    enumDescriptions: [localize('defaultFindMatchTypeSettingKey.fuzzy', \"Use fuzzy matching when searching.\"), localize('defaultFindMatchTypeSettingKey.contiguous', \"Use contiguous matching when searching.\")],\n    \"default\": 'fuzzy',\n    description: localize('defaultFindMatchTypeSettingKey', \"Controls the type of matching used when searching lists and trees in the workbench.\")\n  }), treeExpandMode, {\n    type: 'string',\n    \"enum\": ['singleClick', 'doubleClick'],\n    \"default\": 'singleClick',\n    description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.\")\n  }), treeStickyScroll, {\n    type: 'boolean',\n    \"default\": true,\n    description: localize('sticky scroll', \"Controls whether sticky scrolling is enabled in trees.\")\n  }), treeStickyScrollMaxElements, {\n    type: 'number',\n    minimum: 1,\n    \"default\": 7,\n    markdownDescription: localize('sticky scroll maximum items', \"Controls the number of sticky elements displayed in the tree when `#workbench.tree.enableStickyScroll#` is enabled.\")\n  }), typeNavigationModeSettingKey, {\n    type: 'string',\n    \"enum\": ['automatic', 'trigger'],\n    \"default\": 'automatic',\n    markdownDescription: localize('typeNavigationMode2', \"Controls how type navigation works in lists and trees in the workbench. When set to `trigger`, type navigation begins once the `list.triggerTypeNavigation` command is run.\")\n  }))\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","createStyleSheet","isActiveElement","isKeyboardEvent","PagedList","DefaultStyleController","isSelectionRangeChangeEvent","isSelectionSingleChangeEvent","List","TypeNavigationMode","Table","TreeFindMode","TreeFindMatchType","AsyncDataTree","CompressibleAsyncDataTree","DataTree","CompressibleObjectTree","ObjectTree","Emitter","Event","combinedDisposable","Disposable","DisposableStore","dispose","toDisposable","localize","IConfigurationService","Extensions","ConfigurationExtensions","ContextKeyExpr","IContextKeyService","RawContextKey","InputFocusedContextKey","IContextViewService","createDecorator","IInstantiationService","IKeybindingService","Registry","defaultFindWidgetStyles","defaultListStyles","getListStyles","IListService","ListService","_classCallCheck","disposables","lists","_lastFocusedWidget","undefined","_hasCreatedStyleController","_createClass","get","value","setLastFocusedList","widget","_a","_b","getHTMLElement","classList","remove","add","register","extraContextKeys","_this","styleController","style","some","l","Error","registeredList","push","onDidFocus","splice","indexOf","onDidDispose","filter","RawWorkbenchListScrollAtBoundaryContextKey","WorkbenchListScrollAtTopContextKey","or","isEqualTo","WorkbenchListScrollAtBottomContextKey","RawWorkbenchListFocusContextKey","WorkbenchTreeStickyScrollFocused","WorkbenchListSupportsMultiSelectContextKey","WorkbenchListFocusContextKey","and","not","negate","WorkbenchListHasSelectionOrFocus","WorkbenchListDoubleSelection","WorkbenchListMultiSelection","WorkbenchListSelectionNavigation","WorkbenchListSupportsFind","WorkbenchTreeElementCanCollapse","WorkbenchTreeElementHasParent","WorkbenchTreeElementCanExpand","WorkbenchTreeElementHasChild","WorkbenchTreeFindOpen","WorkbenchListTypeNavigationModeKey","WorkbenchListAutomaticKeyboardNavigationLegacyKey","createScopedContextKeyService","contextKeyService","result","createScoped","bindTo","createScrollObserver","listScrollAt","update","atTop","scrollTop","atBottom","scrollHeight","renderHeight","set","onDidScroll","multiSelectModifierSettingKey","openModeSettingKey","horizontalScrollingKey","defaultFindModeSettingKey","typeNavigationModeSettingKey","keyboardNavigationSettingKey","scrollByPageKey","defaultFindMatchTypeSettingKey","treeIndentKey","treeRenderIndentGuidesKey","listSmoothScrolling","mouseWheelScrollSensitivityKey","fastScrollSensitivityKey","treeExpandMode","treeStickyScroll","treeStickyScrollMaxElements","useAltAsMultipleSelectionModifier","configurationService","getValue","MultipleSelectionController","_Disposable","_this2","_callSuper","registerListeners","_inherits","_this3","_register","onDidChangeConfiguration","e","affectsConfiguration","event","browserEvent","altKey","toWorkbenchListOptions","accessor","options","keybindingService","_objectSpread","keyboardNavigationDelegate","mightProducePrintableCharacter","smoothScrolling","Boolean","mouseWheelScrollSensitivity","fastScrollSensitivity","multipleSelectionController","keyboardNavigationEventFilter","createKeyboardNavigationEventFilter","scrollByPage","WorkbenchList","_List","user","container","delegate","renderers","listService","instantiationService","_this4","horizontalScrolling","_instantiationService","invokeFunction","_instantiationService2","_slicedToArray","workbenchListOptions","workbenchListOptionsDisposable","keyboardSupport","listSupportsMultiSelect","multipleSelectionSupport","listSelectionNavigation","selectionNavigation","listHasSelectionOrFocus","listDoubleSelection","listMultiSelection","_useAltAsMultipleSelectionModifier","updateStyles","overrideStyles","onDidChangeSelection","selection","getSelection","focus","getFocus","bufferChangeEvents","onDidChangeFocus","keys","updateOptions","navigator","ListResourceNavigator","_get","_getPrototypeOf","prototype","call","styles","WorkbenchPagedList","_PagedList","_this5","_instantiationService3","_instantiationService4","WorkbenchTable","_Table","columns","_this6","_instantiationService5","_instantiationService6","TableResourceNavigator","ResourceNavigator","_Disposable2","_this7","_onDidOpen","onDidOpen","onSelectionFromKeyboard","onPointer","element","onMouseDblClick","openOnSingleClick","elements","selectionKeyboardEvent","preserveFocus","pinned","sideBySide","_open","getSelectedElement","isDoubleClick","detail","isMiddleClick","button","ctrlKey","metaKey","onTwistie","contains","offsetX","fire","editorOptions","revealIfVisible","_ResourceNavigator","_this8","getSelectedElements","_ResourceNavigator2","TreeResourceNavigator","_ResourceNavigator3","inMultiChord","toKeyCodeChord","isModifierKey","softDispatch","kind","WorkbenchObjectTree","_ObjectTree","_this9","_instantiationService7","workbenchTreeDataPreamble","treeOptions","getTypeNavigationMode","disposable","internals","WorkbenchTreeInternals","WorkbenchCompressibleObjectTree","_CompressibleObjectTr","_this10","_instantiationService8","updateStyleOverrides","WorkbenchDataTree","_DataTree","dataSource","_this11","_instantiationService9","WorkbenchAsyncDataTree","_AsyncDataTree","_this12","_instantiationService10","WorkbenchCompressibleAsyncDataTree","_CompressibleAsyncDat","virtualDelegate","compressionDelegate","_this13","_instantiationService11","getDefaultTreeFindMode","Highlight","Filter","deprecatedValue","getDefaultTreeFindMatchType","Fuzzy","Contiguous","contextViewService","modeString","getContextKeyValue","Automatic","Trigger","modeBoolean","configString","_instantiationService12","_instantiationService13","paddingBottom","renderIndentGuides","indent","defaultFindMode","defaultFindMatchType","hideTwistiesOfChildlessElements","expandOnlyOnTwistieClick","contextViewProvider","findWidgetStyles","enableStickyScroll","stickyScrollMaxItemCount","Number","tree","_this14","listSupportFindWidget","findWidgetEnabled","hasSelectionOrFocus","hasDoubleSelection","hasMultiSelection","treeElementCanCollapse","treeElementHasParent","treeElementCanExpand","treeElementHasChild","treeFindOpen","treeStickyScrollFocused","updateCollapseContextKeys","node","getNode","collapsible","collapsed","getParentElement","getFirstElementChild","interestingContextKeys","Set","onDidChangeCollapseState","onDidChangeModel","onDidChangeFindOpenState","enabled","onDidChangeStickyScrollFocused","focused","newOptions","typeNavigationMode","Math","max","onDidChangeContext","affectsSome","configurationRegistry","as","Configuration","registerConfiguration","id","order","title","type","properties","_properties","_defineProperty","markdownEnumDescriptions","description","comment","minimum","maximum","markdownDescription","enumDescriptions","deprecated","deprecationMessage"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/platform/list/browser/listService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createStyleSheet, isActiveElement, isKeyboardEvent } from '../../../base/browser/dom.js';\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\nimport { DefaultStyleController, isSelectionRangeChangeEvent, isSelectionSingleChangeEvent, List, TypeNavigationMode } from '../../../base/browser/ui/list/listWidget.js';\nimport { Table } from '../../../base/browser/ui/table/tableWidget.js';\nimport { TreeFindMode, TreeFindMatchType } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\nimport { CompressibleObjectTree, ObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { combinedDisposable, Disposable, DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { defaultFindWidgetStyles, defaultListStyles, getListStyles } from '../../theme/browser/defaultStyles.js';\nexport const IListService = createDecorator('listService');\nexport class ListService {\n    get lastFocusedList() {\n        return this._lastFocusedWidget;\n    }\n    constructor() {\n        this.disposables = new DisposableStore();\n        this.lists = [];\n        this._lastFocusedWidget = undefined;\n        this._hasCreatedStyleController = false;\n    }\n    setLastFocusedList(widget) {\n        var _a, _b;\n        if (widget === this._lastFocusedWidget) {\n            return;\n        }\n        (_a = this._lastFocusedWidget) === null || _a === void 0 ? void 0 : _a.getHTMLElement().classList.remove('last-focused');\n        this._lastFocusedWidget = widget;\n        (_b = this._lastFocusedWidget) === null || _b === void 0 ? void 0 : _b.getHTMLElement().classList.add('last-focused');\n    }\n    register(widget, extraContextKeys) {\n        if (!this._hasCreatedStyleController) {\n            this._hasCreatedStyleController = true;\n            // create a shared default tree style sheet for performance reasons\n            const styleController = new DefaultStyleController(createStyleSheet(), '');\n            styleController.style(defaultListStyles);\n        }\n        if (this.lists.some(l => l.widget === widget)) {\n            throw new Error('Cannot register the same widget multiple times');\n        }\n        // Keep in our lists list\n        const registeredList = { widget, extraContextKeys };\n        this.lists.push(registeredList);\n        // Check for currently being focused\n        if (isActiveElement(widget.getHTMLElement())) {\n            this.setLastFocusedList(widget);\n        }\n        return combinedDisposable(widget.onDidFocus(() => this.setLastFocusedList(widget)), toDisposable(() => this.lists.splice(this.lists.indexOf(registeredList), 1)), widget.onDidDispose(() => {\n            this.lists = this.lists.filter(l => l !== registeredList);\n            if (this._lastFocusedWidget === widget) {\n                this.setLastFocusedList(undefined);\n            }\n        }));\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nexport const RawWorkbenchListScrollAtBoundaryContextKey = new RawContextKey('listScrollAtBoundary', 'none');\nexport const WorkbenchListScrollAtTopContextKey = ContextKeyExpr.or(RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('top'), RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('both'));\nexport const WorkbenchListScrollAtBottomContextKey = ContextKeyExpr.or(RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('bottom'), RawWorkbenchListScrollAtBoundaryContextKey.isEqualTo('both'));\nexport const RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\nexport const WorkbenchTreeStickyScrollFocused = new RawContextKey('treestickyScrollFocused', false);\nexport const WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\nexport const WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey), WorkbenchTreeStickyScrollFocused.negate());\nexport const WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\nexport const WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\nexport const WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\nexport const WorkbenchListSelectionNavigation = new RawContextKey('listSelectionNavigation', false);\nexport const WorkbenchListSupportsFind = new RawContextKey('listSupportsFind', true);\nexport const WorkbenchTreeElementCanCollapse = new RawContextKey('treeElementCanCollapse', false);\nexport const WorkbenchTreeElementHasParent = new RawContextKey('treeElementHasParent', false);\nexport const WorkbenchTreeElementCanExpand = new RawContextKey('treeElementCanExpand', false);\nexport const WorkbenchTreeElementHasChild = new RawContextKey('treeElementHasChild', false);\nexport const WorkbenchTreeFindOpen = new RawContextKey('treeFindOpen', false);\nconst WorkbenchListTypeNavigationModeKey = 'listTypeNavigationMode';\n/**\n * @deprecated in favor of WorkbenchListTypeNavigationModeKey\n */\nconst WorkbenchListAutomaticKeyboardNavigationLegacyKey = 'listAutomaticKeyboardNavigation';\nfunction createScopedContextKeyService(contextKeyService, widget) {\n    const result = contextKeyService.createScoped(widget.getHTMLElement());\n    RawWorkbenchListFocusContextKey.bindTo(result);\n    return result;\n}\nfunction createScrollObserver(contextKeyService, widget) {\n    const listScrollAt = RawWorkbenchListScrollAtBoundaryContextKey.bindTo(contextKeyService);\n    const update = () => {\n        const atTop = widget.scrollTop === 0;\n        // We need a threshold `1` since scrollHeight is rounded.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#determine_if_an_element_has_been_totally_scrolled\n        const atBottom = widget.scrollHeight - widget.renderHeight - widget.scrollTop < 1;\n        if (atTop && atBottom) {\n            listScrollAt.set('both');\n        }\n        else if (atTop) {\n            listScrollAt.set('top');\n        }\n        else if (atBottom) {\n            listScrollAt.set('bottom');\n        }\n        else {\n            listScrollAt.set('none');\n        }\n    };\n    update();\n    return widget.onDidScroll(update);\n}\nconst multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\nconst openModeSettingKey = 'workbench.list.openMode';\nconst horizontalScrollingKey = 'workbench.list.horizontalScrolling';\nconst defaultFindModeSettingKey = 'workbench.list.defaultFindMode';\nconst typeNavigationModeSettingKey = 'workbench.list.typeNavigationMode';\n/** @deprecated in favor of `workbench.list.defaultFindMode` and `workbench.list.typeNavigationMode` */\nconst keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\nconst scrollByPageKey = 'workbench.list.scrollByPage';\nconst defaultFindMatchTypeSettingKey = 'workbench.list.defaultFindMatchType';\nconst treeIndentKey = 'workbench.tree.indent';\nconst treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\nconst listSmoothScrolling = 'workbench.list.smoothScrolling';\nconst mouseWheelScrollSensitivityKey = 'workbench.list.mouseWheelScrollSensitivity';\nconst fastScrollSensitivityKey = 'workbench.list.fastScrollSensitivity';\nconst treeExpandMode = 'workbench.tree.expandMode';\nconst treeStickyScroll = 'workbench.tree.enableStickyScroll';\nconst treeStickyScrollMaxElements = 'workbench.tree.stickyScrollMaxItemCount';\nfunction useAltAsMultipleSelectionModifier(configurationService) {\n    return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\n}\nclass MultipleSelectionController extends Disposable {\n    constructor(configurationService) {\n        super();\n        this.configurationService = configurationService;\n        this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(this.configurationService);\n            }\n        }));\n    }\n    isSelectionSingleChangeEvent(event) {\n        if (this.useAltAsMultipleSelectionModifier) {\n            return event.browserEvent.altKey;\n        }\n        return isSelectionSingleChangeEvent(event);\n    }\n    isSelectionRangeChangeEvent(event) {\n        return isSelectionRangeChangeEvent(event);\n    }\n}\nfunction toWorkbenchListOptions(accessor, options) {\n    var _a;\n    const configurationService = accessor.get(IConfigurationService);\n    const keybindingService = accessor.get(IKeybindingService);\n    const disposables = new DisposableStore();\n    const result = {\n        ...options,\n        keyboardNavigationDelegate: { mightProducePrintableCharacter(e) { return keybindingService.mightProducePrintableCharacter(e); } },\n        smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)),\n        mouseWheelScrollSensitivity: configurationService.getValue(mouseWheelScrollSensitivityKey),\n        fastScrollSensitivity: configurationService.getValue(fastScrollSensitivityKey),\n        multipleSelectionController: (_a = options.multipleSelectionController) !== null && _a !== void 0 ? _a : disposables.add(new MultipleSelectionController(configurationService)),\n        keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(keybindingService),\n        scrollByPage: Boolean(configurationService.getValue(scrollByPageKey))\n    };\n    return [result, disposables];\n}\nlet WorkbenchList = class WorkbenchList extends List {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, {\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            horizontalScrolling,\n        });\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.disposables.add(createScrollObserver(this.contextKeyService, this));\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        this.updateStyles(options.overrideStyles);\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = { ...options, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                options = { ...options, scrollByPage };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = { ...options, smoothScrolling };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = { ...options, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = { ...options, fastScrollSensitivity };\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, { configurationService, ...options });\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n};\nWorkbenchList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IConfigurationService),\n    __param(8, IInstantiationService)\n], WorkbenchList);\nexport { WorkbenchList };\nlet WorkbenchPagedList = class WorkbenchPagedList extends PagedList {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, {\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            horizontalScrolling,\n        });\n        this.disposables = new DisposableStore();\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.disposables.add(createScrollObserver(this.contextKeyService, this.widget));\n        this.horizontalScrolling = options.horizontalScrolling;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        this.updateStyles(options.overrideStyles);\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = { ...options, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                options = { ...options, scrollByPage };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = { ...options, smoothScrolling };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = { ...options, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = { ...options, fastScrollSensitivity };\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, { configurationService, ...options });\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n    dispose() {\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchPagedList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IConfigurationService),\n    __param(8, IInstantiationService)\n], WorkbenchPagedList);\nexport { WorkbenchPagedList };\nlet WorkbenchTable = class WorkbenchTable extends Table {\n    constructor(user, container, delegate, columns, renderers, options, contextKeyService, listService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, columns, renderers, {\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            horizontalScrolling,\n        });\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.disposables.add(createScrollObserver(this.contextKeyService, this));\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        this.updateStyles(options.overrideStyles);\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = { ...options, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                options = { ...options, scrollByPage };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = { ...options, smoothScrolling };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = { ...options, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = { ...options, fastScrollSensitivity };\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new TableResourceNavigator(this, { configurationService, ...options });\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        this.style(styles ? getListStyles(styles) : defaultListStyles);\n    }\n    dispose() {\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchTable = __decorate([\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IConfigurationService),\n    __param(9, IInstantiationService)\n], WorkbenchTable);\nexport { WorkbenchTable };\nclass ResourceNavigator extends Disposable {\n    constructor(widget, options) {\n        var _a;\n        super();\n        this.widget = widget;\n        this._onDidOpen = this._register(new Emitter());\n        this.onDidOpen = this._onDidOpen.event;\n        this._register(Event.filter(this.widget.onDidChangeSelection, e => isKeyboardEvent(e.browserEvent))(e => this.onSelectionFromKeyboard(e)));\n        this._register(this.widget.onPointer((e) => this.onPointer(e.element, e.browserEvent)));\n        this._register(this.widget.onMouseDblClick((e) => this.onMouseDblClick(e.element, e.browserEvent)));\n        if (typeof (options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== 'boolean' && (options === null || options === void 0 ? void 0 : options.configurationService)) {\n            this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n            this._register(options === null || options === void 0 ? void 0 : options.configurationService.onDidChangeConfiguration(e => {\n                if (e.affectsConfiguration(openModeSettingKey)) {\n                    this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n                }\n            }));\n        }\n        else {\n            this.openOnSingleClick = (_a = options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== null && _a !== void 0 ? _a : true;\n        }\n    }\n    onSelectionFromKeyboard(event) {\n        if (event.elements.length !== 1) {\n            return;\n        }\n        const selectionKeyboardEvent = event.browserEvent;\n        const preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\n        const pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\n        const sideBySide = false;\n        this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\n    }\n    onPointer(element, browserEvent) {\n        if (!this.openOnSingleClick) {\n            return;\n        }\n        const isDoubleClick = browserEvent.detail === 2;\n        if (isDoubleClick) {\n            return;\n        }\n        const isMiddleClick = browserEvent.button === 1;\n        const preserveFocus = true;\n        const pinned = isMiddleClick;\n        const sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    onMouseDblClick(element, browserEvent) {\n        if (!browserEvent) {\n            return;\n        }\n        // copied from AbstractTree\n        const target = browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && browserEvent.offsetX < 16);\n        if (onTwistie) {\n            return;\n        }\n        const preserveFocus = false;\n        const pinned = true;\n        const sideBySide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\n        if (!element) {\n            return;\n        }\n        this._onDidOpen.fire({\n            editorOptions: {\n                preserveFocus,\n                pinned,\n                revealIfVisible: true\n            },\n            sideBySide,\n            element,\n            browserEvent\n        });\n    }\n}\nclass ListResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n        this.widget = widget;\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TableResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TreeResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        var _a;\n        return (_a = this.widget.getSelection()[0]) !== null && _a !== void 0 ? _a : undefined;\n    }\n}\nfunction createKeyboardNavigationEventFilter(keybindingService) {\n    let inMultiChord = false;\n    return event => {\n        if (event.toKeyCodeChord().isModifierKey()) {\n            return false;\n        }\n        if (inMultiChord) {\n            inMultiChord = false;\n            return false;\n        }\n        const result = keybindingService.softDispatch(event, event.target);\n        if (result.kind === 1 /* ResultKind.MoreChordsNeeded */) {\n            inMultiChord = true;\n            return false;\n        }\n        inMultiChord = false;\n        return result.kind === 0 /* ResultKind.NoMatchingKb */;\n    };\n}\nlet WorkbenchObjectTree = class WorkbenchObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IConfigurationService)\n], WorkbenchObjectTree);\nexport { WorkbenchObjectTree };\nlet WorkbenchCompressibleObjectTree = class WorkbenchCompressibleObjectTree extends CompressibleObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IConfigurationService)\n], WorkbenchCompressibleObjectTree);\nexport { WorkbenchCompressibleObjectTree };\nlet WorkbenchDataTree = class WorkbenchDataTree extends DataTree {\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles !== undefined) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IConfigurationService)\n], WorkbenchDataTree);\nexport { WorkbenchDataTree };\nlet WorkbenchAsyncDataTree = class WorkbenchAsyncDataTree extends AsyncDataTree {\n    get onDidOpen() { return this.internals.onDidOpen; }\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchAsyncDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IConfigurationService)\n], WorkbenchAsyncDataTree);\nexport { WorkbenchAsyncDataTree };\nlet WorkbenchCompressibleAsyncDataTree = class WorkbenchCompressibleAsyncDataTree extends CompressibleAsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleAsyncDataTree = __decorate([\n    __param(7, IInstantiationService),\n    __param(8, IContextKeyService),\n    __param(9, IListService),\n    __param(10, IConfigurationService)\n], WorkbenchCompressibleAsyncDataTree);\nexport { WorkbenchCompressibleAsyncDataTree };\nfunction getDefaultTreeFindMode(configurationService) {\n    const value = configurationService.getValue(defaultFindModeSettingKey);\n    if (value === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (value === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    const deprecatedValue = configurationService.getValue(keyboardNavigationSettingKey);\n    if (deprecatedValue === 'simple' || deprecatedValue === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (deprecatedValue === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    return undefined;\n}\nfunction getDefaultTreeFindMatchType(configurationService) {\n    const value = configurationService.getValue(defaultFindMatchTypeSettingKey);\n    if (value === 'fuzzy') {\n        return TreeFindMatchType.Fuzzy;\n    }\n    else if (value === 'contiguous') {\n        return TreeFindMatchType.Contiguous;\n    }\n    return undefined;\n}\nfunction workbenchTreeDataPreamble(accessor, options) {\n    var _a;\n    const configurationService = accessor.get(IConfigurationService);\n    const contextViewService = accessor.get(IContextViewService);\n    const contextKeyService = accessor.get(IContextKeyService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const getTypeNavigationMode = () => {\n        // give priority to the context key value to specify a value\n        const modeString = contextKeyService.getContextKeyValue(WorkbenchListTypeNavigationModeKey);\n        if (modeString === 'automatic') {\n            return TypeNavigationMode.Automatic;\n        }\n        else if (modeString === 'trigger') {\n            return TypeNavigationMode.Trigger;\n        }\n        // also check the deprecated context key to set the mode to 'trigger'\n        const modeBoolean = contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        if (modeBoolean === false) {\n            return TypeNavigationMode.Trigger;\n        }\n        // finally, check the setting\n        const configString = configurationService.getValue(typeNavigationModeSettingKey);\n        if (configString === 'automatic') {\n            return TypeNavigationMode.Automatic;\n        }\n        else if (configString === 'trigger') {\n            return TypeNavigationMode.Trigger;\n        }\n        return undefined;\n    };\n    const horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n    const [workbenchListOptions, disposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n    const paddingBottom = options.paddingBottom;\n    const renderIndentGuides = options.renderIndentGuides !== undefined ? options.renderIndentGuides : configurationService.getValue(treeRenderIndentGuidesKey);\n    return {\n        getTypeNavigationMode,\n        disposable,\n        options: {\n            // ...options, // TODO@Joao why is this not splatted here?\n            keyboardSupport: false,\n            ...workbenchListOptions,\n            indent: typeof configurationService.getValue(treeIndentKey) === 'number' ? configurationService.getValue(treeIndentKey) : undefined,\n            renderIndentGuides,\n            smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)),\n            defaultFindMode: getDefaultTreeFindMode(configurationService),\n            defaultFindMatchType: getDefaultTreeFindMatchType(configurationService),\n            horizontalScrolling,\n            scrollByPage: Boolean(configurationService.getValue(scrollByPageKey)),\n            paddingBottom: paddingBottom,\n            hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements,\n            expandOnlyOnTwistieClick: (_a = options.expandOnlyOnTwistieClick) !== null && _a !== void 0 ? _a : (configurationService.getValue(treeExpandMode) === 'doubleClick'),\n            contextViewProvider: contextViewService,\n            findWidgetStyles: defaultFindWidgetStyles,\n            enableStickyScroll: Boolean(configurationService.getValue(treeStickyScroll)),\n            stickyScrollMaxItemCount: Number(configurationService.getValue(treeStickyScrollMaxElements)),\n        }\n    };\n}\nlet WorkbenchTreeInternals = class WorkbenchTreeInternals {\n    get onDidOpen() { return this.navigator.onDidOpen; }\n    constructor(tree, options, getTypeNavigationMode, overrideStyles, contextKeyService, listService, configurationService) {\n        var _a;\n        this.tree = tree;\n        this.disposables = [];\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\n        this.disposables.push(createScrollObserver(this.contextKeyService, tree));\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listSupportFindWidget = WorkbenchListSupportsFind.bindTo(this.contextKeyService);\n        this.listSupportFindWidget.set((_a = options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true);\n        this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.treeElementCanCollapse = WorkbenchTreeElementCanCollapse.bindTo(this.contextKeyService);\n        this.treeElementHasParent = WorkbenchTreeElementHasParent.bindTo(this.contextKeyService);\n        this.treeElementCanExpand = WorkbenchTreeElementCanExpand.bindTo(this.contextKeyService);\n        this.treeElementHasChild = WorkbenchTreeElementHasChild.bindTo(this.contextKeyService);\n        this.treeFindOpen = WorkbenchTreeFindOpen.bindTo(this.contextKeyService);\n        this.treeStickyScrollFocused = WorkbenchTreeStickyScrollFocused.bindTo(this.contextKeyService);\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.updateStyleOverrides(overrideStyles);\n        const updateCollapseContextKeys = () => {\n            const focus = tree.getFocus()[0];\n            if (!focus) {\n                return;\n            }\n            const node = tree.getNode(focus);\n            this.treeElementCanCollapse.set(node.collapsible && !node.collapsed);\n            this.treeElementHasParent.set(!!tree.getParentElement(focus));\n            this.treeElementCanExpand.set(node.collapsible && node.collapsed);\n            this.treeElementHasChild.set(!!tree.getFirstElementChild(focus));\n        };\n        const interestingContextKeys = new Set();\n        interestingContextKeys.add(WorkbenchListTypeNavigationModeKey);\n        interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.hasMultiSelection.set(selection.length > 1);\n                this.hasDoubleSelection.set(selection.length === 2);\n            });\n        }), tree.onDidChangeFocus(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n            updateCollapseContextKeys();\n        }), tree.onDidChangeCollapseState(updateCollapseContextKeys), tree.onDidChangeModel(updateCollapseContextKeys), tree.onDidChangeFindOpenState(enabled => this.treeFindOpen.set(enabled)), tree.onDidChangeStickyScrollFocused(focused => this.treeStickyScrollFocused.set(focused)), configurationService.onDidChangeConfiguration(e => {\n            let newOptions = {};\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            if (e.affectsConfiguration(treeIndentKey)) {\n                const indent = configurationService.getValue(treeIndentKey);\n                newOptions = { ...newOptions, indent };\n            }\n            if (e.affectsConfiguration(treeRenderIndentGuidesKey) && options.renderIndentGuides === undefined) {\n                const renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\n                newOptions = { ...newOptions, renderIndentGuides };\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                newOptions = { ...newOptions, smoothScrolling };\n            }\n            if (e.affectsConfiguration(defaultFindModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n                const defaultFindMode = getDefaultTreeFindMode(configurationService);\n                newOptions = { ...newOptions, defaultFindMode };\n            }\n            if (e.affectsConfiguration(typeNavigationModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n                const typeNavigationMode = getTypeNavigationMode();\n                newOptions = { ...newOptions, typeNavigationMode };\n            }\n            if (e.affectsConfiguration(defaultFindMatchTypeSettingKey)) {\n                const defaultFindMatchType = getDefaultTreeFindMatchType(configurationService);\n                newOptions = { ...newOptions, defaultFindMatchType };\n            }\n            if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                newOptions = { ...newOptions, horizontalScrolling };\n            }\n            if (e.affectsConfiguration(scrollByPageKey)) {\n                const scrollByPage = Boolean(configurationService.getValue(scrollByPageKey));\n                newOptions = { ...newOptions, scrollByPage };\n            }\n            if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\n                newOptions = { ...newOptions, expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick' };\n            }\n            if (e.affectsConfiguration(treeStickyScroll)) {\n                const enableStickyScroll = configurationService.getValue(treeStickyScroll);\n                newOptions = { ...newOptions, enableStickyScroll };\n            }\n            if (e.affectsConfiguration(treeStickyScrollMaxElements)) {\n                const stickyScrollMaxItemCount = Math.max(1, configurationService.getValue(treeStickyScrollMaxElements));\n                newOptions = { ...newOptions, stickyScrollMaxItemCount };\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                newOptions = { ...newOptions, mouseWheelScrollSensitivity };\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                newOptions = { ...newOptions, fastScrollSensitivity };\n            }\n            if (Object.keys(newOptions).length > 0) {\n                tree.updateOptions(newOptions);\n            }\n        }), this.contextKeyService.onDidChangeContext(e => {\n            if (e.affectsSome(interestingContextKeys)) {\n                tree.updateOptions({ typeNavigationMode: getTypeNavigationMode() });\n            }\n        }));\n        this.navigator = new TreeResourceNavigator(tree, { configurationService, ...options });\n        this.disposables.push(this.navigator);\n    }\n    updateOptions(options) {\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyleOverrides(overrideStyles) {\n        this.tree.style(overrideStyles ? getListStyles(overrideStyles) : defaultListStyles);\n    }\n    dispose() {\n        this.disposables = dispose(this.disposables);\n    }\n};\nWorkbenchTreeInternals = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, IListService),\n    __param(6, IConfigurationService)\n], WorkbenchTreeInternals);\nconst configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n    id: 'workbench',\n    order: 7,\n    title: localize('workbenchConfigurationTitle', \"Workbench\"),\n    type: 'object',\n    properties: {\n        [multiSelectModifierSettingKey]: {\n            type: 'string',\n            enum: ['ctrlCmd', 'alt'],\n            markdownEnumDescriptions: [\n                localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n                localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n            ],\n            default: 'ctrlCmd',\n            description: localize({\n                key: 'multiSelectModifier',\n                comment: [\n                    '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n                    '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n                ]\n            }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\n        },\n        [openModeSettingKey]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize({\n                key: 'openModeModifier',\n                comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\n            }, \"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.\")\n        },\n        [horizontalScrollingKey]: {\n            type: 'boolean',\n            default: false,\n            description: localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\n        },\n        [scrollByPageKey]: {\n            type: 'boolean',\n            default: false,\n            description: localize('list.scrollByPage', \"Controls whether clicks in the scrollbar scroll page by page.\")\n        },\n        [treeIndentKey]: {\n            type: 'number',\n            default: 8,\n            minimum: 4,\n            maximum: 40,\n            description: localize('tree indent setting', \"Controls tree indentation in pixels.\")\n        },\n        [treeRenderIndentGuidesKey]: {\n            type: 'string',\n            enum: ['none', 'onHover', 'always'],\n            default: 'onHover',\n            description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\n        },\n        [listSmoothScrolling]: {\n            type: 'boolean',\n            default: false,\n            description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\"),\n        },\n        [mouseWheelScrollSensitivityKey]: {\n            type: 'number',\n            default: 1,\n            markdownDescription: localize('Mouse Wheel Scroll Sensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\")\n        },\n        [fastScrollSensitivityKey]: {\n            type: 'number',\n            default: 5,\n            markdownDescription: localize('Fast Scroll Sensitivity', \"Scrolling speed multiplier when pressing `Alt`.\")\n        },\n        [defaultFindModeSettingKey]: {\n            type: 'string',\n            enum: ['highlight', 'filter'],\n            enumDescriptions: [\n                localize('defaultFindModeSettingKey.highlight', \"Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('defaultFindModeSettingKey.filter', \"Filter elements when searching.\")\n            ],\n            default: 'highlight',\n            description: localize('defaultFindModeSettingKey', \"Controls the default find mode for lists and trees in the workbench.\")\n        },\n        [keyboardNavigationSettingKey]: {\n            type: 'string',\n            enum: ['simple', 'highlight', 'filter'],\n            enumDescriptions: [\n                localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"),\n                localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")\n            ],\n            default: 'highlight',\n            description: localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\"),\n            deprecated: true,\n            deprecationMessage: localize('keyboardNavigationSettingKeyDeprecated', \"Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.\")\n        },\n        [defaultFindMatchTypeSettingKey]: {\n            type: 'string',\n            enum: ['fuzzy', 'contiguous'],\n            enumDescriptions: [\n                localize('defaultFindMatchTypeSettingKey.fuzzy', \"Use fuzzy matching when searching.\"),\n                localize('defaultFindMatchTypeSettingKey.contiguous', \"Use contiguous matching when searching.\")\n            ],\n            default: 'fuzzy',\n            description: localize('defaultFindMatchTypeSettingKey', \"Controls the type of matching used when searching lists and trees in the workbench.\")\n        },\n        [treeExpandMode]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.\"),\n        },\n        [treeStickyScroll]: {\n            type: 'boolean',\n            default: true,\n            description: localize('sticky scroll', \"Controls whether sticky scrolling is enabled in trees.\"),\n        },\n        [treeStickyScrollMaxElements]: {\n            type: 'number',\n            minimum: 1,\n            default: 7,\n            markdownDescription: localize('sticky scroll maximum items', \"Controls the number of sticky elements displayed in the tree when `#workbench.tree.enableStickyScroll#` is enabled.\"),\n        },\n        [typeNavigationModeSettingKey]: {\n            type: 'string',\n            enum: ['automatic', 'trigger'],\n            default: 'automatic',\n            markdownDescription: localize('typeNavigationMode2', \"Controls how type navigation works in lists and trees in the workbench. When set to `trigger`, type navigation begins once the `list.triggerTypeNavigation` command is run.\"),\n        }\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}