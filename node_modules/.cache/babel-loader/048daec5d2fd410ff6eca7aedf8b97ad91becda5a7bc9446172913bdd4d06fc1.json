{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport var WordDistance = /*#__PURE__*/function () {\n  function WordDistance() {\n    _classCallCheck(this, WordDistance);\n  }\n  return _createClass(WordDistance, null, [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(service, editor) {\n        var model, position, _yield$BracketSelecti, _yield$BracketSelecti2, ranges, wordRanges, wordUntilPos;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (editor.getOption(118 /* EditorOption.suggest */).localityBonus) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", WordDistance.None);\n            case 2:\n              if (editor.hasModel()) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", WordDistance.None);\n            case 4:\n              model = editor.getModel();\n              position = editor.getPosition();\n              if (service.canComputeWordRanges(model.uri)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", WordDistance.None);\n            case 8:\n              _context.next = 10;\n              return new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n            case 10:\n              _yield$BracketSelecti = _context.sent;\n              _yield$BracketSelecti2 = _slicedToArray(_yield$BracketSelecti, 1);\n              ranges = _yield$BracketSelecti2[0];\n              if (!(ranges.length === 0)) {\n                _context.next = 15;\n                break;\n              }\n              return _context.abrupt(\"return\", WordDistance.None);\n            case 15:\n              _context.next = 17;\n              return service.computeWordRanges(model.uri, ranges[0].range);\n            case 17:\n              wordRanges = _context.sent;\n              if (wordRanges) {\n                _context.next = 20;\n                break;\n              }\n              return _context.abrupt(\"return\", WordDistance.None);\n            case 20:\n              // remove current word\n              wordUntilPos = model.getWordUntilPosition(position);\n              delete wordRanges[wordUntilPos.word];\n              return _context.abrupt(\"return\", new ( /*#__PURE__*/function (_WordDistance) {\n                function _class() {\n                  _classCallCheck(this, _class);\n                  return _callSuper(this, _class, arguments);\n                }\n                _inherits(_class, _WordDistance);\n                return _createClass(_class, [{\n                  key: \"distance\",\n                  value: function distance(anchor, item) {\n                    if (!position.equals(editor.getPosition())) {\n                      return 0;\n                    }\n                    if (item.kind === 17 /* CompletionItemKind.Keyword */) {\n                      return 2 << 20;\n                    }\n                    var word = typeof item.label === 'string' ? item.label : item.label.label;\n                    var wordLines = wordRanges[word];\n                    if (isFalsyOrEmpty(wordLines)) {\n                      return 2 << 20;\n                    }\n                    var idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n                    var bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n                    var blockDistance = ranges.length;\n                    var _iterator = _createForOfIteratorHelper(ranges),\n                      _step;\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        var range = _step.value;\n                        if (!Range.containsRange(range.range, bestWordRange)) {\n                          break;\n                        }\n                        blockDistance -= 1;\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n                    return blockDistance;\n                  }\n                }]);\n              }(WordDistance))());\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function create(_x, _x2) {\n        return _create.apply(this, arguments);\n      }\n      return create;\n    }()\n  }]);\n}();\nWordDistance.None = new ( /*#__PURE__*/function (_WordDistance2) {\n  function _class2() {\n    _classCallCheck(this, _class2);\n    return _callSuper(this, _class2, arguments);\n  }\n  _inherits(_class2, _WordDistance2);\n  return _createClass(_class2, [{\n    key: \"distance\",\n    value: function distance() {\n      return 0;\n    }\n  }]);\n}(WordDistance))();","map":{"version":3,"names":["binarySearch","isFalsyOrEmpty","Range","BracketSelectionRangeProvider","WordDistance","_classCallCheck","_createClass","key","value","_create","_asyncToGenerator","_regeneratorRuntime","mark","_callee","service","editor","model","position","_yield$BracketSelecti","_yield$BracketSelecti2","ranges","wordRanges","wordUntilPos","wrap","_callee$","_context","prev","next","getOption","localityBonus","abrupt","None","hasModel","getModel","getPosition","canComputeWordRanges","uri","provideSelectionRanges","sent","_slicedToArray","length","computeWordRanges","range","getWordUntilPosition","word","_WordDistance","_class","_callSuper","arguments","_inherits","distance","anchor","item","equals","kind","label","wordLines","idx","fromPositions","compareRangesUsingStarts","bestWordRange","Math","max","blockDistance","_iterator","_createForOfIteratorHelper","_step","s","n","done","containsRange","err","e","f","stop","create","_x","_x2","apply","_WordDistance2","_class2"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/wordDistance.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n    static async create(service, editor) {\n        if (!editor.getOption(118 /* EditorOption.suggest */).localityBonus) {\n            return WordDistance.None;\n        }\n        if (!editor.hasModel()) {\n            return WordDistance.None;\n        }\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        if (!service.canComputeWordRanges(model.uri)) {\n            return WordDistance.None;\n        }\n        const [ranges] = await new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n        if (ranges.length === 0) {\n            return WordDistance.None;\n        }\n        const wordRanges = await service.computeWordRanges(model.uri, ranges[0].range);\n        if (!wordRanges) {\n            return WordDistance.None;\n        }\n        // remove current word\n        const wordUntilPos = model.getWordUntilPosition(position);\n        delete wordRanges[wordUntilPos.word];\n        return new class extends WordDistance {\n            distance(anchor, item) {\n                if (!position.equals(editor.getPosition())) {\n                    return 0;\n                }\n                if (item.kind === 17 /* CompletionItemKind.Keyword */) {\n                    return 2 << 20;\n                }\n                const word = typeof item.label === 'string' ? item.label : item.label.label;\n                const wordLines = wordRanges[word];\n                if (isFalsyOrEmpty(wordLines)) {\n                    return 2 << 20;\n                }\n                const idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n                const bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n                let blockDistance = ranges.length;\n                for (const range of ranges) {\n                    if (!Range.containsRange(range.range, bestWordRange)) {\n                        break;\n                    }\n                    blockDistance -= 1;\n                }\n                return blockDistance;\n            }\n        };\n    }\n}\nWordDistance.None = new class extends WordDistance {\n    distance() { return 0; }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}