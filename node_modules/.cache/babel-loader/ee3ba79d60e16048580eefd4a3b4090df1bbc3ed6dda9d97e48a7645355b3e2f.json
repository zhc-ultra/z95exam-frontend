{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport var LinesDecorationsOverlay = /*#__PURE__*/function (_DedupOverlay) {\n  function LinesDecorationsOverlay(context) {\n    var _this;\n    _classCallCheck(this, LinesDecorationsOverlay);\n    _this = _callSuper(this, LinesDecorationsOverlay);\n    _this._context = context;\n    var options = _this._context.configuration.options;\n    var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n    _this._decorationsLeft = layoutInfo.decorationsLeft;\n    _this._decorationsWidth = layoutInfo.decorationsWidth;\n    _this._renderResult = null;\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  _inherits(LinesDecorationsOverlay, _DedupOverlay);\n  return _createClass(LinesDecorationsOverlay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n      this._renderResult = null;\n      _get(_getPrototypeOf(LinesDecorationsOverlay.prototype), \"dispose\", this).call(this);\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      var options = this._context.configuration.options;\n      var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n      this._decorationsLeft = layoutInfo.decorationsLeft;\n      this._decorationsWidth = layoutInfo.decorationsWidth;\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n    // --- end event handlers\n  }, {\n    key: \"_getDecorations\",\n    value: function _getDecorations(ctx) {\n      var _a, _b;\n      var decorations = ctx.getDecorationsInViewport();\n      var r = [];\n      var rLen = 0;\n      for (var i = 0, len = decorations.length; i < len; i++) {\n        var d = decorations[i];\n        var linesDecorationsClassName = d.options.linesDecorationsClassName;\n        var zIndex = d.options.zIndex;\n        if (linesDecorationsClassName) {\n          r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, (_a = d.options.linesDecorationsTooltip) !== null && _a !== void 0 ? _a : null, zIndex);\n        }\n        var firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n        if (firstLineDecorationClassName) {\n          r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, (_b = d.options.linesDecorationsTooltip) !== null && _b !== void 0 ? _b : null, zIndex);\n        }\n      }\n      return r;\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n      var toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n      var left = this._decorationsLeft.toString();\n      var width = this._decorationsWidth.toString();\n      var common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n      var output = [];\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        var decorations = toRender[lineIndex].getDecorations();\n        var lineOutput = '';\n        var _iterator = _createForOfIteratorHelper(decorations),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var decoration = _step.value;\n            var addition = '<div class=\"cldr ' + decoration.className;\n            if (decoration.tooltip !== null) {\n              addition += '\" title=\"' + decoration.tooltip; // The tooltip is already escaped.\n            }\n            addition += common;\n            lineOutput += addition;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        output[lineIndex] = lineOutput;\n      }\n      this._renderResult = output;\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n      return this._renderResult[lineNumber - startLineNumber];\n    }\n  }]);\n}(DedupOverlay);","map":{"version":3,"names":["DecorationToRender","DedupOverlay","LinesDecorationsOverlay","_DedupOverlay","context","_this","_classCallCheck","_callSuper","_context","options","configuration","layoutInfo","get","_decorationsLeft","decorationsLeft","_decorationsWidth","decorationsWidth","_renderResult","addEventHandler","_inherits","_createClass","key","value","dispose","removeEventHandler","_get","_getPrototypeOf","prototype","call","onConfigurationChanged","e","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","_getDecorations","ctx","_a","_b","decorations","getDecorationsInViewport","r","rLen","i","len","length","d","linesDecorationsClassName","zIndex","range","startLineNumber","endLineNumber","linesDecorationsTooltip","firstLineDecorationClassName","prepareRender","visibleStartLineNumber","visibleRange","visibleEndLineNumber","toRender","_render","left","toString","width","common","output","lineNumber","lineIndex","getDecorations","lineOutput","_iterator","_createForOfIteratorHelper","_step","s","n","done","decoration","addition","className","tooltip","err","f","render"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class LinesDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        var _a, _b;\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const linesDecorationsClassName = d.options.linesDecorationsClassName;\n            const zIndex = d.options.zIndex;\n            if (linesDecorationsClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, (_a = d.options.linesDecorationsTooltip) !== null && _a !== void 0 ? _a : null, zIndex);\n            }\n            const firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n            if (firstLineDecorationClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, (_b = d.options.linesDecorationsTooltip) !== null && _b !== void 0 ? _b : null, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const left = this._decorationsLeft.toString();\n        const width = this._decorationsWidth.toString();\n        const common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                let addition = '<div class=\"cldr ' + decoration.className;\n                if (decoration.tooltip !== null) {\n                    addition += '\" title=\"' + decoration.tooltip; // The tooltip is already escaped.\n                }\n                addition += common;\n                lineOutput += addition;\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}