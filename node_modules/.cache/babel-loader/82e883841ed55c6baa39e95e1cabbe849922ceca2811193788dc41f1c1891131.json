{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.create.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { InlineDecoration, ViewModelDecoration } from '../viewModel.js';\nimport { filterValidationDecorations } from '../config/editorOptions.js';\nexport var ViewModelDecorations = /*#__PURE__*/function () {\n  function ViewModelDecorations(editorId, model, configuration, linesCollection, coordinatesConverter) {\n    _classCallCheck(this, ViewModelDecorations);\n    this.editorId = editorId;\n    this.model = model;\n    this.configuration = configuration;\n    this._linesCollection = linesCollection;\n    this._coordinatesConverter = coordinatesConverter;\n    this._decorationsCache = Object.create(null);\n    this._cachedModelDecorationsResolver = null;\n    this._cachedModelDecorationsResolverViewRange = null;\n  }\n  return _createClass(ViewModelDecorations, [{\n    key: \"_clearCachedModelDecorationsResolver\",\n    value: function _clearCachedModelDecorationsResolver() {\n      this._cachedModelDecorationsResolver = null;\n      this._cachedModelDecorationsResolverViewRange = null;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._decorationsCache = Object.create(null);\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._decorationsCache = Object.create(null);\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"onModelDecorationsChanged\",\n    value: function onModelDecorationsChanged() {\n      this._decorationsCache = Object.create(null);\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"onLineMappingChanged\",\n    value: function onLineMappingChanged() {\n      this._decorationsCache = Object.create(null);\n      this._clearCachedModelDecorationsResolver();\n    }\n  }, {\n    key: \"_getOrCreateViewModelDecoration\",\n    value: function _getOrCreateViewModelDecoration(modelDecoration) {\n      var id = modelDecoration.id;\n      var r = this._decorationsCache[id];\n      if (!r) {\n        var modelRange = modelDecoration.range;\n        var options = modelDecoration.options;\n        var viewRange;\n        if (options.isWholeLine) {\n          var start = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.startLineNumber, 1), 0 /* PositionAffinity.Left */, false, true);\n          var end = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber)), 1 /* PositionAffinity.Right */);\n          viewRange = new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n        } else {\n          // For backwards compatibility reasons, we want injected text before any decoration.\n          // Thus, move decorations to the right.\n          viewRange = this._coordinatesConverter.convertModelRangeToViewRange(modelRange, 1 /* PositionAffinity.Right */);\n        }\n        r = new ViewModelDecoration(viewRange, options);\n        this._decorationsCache[id] = r;\n      }\n      return r;\n    }\n  }, {\n    key: \"getMinimapDecorationsInRange\",\n    value: function getMinimapDecorationsInRange(range) {\n      return this._getDecorationsInRange(range, true, false).decorations;\n    }\n  }, {\n    key: \"getDecorationsViewportData\",\n    value: function getDecorationsViewportData(viewRange) {\n      var cacheIsValid = this._cachedModelDecorationsResolver !== null;\n      cacheIsValid = cacheIsValid && viewRange.equalsRange(this._cachedModelDecorationsResolverViewRange);\n      if (!cacheIsValid) {\n        this._cachedModelDecorationsResolver = this._getDecorationsInRange(viewRange, false, false);\n        this._cachedModelDecorationsResolverViewRange = viewRange;\n      }\n      return this._cachedModelDecorationsResolver;\n    }\n  }, {\n    key: \"getInlineDecorationsOnLine\",\n    value: function getInlineDecorationsOnLine(lineNumber) {\n      var onlyMinimapDecorations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var onlyMarginDecorations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var range = new Range(lineNumber, this._linesCollection.getViewLineMinColumn(lineNumber), lineNumber, this._linesCollection.getViewLineMaxColumn(lineNumber));\n      return this._getDecorationsInRange(range, onlyMinimapDecorations, onlyMarginDecorations).inlineDecorations[0];\n    }\n  }, {\n    key: \"_getDecorationsInRange\",\n    value: function _getDecorationsInRange(viewRange, onlyMinimapDecorations, onlyMarginDecorations) {\n      var modelDecorations = this._linesCollection.getDecorationsInRange(viewRange, this.editorId, filterValidationDecorations(this.configuration.options), onlyMinimapDecorations, onlyMarginDecorations);\n      var startLineNumber = viewRange.startLineNumber;\n      var endLineNumber = viewRange.endLineNumber;\n      var decorationsInViewport = [];\n      var decorationsInViewportLen = 0;\n      var inlineDecorations = [];\n      for (var j = startLineNumber; j <= endLineNumber; j++) {\n        inlineDecorations[j - startLineNumber] = [];\n      }\n      for (var i = 0, len = modelDecorations.length; i < len; i++) {\n        var modelDecoration = modelDecorations[i];\n        var decorationOptions = modelDecoration.options;\n        if (!isModelDecorationVisible(this.model, modelDecoration)) {\n          continue;\n        }\n        var viewModelDecoration = this._getOrCreateViewModelDecoration(modelDecoration);\n        var _viewRange = viewModelDecoration.range;\n        decorationsInViewport[decorationsInViewportLen++] = viewModelDecoration;\n        if (decorationOptions.inlineClassName) {\n          var inlineDecoration = new InlineDecoration(_viewRange, decorationOptions.inlineClassName, decorationOptions.inlineClassNameAffectsLetterSpacing ? 3 /* InlineDecorationType.RegularAffectingLetterSpacing */ : 0 /* InlineDecorationType.Regular */);\n          var intersectedStartLineNumber = Math.max(startLineNumber, _viewRange.startLineNumber);\n          var intersectedEndLineNumber = Math.min(endLineNumber, _viewRange.endLineNumber);\n          for (var _j = intersectedStartLineNumber; _j <= intersectedEndLineNumber; _j++) {\n            inlineDecorations[_j - startLineNumber].push(inlineDecoration);\n          }\n        }\n        if (decorationOptions.beforeContentClassName) {\n          if (startLineNumber <= _viewRange.startLineNumber && _viewRange.startLineNumber <= endLineNumber) {\n            var _inlineDecoration = new InlineDecoration(new Range(_viewRange.startLineNumber, _viewRange.startColumn, _viewRange.startLineNumber, _viewRange.startColumn), decorationOptions.beforeContentClassName, 1 /* InlineDecorationType.Before */);\n            inlineDecorations[_viewRange.startLineNumber - startLineNumber].push(_inlineDecoration);\n          }\n        }\n        if (decorationOptions.afterContentClassName) {\n          if (startLineNumber <= _viewRange.endLineNumber && _viewRange.endLineNumber <= endLineNumber) {\n            var _inlineDecoration2 = new InlineDecoration(new Range(_viewRange.endLineNumber, _viewRange.endColumn, _viewRange.endLineNumber, _viewRange.endColumn), decorationOptions.afterContentClassName, 2 /* InlineDecorationType.After */);\n            inlineDecorations[_viewRange.endLineNumber - startLineNumber].push(_inlineDecoration2);\n          }\n        }\n      }\n      return {\n        decorations: decorationsInViewport,\n        inlineDecorations: inlineDecorations\n      };\n    }\n  }]);\n}();\nexport function isModelDecorationVisible(model, decoration) {\n  if (decoration.options.hideInCommentTokens && isModelDecorationInComment(model, decoration)) {\n    return false;\n  }\n  if (decoration.options.hideInStringTokens && isModelDecorationInString(model, decoration)) {\n    return false;\n  }\n  return true;\n}\nexport function isModelDecorationInComment(model, decoration) {\n  return testTokensInRange(model, decoration.range, function (tokenType) {\n    return tokenType === 1;\n  } /* StandardTokenType.Comment */);\n}\nexport function isModelDecorationInString(model, decoration) {\n  return testTokensInRange(model, decoration.range, function (tokenType) {\n    return tokenType === 2;\n  } /* StandardTokenType.String */);\n}\n/**\n * Calls the callback for every token that intersects the range.\n * If the callback returns `false`, iteration stops and `false` is returned.\n * Otherwise, `true` is returned.\n */\nfunction testTokensInRange(model, range, callback) {\n  for (var lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n    var lineTokens = model.tokenization.getLineTokens(lineNumber);\n    var isFirstLine = lineNumber === range.startLineNumber;\n    var isEndLine = lineNumber === range.endLineNumber;\n    var tokenIdx = isFirstLine ? lineTokens.findTokenIndexAtOffset(range.startColumn - 1) : 0;\n    while (tokenIdx < lineTokens.getCount()) {\n      if (isEndLine) {\n        var startOffset = lineTokens.getStartOffset(tokenIdx);\n        if (startOffset > range.endColumn - 1) {\n          break;\n        }\n      }\n      var callbackResult = callback(lineTokens.getStandardTokenType(tokenIdx));\n      if (!callbackResult) {\n        return false;\n      }\n      tokenIdx++;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["Position","Range","InlineDecoration","ViewModelDecoration","filterValidationDecorations","ViewModelDecorations","editorId","model","configuration","linesCollection","coordinatesConverter","_classCallCheck","_linesCollection","_coordinatesConverter","_decorationsCache","Object","create","_cachedModelDecorationsResolver","_cachedModelDecorationsResolverViewRange","_createClass","key","value","_clearCachedModelDecorationsResolver","dispose","reset","onModelDecorationsChanged","onLineMappingChanged","_getOrCreateViewModelDecoration","modelDecoration","id","r","modelRange","range","options","viewRange","isWholeLine","start","convertModelPositionToViewPosition","startLineNumber","end","endLineNumber","getLineMaxColumn","lineNumber","column","convertModelRangeToViewRange","getMinimapDecorationsInRange","_getDecorationsInRange","decorations","getDecorationsViewportData","cacheIsValid","equalsRange","getInlineDecorationsOnLine","onlyMinimapDecorations","arguments","length","undefined","onlyMarginDecorations","getViewLineMinColumn","getViewLineMaxColumn","inlineDecorations","modelDecorations","getDecorationsInRange","decorationsInViewport","decorationsInViewportLen","j","i","len","decorationOptions","isModelDecorationVisible","viewModelDecoration","inlineClassName","inlineDecoration","inlineClassNameAffectsLetterSpacing","intersectedStartLineNumber","Math","max","intersectedEndLineNumber","min","push","beforeContentClassName","startColumn","afterContentClassName","endColumn","decoration","hideInCommentTokens","isModelDecorationInComment","hideInStringTokens","isModelDecorationInString","testTokensInRange","tokenType","callback","lineTokens","tokenization","getLineTokens","isFirstLine","isEndLine","tokenIdx","findTokenIndexAtOffset","getCount","startOffset","getStartOffset","callbackResult","getStandardTokenType"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/common/viewModel/viewModelDecorations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { InlineDecoration, ViewModelDecoration } from '../viewModel.js';\nimport { filterValidationDecorations } from '../config/editorOptions.js';\nexport class ViewModelDecorations {\n    constructor(editorId, model, configuration, linesCollection, coordinatesConverter) {\n        this.editorId = editorId;\n        this.model = model;\n        this.configuration = configuration;\n        this._linesCollection = linesCollection;\n        this._coordinatesConverter = coordinatesConverter;\n        this._decorationsCache = Object.create(null);\n        this._cachedModelDecorationsResolver = null;\n        this._cachedModelDecorationsResolverViewRange = null;\n    }\n    _clearCachedModelDecorationsResolver() {\n        this._cachedModelDecorationsResolver = null;\n        this._cachedModelDecorationsResolverViewRange = null;\n    }\n    dispose() {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    }\n    reset() {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    }\n    onModelDecorationsChanged() {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    }\n    onLineMappingChanged() {\n        this._decorationsCache = Object.create(null);\n        this._clearCachedModelDecorationsResolver();\n    }\n    _getOrCreateViewModelDecoration(modelDecoration) {\n        const id = modelDecoration.id;\n        let r = this._decorationsCache[id];\n        if (!r) {\n            const modelRange = modelDecoration.range;\n            const options = modelDecoration.options;\n            let viewRange;\n            if (options.isWholeLine) {\n                const start = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.startLineNumber, 1), 0 /* PositionAffinity.Left */, false, true);\n                const end = this._coordinatesConverter.convertModelPositionToViewPosition(new Position(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber)), 1 /* PositionAffinity.Right */);\n                viewRange = new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n            }\n            else {\n                // For backwards compatibility reasons, we want injected text before any decoration.\n                // Thus, move decorations to the right.\n                viewRange = this._coordinatesConverter.convertModelRangeToViewRange(modelRange, 1 /* PositionAffinity.Right */);\n            }\n            r = new ViewModelDecoration(viewRange, options);\n            this._decorationsCache[id] = r;\n        }\n        return r;\n    }\n    getMinimapDecorationsInRange(range) {\n        return this._getDecorationsInRange(range, true, false).decorations;\n    }\n    getDecorationsViewportData(viewRange) {\n        let cacheIsValid = (this._cachedModelDecorationsResolver !== null);\n        cacheIsValid = cacheIsValid && (viewRange.equalsRange(this._cachedModelDecorationsResolverViewRange));\n        if (!cacheIsValid) {\n            this._cachedModelDecorationsResolver = this._getDecorationsInRange(viewRange, false, false);\n            this._cachedModelDecorationsResolverViewRange = viewRange;\n        }\n        return this._cachedModelDecorationsResolver;\n    }\n    getInlineDecorationsOnLine(lineNumber, onlyMinimapDecorations = false, onlyMarginDecorations = false) {\n        const range = new Range(lineNumber, this._linesCollection.getViewLineMinColumn(lineNumber), lineNumber, this._linesCollection.getViewLineMaxColumn(lineNumber));\n        return this._getDecorationsInRange(range, onlyMinimapDecorations, onlyMarginDecorations).inlineDecorations[0];\n    }\n    _getDecorationsInRange(viewRange, onlyMinimapDecorations, onlyMarginDecorations) {\n        const modelDecorations = this._linesCollection.getDecorationsInRange(viewRange, this.editorId, filterValidationDecorations(this.configuration.options), onlyMinimapDecorations, onlyMarginDecorations);\n        const startLineNumber = viewRange.startLineNumber;\n        const endLineNumber = viewRange.endLineNumber;\n        const decorationsInViewport = [];\n        let decorationsInViewportLen = 0;\n        const inlineDecorations = [];\n        for (let j = startLineNumber; j <= endLineNumber; j++) {\n            inlineDecorations[j - startLineNumber] = [];\n        }\n        for (let i = 0, len = modelDecorations.length; i < len; i++) {\n            const modelDecoration = modelDecorations[i];\n            const decorationOptions = modelDecoration.options;\n            if (!isModelDecorationVisible(this.model, modelDecoration)) {\n                continue;\n            }\n            const viewModelDecoration = this._getOrCreateViewModelDecoration(modelDecoration);\n            const viewRange = viewModelDecoration.range;\n            decorationsInViewport[decorationsInViewportLen++] = viewModelDecoration;\n            if (decorationOptions.inlineClassName) {\n                const inlineDecoration = new InlineDecoration(viewRange, decorationOptions.inlineClassName, decorationOptions.inlineClassNameAffectsLetterSpacing ? 3 /* InlineDecorationType.RegularAffectingLetterSpacing */ : 0 /* InlineDecorationType.Regular */);\n                const intersectedStartLineNumber = Math.max(startLineNumber, viewRange.startLineNumber);\n                const intersectedEndLineNumber = Math.min(endLineNumber, viewRange.endLineNumber);\n                for (let j = intersectedStartLineNumber; j <= intersectedEndLineNumber; j++) {\n                    inlineDecorations[j - startLineNumber].push(inlineDecoration);\n                }\n            }\n            if (decorationOptions.beforeContentClassName) {\n                if (startLineNumber <= viewRange.startLineNumber && viewRange.startLineNumber <= endLineNumber) {\n                    const inlineDecoration = new InlineDecoration(new Range(viewRange.startLineNumber, viewRange.startColumn, viewRange.startLineNumber, viewRange.startColumn), decorationOptions.beforeContentClassName, 1 /* InlineDecorationType.Before */);\n                    inlineDecorations[viewRange.startLineNumber - startLineNumber].push(inlineDecoration);\n                }\n            }\n            if (decorationOptions.afterContentClassName) {\n                if (startLineNumber <= viewRange.endLineNumber && viewRange.endLineNumber <= endLineNumber) {\n                    const inlineDecoration = new InlineDecoration(new Range(viewRange.endLineNumber, viewRange.endColumn, viewRange.endLineNumber, viewRange.endColumn), decorationOptions.afterContentClassName, 2 /* InlineDecorationType.After */);\n                    inlineDecorations[viewRange.endLineNumber - startLineNumber].push(inlineDecoration);\n                }\n            }\n        }\n        return {\n            decorations: decorationsInViewport,\n            inlineDecorations: inlineDecorations\n        };\n    }\n}\nexport function isModelDecorationVisible(model, decoration) {\n    if (decoration.options.hideInCommentTokens && isModelDecorationInComment(model, decoration)) {\n        return false;\n    }\n    if (decoration.options.hideInStringTokens && isModelDecorationInString(model, decoration)) {\n        return false;\n    }\n    return true;\n}\nexport function isModelDecorationInComment(model, decoration) {\n    return testTokensInRange(model, decoration.range, (tokenType) => tokenType === 1 /* StandardTokenType.Comment */);\n}\nexport function isModelDecorationInString(model, decoration) {\n    return testTokensInRange(model, decoration.range, (tokenType) => tokenType === 2 /* StandardTokenType.String */);\n}\n/**\n * Calls the callback for every token that intersects the range.\n * If the callback returns `false`, iteration stops and `false` is returned.\n * Otherwise, `true` is returned.\n */\nfunction testTokensInRange(model, range, callback) {\n    for (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n        const lineTokens = model.tokenization.getLineTokens(lineNumber);\n        const isFirstLine = lineNumber === range.startLineNumber;\n        const isEndLine = lineNumber === range.endLineNumber;\n        let tokenIdx = isFirstLine ? lineTokens.findTokenIndexAtOffset(range.startColumn - 1) : 0;\n        while (tokenIdx < lineTokens.getCount()) {\n            if (isEndLine) {\n                const startOffset = lineTokens.getStartOffset(tokenIdx);\n                if (startOffset > range.endColumn - 1) {\n                    break;\n                }\n            }\n            const callbackResult = callback(lineTokens.getStandardTokenType(tokenIdx));\n            if (!callbackResult) {\n                return false;\n            }\n            tokenIdx++;\n        }\n    }\n    return true;\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,iBAAiB;AACvE,SAASC,2BAA2B,QAAQ,4BAA4B;AACxE,WAAaC,oBAAoB;EAC7B,SAAAA,qBAAYC,QAAQ,EAAEC,KAAK,EAAEC,aAAa,EAAEC,eAAe,EAAEC,oBAAoB,EAAE;IAAAC,eAAA,OAAAN,oBAAA;IAC/E,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACI,gBAAgB,GAAGH,eAAe;IACvC,IAAI,CAACI,qBAAqB,GAAGH,oBAAoB;IACjD,IAAI,CAACI,iBAAiB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,+BAA+B,GAAG,IAAI;IAC3C,IAAI,CAACC,wCAAwC,GAAG,IAAI;EACxD;EAAC,OAAAC,YAAA,CAAAd,oBAAA;IAAAe,GAAA;IAAAC,KAAA,EACD,SAAAC,qCAAA,EAAuC;MACnC,IAAI,CAACL,+BAA+B,GAAG,IAAI;MAC3C,IAAI,CAACC,wCAAwC,GAAG,IAAI;IACxD;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAE,QAAA,EAAU;MACN,IAAI,CAACT,iBAAiB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAC5C,IAAI,CAACM,oCAAoC,CAAC,CAAC;IAC/C;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAG,MAAA,EAAQ;MACJ,IAAI,CAACV,iBAAiB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAC5C,IAAI,CAACM,oCAAoC,CAAC,CAAC;IAC/C;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAI,0BAAA,EAA4B;MACxB,IAAI,CAACX,iBAAiB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAC5C,IAAI,CAACM,oCAAoC,CAAC,CAAC;IAC/C;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAK,qBAAA,EAAuB;MACnB,IAAI,CAACZ,iBAAiB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAC5C,IAAI,CAACM,oCAAoC,CAAC,CAAC;IAC/C;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAM,gCAAgCC,eAAe,EAAE;MAC7C,IAAMC,EAAE,GAAGD,eAAe,CAACC,EAAE;MAC7B,IAAIC,CAAC,GAAG,IAAI,CAAChB,iBAAiB,CAACe,EAAE,CAAC;MAClC,IAAI,CAACC,CAAC,EAAE;QACJ,IAAMC,UAAU,GAAGH,eAAe,CAACI,KAAK;QACxC,IAAMC,OAAO,GAAGL,eAAe,CAACK,OAAO;QACvC,IAAIC,SAAS;QACb,IAAID,OAAO,CAACE,WAAW,EAAE;UACrB,IAAMC,KAAK,GAAG,IAAI,CAACvB,qBAAqB,CAACwB,kCAAkC,CAAC,IAAIrC,QAAQ,CAAC+B,UAAU,CAACO,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,6BAA6B,KAAK,EAAE,IAAI,CAAC;UACpK,IAAMC,GAAG,GAAG,IAAI,CAAC1B,qBAAqB,CAACwB,kCAAkC,CAAC,IAAIrC,QAAQ,CAAC+B,UAAU,CAACS,aAAa,EAAE,IAAI,CAACjC,KAAK,CAACkC,gBAAgB,CAACV,UAAU,CAACS,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,4BAA4B,CAAC;UACxMN,SAAS,GAAG,IAAIjC,KAAK,CAACmC,KAAK,CAACM,UAAU,EAAEN,KAAK,CAACO,MAAM,EAAEJ,GAAG,CAACG,UAAU,EAAEH,GAAG,CAACI,MAAM,CAAC;QACrF,CAAC,MACI;UACD;UACA;UACAT,SAAS,GAAG,IAAI,CAACrB,qBAAqB,CAAC+B,4BAA4B,CAACb,UAAU,EAAE,CAAC,CAAC,4BAA4B,CAAC;QACnH;QACAD,CAAC,GAAG,IAAI3B,mBAAmB,CAAC+B,SAAS,EAAED,OAAO,CAAC;QAC/C,IAAI,CAACnB,iBAAiB,CAACe,EAAE,CAAC,GAAGC,CAAC;MAClC;MACA,OAAOA,CAAC;IACZ;EAAC;IAAAV,GAAA;IAAAC,KAAA,EACD,SAAAwB,6BAA6Bb,KAAK,EAAE;MAChC,OAAO,IAAI,CAACc,sBAAsB,CAACd,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAACe,WAAW;IACtE;EAAC;IAAA3B,GAAA;IAAAC,KAAA,EACD,SAAA2B,2BAA2Bd,SAAS,EAAE;MAClC,IAAIe,YAAY,GAAI,IAAI,CAAChC,+BAA+B,KAAK,IAAK;MAClEgC,YAAY,GAAGA,YAAY,IAAKf,SAAS,CAACgB,WAAW,CAAC,IAAI,CAAChC,wCAAwC,CAAE;MACrG,IAAI,CAAC+B,YAAY,EAAE;QACf,IAAI,CAAChC,+BAA+B,GAAG,IAAI,CAAC6B,sBAAsB,CAACZ,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;QAC3F,IAAI,CAAChB,wCAAwC,GAAGgB,SAAS;MAC7D;MACA,OAAO,IAAI,CAACjB,+BAA+B;IAC/C;EAAC;IAAAG,GAAA;IAAAC,KAAA,EACD,SAAA8B,2BAA2BT,UAAU,EAAiE;MAAA,IAA/DU,sBAAsB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MAAA,IAAEG,qBAAqB,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MAChG,IAAMrB,KAAK,GAAG,IAAI/B,KAAK,CAACyC,UAAU,EAAE,IAAI,CAAC9B,gBAAgB,CAAC6C,oBAAoB,CAACf,UAAU,CAAC,EAAEA,UAAU,EAAE,IAAI,CAAC9B,gBAAgB,CAAC8C,oBAAoB,CAAChB,UAAU,CAAC,CAAC;MAC/J,OAAO,IAAI,CAACI,sBAAsB,CAACd,KAAK,EAAEoB,sBAAsB,EAAEI,qBAAqB,CAAC,CAACG,iBAAiB,CAAC,CAAC,CAAC;IACjH;EAAC;IAAAvC,GAAA;IAAAC,KAAA,EACD,SAAAyB,uBAAuBZ,SAAS,EAAEkB,sBAAsB,EAAEI,qBAAqB,EAAE;MAC7E,IAAMI,gBAAgB,GAAG,IAAI,CAAChD,gBAAgB,CAACiD,qBAAqB,CAAC3B,SAAS,EAAE,IAAI,CAAC5B,QAAQ,EAAEF,2BAA2B,CAAC,IAAI,CAACI,aAAa,CAACyB,OAAO,CAAC,EAAEmB,sBAAsB,EAAEI,qBAAqB,CAAC;MACtM,IAAMlB,eAAe,GAAGJ,SAAS,CAACI,eAAe;MACjD,IAAME,aAAa,GAAGN,SAAS,CAACM,aAAa;MAC7C,IAAMsB,qBAAqB,GAAG,EAAE;MAChC,IAAIC,wBAAwB,GAAG,CAAC;MAChC,IAAMJ,iBAAiB,GAAG,EAAE;MAC5B,KAAK,IAAIK,CAAC,GAAG1B,eAAe,EAAE0B,CAAC,IAAIxB,aAAa,EAAEwB,CAAC,EAAE,EAAE;QACnDL,iBAAiB,CAACK,CAAC,GAAG1B,eAAe,CAAC,GAAG,EAAE;MAC/C;MACA,KAAK,IAAI2B,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,gBAAgB,CAACN,MAAM,EAAEW,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QACzD,IAAMrC,eAAe,GAAGgC,gBAAgB,CAACK,CAAC,CAAC;QAC3C,IAAME,iBAAiB,GAAGvC,eAAe,CAACK,OAAO;QACjD,IAAI,CAACmC,wBAAwB,CAAC,IAAI,CAAC7D,KAAK,EAAEqB,eAAe,CAAC,EAAE;UACxD;QACJ;QACA,IAAMyC,mBAAmB,GAAG,IAAI,CAAC1C,+BAA+B,CAACC,eAAe,CAAC;QACjF,IAAMM,UAAS,GAAGmC,mBAAmB,CAACrC,KAAK;QAC3C8B,qBAAqB,CAACC,wBAAwB,EAAE,CAAC,GAAGM,mBAAmB;QACvE,IAAIF,iBAAiB,CAACG,eAAe,EAAE;UACnC,IAAMC,gBAAgB,GAAG,IAAIrE,gBAAgB,CAACgC,UAAS,EAAEiC,iBAAiB,CAACG,eAAe,EAAEH,iBAAiB,CAACK,mCAAmC,GAAG,CAAC,CAAC,2DAA2D,CAAC,CAAC,kCAAkC,CAAC;UACtP,IAAMC,0BAA0B,GAAGC,IAAI,CAACC,GAAG,CAACrC,eAAe,EAAEJ,UAAS,CAACI,eAAe,CAAC;UACvF,IAAMsC,wBAAwB,GAAGF,IAAI,CAACG,GAAG,CAACrC,aAAa,EAAEN,UAAS,CAACM,aAAa,CAAC;UACjF,KAAK,IAAIwB,EAAC,GAAGS,0BAA0B,EAAET,EAAC,IAAIY,wBAAwB,EAAEZ,EAAC,EAAE,EAAE;YACzEL,iBAAiB,CAACK,EAAC,GAAG1B,eAAe,CAAC,CAACwC,IAAI,CAACP,gBAAgB,CAAC;UACjE;QACJ;QACA,IAAIJ,iBAAiB,CAACY,sBAAsB,EAAE;UAC1C,IAAIzC,eAAe,IAAIJ,UAAS,CAACI,eAAe,IAAIJ,UAAS,CAACI,eAAe,IAAIE,aAAa,EAAE;YAC5F,IAAM+B,iBAAgB,GAAG,IAAIrE,gBAAgB,CAAC,IAAID,KAAK,CAACiC,UAAS,CAACI,eAAe,EAAEJ,UAAS,CAAC8C,WAAW,EAAE9C,UAAS,CAACI,eAAe,EAAEJ,UAAS,CAAC8C,WAAW,CAAC,EAAEb,iBAAiB,CAACY,sBAAsB,EAAE,CAAC,CAAC,iCAAiC,CAAC;YAC3OpB,iBAAiB,CAACzB,UAAS,CAACI,eAAe,GAAGA,eAAe,CAAC,CAACwC,IAAI,CAACP,iBAAgB,CAAC;UACzF;QACJ;QACA,IAAIJ,iBAAiB,CAACc,qBAAqB,EAAE;UACzC,IAAI3C,eAAe,IAAIJ,UAAS,CAACM,aAAa,IAAIN,UAAS,CAACM,aAAa,IAAIA,aAAa,EAAE;YACxF,IAAM+B,kBAAgB,GAAG,IAAIrE,gBAAgB,CAAC,IAAID,KAAK,CAACiC,UAAS,CAACM,aAAa,EAAEN,UAAS,CAACgD,SAAS,EAAEhD,UAAS,CAACM,aAAa,EAAEN,UAAS,CAACgD,SAAS,CAAC,EAAEf,iBAAiB,CAACc,qBAAqB,EAAE,CAAC,CAAC,gCAAgC,CAAC;YACjOtB,iBAAiB,CAACzB,UAAS,CAACM,aAAa,GAAGF,eAAe,CAAC,CAACwC,IAAI,CAACP,kBAAgB,CAAC;UACvF;QACJ;MACJ;MACA,OAAO;QACHxB,WAAW,EAAEe,qBAAqB;QAClCH,iBAAiB,EAAEA;MACvB,CAAC;IACL;EAAC;AAAA;AAEL,OAAO,SAASS,wBAAwBA,CAAC7D,KAAK,EAAE4E,UAAU,EAAE;EACxD,IAAIA,UAAU,CAAClD,OAAO,CAACmD,mBAAmB,IAAIC,0BAA0B,CAAC9E,KAAK,EAAE4E,UAAU,CAAC,EAAE;IACzF,OAAO,KAAK;EAChB;EACA,IAAIA,UAAU,CAAClD,OAAO,CAACqD,kBAAkB,IAAIC,yBAAyB,CAAChF,KAAK,EAAE4E,UAAU,CAAC,EAAE;IACvF,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AACA,OAAO,SAASE,0BAA0BA,CAAC9E,KAAK,EAAE4E,UAAU,EAAE;EAC1D,OAAOK,iBAAiB,CAACjF,KAAK,EAAE4E,UAAU,CAACnD,KAAK,EAAE,UAACyD,SAAS;IAAA,OAAKA,SAAS,KAAK,CAAC;EAAA,EAAC,+BAA+B,CAAC;AACrH;AACA,OAAO,SAASF,yBAAyBA,CAAChF,KAAK,EAAE4E,UAAU,EAAE;EACzD,OAAOK,iBAAiB,CAACjF,KAAK,EAAE4E,UAAU,CAACnD,KAAK,EAAE,UAACyD,SAAS;IAAA,OAAKA,SAAS,KAAK,CAAC;EAAA,EAAC,8BAA8B,CAAC;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,iBAAiBA,CAACjF,KAAK,EAAEyB,KAAK,EAAE0D,QAAQ,EAAE;EAC/C,KAAK,IAAIhD,UAAU,GAAGV,KAAK,CAACM,eAAe,EAAEI,UAAU,IAAIV,KAAK,CAACQ,aAAa,EAAEE,UAAU,EAAE,EAAE;IAC1F,IAAMiD,UAAU,GAAGpF,KAAK,CAACqF,YAAY,CAACC,aAAa,CAACnD,UAAU,CAAC;IAC/D,IAAMoD,WAAW,GAAGpD,UAAU,KAAKV,KAAK,CAACM,eAAe;IACxD,IAAMyD,SAAS,GAAGrD,UAAU,KAAKV,KAAK,CAACQ,aAAa;IACpD,IAAIwD,QAAQ,GAAGF,WAAW,GAAGH,UAAU,CAACM,sBAAsB,CAACjE,KAAK,CAACgD,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC;IACzF,OAAOgB,QAAQ,GAAGL,UAAU,CAACO,QAAQ,CAAC,CAAC,EAAE;MACrC,IAAIH,SAAS,EAAE;QACX,IAAMI,WAAW,GAAGR,UAAU,CAACS,cAAc,CAACJ,QAAQ,CAAC;QACvD,IAAIG,WAAW,GAAGnE,KAAK,CAACkD,SAAS,GAAG,CAAC,EAAE;UACnC;QACJ;MACJ;MACA,IAAMmB,cAAc,GAAGX,QAAQ,CAACC,UAAU,CAACW,oBAAoB,CAACN,QAAQ,CAAC,CAAC;MAC1E,IAAI,CAACK,cAAc,EAAE;QACjB,OAAO,KAAK;MAChB;MACAL,QAAQ,EAAE;IACd;EACJ;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}