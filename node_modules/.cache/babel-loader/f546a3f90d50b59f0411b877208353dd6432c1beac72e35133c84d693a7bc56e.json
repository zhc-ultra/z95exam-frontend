{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.slice.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var LineSequence = /*#__PURE__*/function () {\n  function LineSequence(trimmedHash, lines) {\n    _classCallCheck(this, LineSequence);\n    this.trimmedHash = trimmedHash;\n    this.lines = lines;\n  }\n  return _createClass(LineSequence, [{\n    key: \"getElement\",\n    value: function getElement(offset) {\n      return this.trimmedHash[offset];\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.trimmedHash.length;\n    }\n  }, {\n    key: \"getBoundaryScore\",\n    value: function getBoundaryScore(length) {\n      var indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n      var indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n      return 1000 - (indentationBefore + indentationAfter);\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(range) {\n      return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n  }, {\n    key: \"isStronglyEqual\",\n    value: function isStronglyEqual(offset1, offset2) {\n      return this.lines[offset1] === this.lines[offset2];\n    }\n  }]);\n}();\nfunction getIndentation(str) {\n  var i = 0;\n  while (i < str.length && (str.charCodeAt(i) === 32 /* CharCode.Space */ || str.charCodeAt(i) === 9 /* CharCode.Tab */)) {\n    i++;\n  }\n  return i;\n}","map":{"version":3,"names":["LineSequence","trimmedHash","lines","_classCallCheck","_createClass","key","value","getElement","offset","get","length","getBoundaryScore","indentationBefore","getIndentation","indentationAfter","getText","range","slice","start","endExclusive","join","isStronglyEqual","offset1","offset2","str","i","charCodeAt"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32 /* CharCode.Space */ || str.charCodeAt(i) === 9 /* CharCode.Tab */)) {\n        i++;\n    }\n    return i;\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,WAAaA,YAAY;EACrB,SAAAA,aAAYC,WAAW,EAAEC,KAAK,EAAE;IAAAC,eAAA,OAAAH,YAAA;IAC5B,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;EAAC,OAAAE,YAAA,CAAAJ,YAAA;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAC,WAAWC,MAAM,EAAE;MACf,OAAO,IAAI,CAACP,WAAW,CAACO,MAAM,CAAC;IACnC;EAAC;IAAAH,GAAA;IAAAI,GAAA,EACD,SAAAA,IAAA,EAAa;MACT,OAAO,IAAI,CAACR,WAAW,CAACS,MAAM;IAClC;EAAC;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAK,iBAAiBD,MAAM,EAAE;MACrB,IAAME,iBAAiB,GAAGF,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGG,cAAc,CAAC,IAAI,CAACX,KAAK,CAACQ,MAAM,GAAG,CAAC,CAAC,CAAC;MACnF,IAAMI,gBAAgB,GAAGJ,MAAM,KAAK,IAAI,CAACR,KAAK,CAACQ,MAAM,GAAG,CAAC,GAAGG,cAAc,CAAC,IAAI,CAACX,KAAK,CAACQ,MAAM,CAAC,CAAC;MAC9F,OAAO,IAAI,IAAIE,iBAAiB,GAAGE,gBAAgB,CAAC;IACxD;EAAC;IAAAT,GAAA;IAAAC,KAAA,EACD,SAAAS,QAAQC,KAAK,EAAE;MACX,OAAO,IAAI,CAACd,KAAK,CAACe,KAAK,CAACD,KAAK,CAACE,KAAK,EAAEF,KAAK,CAACG,YAAY,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACvE;EAAC;IAAAf,GAAA;IAAAC,KAAA,EACD,SAAAe,gBAAgBC,OAAO,EAAEC,OAAO,EAAE;MAC9B,OAAO,IAAI,CAACrB,KAAK,CAACoB,OAAO,CAAC,KAAK,IAAI,CAACpB,KAAK,CAACqB,OAAO,CAAC;IACtD;EAAC;AAAA;AAEL,SAASV,cAAcA,CAACW,GAAG,EAAE;EACzB,IAAIC,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGD,GAAG,CAACd,MAAM,KAAKc,GAAG,CAACE,UAAU,CAACD,CAAC,CAAC,KAAK,EAAE,CAAC,wBAAwBD,GAAG,CAACE,UAAU,CAACD,CAAC,CAAC,KAAK,CAAC,CAAC,mBAAmB,EAAE;IACpHA,CAAC,EAAE;EACP;EACA,OAAOA,CAAC;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}