{"ast":null,"code":"import _assertThisInitialized from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AbstractTree } from './abstractTree.js';\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport var ObjectTree = /*#__PURE__*/function (_AbstractTree) {\n  function ObjectTree(user, container, delegate, renderers) {\n    var _this;\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    _classCallCheck(this, ObjectTree);\n    _this = _callSuper(this, ObjectTree, [user, container, delegate, renderers, options]);\n    _this.user = user;\n    return _this;\n  }\n  _inherits(ObjectTree, _AbstractTree);\n  return _createClass(ObjectTree, [{\n    key: \"onDidChangeCollapseState\",\n    get: function get() {\n      return this.model.onDidChangeCollapseState;\n    }\n  }, {\n    key: \"setChildren\",\n    value: function setChildren(element) {\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Iterable.empty();\n      var options = arguments.length > 2 ? arguments[2] : undefined;\n      this.model.setChildren(element, children, options);\n    }\n  }, {\n    key: \"rerender\",\n    value: function rerender(element) {\n      if (element === undefined) {\n        this.view.rerender();\n        return;\n      }\n      this.model.rerender(element);\n    }\n  }, {\n    key: \"hasElement\",\n    value: function hasElement(element) {\n      return this.model.has(element);\n    }\n  }, {\n    key: \"createModel\",\n    value: function createModel(user, view, options) {\n      return new ObjectTreeModel(user, view, options);\n    }\n  }]);\n}(AbstractTree);\nvar CompressibleRenderer = /*#__PURE__*/function () {\n  function CompressibleRenderer(_compressedTreeNodeProvider, stickyScrollDelegate, renderer) {\n    _classCallCheck(this, CompressibleRenderer);\n    this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\n    this.stickyScrollDelegate = stickyScrollDelegate;\n    this.renderer = renderer;\n    this.templateId = renderer.templateId;\n    if (renderer.onDidChangeTwistieState) {\n      this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\n    }\n  }\n  return _createClass(CompressibleRenderer, [{\n    key: \"compressedTreeNodeProvider\",\n    get: function get() {\n      return this._compressedTreeNodeProvider();\n    }\n  }, {\n    key: \"renderTemplate\",\n    value: function renderTemplate(container) {\n      var data = this.renderer.renderTemplate(container);\n      return {\n        compressedTreeNode: undefined,\n        data: data\n      };\n    }\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(node, index, templateData, height) {\n      var compressedTreeNode = this.stickyScrollDelegate.getCompressedNode(node);\n      if (!compressedTreeNode) {\n        compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\n      }\n      if (compressedTreeNode.element.elements.length === 1) {\n        templateData.compressedTreeNode = undefined;\n        this.renderer.renderElement(node, index, templateData.data, height);\n      } else {\n        templateData.compressedTreeNode = compressedTreeNode;\n        this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\n      }\n    }\n  }, {\n    key: \"disposeElement\",\n    value: function disposeElement(node, index, templateData, height) {\n      var _a, _b, _c, _d;\n      if (templateData.compressedTreeNode) {\n        (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, templateData.compressedTreeNode, index, templateData.data, height);\n      } else {\n        (_d = (_c = this.renderer).disposeElement) === null || _d === void 0 ? void 0 : _d.call(_c, node, index, templateData.data, height);\n      }\n    }\n  }, {\n    key: \"disposeTemplate\",\n    value: function disposeTemplate(templateData) {\n      this.renderer.disposeTemplate(templateData.data);\n    }\n  }, {\n    key: \"renderTwistie\",\n    value: function renderTwistie(element, twistieElement) {\n      if (this.renderer.renderTwistie) {\n        return this.renderer.renderTwistie(element, twistieElement);\n      }\n      return false;\n    }\n  }]);\n}();\n__decorate([memoize], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\nvar CompressibleStickyScrollDelegate = /*#__PURE__*/function () {\n  function CompressibleStickyScrollDelegate(modelProvider) {\n    _classCallCheck(this, CompressibleStickyScrollDelegate);\n    this.modelProvider = modelProvider;\n    this.compressedStickyNodes = new Map();\n  }\n  return _createClass(CompressibleStickyScrollDelegate, [{\n    key: \"getCompressedNode\",\n    value: function getCompressedNode(node) {\n      return this.compressedStickyNodes.get(node);\n    }\n  }, {\n    key: \"constrainStickyScrollNodes\",\n    value: function constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n      this.compressedStickyNodes.clear();\n      if (stickyNodes.length === 0) {\n        return [];\n      }\n      for (var i = 0; i < stickyNodes.length; i++) {\n        var stickyNode = stickyNodes[i];\n        var stickyNodeBottom = stickyNode.position + stickyNode.height;\n        var followingReachesMaxHeight = i + 1 < stickyNodes.length && stickyNodeBottom + stickyNodes[i + 1].height > maxWidgetHeight;\n        if (followingReachesMaxHeight || i >= stickyScrollMaxItemCount - 1 && stickyScrollMaxItemCount < stickyNodes.length) {\n          var uncompressedStickyNodes = stickyNodes.slice(0, i);\n          var overflowingStickyNodes = stickyNodes.slice(i);\n          var compressedStickyNode = this.compressStickyNodes(overflowingStickyNodes);\n          return [].concat(_toConsumableArray(uncompressedStickyNodes), [compressedStickyNode]);\n        }\n      }\n      return stickyNodes;\n    }\n  }, {\n    key: \"compressStickyNodes\",\n    value: function compressStickyNodes(stickyNodes) {\n      if (stickyNodes.length === 0) {\n        throw new Error('Can\\'t compress empty sticky nodes');\n      }\n      if (!this.modelProvider().isCompressionEnabled()) {\n        return stickyNodes[0];\n      }\n      // Collect all elements to be compressed\n      var elements = [];\n      var _iterator = _createForOfIteratorHelper(stickyNodes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var stickyNode = _step.value;\n          var _compressedNode = this.modelProvider().getCompressedTreeNode(stickyNode.node.element);\n          if (_compressedNode.element) {\n            if (_compressedNode.element.incompressible) {\n              break;\n            }\n            elements.push.apply(elements, _toConsumableArray(_compressedNode.element.elements));\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (elements.length < 2) {\n        return stickyNodes[0];\n      }\n      // Compress the elements\n      var lastStickyNode = stickyNodes[stickyNodes.length - 1];\n      var compressedElement = {\n        elements: elements,\n        incompressible: false\n      };\n      var compressedNode = _objectSpread(_objectSpread({}, lastStickyNode.node), {}, {\n        children: [],\n        element: compressedElement\n      });\n      var stickyTreeNode = new Proxy(stickyNodes[0].node, {});\n      var compressedStickyNode = {\n        node: stickyTreeNode,\n        startIndex: stickyNodes[0].startIndex,\n        endIndex: lastStickyNode.endIndex,\n        position: stickyNodes[0].position,\n        height: stickyNodes[0].height\n      };\n      this.compressedStickyNodes.set(stickyTreeNode, compressedNode);\n      return compressedStickyNode;\n    }\n  }]);\n}();\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\n  return options && _objectSpread(_objectSpread({}, options), {}, {\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n      getKeyboardNavigationLabel: function getKeyboardNavigationLabel(e) {\n        var compressedTreeNode;\n        try {\n          compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\n        } catch (_a) {\n          return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n        }\n        if (compressedTreeNode.element.elements.length === 1) {\n          return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n        } else {\n          return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\n        }\n      }\n    }\n  });\n}\nexport var CompressibleObjectTree = /*#__PURE__*/function (_ObjectTree) {\n  function CompressibleObjectTree(user, container, delegate, renderers) {\n    var _this2;\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    _classCallCheck(this, CompressibleObjectTree);\n    var compressedTreeNodeProvider = function compressedTreeNodeProvider() {\n      return _assertThisInitialized(_this2);\n    };\n    var stickyScrollDelegate = new CompressibleStickyScrollDelegate(function () {\n      return _this2.model;\n    });\n    var compressibleRenderers = renderers.map(function (r) {\n      return new CompressibleRenderer(compressedTreeNodeProvider, stickyScrollDelegate, r);\n    });\n    return _this2 = _callSuper(this, CompressibleObjectTree, [user, container, delegate, compressibleRenderers, _objectSpread(_objectSpread({}, asObjectTreeOptions(compressedTreeNodeProvider, options)), {}, {\n      stickyScrollDelegate: stickyScrollDelegate\n    })]);\n  }\n  _inherits(CompressibleObjectTree, _ObjectTree);\n  return _createClass(CompressibleObjectTree, [{\n    key: \"setChildren\",\n    value: function setChildren(element) {\n      var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Iterable.empty();\n      var options = arguments.length > 2 ? arguments[2] : undefined;\n      this.model.setChildren(element, children, options);\n    }\n  }, {\n    key: \"createModel\",\n    value: function createModel(user, view, options) {\n      return new CompressibleObjectTreeModel(user, view, options);\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _get(_getPrototypeOf(CompressibleObjectTree.prototype), \"updateOptions\", this).call(this, optionsUpdate);\n      if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\n        this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\n      }\n    }\n  }, {\n    key: \"getCompressedTreeNode\",\n    value: function getCompressedTreeNode() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return this.model.getCompressedTreeNode(element);\n    }\n  }]);\n}(ObjectTree);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","AbstractTree","CompressibleObjectTreeModel","ObjectTreeModel","memoize","Iterable","ObjectTree","_AbstractTree","user","container","delegate","renderers","_this","options","undefined","_classCallCheck","_callSuper","_inherits","_createClass","get","model","onDidChangeCollapseState","value","setChildren","element","children","empty","rerender","view","hasElement","has","createModel","CompressibleRenderer","_compressedTreeNodeProvider","stickyScrollDelegate","renderer","templateId","onDidChangeTwistieState","renderTemplate","data","compressedTreeNode","renderElement","node","index","templateData","height","getCompressedNode","compressedTreeNodeProvider","getCompressedTreeNode","elements","renderCompressedElements","disposeElement","_a","_b","_c","_d","disposeCompressedElements","call","disposeTemplate","renderTwistie","twistieElement","prototype","CompressibleStickyScrollDelegate","modelProvider","compressedStickyNodes","Map","constrainStickyScrollNodes","stickyNodes","stickyScrollMaxItemCount","maxWidgetHeight","clear","stickyNode","stickyNodeBottom","position","followingReachesMaxHeight","uncompressedStickyNodes","slice","overflowingStickyNodes","compressedStickyNode","compressStickyNodes","concat","_toConsumableArray","Error","isCompressionEnabled","_iterator","_createForOfIteratorHelper","_step","s","n","done","compressedNode","incompressible","push","apply","err","e","f","lastStickyNode","compressedElement","_objectSpread","stickyTreeNode","Proxy","startIndex","endIndex","set","asObjectTreeOptions","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","getCompressedNodeKeyboardNavigationLabel","CompressibleObjectTree","_ObjectTree","_this2","_assertThisInitialized","compressibleRenderers","map","updateOptions","optionsUpdate","_get","_getPrototypeOf","compressionEnabled","setCompressionEnabled"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AbstractTree } from './abstractTree.js';\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTree extends AbstractTree {\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    constructor(user, container, delegate, renderers, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    rerender(element) {\n        if (element === undefined) {\n            this.view.rerender();\n            return;\n        }\n        this.model.rerender(element);\n    }\n    hasElement(element) {\n        return this.model.has(element);\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\nclass CompressibleRenderer {\n    get compressedTreeNodeProvider() {\n        return this._compressedTreeNodeProvider();\n    }\n    constructor(_compressedTreeNodeProvider, stickyScrollDelegate, renderer) {\n        this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\n        this.stickyScrollDelegate = stickyScrollDelegate;\n        this.renderer = renderer;\n        this.templateId = renderer.templateId;\n        if (renderer.onDidChangeTwistieState) {\n            this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\n        }\n    }\n    renderTemplate(container) {\n        const data = this.renderer.renderTemplate(container);\n        return { compressedTreeNode: undefined, data };\n    }\n    renderElement(node, index, templateData, height) {\n        let compressedTreeNode = this.stickyScrollDelegate.getCompressedNode(node);\n        if (!compressedTreeNode) {\n            compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\n        }\n        if (compressedTreeNode.element.elements.length === 1) {\n            templateData.compressedTreeNode = undefined;\n            this.renderer.renderElement(node, index, templateData.data, height);\n        }\n        else {\n            templateData.compressedTreeNode = compressedTreeNode;\n            this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b, _c, _d;\n        if (templateData.compressedTreeNode) {\n            (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, templateData.compressedTreeNode, index, templateData.data, height);\n        }\n        else {\n            (_d = (_c = this.renderer).disposeElement) === null || _d === void 0 ? void 0 : _d.call(_c, node, index, templateData.data, height);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.data);\n    }\n    renderTwistie(element, twistieElement) {\n        if (this.renderer.renderTwistie) {\n            return this.renderer.renderTwistie(element, twistieElement);\n        }\n        return false;\n    }\n}\n__decorate([\n    memoize\n], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\nclass CompressibleStickyScrollDelegate {\n    constructor(modelProvider) {\n        this.modelProvider = modelProvider;\n        this.compressedStickyNodes = new Map();\n    }\n    getCompressedNode(node) {\n        return this.compressedStickyNodes.get(node);\n    }\n    constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n        this.compressedStickyNodes.clear();\n        if (stickyNodes.length === 0) {\n            return [];\n        }\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const stickyNodeBottom = stickyNode.position + stickyNode.height;\n            const followingReachesMaxHeight = i + 1 < stickyNodes.length && stickyNodeBottom + stickyNodes[i + 1].height > maxWidgetHeight;\n            if (followingReachesMaxHeight || i >= stickyScrollMaxItemCount - 1 && stickyScrollMaxItemCount < stickyNodes.length) {\n                const uncompressedStickyNodes = stickyNodes.slice(0, i);\n                const overflowingStickyNodes = stickyNodes.slice(i);\n                const compressedStickyNode = this.compressStickyNodes(overflowingStickyNodes);\n                return [...uncompressedStickyNodes, compressedStickyNode];\n            }\n        }\n        return stickyNodes;\n    }\n    compressStickyNodes(stickyNodes) {\n        if (stickyNodes.length === 0) {\n            throw new Error('Can\\'t compress empty sticky nodes');\n        }\n        if (!this.modelProvider().isCompressionEnabled()) {\n            return stickyNodes[0];\n        }\n        // Collect all elements to be compressed\n        const elements = [];\n        for (const stickyNode of stickyNodes) {\n            const compressedNode = this.modelProvider().getCompressedTreeNode(stickyNode.node.element);\n            if (compressedNode.element) {\n                if (compressedNode.element.incompressible) {\n                    break;\n                }\n                elements.push(...compressedNode.element.elements);\n            }\n        }\n        if (elements.length < 2) {\n            return stickyNodes[0];\n        }\n        // Compress the elements\n        const lastStickyNode = stickyNodes[stickyNodes.length - 1];\n        const compressedElement = { elements, incompressible: false };\n        const compressedNode = { ...lastStickyNode.node, children: [], element: compressedElement };\n        const stickyTreeNode = new Proxy(stickyNodes[0].node, {});\n        const compressedStickyNode = {\n            node: stickyTreeNode,\n            startIndex: stickyNodes[0].startIndex,\n            endIndex: lastStickyNode.endIndex,\n            position: stickyNodes[0].position,\n            height: stickyNodes[0].height,\n        };\n        this.compressedStickyNodes.set(stickyTreeNode, compressedNode);\n        return compressedStickyNode;\n    }\n}\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\n    return options && {\n        ...options,\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            getKeyboardNavigationLabel(e) {\n                let compressedTreeNode;\n                try {\n                    compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\n                }\n                catch (_a) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                if (compressedTreeNode.element.elements.length === 1) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                else {\n                    return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\n                }\n            }\n        }\n    };\n}\nexport class CompressibleObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options = {}) {\n        const compressedTreeNodeProvider = () => this;\n        const stickyScrollDelegate = new CompressibleStickyScrollDelegate(() => this.model);\n        const compressibleRenderers = renderers.map(r => new CompressibleRenderer(compressedTreeNodeProvider, stickyScrollDelegate, r));\n        super(user, container, delegate, compressibleRenderers, { ...asObjectTreeOptions(compressedTreeNodeProvider, options), stickyScrollDelegate });\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    createModel(user, view, options) {\n        return new CompressibleObjectTreeModel(user, view, options);\n    }\n    updateOptions(optionsUpdate = {}) {\n        super.updateOptions(optionsUpdate);\n        if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\n            this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\n        }\n    }\n    getCompressedTreeNode(element = null) {\n        return this.model.getCompressedTreeNode(element);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}