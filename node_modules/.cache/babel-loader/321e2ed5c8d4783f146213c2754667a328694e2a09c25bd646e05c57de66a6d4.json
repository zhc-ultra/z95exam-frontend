{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport './media/quickInput.css';\nvar $ = dom.$;\nexport var QuickInputBox = /*#__PURE__*/function (_Disposable) {\n  function QuickInputBox(parent, inputBoxStyles, toggleStyles) {\n    var _this;\n    _classCallCheck(this, QuickInputBox);\n    _this = _callSuper(this, QuickInputBox);\n    _this.parent = parent;\n    _this.onKeyDown = function (handler) {\n      return dom.addStandardDisposableListener(_this.findInput.inputBox.inputElement, dom.EventType.KEY_DOWN, handler);\n    };\n    _this.onDidChange = function (handler) {\n      return _this.findInput.onDidChange(handler);\n    };\n    _this.container = dom.append(_this.parent, $('.quick-input-box'));\n    _this.findInput = _this._register(new FindInput(_this.container, undefined, {\n      label: '',\n      inputBoxStyles: inputBoxStyles,\n      toggleStyles: toggleStyles\n    }));\n    var input = _this.findInput.inputBox.inputElement;\n    input.role = 'combobox';\n    input.ariaHasPopup = 'menu';\n    input.ariaAutoComplete = 'list';\n    input.ariaExpanded = 'true';\n    return _this;\n  }\n  _inherits(QuickInputBox, _Disposable);\n  return _createClass(QuickInputBox, [{\n    key: \"value\",\n    get: function get() {\n      return this.findInput.getValue();\n    },\n    set: function set(value) {\n      this.findInput.setValue(value);\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      var range = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.findInput.inputBox.select(range);\n    }\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      return this.findInput.inputBox.getSelection();\n    }\n  }, {\n    key: \"isSelectionAtEnd\",\n    value: function isSelectionAtEnd() {\n      return this.findInput.inputBox.isSelectionAtEnd();\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      return this.findInput.inputBox.inputElement.getAttribute('placeholder') || '';\n    },\n    set: function set(placeholder) {\n      this.findInput.inputBox.setPlaceHolder(placeholder);\n    }\n  }, {\n    key: \"password\",\n    get: function get() {\n      return this.findInput.inputBox.inputElement.type === 'password';\n    },\n    set: function set(password) {\n      this.findInput.inputBox.inputElement.type = password ? 'password' : 'text';\n    }\n  }, {\n    key: \"enabled\",\n    set: function set(enabled) {\n      // We can't disable the input box because it is still used for\n      // navigating the list. Instead, we disable the list and the OK\n      // so that nothing can be selected.\n      // TODO: should this be what we do for all find inputs? Or maybe some _other_ API\n      // on findInput to change it to readonly?\n      this.findInput.inputBox.inputElement.toggleAttribute('readonly', !enabled);\n      // TODO: styles of the quick pick need to be moved to the CSS instead of being in line\n      // so things like this can be done in CSS\n      // this.findInput.inputBox.inputElement.classList.toggle('disabled', !enabled);\n    }\n  }, {\n    key: \"toggles\",\n    set: function set(toggles) {\n      this.findInput.setAdditionalToggles(toggles);\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      this.findInput.inputBox.inputElement.setAttribute(name, value);\n    }\n  }, {\n    key: \"showDecoration\",\n    value: function showDecoration(decoration) {\n      if (decoration === Severity.Ignore) {\n        this.findInput.clearMessage();\n      } else {\n        this.findInput.showMessage({\n          type: decoration === Severity.Info ? 1 /* MessageType.INFO */ : decoration === Severity.Warning ? 2 /* MessageType.WARNING */ : 3 /* MessageType.ERROR */,\n          content: ''\n        });\n      }\n    }\n  }, {\n    key: \"stylesForType\",\n    value: function stylesForType(decoration) {\n      return this.findInput.inputBox.stylesForType(decoration === Severity.Info ? 1 /* MessageType.INFO */ : decoration === Severity.Warning ? 2 /* MessageType.WARNING */ : 3 /* MessageType.ERROR */);\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus() {\n      this.findInput.focus();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout() {\n      this.findInput.inputBox.layout();\n    }\n  }]);\n}(Disposable);","map":{"version":3,"names":["dom","FindInput","Disposable","Severity","$","QuickInputBox","_Disposable","parent","inputBoxStyles","toggleStyles","_this","_classCallCheck","_callSuper","onKeyDown","handler","addStandardDisposableListener","findInput","inputBox","inputElement","EventType","KEY_DOWN","onDidChange","container","append","_register","undefined","label","input","role","ariaHasPopup","ariaAutoComplete","ariaExpanded","_inherits","_createClass","key","get","getValue","set","value","setValue","select","range","arguments","length","getSelection","isSelectionAtEnd","getAttribute","placeholder","setPlaceHolder","type","password","enabled","toggleAttribute","toggles","setAdditionalToggles","setAttribute","name","showDecoration","decoration","Ignore","clearMessage","showMessage","Info","Warning","content","stylesForType","setFocus","focus","layout"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputBox.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport './media/quickInput.css';\nconst $ = dom.$;\nexport class QuickInputBox extends Disposable {\n    constructor(parent, inputBoxStyles, toggleStyles) {\n        super();\n        this.parent = parent;\n        this.onKeyDown = (handler) => {\n            return dom.addStandardDisposableListener(this.findInput.inputBox.inputElement, dom.EventType.KEY_DOWN, handler);\n        };\n        this.onDidChange = (handler) => {\n            return this.findInput.onDidChange(handler);\n        };\n        this.container = dom.append(this.parent, $('.quick-input-box'));\n        this.findInput = this._register(new FindInput(this.container, undefined, { label: '', inputBoxStyles, toggleStyles }));\n        const input = this.findInput.inputBox.inputElement;\n        input.role = 'combobox';\n        input.ariaHasPopup = 'menu';\n        input.ariaAutoComplete = 'list';\n        input.ariaExpanded = 'true';\n    }\n    get value() {\n        return this.findInput.getValue();\n    }\n    set value(value) {\n        this.findInput.setValue(value);\n    }\n    select(range = null) {\n        this.findInput.inputBox.select(range);\n    }\n    getSelection() {\n        return this.findInput.inputBox.getSelection();\n    }\n    isSelectionAtEnd() {\n        return this.findInput.inputBox.isSelectionAtEnd();\n    }\n    get placeholder() {\n        return this.findInput.inputBox.inputElement.getAttribute('placeholder') || '';\n    }\n    set placeholder(placeholder) {\n        this.findInput.inputBox.setPlaceHolder(placeholder);\n    }\n    get password() {\n        return this.findInput.inputBox.inputElement.type === 'password';\n    }\n    set password(password) {\n        this.findInput.inputBox.inputElement.type = password ? 'password' : 'text';\n    }\n    set enabled(enabled) {\n        // We can't disable the input box because it is still used for\n        // navigating the list. Instead, we disable the list and the OK\n        // so that nothing can be selected.\n        // TODO: should this be what we do for all find inputs? Or maybe some _other_ API\n        // on findInput to change it to readonly?\n        this.findInput.inputBox.inputElement.toggleAttribute('readonly', !enabled);\n        // TODO: styles of the quick pick need to be moved to the CSS instead of being in line\n        // so things like this can be done in CSS\n        // this.findInput.inputBox.inputElement.classList.toggle('disabled', !enabled);\n    }\n    set toggles(toggles) {\n        this.findInput.setAdditionalToggles(toggles);\n    }\n    setAttribute(name, value) {\n        this.findInput.inputBox.inputElement.setAttribute(name, value);\n    }\n    showDecoration(decoration) {\n        if (decoration === Severity.Ignore) {\n            this.findInput.clearMessage();\n        }\n        else {\n            this.findInput.showMessage({ type: decoration === Severity.Info ? 1 /* MessageType.INFO */ : decoration === Severity.Warning ? 2 /* MessageType.WARNING */ : 3 /* MessageType.ERROR */, content: '' });\n        }\n    }\n    stylesForType(decoration) {\n        return this.findInput.inputBox.stylesForType(decoration === Severity.Info ? 1 /* MessageType.INFO */ : decoration === Severity.Warning ? 2 /* MessageType.WARNING */ : 3 /* MessageType.ERROR */);\n    }\n    setFocus() {\n        this.findInput.focus();\n    }\n    layout() {\n        this.findInput.inputBox.layout();\n    }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,GAAG,MAAM,8BAA8B;AACnD,SAASC,SAAS,QAAQ,iDAAiD;AAC3E,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAO,wBAAwB;AAC/B,IAAMC,CAAC,GAAGJ,GAAG,CAACI,CAAC;AACf,WAAaC,aAAa,0BAAAC,WAAA;EACtB,SAAAD,cAAYE,MAAM,EAAEC,cAAc,EAAEC,YAAY,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,aAAA;IAC9CK,KAAA,GAAAE,UAAA,OAAAP,aAAA;IACAK,KAAA,CAAKH,MAAM,GAAGA,MAAM;IACpBG,KAAA,CAAKG,SAAS,GAAG,UAACC,OAAO,EAAK;MAC1B,OAAOd,GAAG,CAACe,6BAA6B,CAACL,KAAA,CAAKM,SAAS,CAACC,QAAQ,CAACC,YAAY,EAAElB,GAAG,CAACmB,SAAS,CAACC,QAAQ,EAAEN,OAAO,CAAC;IACnH,CAAC;IACDJ,KAAA,CAAKW,WAAW,GAAG,UAACP,OAAO,EAAK;MAC5B,OAAOJ,KAAA,CAAKM,SAAS,CAACK,WAAW,CAACP,OAAO,CAAC;IAC9C,CAAC;IACDJ,KAAA,CAAKY,SAAS,GAAGtB,GAAG,CAACuB,MAAM,CAACb,KAAA,CAAKH,MAAM,EAAEH,CAAC,CAAC,kBAAkB,CAAC,CAAC;IAC/DM,KAAA,CAAKM,SAAS,GAAGN,KAAA,CAAKc,SAAS,CAAC,IAAIvB,SAAS,CAACS,KAAA,CAAKY,SAAS,EAAEG,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAElB,cAAc,EAAdA,cAAc;MAAEC,YAAY,EAAZA;IAAa,CAAC,CAAC,CAAC;IACtH,IAAMkB,KAAK,GAAGjB,KAAA,CAAKM,SAAS,CAACC,QAAQ,CAACC,YAAY;IAClDS,KAAK,CAACC,IAAI,GAAG,UAAU;IACvBD,KAAK,CAACE,YAAY,GAAG,MAAM;IAC3BF,KAAK,CAACG,gBAAgB,GAAG,MAAM;IAC/BH,KAAK,CAACI,YAAY,GAAG,MAAM;IAAC,OAAArB,KAAA;EAChC;EAACsB,SAAA,CAAA3B,aAAA,EAAAC,WAAA;EAAA,OAAA2B,YAAA,CAAA5B,aAAA;IAAA6B,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAY;MACR,OAAO,IAAI,CAACnB,SAAS,CAACoB,QAAQ,CAAC,CAAC;IACpC,CAAC;IAAAC,GAAA,EACD,SAAAA,IAAUC,KAAK,EAAE;MACb,IAAI,CAACtB,SAAS,CAACuB,QAAQ,CAACD,KAAK,CAAC;IAClC;EAAC;IAAAJ,GAAA;IAAAI,KAAA,EACD,SAAAE,OAAA,EAAqB;MAAA,IAAdC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAjB,SAAA,GAAAiB,SAAA,MAAG,IAAI;MACf,IAAI,CAAC1B,SAAS,CAACC,QAAQ,CAACuB,MAAM,CAACC,KAAK,CAAC;IACzC;EAAC;IAAAP,GAAA;IAAAI,KAAA,EACD,SAAAM,aAAA,EAAe;MACX,OAAO,IAAI,CAAC5B,SAAS,CAACC,QAAQ,CAAC2B,YAAY,CAAC,CAAC;IACjD;EAAC;IAAAV,GAAA;IAAAI,KAAA,EACD,SAAAO,iBAAA,EAAmB;MACf,OAAO,IAAI,CAAC7B,SAAS,CAACC,QAAQ,CAAC4B,gBAAgB,CAAC,CAAC;IACrD;EAAC;IAAAX,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAkB;MACd,OAAO,IAAI,CAACnB,SAAS,CAACC,QAAQ,CAACC,YAAY,CAAC4B,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE;IACjF,CAAC;IAAAT,GAAA,EACD,SAAAA,IAAgBU,WAAW,EAAE;MACzB,IAAI,CAAC/B,SAAS,CAACC,QAAQ,CAAC+B,cAAc,CAACD,WAAW,CAAC;IACvD;EAAC;IAAAb,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAe;MACX,OAAO,IAAI,CAACnB,SAAS,CAACC,QAAQ,CAACC,YAAY,CAAC+B,IAAI,KAAK,UAAU;IACnE,CAAC;IAAAZ,GAAA,EACD,SAAAA,IAAaa,QAAQ,EAAE;MACnB,IAAI,CAAClC,SAAS,CAACC,QAAQ,CAACC,YAAY,CAAC+B,IAAI,GAAGC,QAAQ,GAAG,UAAU,GAAG,MAAM;IAC9E;EAAC;IAAAhB,GAAA;IAAAG,GAAA,EACD,SAAAA,IAAYc,OAAO,EAAE;MACjB;MACA;MACA;MACA;MACA;MACA,IAAI,CAACnC,SAAS,CAACC,QAAQ,CAACC,YAAY,CAACkC,eAAe,CAAC,UAAU,EAAE,CAACD,OAAO,CAAC;MAC1E;MACA;MACA;IACJ;EAAC;IAAAjB,GAAA;IAAAG,GAAA,EACD,SAAAA,IAAYgB,OAAO,EAAE;MACjB,IAAI,CAACrC,SAAS,CAACsC,oBAAoB,CAACD,OAAO,CAAC;IAChD;EAAC;IAAAnB,GAAA;IAAAI,KAAA,EACD,SAAAiB,aAAaC,IAAI,EAAElB,KAAK,EAAE;MACtB,IAAI,CAACtB,SAAS,CAACC,QAAQ,CAACC,YAAY,CAACqC,YAAY,CAACC,IAAI,EAAElB,KAAK,CAAC;IAClE;EAAC;IAAAJ,GAAA;IAAAI,KAAA,EACD,SAAAmB,eAAeC,UAAU,EAAE;MACvB,IAAIA,UAAU,KAAKvD,QAAQ,CAACwD,MAAM,EAAE;QAChC,IAAI,CAAC3C,SAAS,CAAC4C,YAAY,CAAC,CAAC;MACjC,CAAC,MACI;QACD,IAAI,CAAC5C,SAAS,CAAC6C,WAAW,CAAC;UAAEZ,IAAI,EAAES,UAAU,KAAKvD,QAAQ,CAAC2D,IAAI,GAAG,CAAC,CAAC,yBAAyBJ,UAAU,KAAKvD,QAAQ,CAAC4D,OAAO,GAAG,CAAC,CAAC,4BAA4B,CAAC,CAAC;UAAyBC,OAAO,EAAE;QAAG,CAAC,CAAC;MAC1M;IACJ;EAAC;IAAA9B,GAAA;IAAAI,KAAA,EACD,SAAA2B,cAAcP,UAAU,EAAE;MACtB,OAAO,IAAI,CAAC1C,SAAS,CAACC,QAAQ,CAACgD,aAAa,CAACP,UAAU,KAAKvD,QAAQ,CAAC2D,IAAI,GAAG,CAAC,CAAC,yBAAyBJ,UAAU,KAAKvD,QAAQ,CAAC4D,OAAO,GAAG,CAAC,CAAC,4BAA4B,CAAC,CAAC,uBAAuB,CAAC;IACrM;EAAC;IAAA7B,GAAA;IAAAI,KAAA,EACD,SAAA4B,SAAA,EAAW;MACP,IAAI,CAAClD,SAAS,CAACmD,KAAK,CAAC,CAAC;IAC1B;EAAC;IAAAjC,GAAA;IAAAI,KAAA,EACD,SAAA8B,OAAA,EAAS;MACL,IAAI,CAACpD,SAAS,CAACC,QAAQ,CAACmD,MAAM,CAAC,CAAC;IACpC;EAAC;AAAA,EA9E8BlE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}