{"ast":null,"code":"import _toConsumableArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar PersistedMenuHideState_1, MenuInfo_1;\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nvar MenuService = /*#__PURE__*/function () {\n  function MenuService(_commandService, storageService) {\n    _classCallCheck(this, MenuService);\n    this._commandService = _commandService;\n    this._hiddenStates = new PersistedMenuHideState(storageService);\n  }\n  return _createClass(MenuService, [{\n    key: \"createMenu\",\n    value: function createMenu(id, contextKeyService, options) {\n      return new MenuImpl(id, this._hiddenStates, _objectSpread({\n        emitEventsForSubmenuChanges: false,\n        eventDebounceDelay: 50\n      }, options), this._commandService, contextKeyService);\n    }\n  }, {\n    key: \"resetHiddenStates\",\n    value: function resetHiddenStates(ids) {\n      this._hiddenStates.reset(ids);\n    }\n  }]);\n}();\nMenuService = __decorate([__param(0, ICommandService), __param(1, IStorageService)], MenuService);\nexport { MenuService };\nvar PersistedMenuHideState = PersistedMenuHideState_1 = /*#__PURE__*/function () {\n  function PersistedMenuHideState(_storageService) {\n    var _this = this;\n    _classCallCheck(this, PersistedMenuHideState);\n    this._storageService = _storageService;\n    this._disposables = new DisposableStore();\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n    this._ignoreChangeEvent = false;\n    this._hiddenByDefaultCache = new Map();\n    try {\n      var raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n      this._data = JSON.parse(raw);\n    } catch (err) {\n      this._data = Object.create(null);\n    }\n    this._disposables.add(_storageService.onDidChangeValue(0 /* StorageScope.PROFILE */, PersistedMenuHideState_1._key, this._disposables)(function () {\n      if (!_this._ignoreChangeEvent) {\n        try {\n          var _raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n          _this._data = JSON.parse(_raw);\n        } catch (err) {\n          console.log('FAILED to read storage after UPDATE', err);\n        }\n      }\n      _this._onDidChange.fire();\n    }));\n  }\n  return _createClass(PersistedMenuHideState, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._onDidChange.dispose();\n      this._disposables.dispose();\n    }\n  }, {\n    key: \"_isHiddenByDefault\",\n    value: function _isHiddenByDefault(menu, commandId) {\n      var _a;\n      return (_a = this._hiddenByDefaultCache.get(\"\".concat(menu.id, \"/\").concat(commandId))) !== null && _a !== void 0 ? _a : false;\n    }\n  }, {\n    key: \"setDefaultState\",\n    value: function setDefaultState(menu, commandId, hidden) {\n      this._hiddenByDefaultCache.set(\"\".concat(menu.id, \"/\").concat(commandId), hidden);\n    }\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(menu, commandId) {\n      var _a, _b;\n      var hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n      var state = (_b = (_a = this._data[menu.id]) === null || _a === void 0 ? void 0 : _a.includes(commandId)) !== null && _b !== void 0 ? _b : false;\n      return hiddenByDefault ? !state : state;\n    }\n  }, {\n    key: \"updateHidden\",\n    value: function updateHidden(menu, commandId, hidden) {\n      var hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n      if (hiddenByDefault) {\n        hidden = !hidden;\n      }\n      var entries = this._data[menu.id];\n      if (!hidden) {\n        // remove and cleanup\n        if (entries) {\n          var idx = entries.indexOf(commandId);\n          if (idx >= 0) {\n            removeFastWithoutKeepingOrder(entries, idx);\n          }\n          if (entries.length === 0) {\n            delete this._data[menu.id];\n          }\n        }\n      } else {\n        // add unless already added\n        if (!entries) {\n          this._data[menu.id] = [commandId];\n        } else {\n          var _idx = entries.indexOf(commandId);\n          if (_idx < 0) {\n            entries.push(commandId);\n          }\n        }\n      }\n      this._persist();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(menus) {\n      if (menus === undefined) {\n        // reset all\n        this._data = Object.create(null);\n        this._persist();\n      } else {\n        // reset only for a specific menu\n        var _iterator = _createForOfIteratorHelper(menus),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var id = _step.value.id;\n            if (this._data[id]) {\n              delete this._data[id];\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._persist();\n      }\n    }\n  }, {\n    key: \"_persist\",\n    value: function _persist() {\n      try {\n        this._ignoreChangeEvent = true;\n        var raw = JSON.stringify(this._data);\n        this._storageService.store(PersistedMenuHideState_1._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n      } finally {\n        this._ignoreChangeEvent = false;\n      }\n    }\n  }]);\n}();\nPersistedMenuHideState._key = 'menu.hiddenCommands';\nPersistedMenuHideState = PersistedMenuHideState_1 = __decorate([__param(0, IStorageService)], PersistedMenuHideState);\nvar MenuInfo = MenuInfo_1 = /*#__PURE__*/function () {\n  function MenuInfo(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _contextKeyService) {\n    _classCallCheck(this, MenuInfo);\n    this._id = _id;\n    this._hiddenStates = _hiddenStates;\n    this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n    this._commandService = _commandService;\n    this._contextKeyService = _contextKeyService;\n    this._menuGroups = [];\n    this._structureContextKeys = new Set();\n    this._preconditionContextKeys = new Set();\n    this._toggledContextKeys = new Set();\n    this.refresh();\n  }\n  return _createClass(MenuInfo, [{\n    key: \"structureContextKeys\",\n    get: function get() {\n      return this._structureContextKeys;\n    }\n  }, {\n    key: \"preconditionContextKeys\",\n    get: function get() {\n      return this._preconditionContextKeys;\n    }\n  }, {\n    key: \"toggledContextKeys\",\n    get: function get() {\n      return this._toggledContextKeys;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      // reset\n      this._menuGroups.length = 0;\n      this._structureContextKeys.clear();\n      this._preconditionContextKeys.clear();\n      this._toggledContextKeys.clear();\n      var menuItems = MenuRegistry.getMenuItems(this._id);\n      var group;\n      menuItems.sort(MenuInfo_1._compareMenuItems);\n      var _iterator2 = _createForOfIteratorHelper(menuItems),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          // group by groupId\n          var groupName = item.group || '';\n          if (!group || group[0] !== groupName) {\n            group = [groupName, []];\n            this._menuGroups.push(group);\n          }\n          group[1].push(item);\n          // keep keys for eventing\n          this._collectContextKeys(item);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"_collectContextKeys\",\n    value: function _collectContextKeys(item) {\n      MenuInfo_1._fillInKbExprKeys(item.when, this._structureContextKeys);\n      if (isIMenuItem(item)) {\n        // keep precondition keys for event if applicable\n        if (item.command.precondition) {\n          MenuInfo_1._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n        }\n        // keep toggled keys for event if applicable\n        if (item.command.toggled) {\n          var toggledExpression = item.command.toggled.condition || item.command.toggled;\n          MenuInfo_1._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n        }\n      } else if (this._collectContextKeysForSubmenus) {\n        // recursively collect context keys from submenus so that this\n        // menu fires events when context key changes affect submenus\n        MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n      }\n    }\n  }, {\n    key: \"createActionGroups\",\n    value: function createActionGroups(options) {\n      var result = [];\n      var _iterator3 = _createForOfIteratorHelper(this._menuGroups),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var group = _step3.value;\n          var _group = _slicedToArray(group, 2),\n            id = _group[0],\n            items = _group[1];\n          var activeActions = [];\n          var _iterator4 = _createForOfIteratorHelper(items),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var item = _step4.value;\n              if (this._contextKeyService.contextMatchesRules(item.when)) {\n                var isMenuItem = isIMenuItem(item);\n                if (isMenuItem) {\n                  this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                }\n                var menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                if (isMenuItem) {\n                  // MenuItemAction\n                  activeActions.push(new MenuItemAction(item.command, item.alt, options, menuHide, this._contextKeyService, this._commandService));\n                } else {\n                  // SubmenuItemAction\n                  var groups = new MenuInfo_1(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._contextKeyService).createActionGroups(options);\n                  var submenuActions = Separator.join.apply(Separator, _toConsumableArray(groups.map(function (g) {\n                    return g[1];\n                  })));\n                  if (submenuActions.length > 0) {\n                    activeActions.push(new SubmenuItemAction(item, menuHide, submenuActions));\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n          if (activeActions.length > 0) {\n            result.push([id, activeActions]);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return result;\n    }\n  }], [{\n    key: \"_fillInKbExprKeys\",\n    value: function _fillInKbExprKeys(exp, set) {\n      if (exp) {\n        var _iterator5 = _createForOfIteratorHelper(exp.keys()),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var key = _step5.value;\n            set.add(key);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  }, {\n    key: \"_compareMenuItems\",\n    value: function _compareMenuItems(a, b) {\n      var aGroup = a.group;\n      var bGroup = b.group;\n      if (aGroup !== bGroup) {\n        // Falsy groups come last\n        if (!aGroup) {\n          return 1;\n        } else if (!bGroup) {\n          return -1;\n        }\n        // 'navigation' group comes first\n        if (aGroup === 'navigation') {\n          return -1;\n        } else if (bGroup === 'navigation') {\n          return 1;\n        }\n        // lexical sort for groups\n        var value = aGroup.localeCompare(bGroup);\n        if (value !== 0) {\n          return value;\n        }\n      }\n      // sort on priority - default is 0\n      var aPrio = a.order || 0;\n      var bPrio = b.order || 0;\n      if (aPrio < bPrio) {\n        return -1;\n      } else if (aPrio > bPrio) {\n        return 1;\n      }\n      // sort on titles\n      return MenuInfo_1._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n  }, {\n    key: \"_compareTitles\",\n    value: function _compareTitles(a, b) {\n      var aStr = typeof a === 'string' ? a : a.original;\n      var bStr = typeof b === 'string' ? b : b.original;\n      return aStr.localeCompare(bStr);\n    }\n  }]);\n}();\nMenuInfo = MenuInfo_1 = __decorate([__param(3, ICommandService), __param(4, IContextKeyService)], MenuInfo);\nvar MenuImpl = /*#__PURE__*/function () {\n  function MenuImpl(id, hiddenStates, options, commandService, contextKeyService) {\n    var _this2 = this;\n    _classCallCheck(this, MenuImpl);\n    this._disposables = new DisposableStore();\n    this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, contextKeyService);\n    // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n    // This usually happen while code and extensions are loaded and affects the over\n    // structure of the menu\n    var rebuildMenuSoon = new RunOnceScheduler(function () {\n      _this2._menuInfo.refresh();\n      _this2._onDidChange.fire({\n        menu: _this2,\n        isStructuralChange: true,\n        isEnablementChange: true,\n        isToggleChange: true\n      });\n    }, options.eventDebounceDelay);\n    this._disposables.add(rebuildMenuSoon);\n    this._disposables.add(MenuRegistry.onDidChangeMenu(function (e) {\n      if (e.has(id)) {\n        rebuildMenuSoon.schedule();\n      }\n    }));\n    // When context keys or storage state changes we need to check if the menu also has changed. However,\n    // we only do that when someone listens on this menu because (1) these events are\n    // firing often and (2) menu are often leaked\n    var lazyListener = this._disposables.add(new DisposableStore());\n    var merge = function merge(events) {\n      var isStructuralChange = false;\n      var isEnablementChange = false;\n      var isToggleChange = false;\n      var _iterator6 = _createForOfIteratorHelper(events),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var item = _step6.value;\n          isStructuralChange = isStructuralChange || item.isStructuralChange;\n          isEnablementChange = isEnablementChange || item.isEnablementChange;\n          isToggleChange = isToggleChange || item.isToggleChange;\n          if (isStructuralChange && isEnablementChange && isToggleChange) {\n            // everything is TRUE, no need to continue iterating\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return {\n        menu: _this2,\n        isStructuralChange: isStructuralChange,\n        isEnablementChange: isEnablementChange,\n        isToggleChange: isToggleChange\n      };\n    };\n    var startLazyListener = function startLazyListener() {\n      lazyListener.add(contextKeyService.onDidChangeContext(function (e) {\n        var isStructuralChange = e.affectsSome(_this2._menuInfo.structureContextKeys);\n        var isEnablementChange = e.affectsSome(_this2._menuInfo.preconditionContextKeys);\n        var isToggleChange = e.affectsSome(_this2._menuInfo.toggledContextKeys);\n        if (isStructuralChange || isEnablementChange || isToggleChange) {\n          _this2._onDidChange.fire({\n            menu: _this2,\n            isStructuralChange: isStructuralChange,\n            isEnablementChange: isEnablementChange,\n            isToggleChange: isToggleChange\n          });\n        }\n      }));\n      lazyListener.add(hiddenStates.onDidChange(function (e) {\n        _this2._onDidChange.fire({\n          menu: _this2,\n          isStructuralChange: true,\n          isEnablementChange: false,\n          isToggleChange: false\n        });\n      }));\n    };\n    this._onDidChange = new DebounceEmitter({\n      // start/stop context key listener\n      onWillAddFirstListener: startLazyListener,\n      onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n      delay: options.eventDebounceDelay,\n      merge: merge\n    });\n    this.onDidChange = this._onDidChange.event;\n  }\n  return _createClass(MenuImpl, [{\n    key: \"getActions\",\n    value: function getActions(options) {\n      return this._menuInfo.createActionGroups(options);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._disposables.dispose();\n      this._onDidChange.dispose();\n    }\n  }]);\n}();\nMenuImpl = __decorate([__param(3, ICommandService), __param(4, IContextKeyService)], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n  var id = isISubmenuItem(command) ? command.submenu.id : command.id;\n  var title = typeof command.title === 'string' ? command.title : command.title.value;\n  var hide = toAction({\n    id: \"hide/\".concat(menu.id, \"/\").concat(id),\n    label: localize('hide.label', 'Hide \\'{0}\\'', title),\n    run: function run() {\n      states.updateHidden(menu, id, true);\n    }\n  });\n  var toggle = toAction({\n    id: \"toggle/\".concat(menu.id, \"/\").concat(id),\n    label: title,\n    get checked() {\n      return !states.isHidden(menu, id);\n    },\n    run: function run() {\n      states.updateHidden(menu, id, !!this.checked);\n    }\n  });\n  return {\n    hide: hide,\n    toggle: toggle,\n    get isHidden() {\n      return !toggle.checked;\n    }\n  };\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","PersistedMenuHideState_1","MenuInfo_1","RunOnceScheduler","DebounceEmitter","Emitter","DisposableStore","isIMenuItem","isISubmenuItem","MenuItemAction","MenuRegistry","SubmenuItemAction","ICommandService","IContextKeyService","Separator","toAction","IStorageService","removeFastWithoutKeepingOrder","localize","MenuService","_commandService","storageService","_classCallCheck","_hiddenStates","PersistedMenuHideState","_createClass","value","createMenu","id","contextKeyService","options","MenuImpl","_objectSpread","emitEventsForSubmenuChanges","eventDebounceDelay","resetHiddenStates","ids","reset","_storageService","_this","_disposables","_onDidChange","onDidChange","event","_ignoreChangeEvent","_hiddenByDefaultCache","Map","raw","get","_key","_data","JSON","parse","err","create","add","onDidChangeValue","console","log","fire","dispose","_isHiddenByDefault","menu","commandId","_a","concat","setDefaultState","hidden","set","isHidden","_b","hiddenByDefault","state","includes","updateHidden","entries","idx","indexOf","push","_persist","menus","undefined","_iterator","_createForOfIteratorHelper","_step","s","n","done","e","f","stringify","store","MenuInfo","_id","_collectContextKeysForSubmenus","_contextKeyService","_menuGroups","_structureContextKeys","Set","_preconditionContextKeys","_toggledContextKeys","refresh","clear","menuItems","getMenuItems","group","sort","_compareMenuItems","_iterator2","_step2","item","groupName","_collectContextKeys","_fillInKbExprKeys","when","command","precondition","toggled","toggledExpression","condition","submenu","forEach","createActionGroups","result","_iterator3","_step3","_group","_slicedToArray","items","activeActions","_iterator4","_step4","contextMatchesRules","isMenuItem","isHiddenByDefault","menuHide","createMenuHide","alt","groups","submenuActions","join","apply","_toConsumableArray","map","g","exp","_iterator5","keys","_step5","a","b","aGroup","bGroup","localeCompare","aPrio","order","bPrio","_compareTitles","title","aStr","original","bStr","hiddenStates","commandService","_this2","_menuInfo","rebuildMenuSoon","isStructuralChange","isEnablementChange","isToggleChange","onDidChangeMenu","has","schedule","lazyListener","merge","events","_iterator6","_step6","startLazyListener","onDidChangeContext","affectsSome","structureContextKeys","preconditionContextKeys","toggledContextKeys","onWillAddFirstListener","onDidRemoveLastListener","bind","delay","getActions","states","hide","label","run","toggle","checked"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PersistedMenuHideState_1, MenuInfo_1;\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nlet MenuService = class MenuService {\n    constructor(_commandService, storageService) {\n        this._commandService = _commandService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, contextKeyService);\n    }\n    resetHiddenStates(ids) {\n        this._hiddenStates.reset(ids);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IStorageService)\n], MenuService);\nexport { MenuService };\nlet PersistedMenuHideState = PersistedMenuHideState_1 = class PersistedMenuHideState {\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        this._hiddenByDefaultCache = new Map();\n        try {\n            const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(0 /* StorageScope.PROFILE */, PersistedMenuHideState_1._key, this._disposables)(() => {\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    _isHiddenByDefault(menu, commandId) {\n        var _a;\n        return (_a = this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`)) !== null && _a !== void 0 ? _a : false;\n    }\n    setDefaultState(menu, commandId, hidden) {\n        this._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n    }\n    isHidden(menu, commandId) {\n        var _a, _b;\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        const state = (_b = (_a = this._data[menu.id]) === null || _a === void 0 ? void 0 : _a.includes(commandId)) !== null && _b !== void 0 ? _b : false;\n        return hiddenByDefault ? !state : state;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        if (hiddenByDefault) {\n            hidden = !hidden;\n        }\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    reset(menus) {\n        if (menus === undefined) {\n            // reset all\n            this._data = Object.create(null);\n            this._persist();\n        }\n        else {\n            // reset only for a specific menu\n            for (const { id } of menus) {\n                if (this._data[id]) {\n                    delete this._data[id];\n                }\n            }\n            this._persist();\n        }\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState_1._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState._key = 'menu.hiddenCommands';\nPersistedMenuHideState = PersistedMenuHideState_1 = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nlet MenuInfo = MenuInfo_1 = class MenuInfo {\n    constructor(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _contextKeyService) {\n        this._id = _id;\n        this._hiddenStates = _hiddenStates;\n        this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._menuGroups = [];\n        this._structureContextKeys = new Set();\n        this._preconditionContextKeys = new Set();\n        this._toggledContextKeys = new Set();\n        this.refresh();\n    }\n    get structureContextKeys() {\n        return this._structureContextKeys;\n    }\n    get preconditionContextKeys() {\n        return this._preconditionContextKeys;\n    }\n    get toggledContextKeys() {\n        return this._toggledContextKeys;\n    }\n    refresh() {\n        // reset\n        this._menuGroups.length = 0;\n        this._structureContextKeys.clear();\n        this._preconditionContextKeys.clear();\n        this._toggledContextKeys.clear();\n        const menuItems = MenuRegistry.getMenuItems(this._id);\n        let group;\n        menuItems.sort(MenuInfo_1._compareMenuItems);\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            this._collectContextKeys(item);\n        }\n    }\n    _collectContextKeys(item) {\n        MenuInfo_1._fillInKbExprKeys(item.when, this._structureContextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                MenuInfo_1._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                MenuInfo_1._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n            }\n        }\n        else if (this._collectContextKeysForSubmenus) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n        }\n    }\n    createActionGroups(options) {\n        const result = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            const activeActions = [];\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                    }\n                    const menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                    if (isMenuItem) {\n                        // MenuItemAction\n                        activeActions.push(new MenuItemAction(item.command, item.alt, options, menuHide, this._contextKeyService, this._commandService));\n                    }\n                    else {\n                        // SubmenuItemAction\n                        const groups = new MenuInfo_1(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._contextKeyService).createActionGroups(options);\n                        const submenuActions = Separator.join(...groups.map(g => g[1]));\n                        if (submenuActions.length > 0) {\n                            activeActions.push(new SubmenuItemAction(item, menuHide, submenuActions));\n                        }\n                    }\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return MenuInfo_1._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenuInfo = MenuInfo_1 = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuInfo);\nlet MenuImpl = class MenuImpl {\n    constructor(id, hiddenStates, options, commandService, contextKeyService) {\n        this._disposables = new DisposableStore();\n        this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, contextKeyService);\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._menuInfo.refresh();\n            this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n        }, options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            if (e.has(id)) {\n                rebuildMenuSoon.schedule();\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const merge = (events) => {\n            let isStructuralChange = false;\n            let isEnablementChange = false;\n            let isToggleChange = false;\n            for (const item of events) {\n                isStructuralChange = isStructuralChange || item.isStructuralChange;\n                isEnablementChange = isEnablementChange || item.isEnablementChange;\n                isToggleChange = isToggleChange || item.isToggleChange;\n                if (isStructuralChange && isEnablementChange && isToggleChange) {\n                    // everything is TRUE, no need to continue iterating\n                    break;\n                }\n            }\n            return { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n        };\n        const startLazyListener = () => {\n            lazyListener.add(contextKeyService.onDidChangeContext(e => {\n                const isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n                const isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n                const isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n                if (isStructuralChange || isEnablementChange || isToggleChange) {\n                    this._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n                }\n            }));\n            lazyListener.add(hiddenStates.onDidChange(e => {\n                this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n            }));\n        };\n        this._onDidChange = new DebounceEmitter({\n            // start/stop context key listener\n            onWillAddFirstListener: startLazyListener,\n            onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n            delay: options.eventDebounceDelay,\n            merge\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    getActions(options) {\n        return this._menuInfo.createActionGroups(options);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n};\nMenuImpl = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n    const id = isISubmenuItem(command) ? command.submenu.id : command.id;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id: `hide/${menu.id}/${id}`,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, id, true); }\n    });\n    const toggle = toAction({\n        id: `toggle/${menu.id}/${id}`,\n        label: title,\n        get checked() { return !states.isHidden(menu, id); },\n        run() { states.updateHidden(menu, id, !!this.checked); }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}