{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.data-view.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Lazy } from './lazy.js';\nvar hasBuffer = typeof Buffer !== 'undefined';\nvar indexOfTable = new Lazy(function () {\n  return new Uint8Array(256);\n});\nvar textDecoder;\nexport var VSBuffer = /*#__PURE__*/function () {\n  function VSBuffer(buffer) {\n    _classCallCheck(this, VSBuffer);\n    this.buffer = buffer;\n    this.byteLength = this.buffer.byteLength;\n  }\n  return _createClass(VSBuffer, [{\n    key: \"toString\",\n    value: function toString() {\n      if (hasBuffer) {\n        return this.buffer.toString();\n      } else {\n        if (!textDecoder) {\n          textDecoder = new TextDecoder();\n        }\n        return textDecoder.decode(this.buffer);\n      }\n    }\n  }], [{\n    key: \"wrap\",\n    value:\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    function wrap(actual) {\n      if (hasBuffer && !Buffer.isBuffer(actual)) {\n        // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n        // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n        actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n      }\n      return new VSBuffer(actual);\n    }\n  }]);\n}();\nexport function readUInt16LE(source, offset) {\n  return source[offset + 0] << 0 >>> 0 | source[offset + 1] << 8 >>> 0;\n}\nexport function writeUInt16LE(destination, value, offset) {\n  destination[offset + 0] = value & 255;\n  value = value >>> 8;\n  destination[offset + 1] = value & 255;\n}\nexport function readUInt32BE(source, offset) {\n  return source[offset] * Math.pow(2, 24) + source[offset + 1] * Math.pow(2, 16) + source[offset + 2] * Math.pow(2, 8) + source[offset + 3];\n}\nexport function writeUInt32BE(destination, value, offset) {\n  destination[offset + 3] = value;\n  value = value >>> 8;\n  destination[offset + 2] = value;\n  value = value >>> 8;\n  destination[offset + 1] = value;\n  value = value >>> 8;\n  destination[offset] = value;\n}\nexport function readUInt8(source, offset) {\n  return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n  destination[offset] = value;\n}","map":{"version":3,"names":["Lazy","hasBuffer","Buffer","indexOfTable","Uint8Array","textDecoder","VSBuffer","buffer","_classCallCheck","byteLength","_createClass","key","value","toString","TextDecoder","decode","wrap","actual","isBuffer","from","byteOffset","readUInt16LE","source","offset","writeUInt16LE","destination","readUInt32BE","Math","pow","writeUInt32BE","readUInt8","writeUInt8"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/base/common/buffer.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Lazy } from './lazy.js';\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\nlet textDecoder;\nexport class VSBuffer {\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new VSBuffer(actual);\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    toString() {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n}\nexport function readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24\n        + source[offset + 1] * 2 ** 16\n        + source[offset + 2] * 2 ** 8\n        + source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}