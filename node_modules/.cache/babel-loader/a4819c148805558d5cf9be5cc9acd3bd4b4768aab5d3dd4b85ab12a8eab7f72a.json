{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\nexport var LineNumbersOverlay = /*#__PURE__*/function (_DynamicViewOverlay) {\n  function LineNumbersOverlay(context) {\n    var _this;\n    _classCallCheck(this, LineNumbersOverlay);\n    _this = _callSuper(this, LineNumbersOverlay);\n    _this._context = context;\n    _this._readConfig();\n    _this._lastCursorModelPosition = new Position(1, 1);\n    _this._renderResult = null;\n    _this._activeLineNumber = 1;\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  _inherits(LineNumbersOverlay, _DynamicViewOverlay);\n  return _createClass(LineNumbersOverlay, [{\n    key: \"_readConfig\",\n    value: function _readConfig() {\n      var options = this._context.configuration.options;\n      this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n      var lineNumbers = options.get(68 /* EditorOption.lineNumbers */);\n      this._renderLineNumbers = lineNumbers.renderType;\n      this._renderCustomLineNumbers = lineNumbers.renderFn;\n      this._renderFinalNewline = options.get(95 /* EditorOption.renderFinalNewline */);\n      var layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n      this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n      this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n      this._renderResult = null;\n      _get(_getPrototypeOf(LineNumbersOverlay.prototype), \"dispose\", this).call(this);\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      this._readConfig();\n      return true;\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      var primaryViewPosition = e.selections[0].getPosition();\n      this._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n      var shouldRender = false;\n      if (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n        this._activeLineNumber = primaryViewPosition.lineNumber;\n        shouldRender = true;\n      }\n      if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */ || this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n        shouldRender = true;\n      }\n      return shouldRender;\n    }\n  }, {\n    key: \"onFlushed\",\n    value: function onFlushed(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesChanged\",\n    value: function onLinesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesDeleted\",\n    value: function onLinesDeleted(e) {\n      return true;\n    }\n  }, {\n    key: \"onLinesInserted\",\n    value: function onLinesInserted(e) {\n      return true;\n    }\n  }, {\n    key: \"onScrollChanged\",\n    value: function onScrollChanged(e) {\n      return e.scrollTopChanged;\n    }\n  }, {\n    key: \"onZonesChanged\",\n    value: function onZonesChanged(e) {\n      return true;\n    }\n  }, {\n    key: \"onDecorationsChanged\",\n    value: function onDecorationsChanged(e) {\n      return e.affectsLineNumber;\n    }\n    // --- end event handlers\n  }, {\n    key: \"_getLineRenderLineNumber\",\n    value: function _getLineRenderLineNumber(viewLineNumber) {\n      var modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n      if (modelPosition.column !== 1) {\n        return '';\n      }\n      var modelLineNumber = modelPosition.lineNumber;\n      if (this._renderCustomLineNumbers) {\n        return this._renderCustomLineNumbers(modelLineNumber);\n      }\n      if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */) {\n        var diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n        if (diff === 0) {\n          return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n        }\n        return String(diff);\n      }\n      if (this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n        if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n          return String(modelLineNumber);\n        }\n        if (modelLineNumber % 10 === 0) {\n          return String(modelLineNumber);\n        }\n        var finalLineNumber = this._context.viewModel.getLineCount();\n        if (modelLineNumber === finalLineNumber) {\n          return String(modelLineNumber);\n        }\n        return '';\n      }\n      return String(modelLineNumber);\n    }\n  }, {\n    key: \"prepareRender\",\n    value: function prepareRender(ctx) {\n      if (this._renderLineNumbers === 0 /* RenderLineNumbersType.Off */) {\n        this._renderResult = null;\n        return;\n      }\n      var lineHeightClassName = platform.isLinux ? this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd' : '';\n      var visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n      var visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n      var lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(function (d) {\n        return !!d.options.lineNumberClassName;\n      });\n      lineNoDecorations.sort(function (a, b) {\n        return Range.compareRangesUsingEnds(a.range, b.range);\n      });\n      var decorationStartIndex = 0;\n      var lineCount = this._context.viewModel.getLineCount();\n      var output = [];\n      for (var lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n        var lineIndex = lineNumber - visibleStartLineNumber;\n        var renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n        var extraClassNames = '';\n        // skip decorations whose end positions we've already passed\n        while (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n          decorationStartIndex++;\n        }\n        for (var i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n          var _lineNoDecorations$i = lineNoDecorations[i],\n            range = _lineNoDecorations$i.range,\n            options = _lineNoDecorations$i.options;\n          if (range.startLineNumber <= lineNumber) {\n            extraClassNames += ' ' + options.lineNumberClassName;\n          }\n        }\n        if (!renderLineNumber && !extraClassNames) {\n          output[lineIndex] = '';\n          continue;\n        }\n        if (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n          // this is the last line\n          if (this._renderFinalNewline === 'off') {\n            renderLineNumber = '';\n          }\n          if (this._renderFinalNewline === 'dimmed') {\n            extraClassNames += ' dimmed-line-number';\n          }\n        }\n        if (lineNumber === this._activeLineNumber) {\n          extraClassNames += ' active-line-number';\n        }\n        output[lineIndex] = \"<div class=\\\"\".concat(LineNumbersOverlay.CLASS_NAME).concat(lineHeightClassName).concat(extraClassNames, \"\\\" style=\\\"left:\").concat(this._lineNumbersLeft, \"px;width:\").concat(this._lineNumbersWidth, \"px;\\\">\").concat(renderLineNumber, \"</div>\");\n      }\n      this._renderResult = output;\n    }\n  }, {\n    key: \"render\",\n    value: function render(startLineNumber, lineNumber) {\n      if (!this._renderResult) {\n        return '';\n      }\n      var lineIndex = lineNumber - startLineNumber;\n      if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n        return '';\n      }\n      return this._renderResult[lineIndex];\n    }\n  }]);\n}(DynamicViewOverlay);\nLineNumbersOverlay.CLASS_NAME = 'line-numbers';\nregisterThemingParticipant(function (theme, collector) {\n  var editorLineNumbersColor = theme.getColor(editorLineNumbers);\n  var editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n  if (editorDimmedLineNumberColor) {\n    collector.addRule(\".monaco-editor .line-numbers.dimmed-line-number { color: \".concat(editorDimmedLineNumberColor, \"; }\"));\n  } else if (editorLineNumbersColor) {\n    collector.addRule(\".monaco-editor .line-numbers.dimmed-line-number { color: \".concat(editorLineNumbersColor.transparent(0.4), \"; }\"));\n  }\n});","map":{"version":3,"names":["platform","DynamicViewOverlay","Position","Range","registerThemingParticipant","editorDimmedLineNumber","editorLineNumbers","LineNumbersOverlay","_DynamicViewOverlay","context","_this","_classCallCheck","_callSuper","_context","_readConfig","_lastCursorModelPosition","_renderResult","_activeLineNumber","addEventHandler","_inherits","_createClass","key","value","options","configuration","_lineHeight","get","lineNumbers","_renderLineNumbers","renderType","_renderCustomLineNumbers","renderFn","_renderFinalNewline","layoutInfo","_lineNumbersLeft","lineNumbersLeft","_lineNumbersWidth","lineNumbersWidth","dispose","removeEventHandler","_get","_getPrototypeOf","prototype","call","onConfigurationChanged","e","onCursorStateChanged","primaryViewPosition","selections","getPosition","viewModel","coordinatesConverter","convertViewPositionToModelPosition","shouldRender","lineNumber","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","onDecorationsChanged","affectsLineNumber","_getLineRenderLineNumber","viewLineNumber","modelPosition","column","modelLineNumber","diff","Math","abs","String","finalLineNumber","getLineCount","prepareRender","ctx","lineHeightClassName","isLinux","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","lineNoDecorations","getDecorationsInViewport","filter","d","lineNumberClassName","sort","a","b","compareRangesUsingEnds","range","decorationStartIndex","lineCount","output","lineIndex","renderLineNumber","extraClassNames","length","i","_lineNoDecorations$i","getLineLength","concat","CLASS_NAME","render","theme","collector","editorLineNumbersColor","getColor","editorDimmedLineNumberColor","addRule","transparent"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._readConfig();\n        this._lastCursorModelPosition = new Position(1, 1);\n        this._renderResult = null;\n        this._activeLineNumber = 1;\n        this._context.addEventHandler(this);\n    }\n    _readConfig() {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        const lineNumbers = options.get(68 /* EditorOption.lineNumbers */);\n        this._renderLineNumbers = lineNumbers.renderType;\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\n        this._renderFinalNewline = options.get(95 /* EditorOption.renderFinalNewline */);\n        const layoutInfo = options.get(145 /* EditorOption.layoutInfo */);\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        this._readConfig();\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const primaryViewPosition = e.selections[0].getPosition();\n        this._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n        let shouldRender = false;\n        if (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n            this._activeLineNumber = primaryViewPosition.lineNumber;\n            shouldRender = true;\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */ || this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            shouldRender = true;\n        }\n        return shouldRender;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return e.affectsLineNumber;\n    }\n    // --- end event handlers\n    _getLineRenderLineNumber(viewLineNumber) {\n        const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n        if (modelPosition.column !== 1) {\n            return '';\n        }\n        const modelLineNumber = modelPosition.lineNumber;\n        if (this._renderCustomLineNumbers) {\n            return this._renderCustomLineNumbers(modelLineNumber);\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */) {\n            const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n            if (diff === 0) {\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n            }\n            return String(diff);\n        }\n        if (this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n                return String(modelLineNumber);\n            }\n            if (modelLineNumber % 10 === 0) {\n                return String(modelLineNumber);\n            }\n            const finalLineNumber = this._context.viewModel.getLineCount();\n            if (modelLineNumber === finalLineNumber) {\n                return String(modelLineNumber);\n            }\n            return '';\n        }\n        return String(modelLineNumber);\n    }\n    prepareRender(ctx) {\n        if (this._renderLineNumbers === 0 /* RenderLineNumbersType.Off */) {\n            this._renderResult = null;\n            return;\n        }\n        const lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(d => !!d.options.lineNumberClassName);\n        lineNoDecorations.sort((a, b) => Range.compareRangesUsingEnds(a.range, b.range));\n        let decorationStartIndex = 0;\n        const lineCount = this._context.viewModel.getLineCount();\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            let renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n            let extraClassNames = '';\n            // skip decorations whose end positions we've already passed\n            while (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n                decorationStartIndex++;\n            }\n            for (let i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n                const { range, options } = lineNoDecorations[i];\n                if (range.startLineNumber <= lineNumber) {\n                    extraClassNames += ' ' + options.lineNumberClassName;\n                }\n            }\n            if (!renderLineNumber && !extraClassNames) {\n                output[lineIndex] = '';\n                continue;\n            }\n            if (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n                // this is the last line\n                if (this._renderFinalNewline === 'off') {\n                    renderLineNumber = '';\n                }\n                if (this._renderFinalNewline === 'dimmed') {\n                    extraClassNames += ' dimmed-line-number';\n                }\n            }\n            if (lineNumber === this._activeLineNumber) {\n                extraClassNames += ' active-line-number';\n            }\n            output[lineIndex] = (`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`);\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nLineNumbersOverlay.CLASS_NAME = 'line-numbers';\nregisterThemingParticipant((theme, collector) => {\n    const editorLineNumbersColor = theme.getColor(editorLineNumbers);\n    const editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n    if (editorDimmedLineNumberColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n    }\n    else if (editorLineNumbersColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}