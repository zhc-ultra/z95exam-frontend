{"ast":null,"code":"import _classCallCheck from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _get from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/yinger/Desktop/z95_exam_frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory } from './mouseTarget.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorPointerMoveMonitor, createEditorPagePosition, createCoordinatesRelativeToEditor, PageCoordinates } from '../editorDom.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nimport { MouseWheelClassifier } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nexport var MouseHandler = /*#__PURE__*/function (_ViewEventHandler) {\n  function MouseHandler(context, viewController, viewHelper) {\n    var _this;\n    _classCallCheck(this, MouseHandler);\n    _this = _callSuper(this, MouseHandler);\n    _this._mouseLeaveMonitor = null;\n    _this._context = context;\n    _this.viewController = viewController;\n    _this.viewHelper = viewHelper;\n    _this.mouseTargetFactory = new MouseTargetFactory(_this._context, viewHelper);\n    _this._mouseDownOperation = _this._register(new MouseDownOperation(_this._context, _this.viewController, _this.viewHelper, _this.mouseTargetFactory, function (e, testEventTarget) {\n      return _this._createMouseTarget(e, testEventTarget);\n    }, function (e) {\n      return _this._getMouseColumn(e);\n    }));\n    _this.lastMouseLeaveTime = -1;\n    _this._height = _this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).height;\n    var mouseEvents = new EditorMouseEventFactory(_this.viewHelper.viewDomNode);\n    _this._register(mouseEvents.onContextMenu(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onContextMenu(e, true);\n    }));\n    _this._register(mouseEvents.onMouseMove(_this.viewHelper.viewDomNode, function (e) {\n      _this._onMouseMove(e);\n      // See https://github.com/microsoft/vscode/issues/138789\n      // When moving the mouse really quickly, the browser sometimes forgets to\n      // send us a `mouseleave` or `mouseout` event. We therefore install here\n      // a global `mousemove` listener to manually recover if the mouse goes outside\n      // the editor. As soon as the mouse leaves outside of the editor, we\n      // remove this listener\n      if (!_this._mouseLeaveMonitor) {\n        _this._mouseLeaveMonitor = dom.addDisposableListener(_this.viewHelper.viewDomNode.ownerDocument, 'mousemove', function (e) {\n          if (!_this.viewHelper.viewDomNode.contains(e.target)) {\n            // went outside the editor!\n            _this._onMouseLeave(new EditorMouseEvent(e, false, _this.viewHelper.viewDomNode));\n          }\n        });\n      }\n    }));\n    _this._register(mouseEvents.onMouseUp(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseUp(e);\n    }));\n    _this._register(mouseEvents.onMouseLeave(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseLeave(e);\n    }));\n    // `pointerdown` events can't be used to determine if there's a double click, or triple click\n    // because their `e.detail` is always 0.\n    // We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n    // for `element.setPointerCapture`.\n    var capturePointerId = 0;\n    _this._register(mouseEvents.onPointerDown(_this.viewHelper.viewDomNode, function (e, pointerId) {\n      capturePointerId = pointerId;\n    }));\n    // The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n    // I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n    // the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n    // See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n    // To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n    _this._register(dom.addDisposableListener(_this.viewHelper.viewDomNode, dom.EventType.POINTER_UP, function (e) {\n      _this._mouseDownOperation.onPointerUp();\n    }));\n    _this._register(mouseEvents.onMouseDown(_this.viewHelper.viewDomNode, function (e) {\n      return _this._onMouseDown(e, capturePointerId);\n    }));\n    _this._setupMouseWheelZoomListener();\n    _this._context.addEventHandler(_this);\n    return _this;\n  }\n  _inherits(MouseHandler, _ViewEventHandler);\n  return _createClass(MouseHandler, [{\n    key: \"_setupMouseWheelZoomListener\",\n    value: function _setupMouseWheelZoomListener() {\n      var _this2 = this;\n      var classifier = MouseWheelClassifier.INSTANCE;\n      var prevMouseWheelTime = 0;\n      var gestureStartZoomLevel = EditorZoom.getZoomLevel();\n      var gestureHasZoomModifiers = false;\n      var gestureAccumulatedDelta = 0;\n      var onMouseWheel = function onMouseWheel(browserEvent) {\n        _this2.viewController.emitMouseWheel(browserEvent);\n        if (!_this2._context.configuration.options.get(76 /* EditorOption.mouseWheelZoom */)) {\n          return;\n        }\n        var e = new StandardWheelEvent(browserEvent);\n        classifier.acceptStandardWheelEvent(e);\n        if (classifier.isPhysicalMouseWheel()) {\n          if (hasMouseWheelZoomModifiers(browserEvent)) {\n            var zoomLevel = EditorZoom.getZoomLevel();\n            var delta = e.deltaY > 0 ? 1 : -1;\n            EditorZoom.setZoomLevel(zoomLevel + delta);\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        } else {\n          // we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n          // we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n          // we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n          if (Date.now() - prevMouseWheelTime > 50) {\n            // reset if more than 50ms have passed\n            gestureStartZoomLevel = EditorZoom.getZoomLevel();\n            gestureHasZoomModifiers = hasMouseWheelZoomModifiers(browserEvent);\n            gestureAccumulatedDelta = 0;\n          }\n          prevMouseWheelTime = Date.now();\n          gestureAccumulatedDelta += e.deltaY;\n          if (gestureHasZoomModifiers) {\n            EditorZoom.setZoomLevel(gestureStartZoomLevel + gestureAccumulatedDelta / 5);\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }\n      };\n      this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, {\n        capture: true,\n        passive: false\n      }));\n      function hasMouseWheelZoomModifiers(browserEvent) {\n        return platform.isMacintosh\n        // on macOS we support cmd + two fingers scroll (`metaKey` set)\n        // and also the two fingers pinch gesture (`ctrKey` set)\n        ? (browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey : browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey;\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._context.removeEventHandler(this);\n      if (this._mouseLeaveMonitor) {\n        this._mouseLeaveMonitor.dispose();\n        this._mouseLeaveMonitor = null;\n      }\n      _get(_getPrototypeOf(MouseHandler.prototype), \"dispose\", this).call(this);\n    }\n    // --- begin event handlers\n  }, {\n    key: \"onConfigurationChanged\",\n    value: function onConfigurationChanged(e) {\n      if (e.hasChanged(145 /* EditorOption.layoutInfo */)) {\n        // layout change\n        var height = this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).height;\n        if (this._height !== height) {\n          this._height = height;\n          this._mouseDownOperation.onHeightChanged();\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._mouseDownOperation.onCursorStateChanged(e);\n      return false;\n    }\n  }, {\n    key: \"onFocusChanged\",\n    value: function onFocusChanged(e) {\n      return false;\n    }\n    // --- end event handlers\n  }, {\n    key: \"getTargetAtClientPoint\",\n    value: function getTargetAtClientPoint(clientX, clientY) {\n      var clientPos = new ClientCoordinates(clientX, clientY);\n      var pos = clientPos.toPageCoordinates(dom.getWindow(this.viewHelper.viewDomNode));\n      var editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n      if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n        return null;\n      }\n      var relativePos = createCoordinatesRelativeToEditor(this.viewHelper.viewDomNode, editorPos, pos);\n      return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n    }\n  }, {\n    key: \"_createMouseTarget\",\n    value: function _createMouseTarget(e, testEventTarget) {\n      var _this3 = this;\n      var target = e.target;\n      if (!this.viewHelper.viewDomNode.contains(target)) {\n        var shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n        if (shadowRoot) {\n          target = shadowRoot.elementsFromPoint(e.posx, e.posy).find(function (el) {\n            return _this3.viewHelper.viewDomNode.contains(el);\n          });\n        }\n      }\n      return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, e.relativePos, testEventTarget ? target : null);\n    }\n  }, {\n    key: \"_getMouseColumn\",\n    value: function _getMouseColumn(e) {\n      return this.mouseTargetFactory.getMouseColumn(e.relativePos);\n    }\n  }, {\n    key: \"_onContextMenu\",\n    value: function _onContextMenu(e, testEventTarget) {\n      this.viewController.emitContextMenu({\n        event: e,\n        target: this._createMouseTarget(e, testEventTarget)\n      });\n    }\n  }, {\n    key: \"_onMouseMove\",\n    value: function _onMouseMove(e) {\n      var targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n      if (!targetIsWidget) {\n        e.preventDefault();\n      }\n      if (this._mouseDownOperation.isActive()) {\n        // In selection/drag operation\n        return;\n      }\n      var actualMouseMoveTime = e.timestamp;\n      if (actualMouseMoveTime < this.lastMouseLeaveTime) {\n        // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n        return;\n      }\n      this.viewController.emitMouseMove({\n        event: e,\n        target: this._createMouseTarget(e, true)\n      });\n    }\n  }, {\n    key: \"_onMouseLeave\",\n    value: function _onMouseLeave(e) {\n      if (this._mouseLeaveMonitor) {\n        this._mouseLeaveMonitor.dispose();\n        this._mouseLeaveMonitor = null;\n      }\n      this.lastMouseLeaveTime = new Date().getTime();\n      this.viewController.emitMouseLeave({\n        event: e,\n        target: null\n      });\n    }\n  }, {\n    key: \"_onMouseUp\",\n    value: function _onMouseUp(e) {\n      this.viewController.emitMouseUp({\n        event: e,\n        target: this._createMouseTarget(e, true)\n      });\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown(e, pointerId) {\n      var _this4 = this;\n      var t = this._createMouseTarget(e, true);\n      var targetIsContent = t.type === 6 /* MouseTargetType.CONTENT_TEXT */ || t.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n      var targetIsGutter = t.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ || t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ || t.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n      var targetIsLineNumbers = t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */;\n      var selectOnLineNumbers = this._context.configuration.options.get(109 /* EditorOption.selectOnLineNumbers */);\n      var targetIsViewZone = t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */;\n      var targetIsWidget = t.type === 9 /* MouseTargetType.CONTENT_WIDGET */;\n      var shouldHandle = e.leftButton || e.middleButton;\n      if (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n        shouldHandle = false;\n      }\n      var focus = function focus() {\n        e.preventDefault();\n        _this4.viewHelper.focusTextArea();\n      };\n      if (shouldHandle && (targetIsContent || targetIsLineNumbers && selectOnLineNumbers)) {\n        focus();\n        this._mouseDownOperation.start(t.type, e, pointerId);\n      } else if (targetIsGutter) {\n        // Do not steal focus\n        e.preventDefault();\n      } else if (targetIsViewZone) {\n        var viewZoneData = t.detail;\n        if (shouldHandle && this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n          focus();\n          this._mouseDownOperation.start(t.type, e, pointerId);\n          e.preventDefault();\n        }\n      } else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\n        focus();\n        e.preventDefault();\n      }\n      this.viewController.emitMouseDown({\n        event: e,\n        target: t\n      });\n    }\n  }]);\n}(ViewEventHandler);\nvar MouseDownOperation = /*#__PURE__*/function (_Disposable) {\n  function MouseDownOperation(_context, _viewController, _viewHelper, _mouseTargetFactory, createMouseTarget, getMouseColumn) {\n    var _this5;\n    _classCallCheck(this, MouseDownOperation);\n    _this5 = _callSuper(this, MouseDownOperation);\n    _this5._context = _context;\n    _this5._viewController = _viewController;\n    _this5._viewHelper = _viewHelper;\n    _this5._mouseTargetFactory = _mouseTargetFactory;\n    _this5._createMouseTarget = createMouseTarget;\n    _this5._getMouseColumn = getMouseColumn;\n    _this5._mouseMoveMonitor = _this5._register(new GlobalEditorPointerMoveMonitor(_this5._viewHelper.viewDomNode));\n    _this5._topBottomDragScrolling = _this5._register(new TopBottomDragScrolling(_this5._context, _this5._viewHelper, _this5._mouseTargetFactory, function (position, inSelectionMode, revealType) {\n      return _this5._dispatchMouse(position, inSelectionMode, revealType);\n    }));\n    _this5._mouseState = new MouseDownState();\n    _this5._currentSelection = new Selection(1, 1, 1, 1);\n    _this5._isActive = false;\n    _this5._lastMouseEvent = null;\n    return _this5;\n  }\n  _inherits(MouseDownOperation, _Disposable);\n  return _createClass(MouseDownOperation, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(MouseDownOperation.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this._isActive;\n    }\n  }, {\n    key: \"_onMouseDownThenMove\",\n    value: function _onMouseDownThenMove(e) {\n      this._lastMouseEvent = e;\n      this._mouseState.setModifiers(e);\n      var position = this._findMousePosition(e, false);\n      if (!position) {\n        // Ignoring because position is unknown\n        return;\n      }\n      if (this._mouseState.isDragAndDrop) {\n        this._viewController.emitMouseDrag({\n          event: e,\n          target: position\n        });\n      } else {\n        if (position.type === 13 /* MouseTargetType.OUTSIDE_EDITOR */ && (position.outsidePosition === 'above' || position.outsidePosition === 'below')) {\n          this._topBottomDragScrolling.start(position, e);\n        } else {\n          this._topBottomDragScrolling.stop();\n          this._dispatchMouse(position, true, 1 /* NavigationCommandRevealType.Minimal */);\n        }\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start(targetType, e, pointerId) {\n      var _this6 = this;\n      this._lastMouseEvent = e;\n      this._mouseState.setStartedOnLineNumbers(targetType === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n      this._mouseState.setStartButtons(e);\n      this._mouseState.setModifiers(e);\n      var position = this._findMousePosition(e, true);\n      if (!position || !position.position) {\n        // Ignoring because position is unknown\n        return;\n      }\n      this._mouseState.trySetCount(e.detail, position.position);\n      // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n      e.detail = this._mouseState.count;\n      var options = this._context.configuration.options;\n      if (!options.get(91 /* EditorOption.readOnly */) && options.get(35 /* EditorOption.dragAndDrop */) && !options.get(22 /* EditorOption.columnSelection */) && !this._mouseState.altKey // we don't support multiple mouse\n      && e.detail < 2 // only single click on a selection can work\n      && !this._isActive // the mouse is not down yet\n      && !this._currentSelection.isEmpty() // we don't drag single cursor\n      && position.type === 6 /* MouseTargetType.CONTENT_TEXT */ // single click on text\n      && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n      ) {\n        this._mouseState.isDragAndDrop = true;\n        this._isActive = true;\n        this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, function (e) {\n          return _this6._onMouseDownThenMove(e);\n        }, function (browserEvent) {\n          var position = _this6._findMousePosition(_this6._lastMouseEvent, false);\n          if (dom.isKeyboardEvent(browserEvent)) {\n            // cancel\n            _this6._viewController.emitMouseDropCanceled();\n          } else {\n            _this6._viewController.emitMouseDrop({\n              event: _this6._lastMouseEvent,\n              target: position ? _this6._createMouseTarget(_this6._lastMouseEvent, true) : null // Ignoring because position is unknown, e.g., Content View Zone\n            });\n          }\n          _this6._stop();\n        });\n        return;\n      }\n      this._mouseState.isDragAndDrop = false;\n      this._dispatchMouse(position, e.shiftKey, 1 /* NavigationCommandRevealType.Minimal */);\n      if (!this._isActive) {\n        this._isActive = true;\n        this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, function (e) {\n          return _this6._onMouseDownThenMove(e);\n        }, function () {\n          return _this6._stop();\n        });\n      }\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      this._isActive = false;\n      this._topBottomDragScrolling.stop();\n    }\n  }, {\n    key: \"onHeightChanged\",\n    value: function onHeightChanged() {\n      this._mouseMoveMonitor.stopMonitoring();\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp() {\n      this._mouseMoveMonitor.stopMonitoring();\n    }\n  }, {\n    key: \"onCursorStateChanged\",\n    value: function onCursorStateChanged(e) {\n      this._currentSelection = e.selections[0];\n    }\n  }, {\n    key: \"_getPositionOutsideEditor\",\n    value: function _getPositionOutsideEditor(e) {\n      var editorContent = e.editorPos;\n      var model = this._context.viewModel;\n      var viewLayout = this._context.viewLayout;\n      var mouseColumn = this._getMouseColumn(e);\n      if (e.posy < editorContent.y) {\n        var outsideDistance = editorContent.y - e.posy;\n        var verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - outsideDistance, 0);\n        var viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n        if (viewZoneData) {\n          var newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n          if (newPosition) {\n            return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'above', outsideDistance);\n          }\n        }\n        var aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n        return MouseTarget.createOutsideEditor(mouseColumn, new Position(aboveLineNumber, 1), 'above', outsideDistance);\n      }\n      if (e.posy > editorContent.y + editorContent.height) {\n        var _outsideDistance = e.posy - editorContent.y - editorContent.height;\n        var _verticalOffset = viewLayout.getCurrentScrollTop() + e.relativePos.y;\n        var _viewZoneData = HitTestContext.getZoneAtCoord(this._context, _verticalOffset);\n        if (_viewZoneData) {\n          var _newPosition = this._helpPositionJumpOverViewZone(_viewZoneData);\n          if (_newPosition) {\n            return MouseTarget.createOutsideEditor(mouseColumn, _newPosition, 'below', _outsideDistance);\n          }\n        }\n        var belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(_verticalOffset);\n        return MouseTarget.createOutsideEditor(mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)), 'below', _outsideDistance);\n      }\n      var possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + e.relativePos.y);\n      if (e.posx < editorContent.x) {\n        var _outsideDistance2 = editorContent.x - e.posx;\n        return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, 1), 'left', _outsideDistance2);\n      }\n      if (e.posx > editorContent.x + editorContent.width) {\n        var _outsideDistance3 = e.posx - editorContent.x - editorContent.width;\n        return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)), 'right', _outsideDistance3);\n      }\n      return null;\n    }\n  }, {\n    key: \"_findMousePosition\",\n    value: function _findMousePosition(e, testEventTarget) {\n      var positionOutsideEditor = this._getPositionOutsideEditor(e);\n      if (positionOutsideEditor) {\n        return positionOutsideEditor;\n      }\n      var t = this._createMouseTarget(e, testEventTarget);\n      var hintedPosition = t.position;\n      if (!hintedPosition) {\n        return null;\n      }\n      if (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n        var newPosition = this._helpPositionJumpOverViewZone(t.detail);\n        if (newPosition) {\n          return MouseTarget.createViewZone(t.type, t.element, t.mouseColumn, newPosition, t.detail);\n        }\n      }\n      return t;\n    }\n  }, {\n    key: \"_helpPositionJumpOverViewZone\",\n    value: function _helpPositionJumpOverViewZone(viewZoneData) {\n      // Force position on view zones to go above or below depending on where selection started from\n      var selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n      var positionBefore = viewZoneData.positionBefore;\n      var positionAfter = viewZoneData.positionAfter;\n      if (positionBefore && positionAfter) {\n        if (positionBefore.isBefore(selectionStart)) {\n          return positionBefore;\n        } else {\n          return positionAfter;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_dispatchMouse\",\n    value: function _dispatchMouse(position, inSelectionMode, revealType) {\n      if (!position.position) {\n        return;\n      }\n      this._viewController.dispatchMouse({\n        position: position.position,\n        mouseColumn: position.mouseColumn,\n        startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n        revealType: revealType,\n        inSelectionMode: inSelectionMode,\n        mouseDownCount: this._mouseState.count,\n        altKey: this._mouseState.altKey,\n        ctrlKey: this._mouseState.ctrlKey,\n        metaKey: this._mouseState.metaKey,\n        shiftKey: this._mouseState.shiftKey,\n        leftButton: this._mouseState.leftButton,\n        middleButton: this._mouseState.middleButton,\n        onInjectedText: position.type === 6 /* MouseTargetType.CONTENT_TEXT */ && position.detail.injectedText !== null\n      });\n    }\n  }]);\n}(Disposable);\nvar TopBottomDragScrolling = /*#__PURE__*/function (_Disposable2) {\n  function TopBottomDragScrolling(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse) {\n    var _this7;\n    _classCallCheck(this, TopBottomDragScrolling);\n    _this7 = _callSuper(this, TopBottomDragScrolling);\n    _this7._context = _context;\n    _this7._viewHelper = _viewHelper;\n    _this7._mouseTargetFactory = _mouseTargetFactory;\n    _this7._dispatchMouse = _dispatchMouse;\n    _this7._operation = null;\n    return _this7;\n  }\n  _inherits(TopBottomDragScrolling, _Disposable2);\n  return _createClass(TopBottomDragScrolling, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(TopBottomDragScrolling.prototype), \"dispose\", this).call(this);\n      this.stop();\n    }\n  }, {\n    key: \"start\",\n    value: function start(position, mouseEvent) {\n      if (this._operation) {\n        this._operation.setPosition(position, mouseEvent);\n      } else {\n        this._operation = new TopBottomDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this._operation) {\n        this._operation.dispose();\n        this._operation = null;\n      }\n    }\n  }]);\n}(Disposable);\nvar TopBottomDragScrollingOperation = /*#__PURE__*/function (_Disposable3) {\n  function TopBottomDragScrollingOperation(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse, position, mouseEvent) {\n    var _this8;\n    _classCallCheck(this, TopBottomDragScrollingOperation);\n    _this8 = _callSuper(this, TopBottomDragScrollingOperation);\n    _this8._context = _context;\n    _this8._viewHelper = _viewHelper;\n    _this8._mouseTargetFactory = _mouseTargetFactory;\n    _this8._dispatchMouse = _dispatchMouse;\n    _this8._position = position;\n    _this8._mouseEvent = mouseEvent;\n    _this8._lastTime = Date.now();\n    _this8._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseEvent.browserEvent), function () {\n      return _this8._execute();\n    });\n    return _this8;\n  }\n  _inherits(TopBottomDragScrollingOperation, _Disposable3);\n  return _createClass(TopBottomDragScrollingOperation, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._animationFrameDisposable.dispose();\n      _get(_getPrototypeOf(TopBottomDragScrollingOperation.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(position, mouseEvent) {\n      this._position = position;\n      this._mouseEvent = mouseEvent;\n    }\n    /**\n     * update internal state and return elapsed ms since last time\n     */\n  }, {\n    key: \"_tick\",\n    value: function _tick() {\n      var now = Date.now();\n      var elapsed = now - this._lastTime;\n      this._lastTime = now;\n      return elapsed;\n    }\n    /**\n     * get the number of lines per second to auto-scroll\n     */\n  }, {\n    key: \"_getScrollSpeed\",\n    value: function _getScrollSpeed() {\n      var lineHeight = this._context.configuration.options.get(67 /* EditorOption.lineHeight */);\n      var viewportInLines = this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).height / lineHeight;\n      var outsideDistanceInLines = this._position.outsideDistance / lineHeight;\n      if (outsideDistanceInLines <= 1.5) {\n        return Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n      }\n      if (outsideDistanceInLines <= 3) {\n        return Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n      }\n      return Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var _this9 = this;\n      var lineHeight = this._context.configuration.options.get(67 /* EditorOption.lineHeight */);\n      var scrollSpeedInLines = this._getScrollSpeed();\n      var elapsed = this._tick();\n      var scrollInPixels = scrollSpeedInLines * (elapsed / 1000) * lineHeight;\n      var scrollValue = this._position.outsidePosition === 'above' ? -scrollInPixels : scrollInPixels;\n      this._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n      this._viewHelper.renderNow();\n      var viewportData = this._context.viewLayout.getLinesViewportData();\n      var edgeLineNumber = this._position.outsidePosition === 'above' ? viewportData.startLineNumber : viewportData.endLineNumber;\n      // First, try to find a position that matches the horizontal position of the mouse\n      var mouseTarget;\n      {\n        var editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n        var horizontalScrollbarHeight = this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).horizontalScrollbarHeight;\n        var pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n        var relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n        mouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n      }\n      if (!mouseTarget.position || mouseTarget.position.lineNumber !== edgeLineNumber) {\n        if (this._position.outsidePosition === 'above') {\n          mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, 1), 'above', this._position.outsideDistance);\n        } else {\n          mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, this._context.viewModel.getLineMaxColumn(edgeLineNumber)), 'below', this._position.outsideDistance);\n        }\n      }\n      this._dispatchMouse(mouseTarget, true, 2 /* NavigationCommandRevealType.None */);\n      this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseTarget.element), function () {\n        return _this9._execute();\n      });\n    }\n  }]);\n}(Disposable);\nvar MouseDownState = /*#__PURE__*/function () {\n  function MouseDownState() {\n    _classCallCheck(this, MouseDownState);\n    this._altKey = false;\n    this._ctrlKey = false;\n    this._metaKey = false;\n    this._shiftKey = false;\n    this._leftButton = false;\n    this._middleButton = false;\n    this._startedOnLineNumbers = false;\n    this._lastMouseDownPosition = null;\n    this._lastMouseDownPositionEqualCount = 0;\n    this._lastMouseDownCount = 0;\n    this._lastSetMouseDownCountTime = 0;\n    this.isDragAndDrop = false;\n  }\n  return _createClass(MouseDownState, [{\n    key: \"altKey\",\n    get: function get() {\n      return this._altKey;\n    }\n  }, {\n    key: \"ctrlKey\",\n    get: function get() {\n      return this._ctrlKey;\n    }\n  }, {\n    key: \"metaKey\",\n    get: function get() {\n      return this._metaKey;\n    }\n  }, {\n    key: \"shiftKey\",\n    get: function get() {\n      return this._shiftKey;\n    }\n  }, {\n    key: \"leftButton\",\n    get: function get() {\n      return this._leftButton;\n    }\n  }, {\n    key: \"middleButton\",\n    get: function get() {\n      return this._middleButton;\n    }\n  }, {\n    key: \"startedOnLineNumbers\",\n    get: function get() {\n      return this._startedOnLineNumbers;\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._lastMouseDownCount;\n    }\n  }, {\n    key: \"setModifiers\",\n    value: function setModifiers(source) {\n      this._altKey = source.altKey;\n      this._ctrlKey = source.ctrlKey;\n      this._metaKey = source.metaKey;\n      this._shiftKey = source.shiftKey;\n    }\n  }, {\n    key: \"setStartButtons\",\n    value: function setStartButtons(source) {\n      this._leftButton = source.leftButton;\n      this._middleButton = source.middleButton;\n    }\n  }, {\n    key: \"setStartedOnLineNumbers\",\n    value: function setStartedOnLineNumbers(startedOnLineNumbers) {\n      this._startedOnLineNumbers = startedOnLineNumbers;\n    }\n  }, {\n    key: \"trySetCount\",\n    value: function trySetCount(setMouseDownCount, newMouseDownPosition) {\n      // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n      var currentTime = new Date().getTime();\n      if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n        setMouseDownCount = 1;\n      }\n      this._lastSetMouseDownCountTime = currentTime;\n      // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n      if (setMouseDownCount > this._lastMouseDownCount + 1) {\n        setMouseDownCount = this._lastMouseDownCount + 1;\n      }\n      // c. Invalidate multiple clicking if the logical position is different\n      if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n        this._lastMouseDownPositionEqualCount++;\n      } else {\n        this._lastMouseDownPositionEqualCount = 1;\n      }\n      this._lastMouseDownPosition = newMouseDownPosition;\n      // Finally set the lastMouseDownCount\n      this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n    }\n  }]);\n}();\nMouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms","map":{"version":3,"names":["dom","StandardWheelEvent","Disposable","platform","HitTestContext","MouseTarget","MouseTargetFactory","ClientCoordinates","EditorMouseEvent","EditorMouseEventFactory","GlobalEditorPointerMoveMonitor","createEditorPagePosition","createCoordinatesRelativeToEditor","PageCoordinates","EditorZoom","Position","Selection","ViewEventHandler","MouseWheelClassifier","MouseHandler","_ViewEventHandler","context","viewController","viewHelper","_this","_classCallCheck","_callSuper","_mouseLeaveMonitor","_context","mouseTargetFactory","_mouseDownOperation","_register","MouseDownOperation","e","testEventTarget","_createMouseTarget","_getMouseColumn","lastMouseLeaveTime","_height","configuration","options","get","height","mouseEvents","viewDomNode","onContextMenu","_onContextMenu","onMouseMove","_onMouseMove","addDisposableListener","ownerDocument","contains","target","_onMouseLeave","onMouseUp","_onMouseUp","onMouseLeave","capturePointerId","onPointerDown","pointerId","EventType","POINTER_UP","onPointerUp","onMouseDown","_onMouseDown","_setupMouseWheelZoomListener","addEventHandler","_inherits","_createClass","key","value","_this2","classifier","INSTANCE","prevMouseWheelTime","gestureStartZoomLevel","getZoomLevel","gestureHasZoomModifiers","gestureAccumulatedDelta","onMouseWheel","browserEvent","emitMouseWheel","acceptStandardWheelEvent","isPhysicalMouseWheel","hasMouseWheelZoomModifiers","zoomLevel","delta","deltaY","setZoomLevel","preventDefault","stopPropagation","Date","now","MOUSE_WHEEL","capture","passive","isMacintosh","metaKey","ctrlKey","shiftKey","altKey","dispose","removeEventHandler","_get","_getPrototypeOf","prototype","call","onConfigurationChanged","hasChanged","onHeightChanged","onCursorStateChanged","onFocusChanged","getTargetAtClientPoint","clientX","clientY","clientPos","pos","toPageCoordinates","getWindow","editorPos","y","x","width","relativePos","createMouseTarget","getLastRenderData","_this3","shadowRoot","getShadowRoot","elementsFromPoint","posx","posy","find","el","getMouseColumn","emitContextMenu","event","targetIsWidget","mouseTargetIsWidget","isActive","actualMouseMoveTime","timestamp","emitMouseMove","getTime","emitMouseLeave","emitMouseUp","_this4","t","targetIsContent","type","targetIsGutter","targetIsLineNumbers","selectOnLineNumbers","targetIsViewZone","shouldHandle","leftButton","middleButton","focus","focusTextArea","start","viewZoneData","detail","shouldSuppressMouseDownOnViewZone","viewZoneId","shouldSuppressMouseDownOnWidget","emitMouseDown","_Disposable","_viewController","_viewHelper","_mouseTargetFactory","_this5","_mouseMoveMonitor","_topBottomDragScrolling","TopBottomDragScrolling","position","inSelectionMode","revealType","_dispatchMouse","_mouseState","MouseDownState","_currentSelection","_isActive","_lastMouseEvent","_onMouseDownThenMove","setModifiers","_findMousePosition","isDragAndDrop","emitMouseDrag","outsidePosition","stop","targetType","_this6","setStartedOnLineNumbers","setStartButtons","trySetCount","count","isEmpty","containsPosition","startMonitoring","viewLinesDomNode","buttons","isKeyboardEvent","emitMouseDropCanceled","emitMouseDrop","_stop","stopMonitoring","selections","_getPositionOutsideEditor","editorContent","model","viewModel","viewLayout","mouseColumn","outsideDistance","verticalOffset","Math","max","getCurrentScrollTop","getZoneAtCoord","newPosition","_helpPositionJumpOverViewZone","createOutsideEditor","aboveLineNumber","getLineNumberAtVerticalOffset","belowLineNumber","getLineMaxColumn","possibleLineNumber","positionOutsideEditor","hintedPosition","createViewZone","element","selectionStart","selectionStartLineNumber","selectionStartColumn","positionBefore","positionAfter","isBefore","dispatchMouse","startedOnLineNumbers","mouseDownCount","onInjectedText","injectedText","_Disposable2","_this7","_operation","mouseEvent","setPosition","TopBottomDragScrollingOperation","_Disposable3","_this8","_position","_mouseEvent","_lastTime","_animationFrameDisposable","scheduleAtNextAnimationFrame","_execute","_tick","elapsed","_getScrollSpeed","lineHeight","viewportInLines","outsideDistanceInLines","_this9","scrollSpeedInLines","scrollInPixels","scrollValue","deltaScrollNow","renderNow","viewportData","getLinesViewportData","edgeLineNumber","startLineNumber","endLineNumber","mouseTarget","horizontalScrollbarHeight","lineNumber","_altKey","_ctrlKey","_metaKey","_shiftKey","_leftButton","_middleButton","_startedOnLineNumbers","_lastMouseDownPosition","_lastMouseDownPositionEqualCount","_lastMouseDownCount","_lastSetMouseDownCountTime","source","setMouseDownCount","newMouseDownPosition","currentTime","CLEAR_MOUSE_DOWN_COUNT_TIME","equals","min"],"sources":["/Users/yinger/Desktop/z95_exam_frontend/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory } from './mouseTarget.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorPointerMoveMonitor, createEditorPagePosition, createCoordinatesRelativeToEditor, PageCoordinates } from '../editorDom.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nimport { MouseWheelClassifier } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nexport class MouseHandler extends ViewEventHandler {\n    constructor(context, viewController, viewHelper) {\n        super();\n        this._mouseLeaveMonitor = null;\n        this._context = context;\n        this.viewController = viewController;\n        this.viewHelper = viewHelper;\n        this.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\n        this._mouseDownOperation = this._register(new MouseDownOperation(this._context, this.viewController, this.viewHelper, this.mouseTargetFactory, (e, testEventTarget) => this._createMouseTarget(e, testEventTarget), (e) => this._getMouseColumn(e)));\n        this.lastMouseLeaveTime = -1;\n        this._height = this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).height;\n        const mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\n        this._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\n        this._register(mouseEvents.onMouseMove(this.viewHelper.viewDomNode, (e) => {\n            this._onMouseMove(e);\n            // See https://github.com/microsoft/vscode/issues/138789\n            // When moving the mouse really quickly, the browser sometimes forgets to\n            // send us a `mouseleave` or `mouseout` event. We therefore install here\n            // a global `mousemove` listener to manually recover if the mouse goes outside\n            // the editor. As soon as the mouse leaves outside of the editor, we\n            // remove this listener\n            if (!this._mouseLeaveMonitor) {\n                this._mouseLeaveMonitor = dom.addDisposableListener(this.viewHelper.viewDomNode.ownerDocument, 'mousemove', (e) => {\n                    if (!this.viewHelper.viewDomNode.contains(e.target)) {\n                        // went outside the editor!\n                        this._onMouseLeave(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode));\n                    }\n                });\n            }\n        }));\n        this._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        // `pointerdown` events can't be used to determine if there's a double click, or triple click\n        // because their `e.detail` is always 0.\n        // We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n        // for `element.setPointerCapture`.\n        let capturePointerId = 0;\n        this._register(mouseEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => {\n            capturePointerId = pointerId;\n        }));\n        // The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n        // I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n        // the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n        // See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n        // To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.POINTER_UP, (e) => {\n            this._mouseDownOperation.onPointerUp();\n        }));\n        this._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e, capturePointerId)));\n        this._setupMouseWheelZoomListener();\n        this._context.addEventHandler(this);\n    }\n    _setupMouseWheelZoomListener() {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        let prevMouseWheelTime = 0;\n        let gestureStartZoomLevel = EditorZoom.getZoomLevel();\n        let gestureHasZoomModifiers = false;\n        let gestureAccumulatedDelta = 0;\n        const onMouseWheel = (browserEvent) => {\n            this.viewController.emitMouseWheel(browserEvent);\n            if (!this._context.configuration.options.get(76 /* EditorOption.mouseWheelZoom */)) {\n                return;\n            }\n            const e = new StandardWheelEvent(browserEvent);\n            classifier.acceptStandardWheelEvent(e);\n            if (classifier.isPhysicalMouseWheel()) {\n                if (hasMouseWheelZoomModifiers(browserEvent)) {\n                    const zoomLevel = EditorZoom.getZoomLevel();\n                    const delta = e.deltaY > 0 ? 1 : -1;\n                    EditorZoom.setZoomLevel(zoomLevel + delta);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n            else {\n                // we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n                // we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n                // we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n                if (Date.now() - prevMouseWheelTime > 50) {\n                    // reset if more than 50ms have passed\n                    gestureStartZoomLevel = EditorZoom.getZoomLevel();\n                    gestureHasZoomModifiers = hasMouseWheelZoomModifiers(browserEvent);\n                    gestureAccumulatedDelta = 0;\n                }\n                prevMouseWheelTime = Date.now();\n                gestureAccumulatedDelta += e.deltaY;\n                if (gestureHasZoomModifiers) {\n                    EditorZoom.setZoomLevel(gestureStartZoomLevel + gestureAccumulatedDelta / 5);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n        };\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { capture: true, passive: false }));\n        function hasMouseWheelZoomModifiers(browserEvent) {\n            return (platform.isMacintosh\n                // on macOS we support cmd + two fingers scroll (`metaKey` set)\n                // and also the two fingers pinch gesture (`ctrKey` set)\n                ? ((browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey)\n                : (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey));\n        }\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(145 /* EditorOption.layoutInfo */)) {\n            // layout change\n            const height = this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).height;\n            if (this._height !== height) {\n                this._height = height;\n                this._mouseDownOperation.onHeightChanged();\n            }\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._mouseDownOperation.onCursorStateChanged(e);\n        return false;\n    }\n    onFocusChanged(e) {\n        return false;\n    }\n    // --- end event handlers\n    getTargetAtClientPoint(clientX, clientY) {\n        const clientPos = new ClientCoordinates(clientX, clientY);\n        const pos = clientPos.toPageCoordinates(dom.getWindow(this.viewHelper.viewDomNode));\n        const editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n        if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n            return null;\n        }\n        const relativePos = createCoordinatesRelativeToEditor(this.viewHelper.viewDomNode, editorPos, pos);\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n    }\n    _createMouseTarget(e, testEventTarget) {\n        let target = e.target;\n        if (!this.viewHelper.viewDomNode.contains(target)) {\n            const shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n            if (shadowRoot) {\n                target = shadowRoot.elementsFromPoint(e.posx, e.posy).find((el) => this.viewHelper.viewDomNode.contains(el));\n            }\n        }\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, e.relativePos, testEventTarget ? target : null);\n    }\n    _getMouseColumn(e) {\n        return this.mouseTargetFactory.getMouseColumn(e.relativePos);\n    }\n    _onContextMenu(e, testEventTarget) {\n        this.viewController.emitContextMenu({\n            event: e,\n            target: this._createMouseTarget(e, testEventTarget)\n        });\n    }\n    _onMouseMove(e) {\n        const targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n        if (!targetIsWidget) {\n            e.preventDefault();\n        }\n        if (this._mouseDownOperation.isActive()) {\n            // In selection/drag operation\n            return;\n        }\n        const actualMouseMoveTime = e.timestamp;\n        if (actualMouseMoveTime < this.lastMouseLeaveTime) {\n            // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n            return;\n        }\n        this.viewController.emitMouseMove({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseLeave(e) {\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        this.lastMouseLeaveTime = (new Date()).getTime();\n        this.viewController.emitMouseLeave({\n            event: e,\n            target: null\n        });\n    }\n    _onMouseUp(e) {\n        this.viewController.emitMouseUp({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseDown(e, pointerId) {\n        const t = this._createMouseTarget(e, true);\n        const targetIsContent = (t.type === 6 /* MouseTargetType.CONTENT_TEXT */ || t.type === 7 /* MouseTargetType.CONTENT_EMPTY */);\n        const targetIsGutter = (t.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ || t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ || t.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */);\n        const targetIsLineNumbers = (t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        const selectOnLineNumbers = this._context.configuration.options.get(109 /* EditorOption.selectOnLineNumbers */);\n        const targetIsViewZone = (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n        const targetIsWidget = (t.type === 9 /* MouseTargetType.CONTENT_WIDGET */);\n        let shouldHandle = e.leftButton || e.middleButton;\n        if (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n            shouldHandle = false;\n        }\n        const focus = () => {\n            e.preventDefault();\n            this.viewHelper.focusTextArea();\n        };\n        if (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n            focus();\n            this._mouseDownOperation.start(t.type, e, pointerId);\n        }\n        else if (targetIsGutter) {\n            // Do not steal focus\n            e.preventDefault();\n        }\n        else if (targetIsViewZone) {\n            const viewZoneData = t.detail;\n            if (shouldHandle && this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n                focus();\n                this._mouseDownOperation.start(t.type, e, pointerId);\n                e.preventDefault();\n            }\n        }\n        else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\n            focus();\n            e.preventDefault();\n        }\n        this.viewController.emitMouseDown({\n            event: e,\n            target: t\n        });\n    }\n}\nclass MouseDownOperation extends Disposable {\n    constructor(_context, _viewController, _viewHelper, _mouseTargetFactory, createMouseTarget, getMouseColumn) {\n        super();\n        this._context = _context;\n        this._viewController = _viewController;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._createMouseTarget = createMouseTarget;\n        this._getMouseColumn = getMouseColumn;\n        this._mouseMoveMonitor = this._register(new GlobalEditorPointerMoveMonitor(this._viewHelper.viewDomNode));\n        this._topBottomDragScrolling = this._register(new TopBottomDragScrolling(this._context, this._viewHelper, this._mouseTargetFactory, (position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)));\n        this._mouseState = new MouseDownState();\n        this._currentSelection = new Selection(1, 1, 1, 1);\n        this._isActive = false;\n        this._lastMouseEvent = null;\n    }\n    dispose() {\n        super.dispose();\n    }\n    isActive() {\n        return this._isActive;\n    }\n    _onMouseDownThenMove(e) {\n        this._lastMouseEvent = e;\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, false);\n        if (!position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        if (this._mouseState.isDragAndDrop) {\n            this._viewController.emitMouseDrag({\n                event: e,\n                target: position\n            });\n        }\n        else {\n            if (position.type === 13 /* MouseTargetType.OUTSIDE_EDITOR */ && (position.outsidePosition === 'above' || position.outsidePosition === 'below')) {\n                this._topBottomDragScrolling.start(position, e);\n            }\n            else {\n                this._topBottomDragScrolling.stop();\n                this._dispatchMouse(position, true, 1 /* NavigationCommandRevealType.Minimal */);\n            }\n        }\n    }\n    start(targetType, e, pointerId) {\n        this._lastMouseEvent = e;\n        this._mouseState.setStartedOnLineNumbers(targetType === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        this._mouseState.setStartButtons(e);\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, true);\n        if (!position || !position.position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        this._mouseState.trySetCount(e.detail, position.position);\n        // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n        e.detail = this._mouseState.count;\n        const options = this._context.configuration.options;\n        if (!options.get(91 /* EditorOption.readOnly */)\n            && options.get(35 /* EditorOption.dragAndDrop */)\n            && !options.get(22 /* EditorOption.columnSelection */)\n            && !this._mouseState.altKey // we don't support multiple mouse\n            && e.detail < 2 // only single click on a selection can work\n            && !this._isActive // the mouse is not down yet\n            && !this._currentSelection.isEmpty() // we don't drag single cursor\n            && (position.type === 6 /* MouseTargetType.CONTENT_TEXT */) // single click on text\n            && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n        ) {\n            this._mouseState.isDragAndDrop = true;\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), (browserEvent) => {\n                const position = this._findMousePosition(this._lastMouseEvent, false);\n                if (dom.isKeyboardEvent(browserEvent)) {\n                    // cancel\n                    this._viewController.emitMouseDropCanceled();\n                }\n                else {\n                    this._viewController.emitMouseDrop({\n                        event: this._lastMouseEvent,\n                        target: (position ? this._createMouseTarget(this._lastMouseEvent, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n                    });\n                }\n                this._stop();\n            });\n            return;\n        }\n        this._mouseState.isDragAndDrop = false;\n        this._dispatchMouse(position, e.shiftKey, 1 /* NavigationCommandRevealType.Minimal */);\n        if (!this._isActive) {\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), () => this._stop());\n        }\n    }\n    _stop() {\n        this._isActive = false;\n        this._topBottomDragScrolling.stop();\n    }\n    onHeightChanged() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onPointerUp() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onCursorStateChanged(e) {\n        this._currentSelection = e.selections[0];\n    }\n    _getPositionOutsideEditor(e) {\n        const editorContent = e.editorPos;\n        const model = this._context.viewModel;\n        const viewLayout = this._context.viewLayout;\n        const mouseColumn = this._getMouseColumn(e);\n        if (e.posy < editorContent.y) {\n            const outsideDistance = editorContent.y - e.posy;\n            const verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - outsideDistance, 0);\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'above', outsideDistance);\n                }\n            }\n            const aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(aboveLineNumber, 1), 'above', outsideDistance);\n        }\n        if (e.posy > editorContent.y + editorContent.height) {\n            const outsideDistance = e.posy - editorContent.y - editorContent.height;\n            const verticalOffset = viewLayout.getCurrentScrollTop() + e.relativePos.y;\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'below', outsideDistance);\n                }\n            }\n            const belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)), 'below', outsideDistance);\n        }\n        const possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + e.relativePos.y);\n        if (e.posx < editorContent.x) {\n            const outsideDistance = editorContent.x - e.posx;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, 1), 'left', outsideDistance);\n        }\n        if (e.posx > editorContent.x + editorContent.width) {\n            const outsideDistance = e.posx - editorContent.x - editorContent.width;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)), 'right', outsideDistance);\n        }\n        return null;\n    }\n    _findMousePosition(e, testEventTarget) {\n        const positionOutsideEditor = this._getPositionOutsideEditor(e);\n        if (positionOutsideEditor) {\n            return positionOutsideEditor;\n        }\n        const t = this._createMouseTarget(e, testEventTarget);\n        const hintedPosition = t.position;\n        if (!hintedPosition) {\n            return null;\n        }\n        if (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            const newPosition = this._helpPositionJumpOverViewZone(t.detail);\n            if (newPosition) {\n                return MouseTarget.createViewZone(t.type, t.element, t.mouseColumn, newPosition, t.detail);\n            }\n        }\n        return t;\n    }\n    _helpPositionJumpOverViewZone(viewZoneData) {\n        // Force position on view zones to go above or below depending on where selection started from\n        const selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n        const positionBefore = viewZoneData.positionBefore;\n        const positionAfter = viewZoneData.positionAfter;\n        if (positionBefore && positionAfter) {\n            if (positionBefore.isBefore(selectionStart)) {\n                return positionBefore;\n            }\n            else {\n                return positionAfter;\n            }\n        }\n        return null;\n    }\n    _dispatchMouse(position, inSelectionMode, revealType) {\n        if (!position.position) {\n            return;\n        }\n        this._viewController.dispatchMouse({\n            position: position.position,\n            mouseColumn: position.mouseColumn,\n            startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n            revealType,\n            inSelectionMode: inSelectionMode,\n            mouseDownCount: this._mouseState.count,\n            altKey: this._mouseState.altKey,\n            ctrlKey: this._mouseState.ctrlKey,\n            metaKey: this._mouseState.metaKey,\n            shiftKey: this._mouseState.shiftKey,\n            leftButton: this._mouseState.leftButton,\n            middleButton: this._mouseState.middleButton,\n            onInjectedText: position.type === 6 /* MouseTargetType.CONTENT_TEXT */ && position.detail.injectedText !== null\n        });\n    }\n}\nclass TopBottomDragScrolling extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._operation = null;\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n    start(position, mouseEvent) {\n        if (this._operation) {\n            this._operation.setPosition(position, mouseEvent);\n        }\n        else {\n            this._operation = new TopBottomDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n        }\n    }\n    stop() {\n        if (this._operation) {\n            this._operation.dispose();\n            this._operation = null;\n        }\n    }\n}\nclass TopBottomDragScrollingOperation extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse, position, mouseEvent) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n        this._lastTime = Date.now();\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseEvent.browserEvent), () => this._execute());\n    }\n    dispose() {\n        this._animationFrameDisposable.dispose();\n        super.dispose();\n    }\n    setPosition(position, mouseEvent) {\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n    }\n    /**\n     * update internal state and return elapsed ms since last time\n     */\n    _tick() {\n        const now = Date.now();\n        const elapsed = now - this._lastTime;\n        this._lastTime = now;\n        return elapsed;\n    }\n    /**\n     * get the number of lines per second to auto-scroll\n     */\n    _getScrollSpeed() {\n        const lineHeight = this._context.configuration.options.get(67 /* EditorOption.lineHeight */);\n        const viewportInLines = this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).height / lineHeight;\n        const outsideDistanceInLines = this._position.outsideDistance / lineHeight;\n        if (outsideDistanceInLines <= 1.5) {\n            return Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n        }\n        if (outsideDistanceInLines <= 3) {\n            return Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n        }\n        return Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n    }\n    _execute() {\n        const lineHeight = this._context.configuration.options.get(67 /* EditorOption.lineHeight */);\n        const scrollSpeedInLines = this._getScrollSpeed();\n        const elapsed = this._tick();\n        const scrollInPixels = scrollSpeedInLines * (elapsed / 1000) * lineHeight;\n        const scrollValue = (this._position.outsidePosition === 'above' ? -scrollInPixels : scrollInPixels);\n        this._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n        this._viewHelper.renderNow();\n        const viewportData = this._context.viewLayout.getLinesViewportData();\n        const edgeLineNumber = (this._position.outsidePosition === 'above' ? viewportData.startLineNumber : viewportData.endLineNumber);\n        // First, try to find a position that matches the horizontal position of the mouse\n        let mouseTarget;\n        {\n            const editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n            const horizontalScrollbarHeight = this._context.configuration.options.get(145 /* EditorOption.layoutInfo */).horizontalScrollbarHeight;\n            const pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n            const relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n            mouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n        }\n        if (!mouseTarget.position || mouseTarget.position.lineNumber !== edgeLineNumber) {\n            if (this._position.outsidePosition === 'above') {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, 1), 'above', this._position.outsideDistance);\n            }\n            else {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, this._context.viewModel.getLineMaxColumn(edgeLineNumber)), 'below', this._position.outsideDistance);\n            }\n        }\n        this._dispatchMouse(mouseTarget, true, 2 /* NavigationCommandRevealType.None */);\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseTarget.element), () => this._execute());\n    }\n}\nclass MouseDownState {\n    get altKey() { return this._altKey; }\n    get ctrlKey() { return this._ctrlKey; }\n    get metaKey() { return this._metaKey; }\n    get shiftKey() { return this._shiftKey; }\n    get leftButton() { return this._leftButton; }\n    get middleButton() { return this._middleButton; }\n    get startedOnLineNumbers() { return this._startedOnLineNumbers; }\n    constructor() {\n        this._altKey = false;\n        this._ctrlKey = false;\n        this._metaKey = false;\n        this._shiftKey = false;\n        this._leftButton = false;\n        this._middleButton = false;\n        this._startedOnLineNumbers = false;\n        this._lastMouseDownPosition = null;\n        this._lastMouseDownPositionEqualCount = 0;\n        this._lastMouseDownCount = 0;\n        this._lastSetMouseDownCountTime = 0;\n        this.isDragAndDrop = false;\n    }\n    get count() {\n        return this._lastMouseDownCount;\n    }\n    setModifiers(source) {\n        this._altKey = source.altKey;\n        this._ctrlKey = source.ctrlKey;\n        this._metaKey = source.metaKey;\n        this._shiftKey = source.shiftKey;\n    }\n    setStartButtons(source) {\n        this._leftButton = source.leftButton;\n        this._middleButton = source.middleButton;\n    }\n    setStartedOnLineNumbers(startedOnLineNumbers) {\n        this._startedOnLineNumbers = startedOnLineNumbers;\n    }\n    trySetCount(setMouseDownCount, newMouseDownPosition) {\n        // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        const currentTime = (new Date()).getTime();\n        if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n            setMouseDownCount = 1;\n        }\n        this._lastSetMouseDownCountTime = currentTime;\n        // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        if (setMouseDownCount > this._lastMouseDownCount + 1) {\n            setMouseDownCount = this._lastMouseDownCount + 1;\n        }\n        // c. Invalidate multiple clicking if the logical position is different\n        if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n            this._lastMouseDownPositionEqualCount++;\n        }\n        else {\n            this._lastMouseDownPositionEqualCount = 1;\n        }\n        this._lastMouseDownPosition = newMouseDownPosition;\n        // Finally set the lastMouseDownCount\n        this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n    }\n}\nMouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}