{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _typeof from \"/Users/yinger/Desktop/algo_evaluator_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport './inlineEdit.css';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { AdditionalLinesWidget } from '../../inlineCompletions/browser/ghostTextWidget.js';\nimport { ColumnRange, applyObservableDecorations } from '../../inlineCompletions/browser/utils.js';\nexport var INLINE_EDIT_DESCRIPTION = 'inline-edit';\nvar GhostTextWidget = /*#__PURE__*/function (_Disposable) {\n  function GhostTextWidget(editor, model, languageService) {\n    var _this;\n    _classCallCheck(this, GhostTextWidget);\n    _this = _callSuper(this, GhostTextWidget);\n    _this.editor = editor;\n    _this.model = model;\n    _this.languageService = languageService;\n    _this.isDisposed = observableValue(_this, false);\n    _this.currentTextModel = observableFromEvent(_this.editor.onDidChangeModel, function () {\n      return /** @description editor.model */_this.editor.getModel();\n    });\n    _this.uiState = derived(_this, function (reader) {\n      var _a;\n      if (_this.isDisposed.read(reader)) {\n        return undefined;\n      }\n      var textModel = _this.currentTextModel.read(reader);\n      if (textModel !== _this.model.targetTextModel.read(reader)) {\n        return undefined;\n      }\n      var ghostText = _this.model.ghostText.read(reader);\n      if (!ghostText) {\n        return undefined;\n      }\n      var range = (_a = _this.model.range) === null || _a === void 0 ? void 0 : _a.read(reader);\n      //if range is empty, we want to remove it\n      if (range && range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n        range = undefined;\n      }\n      //check if both range and text are single line - in this case we want to do inline replacement\n      //rather than replacing whole lines\n      var isSingleLine = (range ? range.startLineNumber === range.endLineNumber : true) && ghostText.parts.length === 1 && ghostText.parts[0].lines.length === 1;\n      //check if we're just removing code\n      var isPureRemove = ghostText.parts.length === 1 && ghostText.parts[0].lines.every(function (l) {\n        return l.length === 0;\n      });\n      var inlineTexts = [];\n      var additionalLines = [];\n      function addToAdditionalLines(lines, className) {\n        if (additionalLines.length > 0) {\n          var lastLine = additionalLines[additionalLines.length - 1];\n          if (className) {\n            lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n          }\n          lastLine.content += lines[0];\n          lines = lines.slice(1);\n        }\n        var _iterator = _createForOfIteratorHelper(lines),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var line = _step.value;\n            additionalLines.push({\n              content: line,\n              decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      var textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n      var hiddenTextStartColumn = undefined;\n      var lastIdx = 0;\n      if (!isPureRemove) {\n        var _iterator2 = _createForOfIteratorHelper(ghostText.parts),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var part = _step2.value;\n            var lines = part.lines;\n            //If remove range is set, we want to push all new liens to virtual area\n            if (range && !isSingleLine) {\n              addToAdditionalLines(lines, INLINE_EDIT_DESCRIPTION);\n              lines = [];\n            }\n            if (hiddenTextStartColumn === undefined) {\n              inlineTexts.push({\n                column: part.column,\n                text: lines[0],\n                preview: part.preview\n              });\n              lines = lines.slice(1);\n            } else {\n              addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n              addToAdditionalLines(lines, INLINE_EDIT_DESCRIPTION);\n              if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                hiddenTextStartColumn = part.column;\n              }\n            }\n            lastIdx = part.column - 1;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        if (hiddenTextStartColumn !== undefined) {\n          addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n      }\n      var hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n      var lineNumber = isSingleLine || !range ? ghostText.lineNumber : range.endLineNumber - 1;\n      return {\n        inlineTexts: inlineTexts,\n        additionalLines: additionalLines,\n        hiddenRange: hiddenRange,\n        lineNumber: lineNumber,\n        additionalReservedLineCount: _this.model.minReservedLineCount.read(reader),\n        targetTextModel: textModel,\n        range: range,\n        isSingleLine: isSingleLine,\n        isPureRemove: isPureRemove,\n        backgroundColoring: _this.model.backgroundColoring.read(reader)\n      };\n    });\n    _this.decorations = derived(_this, function (reader) {\n      var uiState = _this.uiState.read(reader);\n      if (!uiState) {\n        return [];\n      }\n      var decorations = [];\n      if (uiState.hiddenRange) {\n        decorations.push({\n          range: uiState.hiddenRange.toRange(uiState.lineNumber),\n          options: {\n            inlineClassName: 'inline-edit-hidden',\n            description: 'inline-edit-hidden'\n          }\n        });\n      }\n      if (uiState.range) {\n        var ranges = [];\n        if (uiState.isSingleLine) {\n          ranges.push(uiState.range);\n        } else if (uiState.isPureRemove) {\n          var lines = uiState.range.endLineNumber - uiState.range.startLineNumber;\n          for (var i = 0; i < lines; i++) {\n            var line = uiState.range.startLineNumber + i;\n            var firstNonWhitespace = uiState.targetTextModel.getLineFirstNonWhitespaceColumn(line);\n            var lastNonWhitespace = uiState.targetTextModel.getLineLastNonWhitespaceColumn(line);\n            var range = new Range(line, firstNonWhitespace, line, lastNonWhitespace);\n            ranges.push(range);\n          }\n        } else {\n          var _lines = uiState.range.endLineNumber - uiState.range.startLineNumber;\n          for (var _i = 0; _i < _lines; _i++) {\n            var _line = uiState.range.startLineNumber + _i;\n            var _firstNonWhitespace = uiState.targetTextModel.getLineFirstNonWhitespaceColumn(_line);\n            var _lastNonWhitespace = uiState.targetTextModel.getLineLastNonWhitespaceColumn(_line);\n            var _range = new Range(_line, _firstNonWhitespace, _line, _lastNonWhitespace);\n            ranges.push(_range);\n          }\n        }\n        var className = uiState.backgroundColoring ? 'inline-edit-remove backgroundColoring' : 'inline-edit-remove';\n        for (var _i2 = 0, _ranges = ranges; _i2 < _ranges.length; _i2++) {\n          var _range2 = _ranges[_i2];\n          decorations.push({\n            range: _range2,\n            options: {\n              inlineClassName: className,\n              description: 'inline-edit-remove'\n            }\n          });\n        }\n      }\n      var _iterator3 = _createForOfIteratorHelper(uiState.inlineTexts),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var p = _step3.value;\n          decorations.push({\n            range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n            options: {\n              description: INLINE_EDIT_DESCRIPTION,\n              after: {\n                content: p.text,\n                inlineClassName: p.preview ? 'inline-edit-decoration-preview' : 'inline-edit-decoration',\n                cursorStops: InjectedTextCursorStops.Left\n              },\n              showIfCollapsed: true\n            }\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return decorations;\n    });\n    _this.additionalLinesWidget = _this._register(new AdditionalLinesWidget(_this.editor, _this.languageService.languageIdCodec, derived(function (reader) {\n      /** @description lines */\n      var uiState = _this.uiState.read(reader);\n      return uiState && !uiState.isPureRemove ? {\n        lineNumber: uiState.lineNumber,\n        additionalLines: uiState.additionalLines,\n        minReservedLineCount: uiState.additionalReservedLineCount,\n        targetTextModel: uiState.targetTextModel\n      } : undefined;\n    })));\n    _this._register(toDisposable(function () {\n      _this.isDisposed.set(true, undefined);\n    }));\n    _this._register(applyObservableDecorations(_this.editor, _this.decorations));\n    return _this;\n  }\n  _inherits(GhostTextWidget, _Disposable);\n  return _createClass(GhostTextWidget, [{\n    key: \"ownsViewZone\",\n    value: function ownsViewZone(viewZoneId) {\n      return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n  }]);\n}(Disposable);\nGhostTextWidget = __decorate([__param(2, ILanguageService)], GhostTextWidget);\nexport { GhostTextWidget };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","_typeof","decorate","i","defineProperty","__param","paramIndex","decorator","Disposable","toDisposable","derived","observableFromEvent","observableValue","Position","Range","ILanguageService","InjectedTextCursorStops","LineDecoration","AdditionalLinesWidget","ColumnRange","applyObservableDecorations","INLINE_EDIT_DESCRIPTION","GhostTextWidget","_Disposable","editor","model","languageService","_this","_classCallCheck","_callSuper","isDisposed","currentTextModel","onDidChangeModel","getModel","uiState","reader","_a","read","undefined","textModel","targetTextModel","ghostText","range","startLineNumber","endLineNumber","startColumn","endColumn","isSingleLine","parts","lines","isPureRemove","every","l","inlineTexts","additionalLines","addToAdditionalLines","className","lastLine","decorations","push","content","slice","_iterator","_createForOfIteratorHelper","_step","s","n","done","line","value","err","e","f","textBufferLine","getLineContent","lineNumber","hiddenTextStartColumn","lastIdx","_iterator2","_step2","part","column","text","preview","substring","hiddenRange","additionalReservedLineCount","minReservedLineCount","backgroundColoring","toRange","options","inlineClassName","description","ranges","firstNonWhitespace","getLineFirstNonWhitespaceColumn","lastNonWhitespace","getLineLastNonWhitespaceColumn","_i2","_ranges","_iterator3","_step3","p","fromPositions","after","cursorStops","Left","showIfCollapsed","additionalLinesWidget","_register","languageIdCodec","set","_inherits","_createClass","ownsViewZone","viewZoneId"],"sources":["/Users/yinger/Desktop/algo_evaluator_front/node_modules/monaco-editor/esm/vs/editor/contrib/inlineEdit/browser/ghostTextWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport './inlineEdit.css';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { AdditionalLinesWidget } from '../../inlineCompletions/browser/ghostTextWidget.js';\nimport { ColumnRange, applyObservableDecorations } from '../../inlineCompletions/browser/utils.js';\nexport const INLINE_EDIT_DESCRIPTION = 'inline-edit';\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue(this, false);\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => /** @description editor.model */ this.editor.getModel());\n        this.uiState = derived(this, reader => {\n            var _a;\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            let range = (_a = this.model.range) === null || _a === void 0 ? void 0 : _a.read(reader);\n            //if range is empty, we want to remove it\n            if (range && range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n                range = undefined;\n            }\n            //check if both range and text are single line - in this case we want to do inline replacement\n            //rather than replacing whole lines\n            const isSingleLine = (range ? range.startLineNumber === range.endLineNumber : true) && ghostText.parts.length === 1 && ghostText.parts[0].lines.length === 1;\n            //check if we're just removing code\n            const isPureRemove = ghostText.parts.length === 1 && ghostText.parts[0].lines.every(l => l.length === 0);\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            if (!isPureRemove) {\n                for (const part of ghostText.parts) {\n                    let lines = part.lines;\n                    //If remove range is set, we want to push all new liens to virtual area\n                    if (range && !isSingleLine) {\n                        addToAdditionalLines(lines, INLINE_EDIT_DESCRIPTION);\n                        lines = [];\n                    }\n                    if (hiddenTextStartColumn === undefined) {\n                        inlineTexts.push({\n                            column: part.column,\n                            text: lines[0],\n                            preview: part.preview,\n                        });\n                        lines = lines.slice(1);\n                    }\n                    else {\n                        addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                    }\n                    if (lines.length > 0) {\n                        addToAdditionalLines(lines, INLINE_EDIT_DESCRIPTION);\n                        if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                            hiddenTextStartColumn = part.column;\n                        }\n                    }\n                    lastIdx = part.column - 1;\n                }\n                if (hiddenTextStartColumn !== undefined) {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n                }\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            const lineNumber = (isSingleLine || !range) ? ghostText.lineNumber : range.endLineNumber - 1;\n            return {\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n                range,\n                isSingleLine,\n                isPureRemove,\n                backgroundColoring: this.model.backgroundColoring.read(reader)\n            };\n        });\n        this.decorations = derived(this, reader => {\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-edit-hidden', description: 'inline-edit-hidden', }\n                });\n            }\n            if (uiState.range) {\n                const ranges = [];\n                if (uiState.isSingleLine) {\n                    ranges.push(uiState.range);\n                }\n                else if (uiState.isPureRemove) {\n                    const lines = uiState.range.endLineNumber - uiState.range.startLineNumber;\n                    for (let i = 0; i < lines; i++) {\n                        const line = uiState.range.startLineNumber + i;\n                        const firstNonWhitespace = uiState.targetTextModel.getLineFirstNonWhitespaceColumn(line);\n                        const lastNonWhitespace = uiState.targetTextModel.getLineLastNonWhitespaceColumn(line);\n                        const range = new Range(line, firstNonWhitespace, line, lastNonWhitespace);\n                        ranges.push(range);\n                    }\n                }\n                else {\n                    const lines = uiState.range.endLineNumber - uiState.range.startLineNumber;\n                    for (let i = 0; i < lines; i++) {\n                        const line = uiState.range.startLineNumber + i;\n                        const firstNonWhitespace = uiState.targetTextModel.getLineFirstNonWhitespaceColumn(line);\n                        const lastNonWhitespace = uiState.targetTextModel.getLineLastNonWhitespaceColumn(line);\n                        const range = new Range(line, firstNonWhitespace, line, lastNonWhitespace);\n                        ranges.push(range);\n                    }\n                }\n                const className = uiState.backgroundColoring ? 'inline-edit-remove backgroundColoring' : 'inline-edit-remove';\n                for (const range of ranges) {\n                    decorations.push({\n                        range,\n                        options: { inlineClassName: className, description: 'inline-edit-remove', }\n                    });\n                }\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: INLINE_EDIT_DESCRIPTION,\n                        after: { content: p.text, inlineClassName: p.preview ? 'inline-edit-decoration-preview' : 'inline-edit-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived(reader => {\n            /** @description lines */\n            const uiState = this.uiState.read(reader);\n            return uiState && !uiState.isPureRemove ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}